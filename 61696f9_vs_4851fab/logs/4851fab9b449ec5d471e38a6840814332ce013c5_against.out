cset: moving following pidspec: 13907
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.309923253 seconds)
loading group "string"... done (took 0.476720203 seconds)
loading group "linalg"... done (took 7.719156639 seconds)
loading group "parallel"... done (took 0.171275176 seconds)
loading group "find"... done (took 1.175436292 seconds)
loading group "tuple"... done (took 2.103959208 seconds)
loading group "dates"... done (took 1.336742884 seconds)
loading group "micro"... done (took 0.247969527 seconds)
loading group "io"... done (took 0.660355244 seconds)
loading group "scalar"... done (took 41.051628499 seconds)
loading group "sparse"... done (took 12.703046614 seconds)
loading group "broadcast"... done (took 1.121064349 seconds)
loading group "union"... done (took 13.898960275 seconds)
loading group "simd"... done (took 4.811692029 seconds)
loading group "random"... done (took 9.652762496 seconds)
loading group "problem"... done (took 1.998220129 seconds)
loading group "array"... done (took 22.628869318 seconds)
loading group "misc"... done (took 1.447784873 seconds)
loading group "sort"... done (took 3.630364935 seconds)
loading group "collection"... done (took 19.515647632 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.541865019 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139532685 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.155448693 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.142488273 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.232941934 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158320085 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160091495 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099757494 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.994611952 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.189425175 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155892147 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.52951334 seconds)
done (took 5.234350504 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.226824286 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095923515 seconds)
    (2/2) benchmarking "String"...
    done (took 0.107530503 seconds)
  done (took 0.882315885 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078162849 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147897174 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095640047 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079011221 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096999921 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.097303569 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.081286023 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.094981943 seconds)
  done (took 1.373537438 seconds)
done (took 3.250196241 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.747274635 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.285686591 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206734624 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.487047297 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.180461166 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215156953 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679485544 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.394182082 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.265403568 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100943484 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.148990061 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391313952 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138870839 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.689276543 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09063158 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128645939 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180212403 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.449094469 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084495121 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.11096588 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117661019 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142409876 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131540963 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092650914 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.189560885 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.085207547 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.199182746 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109476941 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082085179 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.292686284 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202588618 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692627998 seconds)
  done (took 11.029811533 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116790397 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138207118 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098684966 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13954097 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135946811 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101385571 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085075974 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098721792 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123637361 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178998319 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133365787 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.126192831 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095530963 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.100094456 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104055341 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24609494 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.125145032 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121010012 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086285811 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107490815 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12248697 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115637027 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110585572 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110283764 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167747022 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.211386444 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115563679 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.130336471 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100132708 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114902965 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145141276 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147215139 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095698106 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081276113 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173735898 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12569132 seconds)
  done (took 5.222798553 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192928566 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122435853 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.173290984 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165733838 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149734221 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161978731 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117647239 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.250270857 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.110482164 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178451078 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14673922 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101099876 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098888921 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082273204 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098748083 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.622718654 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165313233 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136152998 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100394656 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105524849 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102517296 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36610692 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089119864 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097379923 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082247281 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083513225 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165131373 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086199413 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.194921578 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.102840586 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103302795 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13347634 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192740531 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.159050828 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129410303 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13775968 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081288003 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098179337 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.180561083 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08860101 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096644122 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079942721 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122664758 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094842082 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133861359 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11951273 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101841009 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097677857 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204293549 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096297742 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099263212 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.980288668 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183065588 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094433445 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097720632 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323409707 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099775849 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098943018 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078663685 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.27972982 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137509172 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082753066 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097953729 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080779487 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099435616 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.411789931 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081379555 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.71996691 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085738254 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108219773 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083567086 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097336404 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104884131 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088223337 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115829698 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080601812 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100450776 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080372348 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.0976276 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099451099 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.092892336 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102993775 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081468855 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166800321 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081432703 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11617313 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1276006 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08512738 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096982827 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131441128 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102368943 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084081597 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13781469 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081777609 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11049033 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095760365 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100033412 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129427828 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097766095 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.186739361 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08154195 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12665615 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100319308 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115914512 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110397783 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100094819 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086217706 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097469245 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078881825 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16666161 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081314865 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099393157 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082823286 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112779466 seconds)
  done (took 22.780249197 seconds)
done (took 39.711490296 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.348063598 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104298656 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104154972 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104141744 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103364767 seconds)
  done (took 1.513596523 seconds)
done (took 2.23952126 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284260748 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175385843 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096882496 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169347034 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094457972 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.177957485 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162950295 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113386239 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.187018564 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095647038 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.166153192 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078676852 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096251258 seconds)
  done (took 2.650096054 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097243314 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116672589 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084474685 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114378554 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077618319 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114175083 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111301658 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102598863 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112640097 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085934314 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095606119 seconds)
  done (took 1.837565299 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096156426 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115180887 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083535595 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112104366 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07875922 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11271489 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09468205 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118064729 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111806169 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087926449 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095951543 seconds)
  done (took 1.830710683 seconds)
done (took 7.036973453 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.096714349 seconds)
  done (took 0.816592517 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.024759214 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.188565015 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118033284 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.157550928 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.32551357 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.20197218 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.563236247 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130945464 seconds)
  done (took 15.633968111 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.118746836 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.11813495 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103821886 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08519954 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.105358794 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104394992 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086915088 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101233607 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084939158 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103402269 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.1003855 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086895567 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.1002447 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084280632 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104097985 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087228203 seconds)
  done (took 2.360697726 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121782311 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121306424 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10830072 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110271927 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.105922292 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.089138243 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109018777 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.106028495 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087094551 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105578546 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.108552075 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090919409 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10598943 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09805872 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091594117 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110275659 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.10417294 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090981864 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109243212 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.109463665 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092011173 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097853091 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105589836 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091736234 seconds)
  done (took 3.303910784 seconds)
done (took 22.83969085 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164365461 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111180093 seconds)
  done (took 1.006320579 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.100161994 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117692983 seconds)
  done (took 0.95160437 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.100244392 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09641156 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.125312222 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112356826 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08253824 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097574531 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122304696 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081279404 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097616092 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098101856 seconds)
  done (took 1.751329359 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084292978 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111883504 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103536141 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.10147805 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107063326 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097468 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089306986 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100157244 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112101587 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079129721 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104534014 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116302013 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087133619 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118053913 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106152393 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101439941 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088018827 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100109995 seconds)
  done (took 2.540665852 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080000363 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099267523 seconds)
  done (took 0.917867679 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083060606 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095305142 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082446008 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098410999 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096184853 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078247316 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095772776 seconds)
  done (took 1.367132294 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.480509003 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137143214 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.255307364 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08684135 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124213805 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.312626272 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099316382 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105178046 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086500833 seconds)
  done (took 2.480197735 seconds)
done (took 11.753079928 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094779532 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119747596 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.117778673 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.496159957 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.123236855 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081423039 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.162905487 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.258109558 seconds)
done (took 2.196198626 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.152587993 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327685345 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11897121 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069124912 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.100179423 seconds)
  done (took 1.361257224 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080193056 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10178071 seconds)
  done (took 0.925568044 seconds)
done (took 3.18355494 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082464443 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098337691 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079248251 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098017386 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.079303861 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096678509 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082651076 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097611952 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.081284566 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.098191378 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081814886 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.129871241 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09831491 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079268555 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099625104 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079514287 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097129327 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079382132 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096516475 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081439109 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098675743 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080106296 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095478817 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081333641 seconds)
  done (took 2.948381632 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110040565 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099577586 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105298447 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088341325 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103683348 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.103561273 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.087989563 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099521706 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087608052 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100242377 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103126219 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086559791 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101504538 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.103399078 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084394439 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103741257 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089223079 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099134234 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101356062 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086974758 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105299587 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081837435 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102982284 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104723532 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085804649 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101592312 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.101690638 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.08201327 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104427665 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086586978 seconds)
  done (took 3.650303555 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086727939 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09605094 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079205966 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103922213 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079477081 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098429382 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080294549 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09700896 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080414808 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096551894 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081760157 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095824774 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080410512 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098720414 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098305849 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082506933 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109921705 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079651572 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096843442 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080879292 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100559778 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079553025 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097088384 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080268205 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095587346 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079075008 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096401026 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096755246 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.080861878 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.097387439 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.081879315 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100890476 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.07916214 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103502973 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083459031 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096369248 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084480429 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096726735 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079643324 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096517549 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079165782 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096983305 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079590977 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103256902 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.096692845 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081631979 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09810805 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.081163345 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.097834376 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.082829258 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095905996 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079247 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.099159787 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080629697 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100359561 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079480004 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097292957 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.096737457 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080381441 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.096662076 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.07885904 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.095846599 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.082630721 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097355583 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095419042 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103606588 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079708499 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098144159 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081279536 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099682979 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098924722 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093562669 seconds)
  done (took 7.267983883 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08353094 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109164539 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082431656 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098508506 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078685861 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097861992 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101244635 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080574702 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098997216 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087148848 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097951304 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098629579 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08235341 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109435233 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081684649 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09875023 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086826764 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094667914 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.097662528 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084182527 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098326751 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083439251 seconds)
  done (took 2.787019433 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.224716346 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10710134 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144675171 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120486315 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095499173 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107982424 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103715204 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088470496 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104197805 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101919842 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085797225 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105177048 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085664223 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102467091 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103555847 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087701851 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10484004 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104358615 seconds)
  done (took 2.735194507 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095588924 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100565542 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.122531207 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.083654782 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.1008778 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085582941 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106384687 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120738456 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084838562 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100450864 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110281371 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085778566 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103161618 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083882422 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102832001 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083586991 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102517936 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100678581 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092874853 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105714 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.1063298 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092899207 seconds)
  done (took 2.927109346 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098420827 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102007461 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120857992 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086762926 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097353984 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081778867 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.1065328 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082398261 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108838201 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.10205669 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083010801 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099115587 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090145317 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099415712 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106746717 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08291565 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101804527 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084025985 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101553869 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096069348 seconds)
  done (took 2.692273919 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10813203 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101401623 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101755782 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094812716 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102310043 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.1020941 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094034722 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103006081 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101781655 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111167079 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10255791 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101632025 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094344988 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107971055 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10225183 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094668751 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110678282 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1116721 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102760037 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083784904 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128413776 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102345764 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094667951 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102720671 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102492302 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085483196 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101669878 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108754085 seconds)
  done (took 3.618809116 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.192819706 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101258212 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080310056 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098557056 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.08024185 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097444431 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080349151 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096983729 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083256601 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097260454 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083478103 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.0991915 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082655284 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100701827 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083205707 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100248176 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085202965 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09710709 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081015759 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097797513 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083468143 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100549332 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.100500923 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08086669 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098035474 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083589452 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098790881 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079910504 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100369405 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080217055 seconds)
  done (took 3.585815997 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094332873 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10878909 seconds)
  done (took 0.969335923 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080245734 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118332471 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080732661 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104357488 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106308776 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083295678 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110571033 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087629118 seconds)
  done (took 1.535961941 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100841088 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115150133 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085079873 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115105578 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.115777172 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099957385 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162932011 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102382233 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089386443 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099866996 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118003897 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082028756 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107189133 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084510887 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106997739 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089364585 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099610464 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107891241 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086464582 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099495982 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086056235 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111507282 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103923135 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080354812 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102418726 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094954125 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110593477 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102580811 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087884578 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110659632 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089219109 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095650687 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083958272 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102459755 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.100120789 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096785525 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114329453 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08767622 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110185078 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103614881 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113802647 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097114875 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.10688574 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089936678 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112444137 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085269724 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103032524 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079165021 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098731144 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.104370227 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.079642719 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101708561 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078177432 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11153913 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088440416 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11548249 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.099939939 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085228503 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105063046 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087075905 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108551468 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085307057 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10352824 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.10088574 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090934247 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105164781 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090592832 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096681906 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077343251 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099087147 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110335053 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106479082 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110194522 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085050837 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103124785 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099047499 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088005487 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103204289 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090910714 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11020812 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102254611 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108267871 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109363772 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101339716 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086487802 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111007222 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083188861 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103304822 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081717633 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116991395 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100187543 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082315193 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09890385 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092888771 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104626375 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101782232 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081505715 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108481184 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07767302 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103211243 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085159484 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102803826 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110854539 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090708094 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108747477 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109456271 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094879553 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102017486 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087481731 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098033572 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085227495 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104496916 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090852615 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095587585 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104075439 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085506503 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103347546 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092258389 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100436409 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084318275 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111413039 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108580354 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082807114 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098519814 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087283012 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101970422 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107134962 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091350564 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100435646 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079897052 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097796995 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088532585 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101800667 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106614771 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08973039 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104702964 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078597002 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100216995 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107649576 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091590167 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102230683 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084828114 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106705835 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08545111 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.10150882 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107186106 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085992739 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101084871 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088985839 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103561299 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079732662 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105764768 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104566482 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08343065 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104970885 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088427737 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104633196 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086149852 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101358758 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108472532 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086356674 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100927985 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08405359 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.10104853 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09389592 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104689524 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098013274 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082105096 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109883864 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08185361 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102672137 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083051048 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104917194 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104005556 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081975545 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101611931 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085658348 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132505263 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107891693 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086145229 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108133505 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094319643 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101828067 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104313124 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084805893 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103950078 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085661005 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109747106 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090056119 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108659421 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104440063 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081317834 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108448222 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09273908 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101651373 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100638605 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082711103 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107072765 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091940647 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10670396 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104034671 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082416587 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102623185 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089712731 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105871283 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084429564 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101063489 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107743056 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083836841 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110095618 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086127787 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111504692 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106436441 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080145669 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107356712 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083431475 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108867561 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080348515 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100128204 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083486029 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104514504 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10154334 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087089032 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097327708 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092204127 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110899186 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.085338007 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102792984 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103461912 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094392664 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104567909 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088792488 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106310008 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108122368 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098476919 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102594214 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08787026 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111991073 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102890305 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078869664 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108671352 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083485897 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102832771 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084034934 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101013155 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088101472 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112765319 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106946899 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079006213 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105374038 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083654689 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101408672 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.08093306 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109404699 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107171743 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086656975 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112040649 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086583048 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10412344 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106076386 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083641457 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10452309 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086516164 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106000272 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085336106 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105980357 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102590783 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086787478 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101914546 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083726764 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104500518 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085505685 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103244042 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10827357 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086535026 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102908815 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08757364 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104288629 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085766288 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103786143 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084723687 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107487591 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103540889 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085026325 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105864472 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08023816 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110671344 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084907327 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111572974 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103327112 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081918733 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109278757 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087302857 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109311884 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104616688 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085758357 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104278149 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084963719 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106096335 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093082187 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100400806 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112074682 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091312768 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103837893 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088315679 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103245953 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086277438 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102525915 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105116283 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086178438 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102629381 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085411241 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108055952 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087853703 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102529196 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10536764 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.08679764 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.10301461 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086416214 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09710912 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084352039 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102453368 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085485102 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110790593 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104225064 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087917372 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.10187508 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086820607 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102766192 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082315794 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112420645 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114022384 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085896474 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112151657 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10270437 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086327574 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112898035 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079759643 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102697518 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084294596 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100523215 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111822482 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086912647 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.11225592 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085396417 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.102608931 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083060624 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104436423 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08398392 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09787191 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101019641 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089575408 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105845041 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08409972 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103567138 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088282527 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105150443 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11083205 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085249744 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105557661 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086050554 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.108835918 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083782448 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102464747 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087258637 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104862382 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08216479 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100688582 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102992721 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086817468 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.103845569 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085055474 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104823296 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092360293 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103679401 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106803074 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090087152 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097660678 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087907725 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104007706 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084701747 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103587109 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107741075 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088625131 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105126758 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092250359 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103369169 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085576876 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104725319 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102396957 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085663379 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104872104 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086470226 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103341402 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087219398 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113169718 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101450969 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087592909 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103581015 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08607559 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108980792 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086434885 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106020254 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112372092 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088496898 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105775352 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092003385 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.107783432 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106616568 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087525139 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107111713 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091414969 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103046076 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11155316 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085153731 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106028889 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088062396 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.102005405 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084877226 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10305243 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084450084 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108559962 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105126736 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08419344 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102044893 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083326044 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105907957 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089390098 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112991298 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106821532 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088694789 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099208774 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082835184 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105092939 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08359808 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.10619719 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088152311 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110057507 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106166724 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085895376 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102408248 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092557022 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109578142 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108526847 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083512511 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108841132 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087999487 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106662417 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086697205 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104234537 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106743573 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09128932 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10514139 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084172149 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112764393 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089219932 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106205877 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105850534 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086667085 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104017826 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081183013 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10542468 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087383898 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110827671 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106801679 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086840361 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114320918 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085384632 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.104644503 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108943219 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085932109 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11163361 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081355673 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.1046485 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08725617 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106375214 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080880302 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102737837 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102000883 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088030567 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.10365842 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081760105 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114301617 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092950433 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107089732 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102986442 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084496298 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099828369 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081099404 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104093929 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087726367 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105816946 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114247149 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085079816 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10378216 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081516344 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105016733 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089940292 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108429029 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082862103 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100322525 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083857612 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106976893 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110564821 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084216688 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104218518 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088839994 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107396571 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084235128 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109684201 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.10067799 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089539018 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115233722 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087248011 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104769992 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110886182 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095243354 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105621428 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082176022 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106017595 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10671574 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08605434 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106645153 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087986293 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118898122 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089171077 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105166965 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103503532 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088869044 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103846099 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093442973 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10633969 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08635517 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109708719 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105987744 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096199977 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107235359 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110461231 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088696221 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107027937 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.084832235 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105031162 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083976408 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102895726 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088038007 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106873845 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111170262 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095174023 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103890499 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113677873 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094465574 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110293827 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082680741 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103705918 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086011873 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100589653 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086931985 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103580801 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08344826 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.103834164 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103454002 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086496317 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111391032 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088679126 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.106238663 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085172843 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098852301 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086655457 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.107796166 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104894889 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082113311 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104970879 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087791738 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110654123 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112008444 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086504681 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106568019 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087257687 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105389229 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081052612 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111029626 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085584022 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107006337 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084412748 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106533964 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105670887 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090025287 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111951333 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087305609 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107392026 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117207473 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08962084 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102522295 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.08374139 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.111517233 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084096974 seconds)
  done (took 59.056074004 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1500033 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093979213 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100895914 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082321162 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11619542 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10124514 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081505293 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102130384 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082088666 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104582348 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08251575 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100483146 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111636733 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128267243 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095607161 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106863302 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099148621 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08240545 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100263117 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083130981 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111910661 seconds)
  done (took 2.933218562 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107227619 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119106494 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116415596 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121192337 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091645898 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117741841 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116842244 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118236202 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102215158 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113499583 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.12105318 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117622936 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092727337 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.113475488 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112519145 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095454524 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122391544 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111996894 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118859611 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097691975 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115664755 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115698171 seconds)
  done (took 3.273129599 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.099133143 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10407132 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089991592 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099827263 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085443086 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09979262 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090267902 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103295233 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108296553 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.08445209 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.103747687 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.085130552 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109967183 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081072322 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104136338 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084017924 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.155821039 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109614482 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10525187 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087020603 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.10183855 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088545799 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.101017569 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081868178 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10411915 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.102743576 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107090369 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.103049837 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085760067 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.104546204 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086614382 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.103133847 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.087270083 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105675867 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084294754 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.104904295 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085665255 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105935348 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.100264871 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084456754 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.106425822 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082146889 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105508499 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.087879574 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.103877754 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083241844 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.106812407 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085558125 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.100796167 seconds)
  done (took 5.597992345 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.107387577 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164300197 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088568213 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.147033094 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123790367 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115892638 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089834919 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125868907 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104920148 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084239899 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126564572 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123050961 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105806184 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092174682 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110247664 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105741698 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088931061 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104274719 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.111165322 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.0865883 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111187753 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112697654 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103424346 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121234242 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110799217 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085247918 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106588869 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111744045 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.120005951 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.093022812 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111624765 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113522152 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.104068565 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.112333829 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10476184 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089845854 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125716428 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.107295297 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089501851 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103763511 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108121512 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091829527 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113348861 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12527517 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087412748 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113014168 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106740299 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083934063 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120024426 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.109123548 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.096501222 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12265576 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111111904 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106193622 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092316451 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123371617 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105347705 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08540057 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.110041112 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119563536 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.08506813 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112023429 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.122249282 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089077105 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.115418755 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.122278882 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110993358 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091765046 seconds)
  done (took 8.305271542 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096622585 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.114108721 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123727344 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125718478 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094805683 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114279262 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113929509 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093871251 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114232796 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119083838 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112790137 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.141589174 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088889525 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117859205 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114176538 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094414082 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113797952 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113521568 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114219781 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094127254 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114919465 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123731426 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113012819 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103664582 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146454535 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10868168 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113194472 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094965207 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1242202 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113528125 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127144525 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.11364293 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094734143 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125068939 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126748746 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112918944 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087282982 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113129682 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.114060474 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094477697 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10794024 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12475119 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113632782 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088412208 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114537873 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113380963 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103815442 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127356312 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117604731 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120247044 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114631969 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105125861 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114810136 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114239584 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124939477 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.151100097 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104259606 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125130218 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114775648 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123217586 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124194208 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132767351 seconds)
  done (took 7.89438783 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112387809 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.118889531 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11993093 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.102509174 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085414754 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111530079 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085002431 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104883346 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116739752 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097003875 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120891153 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111667428 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115365459 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100839093 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11154984 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114225021 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111363649 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091334025 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116902654 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110705885 seconds)
  done (took 2.992328729 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096035357 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127133335 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087119055 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11513965 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110509417 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09414776 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.111251821 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110377704 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088906693 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110080468 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118863994 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099981462 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108222318 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11441352 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099464927 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114421667 seconds)
  done (took 2.541943177 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09838906 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12078303 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.126800364 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086521467 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106515908 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103481773 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087389411 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10270965 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083262104 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.124531051 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.108765343 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090599541 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106669223 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085067555 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103964374 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090221308 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103139827 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.105277856 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087609324 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.128464159 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.118678358 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085678695 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108601324 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089189496 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107698114 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113028917 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087162254 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10525283 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085376191 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108422604 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108594732 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.095559047 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104723645 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105457444 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.08550088 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104227468 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087513759 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107293921 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.090811066 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107747782 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105390982 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087066763 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.107344612 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.088510628 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103334058 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.087878193 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.104076502 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113468733 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.08551014 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.107265957 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.087908889 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11041374 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107271172 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.09916852 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11097229 seconds)
  done (took 6.399662208 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102297978 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110721397 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08321118 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105791415 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090423621 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112282746 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11104099 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09070752 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109252497 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084795934 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109136791 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091839332 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109754375 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110507557 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089367316 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112171413 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08257203 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109272078 seconds)
  done (took 2.656205623 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093599251 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10681649 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094513987 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108604225 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087222177 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11049494 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103145029 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086473173 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105269333 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088179771 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108051381 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089913175 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10708129 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089841381 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108157189 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106787786 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.091153248 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106050743 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087180409 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103469007 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090339718 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107367283 seconds)
  done (took 3.021026365 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.124284569 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.128016308 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.094756084 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.238815075 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106330642 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.135513161 seconds)
  done (took 1.670389664 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112660907 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124215119 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108071211 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110437527 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117940446 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109334788 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090102627 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110647318 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120923468 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124550596 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09028713 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121294212 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121351718 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120601236 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097840247 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117802263 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1098548 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090357525 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108971013 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13209291 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109982586 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101184117 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109804671 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109869679 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090570601 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121129916 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121366412 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126169819 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09007272 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12192256 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117575942 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110408755 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10094935 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1246169 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112556775 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121683575 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090674559 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13235571 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117888586 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12100359 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091439831 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117528358 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121597654 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116710156 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100478756 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111092273 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116900331 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089635303 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111216543 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140080202 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117870191 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120822132 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097368087 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12118238 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121053794 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140234429 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126155592 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120711166 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096550358 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125782019 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121848374 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117951757 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121133814 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125213105 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097885135 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121300247 seconds)
  done (took 8.347702303 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105608949 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12884565 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110961039 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126534194 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100231406 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110787194 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110940246 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090113342 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110989843 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108927976 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157389433 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090807885 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121576427 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12140016 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110099902 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091695104 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110879201 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120339737 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090165996 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138441467 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110949054 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121238169 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121372098 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119896053 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105998266 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11905428 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110957634 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09020861 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111896743 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110835218 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116907945 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091097211 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121406844 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109304369 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101161163 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11135744 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110832507 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117306071 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091566064 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117918083 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120962092 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132540509 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090943957 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111547354 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127530511 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08937303 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11213947 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109836451 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090539876 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110010415 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126778669 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127238243 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125665764 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10060904 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1115896 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109915051 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089949359 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111548859 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110572173 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096089085 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121653937 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111322259 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140556894 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110811944 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089767401 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121062704 seconds)
  done (took 8.218620887 seconds)
done (took 158.368549962 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103694834 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141841927 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100907795 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170825549 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108734117 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12167752 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140997322 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.102236521 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109478071 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088027744 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108811765 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110985645 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153640967 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107929925 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088224444 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110664992 seconds)
  done (took 2.717654493 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.202780911 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.260978696 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104356718 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109489435 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.113211557 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.090962044 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.107377982 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.093184469 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.112535177 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08787069 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.11063784 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088746269 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.108895236 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087881508 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.114121335 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.110391064 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.087838106 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.111535335 seconds)
  done (took 2.95496742 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116839343 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153121503 seconds)
  done (took 1.121205885 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121859058 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.184834052 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30383598 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157652282 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120866156 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130284368 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158851749 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134744203 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.214286286 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125894989 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125282866 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098767518 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142580893 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118830082 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11654862 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100209209 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145539843 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115717366 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096563673 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.120288677 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140933183 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088165453 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.118385395 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094572856 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.216268371 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.100679687 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.108854421 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087997603 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12045559 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116970759 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094638704 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129367783 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12142809 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174975262 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.126163834 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.163677751 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.121141736 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092656078 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118788994 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.114293243 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.100783866 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.121692125 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129894908 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.12076543 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.090404907 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120991398 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088816093 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10747576 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.0954855 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122501038 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116216137 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.093951853 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.181197639 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.100604283 seconds)
  done (took 7.72707248 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.829148922 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156555051 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092171896 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.922196544 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140498596 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104477689 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.817503449 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136280945 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237879808 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.791722094 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109473054 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128443794 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236048138 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.241365919 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937485868 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316959212 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.681461399 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127248586 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.140520629 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.158016939 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097521656 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139959063 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132562552 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.459997583 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117873599 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092343579 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119801766 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122275976 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165610044 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.091446797 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116538199 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182278277 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.274860377 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.190219324 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118117133 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112079926 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091475775 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.174166193 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271610131 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.22403434 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.185157965 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108957957 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091108743 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12280814 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131799527 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08868578 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188762535 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181200425 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.176984799 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116862904 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099209172 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122046246 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12296556 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16991583 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.125432854 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318568474 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32912709 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091025753 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121344874 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128738768 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269666301 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104989404 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232678378 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139538728 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218457489 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091309604 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805779442 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.17369713 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113332083 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096402026 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120357662 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118342537 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098946187 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174630169 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.395944136 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126116274 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117032146 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09024417 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234783888 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090749732 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113809986 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167079336 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118198226 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120593031 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103686598 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125048459 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17502881 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.25732989 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10308721 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121970098 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116369038 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102690335 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118354188 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.217486656 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227708846 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166583272 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.238587501 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102375401 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.191125051 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.173356035 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121939138 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177581344 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120236856 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12677401 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10153342 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226697383 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.149869188 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12799638 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094750053 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119641976 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.15212797 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115742232 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097479053 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.197297697 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.487716499 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.194050547 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.090126969 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.116339244 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099093215 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188322521 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098787587 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267626032 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12117557 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.175576804 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118898105 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089667099 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12018383 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.169649054 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12533939 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119845093 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102506231 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121373724 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237138749 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225928122 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124836701 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228147299 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188724522 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121327999 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176809196 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121865094 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.173585398 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122293583 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122131052 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095997308 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795334372 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125246585 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098266741 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11878214 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199775241 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112767217 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104328133 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113439163 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086827813 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783302653 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.116309842 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101378558 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.127444651 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121339968 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096946751 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119837841 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123197255 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168840667 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240208935 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123539845 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096566874 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.115377819 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.165646569 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118541808 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.092107819 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.114760532 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.091551275 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12222067 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116295726 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105549509 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.197029679 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.169355812 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229286937 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.602579878 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091893369 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.113968253 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237499975 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092361932 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297426929 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120524266 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.231706079 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169472497 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123193075 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.325311972 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.173838619 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201308815 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.093880685 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.200570743 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088741017 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120817817 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.170641264 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113808669 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097975149 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.19076785 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104489206 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125135178 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.970042742 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113324125 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23081617 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088350408 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.197892138 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096136678 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123597764 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.300520125 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091001992 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131049517 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.169438364 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118682146 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.113743222 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.706483911 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.11402458 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099938496 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121497885 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232008417 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.170283134 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121096938 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120353937 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102234204 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.190644739 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213626629 seconds)
  done (took 44.675671249 seconds)
done (took 60.050532123 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.299466974 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217813625 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262675856 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171720961 seconds)
  done (took 1.908334255 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180703884 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151602411 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.125943275 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110210769 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.154266813 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086812032 seconds)
  done (took 1.690720554 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.39132336 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277872924 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244569032 seconds)
  done (took 1.799111711 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252869685 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.273548435 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.332447994 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.419602254 seconds)
  done (took 2.258295998 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.284332944 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.147825814 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.141138681 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.171874047 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.207669765 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.296004565 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.16894882 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.248718944 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.160644075 seconds)
  done (took 2.756377099 seconds)
done (took 11.300847961 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.249197817 seconds)
    (2/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.256250977 seconds)
    (3/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.239036871 seconds)
    (4/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.154501073 seconds)
    (5/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.10280697 seconds)
    (6/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.265285218 seconds)
    (7/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.206026955 seconds)
    (8/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.199019761 seconds)
    (9/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119929554 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.152128592 seconds)
    (11/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.211969578 seconds)
    (12/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.090204085 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.093179231 seconds)
    (14/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.141987585 seconds)
    (15/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.121836011 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102922013 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118134576 seconds)
    (18/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.23573985 seconds)
    (19/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.204828931 seconds)
    (20/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.104916183 seconds)
    (21/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.120934544 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.113684023 seconds)
    (23/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.214656155 seconds)
    (24/286) benchmarking ("sort", Float32, true)...
    done (took 0.242119416 seconds)
    (25/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.196306821 seconds)
    (26/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.194062449 seconds)
    (27/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.095906479 seconds)
    (28/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118998786 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088671692 seconds)
    (30/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.190642489 seconds)
    (31/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.174894535 seconds)
    (32/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.142896034 seconds)
    (33/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.176323543 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 0.231634686 seconds)
    (35/286) benchmarking ("sort", BigInt, false)...
    done (took 0.224525583 seconds)
    (36/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.097260349 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.120667419 seconds)
    (38/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126615747 seconds)
    (39/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.176656984 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.138951755 seconds)
    (41/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.129427694 seconds)
    (42/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.092595889 seconds)
    (43/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.173925225 seconds)
    (44/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.123322805 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.117581771 seconds)
    (46/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115141727 seconds)
    (47/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.119714799 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097021659 seconds)
    (49/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.204979924 seconds)
    (50/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.140544591 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134805174 seconds)
    (52/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.193025341 seconds)
    (53/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.155478385 seconds)
    (54/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.133434878 seconds)
    (55/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.153315639 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.115293884 seconds)
    (57/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.124820789 seconds)
    (58/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.157154326 seconds)
    (59/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.207812534 seconds)
    (60/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.194362721 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087269636 seconds)
    (62/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.264249584 seconds)
    (63/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.165969989 seconds)
    (64/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.197631239 seconds)
    (65/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.128618835 seconds)
    (66/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.11857555 seconds)
    (67/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.068072619 seconds)
    (68/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.124531902 seconds)
    (69/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.152200764 seconds)
    (70/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.199290427 seconds)
    (71/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139677833 seconds)
    (72/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.210099051 seconds)
    (73/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.1175997 seconds)
    (74/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.142879733 seconds)
    (75/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.157618623 seconds)
    (76/286) benchmarking ("sort", Float64, true)...
    done (took 0.241000143 seconds)
    (77/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.094706494 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.113348025 seconds)
    (79/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.116346662 seconds)
    (80/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.122748834 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111504257 seconds)
    (82/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068741659 seconds)
    (83/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094167142 seconds)
    (84/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.156299505 seconds)
    (85/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.158394009 seconds)
    (86/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.097351297 seconds)
    (87/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.090710291 seconds)
    (88/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.067962966 seconds)
    (89/286) benchmarking ("sort", Float64, false)...
    done (took 0.174031668 seconds)
    (90/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.095571373 seconds)
    (91/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.137709278 seconds)
    (92/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.176896172 seconds)
    (93/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.09575212 seconds)
    (94/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118367367 seconds)
    (95/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.10290773 seconds)
    (96/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117820973 seconds)
    (97/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067692503 seconds)
    (98/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.091077507 seconds)
    (99/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100607299 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.111257838 seconds)
    (101/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.103653593 seconds)
    (102/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.139592205 seconds)
    (103/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.22057697 seconds)
    (104/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096519567 seconds)
    (105/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.113624932 seconds)
    (106/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094077282 seconds)
    (107/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.196249631 seconds)
    (108/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.091109636 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097371668 seconds)
    (110/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.152977375 seconds)
    (111/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068893157 seconds)
    (112/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.175569848 seconds)
    (113/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.094698146 seconds)
    (114/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.100810334 seconds)
    (115/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095299703 seconds)
    (116/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.161398452 seconds)
    (117/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.145988487 seconds)
    (118/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.146671894 seconds)
    (119/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.111042503 seconds)
    (120/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.06804678 seconds)
    (121/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.114214283 seconds)
    (122/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.1689695 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 0.208086385 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09940978 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118579275 seconds)
    (126/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.101699081 seconds)
    (127/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.13276605 seconds)
    (128/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.164901019 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095204213 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118807471 seconds)
    (131/286) benchmarking ("sort", Int8, true)...
    done (took 0.229522749 seconds)
    (132/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148221737 seconds)
    (133/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.11754151 seconds)
    (134/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067394721 seconds)
    (135/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.095933257 seconds)
    (136/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.070686671 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.120856607 seconds)
    (138/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.08046653 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111098039 seconds)
    (140/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.083992895 seconds)
    (141/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.125476353 seconds)
    (142/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.127316775 seconds)
    (143/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115024451 seconds)
    (144/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.089927021 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110692611 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097145449 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.121486411 seconds)
    (148/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06813777 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.121209439 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089088319 seconds)
    (151/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.19385226 seconds)
    (152/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067467314 seconds)
    (153/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.090634272 seconds)
    (154/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088948373 seconds)
    (155/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11515505 seconds)
    (156/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.151016442 seconds)
    (157/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.139367534 seconds)
    (158/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118421101 seconds)
    (159/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.121862168 seconds)
    (160/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.108000646 seconds)
    (161/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09916992 seconds)
    (162/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.120858082 seconds)
    (163/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070679264 seconds)
    (164/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066835806 seconds)
    (165/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.184210335 seconds)
    (166/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.120353598 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095512062 seconds)
    (168/286) benchmarking ("sort", Int8, false)...
    done (took 0.191581681 seconds)
    (169/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.17669862 seconds)
    (170/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.171166294 seconds)
    (171/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.190637842 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098849176 seconds)
    (173/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.092611099 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088736175 seconds)
    (175/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167694199 seconds)
    (176/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.177094831 seconds)
    (177/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138844884 seconds)
    (178/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.112946462 seconds)
    (179/286) benchmarking ("sort", BigInt, true)...
    done (took 0.240317886 seconds)
    (180/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.143751015 seconds)
    (181/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091657835 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 0.23070473 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.112634414 seconds)
    (184/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.083474684 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112142697 seconds)
    (186/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.087906525 seconds)
    (187/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.188946948 seconds)
    (188/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.09094603 seconds)
    (189/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.116633927 seconds)
    (190/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.101729497 seconds)
    (191/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069578976 seconds)
    (192/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068659906 seconds)
    (193/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.124999063 seconds)
    (194/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078962163 seconds)
    (195/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118847645 seconds)
    (196/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.091191844 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122280661 seconds)
    (198/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.132013967 seconds)
    (199/286) benchmarking ("sort", Float32, false)...
    done (took 0.177331111 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120834016 seconds)
    (201/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.089785271 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.115072756 seconds)
    (203/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.175577926 seconds)
    (204/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070660476 seconds)
    (205/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.129628257 seconds)
    (206/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113447196 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11974587 seconds)
    (208/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.168334713 seconds)
    (209/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.069354043 seconds)
    (210/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.124902686 seconds)
    (211/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.08964317 seconds)
    (212/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.11257198 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.087832966 seconds)
    (214/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.090538007 seconds)
    (215/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.069411688 seconds)
    (216/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.090035919 seconds)
    (217/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.115194647 seconds)
    (218/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.068280223 seconds)
    (219/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.123606734 seconds)
    (220/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.089614122 seconds)
    (221/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116751715 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.08783741 seconds)
    (223/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.092154525 seconds)
    (224/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068928614 seconds)
    (225/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.092188639 seconds)
    (226/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069547916 seconds)
    (227/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138168672 seconds)
    (228/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.070173402 seconds)
    (229/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069985748 seconds)
    (230/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.123256618 seconds)
    (231/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.475764366 seconds)
    (232/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.069443197 seconds)
    (233/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068221974 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.112431087 seconds)
    (235/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.077478022 seconds)
    (236/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.118551474 seconds)
    (237/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.069497298 seconds)
    (238/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.092928412 seconds)
    (239/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.089911886 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118787561 seconds)
    (241/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069300525 seconds)
    (242/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069768747 seconds)
    (243/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.125059422 seconds)
    (244/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068022379 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111829024 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09783957 seconds)
    (247/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118310711 seconds)
    (248/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.091174798 seconds)
    (249/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.111665779 seconds)
    (250/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068962155 seconds)
    (251/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125727745 seconds)
    (252/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06802485 seconds)
    (253/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.091082369 seconds)
    (254/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.070080811 seconds)
    (255/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06792742 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120780687 seconds)
    (257/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.087743231 seconds)
    (258/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.119752617 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087180626 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.112347549 seconds)
    (261/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.117213854 seconds)
    (262/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090652893 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.112321018 seconds)
    (264/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068901686 seconds)
    (265/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.089066823 seconds)
    (266/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.121770041 seconds)
    (267/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.112275294 seconds)
    (268/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.089211329 seconds)
    (269/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126713817 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.098580641 seconds)
    (271/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138555514 seconds)
    (272/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068135451 seconds)
    (273/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.093687597 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089407276 seconds)
    (275/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.092613284 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095956148 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111377031 seconds)
    (278/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.078884144 seconds)
    (279/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068381481 seconds)
    (280/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.100344697 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.107313098 seconds)
    (282/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.114449244 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.089747071 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.119323321 seconds)
    (285/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069405229 seconds)
    (286/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.09170907 seconds)
  done (took 36.975196441 seconds)
done (took 37.867380015 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103427295 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.153743713 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.097627608 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.143289656 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125403229 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093742364 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120647003 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.124874854 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103658239 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126981866 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100942875 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.095485941 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09867599 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123548107 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.122215143 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121238862 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.126175088 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095298428 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121315233 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.111097467 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.097197377 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111913093 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.09158191 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.093647334 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100421768 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119033939 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.09587655 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.123053661 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08904299 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111988417 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09414566 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.121008254 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088798734 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126992902 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.118636645 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.098685324 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.122409704 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098367457 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.114303119 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088585179 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120930212 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094272718 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119530628 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.11933657 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095926483 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.117816467 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.097823167 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125097964 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144777797 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093678961 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.119751983 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.09897035 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.121993647 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.09634103 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.116317888 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097545054 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118123818 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.144474408 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.09841263 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117844225 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.097424492 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.121209518 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.0944569 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.122074113 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120623168 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100602759 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124247331 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094564912 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.122933873 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.094847715 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.113156136 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120744449 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.09275756 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111384421 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098610562 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122340274 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08895079 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117828203 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.096482237 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117471704 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.088343562 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113844444 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.090475339 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118698308 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091602172 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.095411633 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.09252439 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118442314 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.08862986 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.120625412 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.095081004 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.119520964 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114276591 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102152117 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111544254 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093856285 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111809843 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.089262607 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11461534 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093330252 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112217227 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091583394 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121140666 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.09022814 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119663186 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.101570559 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.113986041 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118592618 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088482154 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111400093 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.104343787 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123308832 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.089175281 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118403691 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087869394 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120787202 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088825412 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112508811 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.088804774 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114013623 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117993486 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.089496376 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114526697 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097856552 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12737363 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089197523 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116569443 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092239567 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112331184 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094679053 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112538241 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.089425024 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.115849243 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079907243 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115906351 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089441963 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.12070616 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091824146 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121866118 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.090978926 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.123246212 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.11660394 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095805551 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.118315905 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089793587 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099070151 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095012499 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115302972 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.091899487 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112967944 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.092057802 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.112505311 seconds)
done (took 17.312541623 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090624263 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187095939 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.157653994 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.147391709 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108960921 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114237885 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124433868 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121358151 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.116130661 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145204096 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.112712089 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134812038 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.15168646 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088148906 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114054066 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093651791 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115618955 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.12926924 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127480985 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135755966 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.167258099 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.113732288 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149816018 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.114348445 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123801563 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.116289371 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114269953 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.117259102 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093865238 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.129440584 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110055841 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116688472 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089857213 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136657565 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.130685625 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.098655937 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.113497941 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09699577 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.114215945 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.089731 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143828683 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13610958 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118669468 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.095670681 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117095314 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093815573 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114094759 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.100055504 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.125113905 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.093485538 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129671031 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.160091968 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117885144 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.100035517 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.113426253 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124096958 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.099567385 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116208109 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.091204913 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.116746034 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.089410802 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.117677784 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.104938828 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145223513 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.118959118 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122931765 seconds)
  done (took 8.798509181 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107825527 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.144347273 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132422028 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109827534 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114506245 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.09078701 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114636626 seconds)
  done (took 1.764143501 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091202446 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.140922151 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117294849 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141187285 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13822835 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.117247386 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126292603 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090730349 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13711387 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.117357393 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.116152805 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156842274 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116604753 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098717909 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.143416852 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091282655 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143472819 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114866298 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094685175 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141772292 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094526002 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137748535 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.11738715 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091982554 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.133395977 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.091545006 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16856901 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120960396 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093166394 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119452948 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089891939 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.155206909 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13491334 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.103277447 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115027905 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.109613449 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.151284719 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088193208 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.132353845 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.123104672 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.10887427 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.118331062 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091449926 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.116389437 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.095342368 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.129352709 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119814615 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092468103 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118329588 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.115084552 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.116177781 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108424751 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115809805 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095221917 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.117605958 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122315619 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.100724797 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116478363 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115993432 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117526547 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110694699 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136783602 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.133839017 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110739962 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119698919 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108946637 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.133618859 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118623256 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093333753 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119939841 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110563031 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.115181454 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.093889918 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.130018525 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09284052 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.143271792 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.142511888 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093314026 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126958777 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.090921599 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117462294 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090520374 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.142891158 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120474429 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091468442 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120707476 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094315361 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113656685 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089743265 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.120344598 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090706613 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117941126 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094067288 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117171173 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093559065 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.137402983 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116635868 seconds)
  done (took 12.187760446 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093702921 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116361697 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095011395 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11787246 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092578541 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.118122182 seconds)
  done (took 1.595895705 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119447856 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120011852 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.130914014 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098770312 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159331189 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.13550564 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.110651513 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.127284466 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.135673387 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.107715435 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.136192763 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111230924 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142908446 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124116426 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109142053 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122505222 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.135681913 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102466863 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130313471 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124505316 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114454988 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123910823 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098785386 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.138279002 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120701246 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098494939 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128708466 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130172619 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105047889 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.1259908 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122728742 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095607405 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123678966 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.100960909 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.137450458 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124999019 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098038687 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122126082 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129052075 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.095741763 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.13596478 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099588051 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129850964 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121735526 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.101756048 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124517226 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.12210331 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102993629 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135500414 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121613478 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097289376 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123182109 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096246861 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122269926 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124145686 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101926196 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121120635 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110568994 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123934308 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124188243 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095486331 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121893088 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12604067 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095976519 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.132099351 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096968304 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.124063917 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123718783 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09995442 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.123982229 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.0973296 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120316837 seconds)
  done (took 9.483352354 seconds)
done (took 34.776643734 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.691275794 seconds)
  done (took 1.652203455 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.865376859 seconds)
  done (took 1.829150779 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.994679054 seconds)
  done (took 17.988593977 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.507030546 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.601498936 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.011778086 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173697258 seconds)
  done (took 3.258123859 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.94544406 seconds)
  done (took 1.932105149 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.28657139 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23798176 seconds)
  done (took 1.494163173 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.781802884 seconds)
  done (took 1.762437644 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.449166039 seconds)
  done (took 2.422875117 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.335905785 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185964648 seconds)
  done (took 1.509471873 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.563977172 seconds)
  done (took 1.542266049 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.120045545 seconds)
  done (took 11.103664164 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.271636546 seconds)
  done (took 1.265779354 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.306941167 seconds)
  done (took 1.293382597 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.552720613 seconds)
  done (took 4.538702733 seconds)
done (took 54.565335149 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101537611 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128881166 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104783598 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.127251872 seconds)
  done (took 1.44203534 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107538762 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123569642 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105871388 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122696977 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132904278 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.099039897 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125776851 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103354904 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123391335 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.124395578 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.099061394 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122202466 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101781245 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125104672 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095068707 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126217736 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128099008 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.098266897 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.126592055 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098644573 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121632506 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.125193002 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.102795124 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12166716 seconds)
  done (took 3.747129777 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102944817 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121267329 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099117897 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.12027823 seconds)
  done (took 1.43123893 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101763101 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.134463403 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.10769994 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128808076 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13464074 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109663475 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119707952 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094766027 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121131104 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.102062234 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.118395363 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.142358587 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.109516776 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.126956239 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104166823 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.1166867 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117934772 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.109441515 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12691953 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104098224 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120776803 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.102331905 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119572434 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.135938075 seconds)
  done (took 3.799007561 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173823361 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129709778 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141242852 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097648865 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163230685 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.144155288 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.09087169 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143234954 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08970357 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133107503 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119984526 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.136420082 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130693474 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.116122612 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.091371631 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.11548917 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.104652667 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129297705 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093593264 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.130176632 seconds)
  done (took 3.46538176 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099934743 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119828412 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091038388 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117681562 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.10197458 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.123137131 seconds)
  done (took 1.646818256 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093452937 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116759265 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092175257 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116852556 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.097111397 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.117708383 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090833904 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116749358 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091371772 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117439666 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091423118 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115616337 seconds)
  done (took 2.250390509 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.515617173 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122688412 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.123571348 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090134327 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.125031075 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092002893 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.131816537 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09492374 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.144192946 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.091224325 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118794904 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.11990655 seconds)
  done (took 2.767700021 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246678462 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127660681 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288835647 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.375595414 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185945705 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1713187 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.304181118 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168217898 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.23548788 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168512777 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229840043 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18125639 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130711569 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245194657 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143679599 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.121531563 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223556979 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283866675 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155630034 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248237812 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174475879 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1723767 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183883006 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155921876 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140777762 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200533995 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123954832 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106588733 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2155697 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182505452 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190217207 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165165464 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165809951 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237435508 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267150014 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222375059 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28522393 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136937715 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.143541825 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.172399357 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271514371 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143061414 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211529171 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165193877 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134504112 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210638681 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162911071 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.226984705 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.122409388 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14516393 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229194303 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199761328 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.216430828 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14228733 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.327332383 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154594594 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.175675296 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194168956 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225117249 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233900585 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197381733 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123762434 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19218191 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198017933 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218259433 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.169169081 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.194110184 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151455636 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182020706 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199440252 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190011198 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174319169 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.21242025 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139966092 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174809829 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175112116 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173493736 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266856623 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189861306 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.125030926 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172936113 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152849143 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106683546 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197922523 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127887106 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220851979 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148149165 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.166488945 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21352148 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162549989 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163828159 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218520906 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181544805 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151114518 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086117969 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157295191 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158893368 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17550804 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143174148 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160725605 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153466016 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.107251854 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173473145 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.128115733 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189024167 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.121732682 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171600981 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19019335 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129383567 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167724256 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151696539 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127686612 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22274856 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203333589 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143797916 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109359493 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241074691 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186209496 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144870254 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181478278 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208657552 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148471655 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153553451 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202518505 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251540207 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145988962 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205037258 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151346537 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138709191 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106576302 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21402307 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158699852 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165055502 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108477809 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.213616318 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204288789 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127781388 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113758027 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232715318 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135871878 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107748943 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150683695 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151671401 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139696669 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.118978607 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.149197227 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177422421 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210029653 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156729074 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16771 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148632224 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217086811 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143796625 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.155023687 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1516785 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096777464 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.24535023 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204081008 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132723081 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210986475 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172154628 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231070519 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174722297 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109620083 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179420065 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134550488 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.123745935 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198537929 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168630686 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164350645 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198545224 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226504709 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191784171 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.213103655 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16954723 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178185354 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169580951 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156734343 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113838864 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165449912 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162823119 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.126945106 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143206093 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110504316 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15344817 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145893014 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136392161 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198803587 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173391567 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221897642 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16413419 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124533417 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212727292 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105845406 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176035182 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.207776757 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122222574 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.228983828 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198083381 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219975901 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119832423 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234743767 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.095829748 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128294128 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.146233031 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171586222 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108571273 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139691368 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165767461 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186440903 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206469572 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176077674 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212592452 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217588525 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195615641 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097512773 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172690236 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180649714 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182793839 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183928009 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143543018 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152858997 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181932201 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151508969 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214821062 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170720326 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179799173 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233312215 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154688965 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10820187 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152902623 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175968501 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157358497 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175565902 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148924147 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141332973 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157416184 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105544123 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191582418 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183206158 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166869857 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18364766 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153694051 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189057597 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13169373 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165552717 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16373105 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16776607 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082842659 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172751488 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228526611 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14632431 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164217848 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186571548 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134379848 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310959161 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205176467 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190574949 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141267653 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159092593 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165916984 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166650301 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16914006 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181557011 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162968122 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191148493 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162285579 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140055797 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139401061 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122891459 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156289899 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.135126564 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150830046 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.180788948 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140863697 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184642768 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150974906 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163137385 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176718394 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152697554 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.119838445 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153165668 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24933899 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188456961 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194007593 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.154923368 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177504953 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239490673 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101239869 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13501608 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136534027 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183318147 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111438694 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225723815 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190695096 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230167697 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188155353 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176361344 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142749104 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.095250274 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16197752 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172857665 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234572276 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149094408 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152519519 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200438964 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.139508561 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107794491 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169515169 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314854492 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121948359 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2179615 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082116563 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.285649346 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128129527 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107422323 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166079977 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21442303 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.111736717 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181683113 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174802369 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155139814 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166487153 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153514768 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196399749 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242694513 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206406414 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18403217 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.137314236 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160057895 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171934131 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187913302 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160379671 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142279825 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190302633 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198919614 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.225343155 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11690789 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171699623 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199213291 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135683097 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219699894 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137167891 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211819192 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138771926 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196159107 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157491344 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142801807 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176791641 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.217887761 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117023292 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212456982 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188203701 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138067752 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108617748 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164417259 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210375564 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124318356 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.13100171 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179987745 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129420793 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200699422 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270796936 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137519456 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157068405 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121024995 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140138612 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158574837 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162356028 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141240202 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.144463909 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223041587 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136788024 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187774604 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206441802 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172355047 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196613616 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121480384 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.752293178 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.134819894 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197935911 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151963334 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18450752 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15300155 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176302805 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163603146 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170216249 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227702712 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159116058 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.207828741 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225358479 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.183105504 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13637184 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163089747 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150879036 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147666784 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128535754 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199380862 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133514695 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.150593205 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.211247289 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15960029 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109163832 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143521059 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202519312 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152429971 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183770353 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184470696 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14317572 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17504247 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22055354 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108655285 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.219360367 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188165032 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144813216 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125078058 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138050638 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155480257 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27182611 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098526827 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216480957 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191548647 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164065335 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171234472 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.1508749 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195570833 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161761482 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220326179 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146868565 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159715508 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132533015 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141242816 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13456973 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159177567 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169571856 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152907414 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164953605 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.143088579 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194383238 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127072167 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149101012 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291609086 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175800372 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250900188 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.109385456 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138313181 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162823748 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151540659 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181636572 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182653955 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.14039649 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138471886 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138059818 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131958014 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114415331 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159928263 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223987481 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135438758 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242909742 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.14042746 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283018626 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115579579 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159389965 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117409484 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107288485 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154915194 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150410111 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154187977 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196321584 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271189582 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150894898 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.136890466 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12494254 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129072236 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140059679 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167447404 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165475132 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184665746 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145450131 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.08296972 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160309376 seconds)
  done (took 83.855057082 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.186080119 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.135389058 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.15008536 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.206639955 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179424101 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.294034636 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212516418 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25847917 seconds)
  done (took 2.70857312 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09579815 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.154142757 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159749113 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.136939064 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093833034 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.122569628 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.371116594 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134833857 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.09294455 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.150366513 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174162367 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095673388 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.586991853 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.092313829 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121506629 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108626834 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093638275 seconds)
  done (took 3.864485175 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.198930713 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.481916981 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.04215984 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.199854036 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.181317422 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.121535383 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.697794664 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.121212189 seconds)
  done (took 12.133906215 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.126320673 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147413385 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.137345332 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.166699265 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.151791847 seconds)
  done (took 1.823443905 seconds)
done (took 125.915959815 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099947869 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130882832 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09898948 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132270927 seconds)
  done (took 1.541285461 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099482258 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073781815 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102717294 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076263445 seconds)
  done (took 1.440106069 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.196035819 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.172118457 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393538711 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073087605 seconds)
  done (took 1.587981698 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.117858805 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135317384 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.106666336 seconds)
  done (took 1.458471822 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108622415 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131158113 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105580326 seconds)
  done (took 1.439833864 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108167652 seconds)
  done (took 1.202874181 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.112320428 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.142507706 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.11406069 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.141091918 seconds)
  done (took 1.605271089 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099767809 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129199361 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114060187 seconds)
  done (took 1.437198643 seconds)
done (took 13.171490875 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10862642 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.426908312 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.41435844 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112234533 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723380703 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382555845 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.03513591 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14889145 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165454424 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094896536 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141923651 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672202916 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026244075 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.375519281 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.985910721 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373742543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704226052 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095326697 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121904493 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095109087 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.020301929 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093830417 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124207417 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093910496 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704189908 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428585293 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096540426 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.374639215 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094290491 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126651366 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.408919997 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096992571 seconds)
  done (took 16.951675715 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100843485 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181866026 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127464707 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09682305 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.125304322 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096514791 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12589857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095140171 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181012688 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125303455 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111950416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123677872 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127187921 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097305772 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144883043 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093324067 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127361726 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094975692 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122869454 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122384287 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114530417 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12284867 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095822779 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123352607 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095995538 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137762179 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124997253 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094624103 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123741375 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098548934 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127696075 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096618421 seconds)
  done (took 4.87732812 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146025447 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192035105 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130227313 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128367342 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.171030367 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126347771 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.202902086 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148821989 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183705017 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096752706 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141907491 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095338499 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158932914 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124840947 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116225522 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123233053 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096976155 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123991334 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122362698 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096554838 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141960567 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094327776 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125115638 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094590172 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124883445 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13823304 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097202474 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123714143 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093996773 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127091539 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099431237 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125254692 seconds)
  done (took 5.215336465 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099494518 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127534763 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111645014 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141687359 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097475092 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128015029 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.099396215 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126684008 seconds)
  done (took 2.03461032 seconds)
done (took 30.176396679 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112758004 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.129314102 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.109168707 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136984084 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.105021017 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136803121 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.093661675 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136169647 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135159196 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105326455 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140726823 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.094898125 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125837457 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093858066 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137872226 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099371246 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.137270532 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.13206299 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.109338345 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.136890343 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095784414 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135683638 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104049265 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13805897 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.136406937 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.108834696 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.140148171 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101151802 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12452376 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096573795 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.128823331 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.106975503 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126043059 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.138217945 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.100848275 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.127713614 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097151074 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.125853971 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.108837589 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.136021074 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101415519 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.13608109 seconds)
  done (took 6.115207779 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.112088262 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.144592273 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.108502853 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082311043 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118159605 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082031251 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.14226977 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079637241 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112047714 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11093317 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.104073068 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.07894643 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079547596 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10348707 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078454776 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076267315 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.11071444 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077198519 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07797926 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107523156 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080409851 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.10235135 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081372871 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07969694 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105772691 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083213136 seconds)
  done (took 3.630220928 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.103459173 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.142755165 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115722293 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.187428689 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162957975 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.102502591 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136667905 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.142633103 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110790194 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122341335 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098119797 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151737096 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111708367 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131638324 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.123600884 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.110278173 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138798682 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094689463 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.134798091 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113700329 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140405096 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134841496 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113732267 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135226263 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093048945 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126765969 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098810762 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.144537711 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.128881266 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.10405312 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129504455 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.098589052 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.127259705 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105725954 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129568537 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126067943 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.114651227 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.138376621 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.104291975 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.126152016 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.10198855 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.126101684 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144749703 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13471554 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.123710639 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.101292429 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12843737 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.13393736 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.095345576 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142188333 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104308986 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.123935957 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097942278 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.123748266 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093558949 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138326046 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096732516 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.133399866 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.136961915 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100993464 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137676883 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.099166622 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141459501 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.094330644 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132059723 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.093037393 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.124907205 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122551688 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.117950193 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126169298 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165117979 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096025484 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125264528 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.104545209 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.133741686 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.102412821 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.125524617 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111210039 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134337336 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127169563 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.104953394 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126684055 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098549818 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.144405843 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096238934 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127184412 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095811323 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132209707 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.096905099 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125805843 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138840055 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.094040411 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12690371 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11348829 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.124256197 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095307928 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.131788727 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129479969 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094664733 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13786402 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100580681 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12584695 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105419707 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.125332277 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097049594 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134826977 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12949224 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094954759 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129591365 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101727655 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125906508 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09621602 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.128068292 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.096805479 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135085138 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131360035 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.09998589 seconds)
  done (took 15.166400949 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235368422 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.222294187 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.19035712 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301700345 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137030447 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.120363408 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.217373251 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.161314195 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125293436 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.163226415 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174690743 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187096768 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.144493238 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18439181 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.173190302 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.125244982 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143995253 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140325683 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.251809446 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.267800071 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.154224631 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134402294 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163587106 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.133245122 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.139068652 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135101222 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112000318 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.139487267 seconds)
  done (took 5.903807987 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111172947 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157969656 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.100443386 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147844597 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.152004016 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094795306 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130965155 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.126639577 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108800723 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.14005759 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09496354 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.132670617 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.132026631 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105449596 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124864347 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103846589 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.135792251 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096199234 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12932467 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.099043937 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.136567175 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.135010756 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099000296 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12500872 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104747214 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.125216115 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087693077 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145487051 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124596768 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117766342 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123526723 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10275114 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13886323 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.125427747 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09517713 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.126877966 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.097781848 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.126177796 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.097387303 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123575716 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094405893 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.10842231 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095118186 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.14013663 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100570678 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.111987119 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.102005848 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.131749845 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095652141 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123567495 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097635156 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.128262798 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.128443295 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104211566 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127810036 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.096772223 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.129108823 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.088198444 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.131394727 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.098720421 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115074192 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094584349 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129819796 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.091514627 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.133942447 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.100105425 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124873845 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.096876865 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.130663738 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101033052 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.12773923 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101478634 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.124042796 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.097738619 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127871875 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.131066934 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.098918972 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123506906 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.09568378 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.126234904 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076697268 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124952181 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075923717 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.097799024 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.123492285 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.094104694 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.128189778 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131288875 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110776905 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.127835955 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.104637434 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.127061967 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123477016 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099783746 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084342744 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.128384739 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.142121672 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114340581 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.12571471 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.093812471 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.140144364 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127858301 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09563297 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077875898 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.134100537 seconds)
  done (took 13.233552453 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13349288 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.157900948 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127549378 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.114894195 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.159405413 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159650641 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103393235 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132793396 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097343601 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144391148 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.095359528 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.135230187 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095713714 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140243669 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158590521 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105785736 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127659868 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110978685 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130757733 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.173403515 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113515086 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.145069391 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143303198 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096393748 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.131812426 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.113304864 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163783347 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.140463739 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109291009 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.146038249 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109841048 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163265456 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.146324932 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100851867 seconds)
  done (took 5.565662326 seconds)
done (took 50.717743641 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.211716362 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.42759372 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.203262386 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.110358733 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.267929007 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.209933651 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.213481007 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.198104194 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.243221005 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.199137531 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.461853472 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.765935946 seconds)
done (took 58.640085589 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.242224806 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.358496873 seconds)
    (2/2) benchmarking "String"...
    done (took 1.481784527 seconds)
  done (took 3.962637809 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.749270717 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.145799925 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.457711251 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.19675556 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.198897937 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.485208738 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.914455075 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.599003049 seconds)
  done (took 28.11968569 seconds)
done (took 42.198581709 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.209187312 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.21839773 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.240704188 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178725862 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.311291714 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.216976873 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.54425728 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.211038687 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.2141433 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.185255331 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.231160336 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.204559472 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.198701171 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.525418916 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.202033557 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.199330311 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.282111554 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.691530799 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.605257082 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.199219993 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.22522476 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.226077055 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.216457439 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.216130604 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.246810935 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.20004474 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.2151029 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.21437144 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.773856289 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.201220442 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.214667317 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.711102619 seconds)
  done (took 190.653475927 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.19975591 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.2254491 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.349882113 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.237542595 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.691059856 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.399696579 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.349149216 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.775320241 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.220790555 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.21032193 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.498357152 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.202794 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.562578314 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.197862256 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.229636022 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.266561163 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.390572398 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.559408059 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.238604946 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.357124966 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.218442469 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.427300257 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.337011097 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.451932302 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.234577196 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.250987648 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.21535114 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.20684829 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.395214431 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.329294643 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.207089913 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.256889105 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.834354673 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.054659813 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.216418213 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.212745416 seconds)
  done (took 150.13720647 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.201597672 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.201421408 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202776048 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.233650513 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.202643714 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.784378662 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.794270079 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.713880897 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.54595706 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.625826681 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.516238322 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.207044399 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298300813 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.217439706 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.204817021 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.217764409 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.246678458 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202679562 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204371434 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793217504 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.22095794 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.282385518 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.381334615 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.220109035 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.236758546 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.59446719 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203060987 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237356199 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.535812317 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.252731677 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204812965 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.605170267 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.412072086 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.205902633 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317423825 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206346305 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237432253 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.204187002 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.484506665 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204330572 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.203081011 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.203780254 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.207118517 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.204849994 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.901648922 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.209072742 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.791162383 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.208507172 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.187528014 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.208270069 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205222728 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.487546072 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.916666108 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.22470877 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.2042618 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.206584257 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.205449389 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206238812 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.238956399 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.430637358 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.302902559 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.224684492 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208539591 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237757981 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.205921762 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.274438074 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207573872 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.475698059 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.281472682 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.315660758 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796554845 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210048655 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30491373 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.327691757 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.206743268 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.20545912 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205267331 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.205988896 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.317457606 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.207145284 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.615011992 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.3840971 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.224265363 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.633238907 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.306648369 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.206625296 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.642152381 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.210582965 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.207226028 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.968022232 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304427447 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.207966153 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.206945908 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206968853 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.617738676 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.206991803 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797785188 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.480524108 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.210850137 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.456442282 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.20813195 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.632116869 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.762748415 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.901982236 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.208801813 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316917026 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.380477097 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.221053958 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.202772021 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.604780913 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.207092786 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.261645202 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.206325679 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.60121381 seconds)
  done (took 366.178553072 seconds)
done (took 708.093740964 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.826056402 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.819845053 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.928764039 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.808477966 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.775740583 seconds)
  done (took 10.287524158 seconds)
done (took 11.417009682 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.391227248 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.388869429 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263459017 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.390620172 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23603706 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.409464048 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.369226565 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.224160386 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.308446181 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.283068941 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.302994146 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255769891 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238048577 seconds)
  done (took 18.189502844 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517530126 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.511608645 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26653451 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.52285628 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244100791 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.518055175 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.411829332 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.417161546 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.417925226 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236978203 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216935329 seconds)
  done (took 16.412418115 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.540109807 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.510469644 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271507283 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.539258725 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24565983 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.511560733 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.408927279 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.421217644 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429192927 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236304469 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21731049 seconds)
  done (took 16.459558007 seconds)
done (took 52.192519271 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.212732215 seconds)
  done (took 2.34143402 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.247375144 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.411944565 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.233553379 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.218484962 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.214392766 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.216284931 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.21868039 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.214925021 seconds)
  done (took 11.104672416 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.21114873 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.213957233 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.210334477 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.211131872 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.213121397 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.213460216 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.21398036 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210514369 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.210696373 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.213441937 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.209875253 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.213650594 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.210408486 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.210052936 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.213189327 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.213246276 seconds)
  done (took 20.521355132 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.213144387 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.211368777 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.211404845 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.212025187 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.21078641 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.212812199 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.212591034 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.211898344 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.210951 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.21235889 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.213080678 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.21159627 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.212596503 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.211236865 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.211861475 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.21333426 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.211960188 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.212878902 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.216248263 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.212967264 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.212713174 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.211567585 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.21220521 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.212502958 seconds)
  done (took 30.228205546 seconds)
done (took 65.325647378 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.832131119 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.821341062 seconds)
  done (took 6.784251439 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.214219481 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.215059965 seconds)
  done (took 3.563069407 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.215237622 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.213819948 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.215297376 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.214713517 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.215226318 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.214266107 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.214060374 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.214772894 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.214848887 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.214908597 seconds)
  done (took 13.279680045 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.214735926 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.214537354 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.213025424 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.216620261 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.215688335 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.213490683 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.215054733 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.215229794 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.215198329 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.213535776 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.216065159 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.213156251 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.215659959 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.213889499 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.215596418 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.213450923 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.213622663 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.214049794 seconds)
  done (took 22.995148197 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.217096835 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.216401944 seconds)
  done (took 3.565722526 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.215468193 seconds)
    (2/7) benchmarking "second"...
    done (took 1.213875604 seconds)
    (3/7) benchmarking "month"...
    done (took 1.214745815 seconds)
    (4/7) benchmarking "year"...
    done (took 1.214287026 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.213855642 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.213837115 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.214622228 seconds)
  done (took 9.633334458 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.219389832 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.393700551 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.493514181 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.80078275 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.217528489 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.221066167 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.073086671 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.221429827 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.223755027 seconds)
  done (took 13.997891766 seconds)
done (took 74.951351687 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.243062007 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.228995786 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.440942248 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.217398618 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.242385158 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.555502876 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.248820952 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.339723898 seconds)
done (took 37.651624382 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.2190879 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.203846736 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.962881398 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.219745697 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.28014752 seconds)
  done (took 18.800992533 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.283987551 seconds)
    (2/2) benchmarking "read"...
    done (took 1.549566171 seconds)
  done (took 4.968264091 seconds)
done (took 31.124051091 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219159289 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.217490043 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.217602154 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.219028053 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.215900396 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.216434555 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.218695611 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21948264 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.21894269 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.21782525 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219502389 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.215930488 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216764831 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216026589 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218808889 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.217223569 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216592297 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216756314 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.217434558 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.219691775 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219713202 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.217260643 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.216121864 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.219245015 seconds)
  done (took 30.362726746 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.219536532 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.217744787 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.219807673 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.22132807 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.217372784 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.221090658 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.221025256 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.216971723 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.219897885 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.21946012 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217605436 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.217690923 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.219947735 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.216970268 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219994104 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.216792606 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.219505975 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21880004 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220538857 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.219250143 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.219950939 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217368875 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.21718365 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221931163 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.218735505 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2189975 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.22092275 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.21934148 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222272786 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.218913744 seconds)
  done (took 37.713540532 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.226788547 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.228071104 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.221606432 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.221085519 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.222407449 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.221645419 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.222888517 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.220634385 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.221863429 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.220695617 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.221975619 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.219986812 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.221602373 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.222079717 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.221536031 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.221963608 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.221252034 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.220462032 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.221815079 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.221648589 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.221391907 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.221267739 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.221329482 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.222926781 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.22175295 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.221471984 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.220629863 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.221650173 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.221215602 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.220614124 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.221115421 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.220843125 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.220343289 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.221250407 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.220707172 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.222202583 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.225399629 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.228359458 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.22118288 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.222367337 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.221587856 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.222283557 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.22152363 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.221388032 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.221601353 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.220865365 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.221517576 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.223569722 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.22058663 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.221872588 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.221635753 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.22176148 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.223197387 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.222374516 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.221155775 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.222729008 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.222924135 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.223258979 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.222548566 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.221945545 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.222214367 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.223485969 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.223061074 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.223100887 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.223049629 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.223713018 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.222319471 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.223877365 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.222540866 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.223279824 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.224261149 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.224776653 seconds)
  done (took 89.13857157 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.22375786 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.221397472 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.220919982 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22125747 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221008577 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.223970865 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.221021346 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224027966 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220520613 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.222534125 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222972432 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.22138253 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222535692 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.223588698 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223310492 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.221299011 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.223738852 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221318878 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.222935642 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.223742216 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223969219 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.221473646 seconds)
  done (took 28.032890206 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225217923 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226081945 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.222327151 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224747913 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221277267 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223774931 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.224351845 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226382266 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22484068 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221955555 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222627341 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22493529 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226237737 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222576326 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221732567 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224456276 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224869916 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.226720286 seconds)
  done (took 23.175459737 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.223178402 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.22288394 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.224636827 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221782452 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.222782544 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225140831 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223720086 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.225102225 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.224965201 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.223381146 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.22520447 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225180211 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.225654954 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222978511 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225172755 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222521538 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.226511245 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222891289 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225190633 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223253708 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223042622 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226752988 seconds)
  done (took 28.073371993 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226213613 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.22700392 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.224813519 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.223195659 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.224030268 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.225073688 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.226518928 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.223129278 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.227178229 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.226806666 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224370698 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.226211463 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.224789788 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.225618663 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.223679053 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22417271 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.226192194 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.225209789 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227193623 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.223303611 seconds)
  done (took 25.646730441 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228424442 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229792546 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230157043 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229714981 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229401549 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.229820398 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229510792 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.228727014 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229148051 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.229480902 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.229626797 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.229011262 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230158359 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.229691398 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228453301 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229890907 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.229360641 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.228701654 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.229398096 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23032446 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.229299679 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.229573844 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22914945 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.229931674 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.229760739 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230540295 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230424812 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.230258173 seconds)
  done (took 35.571042587 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230574426 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.229493201 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.226922509 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.22666613 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.227207286 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.227107429 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.228804247 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.226687514 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.230816131 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227162953 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.229867627 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.230695543 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229548964 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.231149214 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230830157 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.230577363 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231670741 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.228950089 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226643311 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228973914 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.231074902 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23082056 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.23146454 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.227213223 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227627181 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.231033156 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228420836 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22862802 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230981334 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228151686 seconds)
  done (took 38.020704005 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.24885422 seconds)
    (2/2) benchmarking "in"...
    done (took 1.250786284 seconds)
  done (took 3.645666313 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.230018253 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230091323 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.231060583 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.228557036 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229325739 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.232850479 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.231944773 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229450343 seconds)
  done (took 10.98979936 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.233159132 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.232415736 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.232248825 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.232719056 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.232703355 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.23239725 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240798619 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.252649407 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.23312527 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.233378149 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.239690988 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.240017628 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.23453693 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23389186 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.233315472 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234281744 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.232930576 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.234478632 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.234444979 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.234236586 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233186736 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235728644 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.235538139 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.23103163 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.236536853 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.244241157 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.256005052 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.232769947 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233487776 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.237452291 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.232849456 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.23095956 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.232715952 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.235449531 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.23485207 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.235032052 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242718267 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255230631 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.240192127 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253022993 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23563593 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.233039851 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.236401997 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.235580832 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235528755 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.2348311 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.235269113 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.231924093 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.233952798 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.237591894 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.239478902 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234627317 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.232275896 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237542263 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.235963175 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242545951 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.254973607 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.23854242 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.246160287 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.245378689 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.267157668 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.259718862 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237855049 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.236356135 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246578302 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.260419295 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242451894 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.253017701 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.234090941 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.237265838 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.242582719 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26874769 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.261374367 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.237664942 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238313985 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.238293416 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236655651 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238083357 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245070233 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.258648029 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.237497678 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239011469 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.247743951 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260004292 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.237331696 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.238300273 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.238463871 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.237717435 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.238543689 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248417897 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.257587373 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.237915773 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.237809966 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.238161952 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.239694832 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.238441162 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.237707995 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238805825 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.236566248 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.239039912 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238404988 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242636933 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.24709921 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239308131 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240179396 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.245997416 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.259113153 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239450933 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.244487985 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.238734321 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239590349 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.241370893 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.245075361 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.236155855 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243138809 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.247640146 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.239374115 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.24148658 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.239906615 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.240645392 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249657017 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.265846322 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.240961833 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.241265064 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.244827947 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.251860196 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24033733 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.242275458 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.240165083 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.238524185 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.238890785 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.240472427 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.241136847 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.241656674 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241371828 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241486738 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.237703344 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.24211312 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.241488456 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.242234872 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.241939411 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.241933032 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.242968079 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.244082045 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.241921037 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.24338965 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.24765914 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.260518929 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.243411574 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.241589145 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.239394386 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241692399 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.242413646 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.242828086 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.242554785 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242301756 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.242426095 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.241959312 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243269215 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.243704565 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242056805 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.243428836 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2470324 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.243579572 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.245444191 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.241823125 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.240422626 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.242894961 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.24292277 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.242887203 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.243872872 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.241786561 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.245731124 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.251600622 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.243793088 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.244493505 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.245983276 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243636051 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24535645 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244137307 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.246708402 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.251861465 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.244265838 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.250040564 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.263781973 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243531755 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.244339413 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.244823846 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.243825795 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244447412 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247557653 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.251970902 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256960088 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269559763 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.244956375 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.24966817 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.245833135 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.249262568 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.248448185 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.24532856 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.245911554 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245183364 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244731181 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244996928 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.247076813 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.245142193 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.245331355 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.245021862 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.244772432 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.245496829 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245892185 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.24625636 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245159928 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.242570819 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246794302 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245266974 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.246003093 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.242513098 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.244614754 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.245661064 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.245326528 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.246247465 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.252265818 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.243592795 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246987886 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247808259 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.246487886 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.245621252 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.247238157 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248053651 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.246737984 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253405601 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.266374103 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.247488096 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253903985 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.266092496 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.246719164 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.250254952 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.246628458 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.244953993 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.251617766 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.255415943 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.24852193 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.250181392 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.247915415 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249502631 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249158348 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.253745372 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.264725521 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.247740915 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.249127665 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.248250606 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.245842157 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.249286068 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.248719224 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.249561334 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249431665 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249238175 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.248346598 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248031728 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.249019485 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.249097092 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.25044825 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252033397 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.25814138 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.25393181 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.248549109 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.250735276 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.250324414 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.253688868 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.25023274 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.250572747 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.249641177 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26400977 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.276025203 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256949723 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.270266258 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.250036609 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256191773 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.269881668 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.255048986 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25072434 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250514909 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.250506102 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.251369649 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.248182507 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251093935 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.250685491 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251426547 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.251763118 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.255062853 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.250536832 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.250876043 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.250486614 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.252198231 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.252574017 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.250255786 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.25142247 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.253780151 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25372802 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.250718839 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.252076238 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257636116 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271669633 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.252618576 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.251565829 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.252227315 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.251636402 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.253082319 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.252542026 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.256887832 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.261084014 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.256872059 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.261845277 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.253747719 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262626247 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.252889394 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.256184019 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.261508487 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.251198813 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.25263624 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.25334211 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.254861823 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260065675 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.273055913 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.254347479 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.258194391 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253954147 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.254126544 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.253596847 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.253347326 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254656136 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.254665094 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262695424 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.276164232 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.258620283 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254943741 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.252167567 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.254715095 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.255064582 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.252969608 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257022176 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.25416263 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.255723673 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.253767458 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.253549698 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.253967251 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.255267578 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.255246048 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.253337099 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.255103026 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261173427 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.276170728 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260419488 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.255152032 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.262438255 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275271049 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262243444 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.275105949 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.25547614 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.256057658 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.256373567 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.257127876 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.255308353 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.257342422 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.255485886 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.256216193 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.260146662 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.255243541 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.258343814 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.25638682 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.256183276 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.256446908 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266114607 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280062301 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.257321246 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26097466 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.253914278 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.25789139 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.261246957 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.257234583 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.255255734 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.259231408 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267589215 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265312213 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.258015091 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.257810774 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257744678 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258834053 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.258211517 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.257931008 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.258029483 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.258051586 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.257928634 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.258582649 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259581553 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.257751181 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.258221722 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258867758 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.259028281 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.26901076 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.279524054 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.258925969 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259256118 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.259856082 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.258625715 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.258906111 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.259932238 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259560491 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25824799 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.260069704 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266398266 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.265144324 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.26193493 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.259657554 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.259706419 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.259712099 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.259441609 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260906022 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.259845333 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259699767 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.259350378 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.261169739 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.260277916 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.258104378 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.260367348 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.259406541 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260424146 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262411261 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.266706949 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259699985 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.257488297 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.260630512 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260575422 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.258668605 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.26067852 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.266864039 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.283296119 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.270089793 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.269145585 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.264546935 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.260495623 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264028337 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.268953553 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.259619949 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.262031508 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.260814145 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.261042401 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.261211405 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.263435721 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262099791 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.267605804 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.281631371 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.25999081 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26886745 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.283096343 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261847779 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.2636444 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.266373448 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.262177591 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.258402137 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.261694063 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.261955987 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268791028 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.282527781 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263063474 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263704316 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.260725503 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.264035664 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266553523 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26328304 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.263489923 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.259935479 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.263776665 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263434183 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262998556 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.260779168 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.262285638 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.262626823 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.267379397 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.269943077 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.260480564 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26459255 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.263498068 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.26331026 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264744359 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263985114 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.26041208 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.260098471 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.263286513 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264501125 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.264871664 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.266863239 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.261322605 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.265307265 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.265205437 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264265416 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266903401 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.273218793 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.27140193 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.261619707 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.2639131 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.264736674 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.26598182 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265554222 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.264620229 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265440272 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.266946486 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.266091094 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265822486 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.264949705 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.268288242 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281033832 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.286739318 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265895001 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.266032216 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267398779 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.266249164 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.264079784 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.266456498 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.266949763 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.269177842 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.274191303 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.266432591 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27155902 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285295638 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.26657473 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.270575184 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.269474211 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.273210657 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.268695631 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266442823 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.267301007 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.270784966 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.281768214 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2658103 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27678778 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.297067842 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.286649891 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.267287652 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.267774634 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266549686 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.268785418 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.268961379 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.267952181 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.267064466 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268267558 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.268728675 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.268086688 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272683019 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.269483205 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.270192854 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.269335771 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.268044958 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.267783005 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.265743131 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.268854014 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.267449718 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.269033778 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.268463794 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.268434173 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.267832431 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280494616 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.293983159 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.269262486 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.270322811 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.265975592 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.270997898 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.271479965 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279415877 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.276637314 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.269770784 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.271931732 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.269547762 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270169106 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.267693723 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.268742198 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.269671523 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269445988 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.268013178 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.282777268 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.296776407 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.274654044 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.268793204 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270564913 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.269806774 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270596304 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270408272 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270329171 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.270964169 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.273253476 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27312233 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.270096383 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.270533801 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.272895633 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.278623543 seconds)
  done (took 748.845255099 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268254917 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270176224 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26917622 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.268595379 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268549352 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268027954 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2684566 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268781057 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.268093308 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.268243729 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269280617 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268498676 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269670564 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269383431 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270210568 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26886993 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268980605 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.268884095 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.268794499 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269627908 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.268491054 seconds)
  done (took 27.830014956 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.272071893 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.26912574 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.269833145 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.272720484 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269851781 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.272130677 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.269740919 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272219278 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.272769745 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270147882 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.272965353 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273604388 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.270508483 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.270215242 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270626263 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272754893 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.272234807 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271332675 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.272697879 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.270500665 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272873229 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.272083641 seconds)
  done (took 29.156523359 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.273149032 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.274467097 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.273679835 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.271644452 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.275049823 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.272557852 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.273422502 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.272885245 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.273406689 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.274360926 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.273507144 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.27452548 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.282110195 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.280616571 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.275652476 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.274142343 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.418904122 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.275431892 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.274706825 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.274902052 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.272071295 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.27894563 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.292986765 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.271762061 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.273078632 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.275944984 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.27638759 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.275784382 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.27547861 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.276701616 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.279391332 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.274514747 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.27498195 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.277115273 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.274183915 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.277323987 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.281172268 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.276100524 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.273818869 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.275219811 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.284775174 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.295889754 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.277034691 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.282643613 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.2974437 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.276065024 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.280518781 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.283990167 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.273275884 seconds)
  done (took 63.910953461 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.276592261 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.277510242 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.273939631 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.276810801 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.276545844 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.275652164 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.276915814 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.276455336 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.27413813 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.274837919 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.277570937 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.273733268 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.275542651 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.277573636 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.277692367 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.27430655 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.274419123 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.274607385 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.274444225 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.275195179 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.274331009 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.278304436 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.277958092 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.276250435 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.279357337 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.276675133 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.276655412 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.279602686 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.277580622 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.277012209 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.277868525 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.280271339 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.280177524 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.278343963 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.277614658 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.280185027 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.280255181 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.277105438 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279934855 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.27802792 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.28074128 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.279516919 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.280216421 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.282006781 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.277175386 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.278217868 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277454897 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.27809863 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.277990893 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.280202164 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.280715984 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.278077919 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.281737305 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.27796595 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.280070806 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.280738251 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.278151922 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.276974789 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.279591638 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.277474339 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.277327099 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.280557344 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.277690529 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.279416867 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.280111482 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.278350733 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.278140843 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.280958872 seconds)
  done (took 88.083187528 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280237303 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.280719945 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2796102 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280339201 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280158157 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.281014522 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.280155459 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.280341251 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.28165364 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281146846 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280908904 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.280574233 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.280192753 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280652594 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280732446 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.280419701 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.280888132 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281269328 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281200916 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281349774 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.281450904 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.281247804 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.281732424 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.282688334 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281634355 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.282197331 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282466831 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281408745 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282060929 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.282161969 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.28371241 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.282069957 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.282585618 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.281966717 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.282846114 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.282503056 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.282832723 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283464793 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.283025815 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28319784 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.282969656 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282290846 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.282685189 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.281955924 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.282987116 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.28443438 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.283969199 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.284444115 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.283343622 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283039362 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.284450977 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.283620356 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284284989 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.283072486 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.283957976 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.28529321 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284795317 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283248629 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284117525 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.283432515 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283944197 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.28431348 seconds)
  done (took 80.694370463 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284360181 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283307796 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.281724651 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.281014091 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.284347282 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.282007536 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.285269565 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.284501952 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.284979679 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.2844337 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284166243 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282790206 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282528857 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285263752 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.283214446 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283025482 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283269535 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.283481293 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286392411 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.283149487 seconds)
  done (took 26.868703481 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.282863534 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.286808873 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.282472589 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.283781957 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.28589645 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.283259711 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.28648266 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286346962 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284220202 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286631078 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28688536 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286711203 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283769875 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284384461 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285437404 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.283778105 seconds)
  done (took 21.755829153 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.283973593 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.287068724 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.286040538 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.286399076 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.284244116 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.284527484 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.287563619 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.285861567 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.285668945 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.287974656 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.28766436 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.288620971 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.287919811 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.286732202 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.285997429 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.287066198 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.285077244 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.285224041 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.288326424 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.288850347 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.28542847 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.286075372 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.288653797 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.288687911 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.287189628 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.28722018 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.286236432 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.286125614 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.285953778 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.289939873 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.286368481 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.287043479 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.286054883 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.286453617 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.2892142 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.286315844 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.290076395 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.289411159 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.288480954 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.288761643 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.289775839 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.287298618 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.290058286 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.290116401 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.286946203 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.289863683 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.286078455 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.287164269 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.286549455 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.287647123 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.29060482 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.290312735 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.290462474 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.292235611 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.289820657 seconds)
  done (took 72.014363205 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290471607 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.289909746 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.288077455 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.290540186 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.290675389 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.288217846 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.291676797 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289411896 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288405675 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.29159892 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.289173489 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292253765 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288078611 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291265737 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.289581026 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291292043 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.289168086 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288833295 seconds)
  done (took 24.419664603 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.289574031 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.288955042 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.291639995 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.288659444 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.288592098 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292548755 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287624451 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.29192342 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292444117 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.288941898 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290031826 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.292918622 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292963682 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.292716702 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.290336887 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290875451 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.292932508 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292873958 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.290102544 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.290052541 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.293513811 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292148269 seconds)
  done (took 29.604024674 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.291025063 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.291480101 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.292374127 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.309337693 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.311093354 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.31491242 seconds)
  done (took 9.013401856 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300053753 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293469293 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291055824 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29386438 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291805221 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289080645 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290702266 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291003133 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292777533 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291696952 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290464593 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292519847 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292491172 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291422613 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293589715 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294215278 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293029814 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291136289 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292843917 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29433173 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291637667 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294832919 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291256001 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291832746 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292137928 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291385137 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294694366 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292404496 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290555905 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294413217 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294592301 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29191195 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294913237 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293067718 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295598377 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294893553 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291933662 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29614833 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295247239 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292030889 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295368932 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295531858 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295954701 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292814579 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295758167 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293373113 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293981616 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292938608 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292854666 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295388828 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295686001 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294324193 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296010795 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295852991 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297287914 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297430846 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29315275 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293501337 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29548985 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294059937 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293854226 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297238399 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294612443 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294665115 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296496787 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294392203 seconds)
  done (took 86.6132657 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294414106 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294837547 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295230757 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296466684 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29418983 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294000052 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295758622 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294360584 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295914754 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295371542 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298017884 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296004758 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295585719 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296486481 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295401939 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295594874 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295810677 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295723654 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295439471 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298776276 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295478473 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296502255 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296297849 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296901151 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296850082 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298944945 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296323962 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296409452 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296780549 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296296862 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296796587 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297866846 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296989918 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296811804 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296633582 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296598387 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297307628 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29667621 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297075146 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300361222 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297299196 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300018146 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297700903 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296980158 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297775431 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297511574 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297386014 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298050431 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298303548 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297075209 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297949771 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298217262 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297793315 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298030713 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298132141 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29770208 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297972797 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29820645 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297932445 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300275098 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29838091 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298908709 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300841181 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299171073 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298765066 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299081792 seconds)
  done (took 86.818880991 seconds)
done (took 1747.13472116 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.459293235 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.416612408 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.299356327 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.304107329 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.299268863 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.318640916 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.309129849 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.300040498 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.302531391 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.299187947 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.301444105 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.489534513 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.298057837 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.302429356 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.300681585 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.396918893 seconds)
  done (took 42.609238754 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.329526364 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.305905859 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.421609268 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.325998625 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.328611251 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.491958073 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.361341179 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.304758636 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.483156983 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.351889858 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.967171431 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.331858985 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.305204787 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.454056908 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.325317056 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.492156135 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.567873384 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.977608199 seconds)
  done (took 30.339261583 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.769263939 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.307741708 seconds)
  done (took 9.28845601 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.325101296 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.305598339 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.305859432 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.304992587 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.295346813 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.313176513 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.305459835 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.301669386 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.064098879 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.436728837 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.307592719 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.316681945 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.326509203 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.306632454 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.303819747 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.343582278 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.474672293 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.304327871 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.302100217 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.311299116 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.305582091 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.389967984 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.346983611 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.304570352 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.433965097 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.058637287 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.307078441 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.313831943 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.473634725 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.30406247 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.304657076 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.307199449 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.307946968 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.23218684 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.852568053 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.298949265 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.331463439 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.316046873 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.303106934 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.458790648 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.307301476 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.313121607 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.298393947 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.822977723 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.436392454 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.423321109 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.595947074 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.327697287 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.308436801 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.367785273 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.30717072 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.307898931 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.349593942 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.096079304 seconds)
  done (took 110.692858293 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.299259612 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.689805382 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466899236 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.317365319 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.923952719 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.905276526 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.315031644 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.590518087 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.354350785 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.302176057 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.590777933 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.802240374 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.319415814 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.353017601 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.936631448 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.370812941 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.297106616 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.029390604 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.314350678 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.300419421 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800181707 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304041861 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.297763141 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.556193706 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.335769946 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.752191451 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.711876819 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.745064772 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.317137382 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.299956592 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.763159784 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.318004201 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.313251139 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.302155251 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.561283392 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.656293163 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.650705244 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.319816026 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.337657154 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.302056583 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.313907421 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.749742286 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.656961966 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.318199862 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.301633391 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.753944705 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.318253176 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.30329885 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.304333041 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.503250595 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.986090698 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.303001085 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.691335252 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.302101684 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.599267756 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.364780953 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.357322768 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.782810726 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318370693 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.378031532 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.349040059 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303078551 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.305644799 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302488907 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.30254368 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.648326683 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.635724438 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.308849156 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.645115081 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.775227783 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.319642086 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.843100637 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.187789748 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.330983365 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.367876975 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.301906706 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.840141885 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.792723163 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.341037438 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.302992731 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.63527117 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.320424242 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.584106517 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.318140044 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304332665 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830362062 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.308460244 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.367769175 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.314497957 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.304564334 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.96724412 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304993529 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.584500493 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.35331864 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.302728349 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.302892929 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.348757806 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301511649 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.304441888 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.306723299 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.826446946 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.320521848 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.443808942 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323494877 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312197778 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.304255014 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.304286803 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.303199414 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.520145377 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.810063056 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.32552718 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.306161398 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.304293425 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.311272819 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.561410374 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.303957531 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.609470379 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.323715886 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303261824 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.321155828 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.932479454 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.324998091 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303834398 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.327294431 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.191958383 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.521524101 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.324092641 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.323204112 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.305843355 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.321745192 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.543180831 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323661058 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.341414849 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.30742678 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.009105809 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.334735384 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.311358282 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.626083935 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.311222204 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.151792786 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.330063097 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307602454 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.607365589 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.570857821 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.537579171 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.309019462 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.321356608 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.999554438 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.329954678 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.442508963 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.325205783 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.345370129 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.502286575 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.489446137 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.305394688 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.904759352 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.306284579 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52026421 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.307480736 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604376246 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.798075602 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.323776362 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.313525517 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.008968345 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.035961727 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.928300076 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.307155693 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.589767562 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.256114236 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.7916403 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.308339701 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.307505279 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.781013883 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.310235741 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.315228079 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.309362159 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.307560959 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.437460349 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.48063751 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.937844851 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.313362927 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.756839445 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.3726876 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308217252 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.311738997 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.311119992 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.660606142 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.393813208 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.312318633 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.344496871 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.310644757 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.313261064 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.781343866 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.228161274 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.310776934 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.459983041 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.940899578 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.326931514 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.309720741 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.914306602 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.522402101 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.820684478 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.37549101 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.617064677 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.335949627 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.347752931 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.878017784 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.357873661 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.779123139 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327687199 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.311549132 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.898652042 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.328982396 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.366838192 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.311396219 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.309690478 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.838628489 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.329425266 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.310526031 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.556897975 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.330010967 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.561532994 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.312168922 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.360126352 seconds)
  done (took 1104.482555303 seconds)
done (took 1298.623563619 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.311760385 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.313906399 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.29531741 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.317462932 seconds)
  done (took 26.465480515 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.333639877 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.318651144 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.32065925 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.317836678 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.322900775 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.31787763 seconds)
  done (took 9.158865729 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.372474023 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.317164213 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.315953566 seconds)
  done (took 19.23391243 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.526240324 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.601055499 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.645657215 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.501079498 seconds)
  done (took 10.501702822 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.320463221 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.319820191 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.321069332 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.324155355 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.331681137 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.333637422 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.322802883 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.323991948 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.332585276 seconds)
  done (took 13.156430404 seconds)
done (took 79.743615597 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.233083195 seconds)
    (2/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.294465877 seconds)
    (3/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.579915115 seconds)
    (4/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.357242803 seconds)
    (5/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.442977231 seconds)
    (6/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.104526329 seconds)
    (7/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.703402245 seconds)
    (8/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.943114496 seconds)
    (9/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.340536907 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.955282858 seconds)
    (11/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.66235882 seconds)
    (12/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.065175352 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.561025017 seconds)
    (14/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.447960918 seconds)
    (15/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.412030501 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.354775528 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.340607014 seconds)
    (18/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.295668889 seconds)
    (19/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.144836375 seconds)
    (20/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.596926757 seconds)
    (21/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.400072784 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.722422897 seconds)
    (23/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.311544134 seconds)
    (24/286) benchmarking ("sort", Float32, true)...
    done (took 6.317065679 seconds)
    (25/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.296111582 seconds)
    (26/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.359312685 seconds)
    (27/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.401313168 seconds)
    (28/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.341250729 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.232079916 seconds)
    (30/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.295476687 seconds)
    (31/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.828409127 seconds)
    (32/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.497448345 seconds)
    (33/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.307935291 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 6.315170833 seconds)
    (35/286) benchmarking ("sort", BigInt, false)...
    done (took 6.315945199 seconds)
    (36/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.431025013 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.426486521 seconds)
    (38/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.692366844 seconds)
    (39/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.297100275 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.253113786 seconds)
    (41/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.315426643 seconds)
    (42/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.785467161 seconds)
    (43/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.275637864 seconds)
    (44/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.334988345 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.059198546 seconds)
    (46/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.383890707 seconds)
    (47/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.327699503 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.429953516 seconds)
    (49/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.297966126 seconds)
    (50/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.316387066 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.600124374 seconds)
    (52/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.32765054 seconds)
    (53/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.756984785 seconds)
    (54/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.759278339 seconds)
    (55/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.29700293 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.376777056 seconds)
    (57/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.353657114 seconds)
    (58/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.304621993 seconds)
    (59/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.32178554 seconds)
    (60/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.297011609 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.194404064 seconds)
    (62/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.326800777 seconds)
    (63/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.297860267 seconds)
    (64/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.419737631 seconds)
    (65/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.465270922 seconds)
    (66/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.089821131 seconds)
    (67/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.522810542 seconds)
    (68/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.345797355 seconds)
    (69/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.298519622 seconds)
    (70/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.500628257 seconds)
    (71/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.337012017 seconds)
    (72/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.154944243 seconds)
    (73/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.368092494 seconds)
    (74/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.324402208 seconds)
    (75/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.300088305 seconds)
    (76/286) benchmarking ("sort", Float64, true)...
    done (took 6.349158673 seconds)
    (77/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.813968751 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 5.520710591 seconds)
    (79/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.695771734 seconds)
    (80/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.318938153 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.938645473 seconds)
    (82/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.300232108 seconds)
    (83/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.361908466 seconds)
    (84/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.693957877 seconds)
    (85/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.307480659 seconds)
    (86/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.345281716 seconds)
    (87/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.431699742 seconds)
    (88/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.145807458 seconds)
    (89/286) benchmarking ("sort", Float64, false)...
    done (took 5.614126036 seconds)
    (90/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.774623664 seconds)
    (91/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.844685596 seconds)
    (92/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.552711068 seconds)
    (93/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.081521835 seconds)
    (94/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.33558746 seconds)
    (95/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.405336857 seconds)
    (96/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.401472814 seconds)
    (97/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.539242442 seconds)
    (98/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.299433014 seconds)
    (99/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.346024177 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.971006488 seconds)
    (101/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.345115076 seconds)
    (102/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.697627455 seconds)
    (103/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.174961697 seconds)
    (104/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.328927701 seconds)
    (105/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.350527125 seconds)
    (106/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.352154594 seconds)
    (107/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.339650031 seconds)
    (108/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.501718475 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.539631272 seconds)
    (110/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.701750004 seconds)
    (111/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.242180736 seconds)
    (112/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.324582056 seconds)
    (113/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.104221995 seconds)
    (114/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.849355492 seconds)
    (115/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.369398702 seconds)
    (116/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.411565205 seconds)
    (117/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.965205485 seconds)
    (118/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.175781417 seconds)
    (119/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.207945779 seconds)
    (120/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.1364675 seconds)
    (121/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.466101333 seconds)
    (122/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.417330272 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 1.835148164 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.362349317 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.596987628 seconds)
    (126/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.403174816 seconds)
    (127/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.816864369 seconds)
    (128/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.334587936 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.109020808 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.58131028 seconds)
    (131/286) benchmarking ("sort", Int8, true)...
    done (took 6.322356131 seconds)
    (132/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.318926917 seconds)
    (133/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.376210902 seconds)
    (134/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.338695717 seconds)
    (135/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.301585246 seconds)
    (136/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.305258639 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.442404118 seconds)
    (138/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.309329095 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.127629873 seconds)
    (140/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.84440553 seconds)
    (141/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.497655642 seconds)
    (142/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.617252095 seconds)
    (143/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.386869574 seconds)
    (144/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.322463138 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.147135251 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.35222259 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.676960102 seconds)
    (148/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.74302813 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.34913596 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.224305431 seconds)
    (151/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.929988883 seconds)
    (152/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.2878615 seconds)
    (153/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.745373316 seconds)
    (154/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.808240511 seconds)
    (155/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.387622684 seconds)
    (156/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.54216036 seconds)
    (157/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.409817523 seconds)
    (158/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.348840364 seconds)
    (159/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.945882507 seconds)
    (160/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.984256879 seconds)
    (161/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.411690954 seconds)
    (162/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.348736787 seconds)
    (163/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.315776819 seconds)
    (164/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.102830128 seconds)
    (165/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.46120003 seconds)
    (166/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.349269693 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.349739647 seconds)
    (168/286) benchmarking ("sort", Int8, false)...
    done (took 4.381263152 seconds)
    (169/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.590602371 seconds)
    (170/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.366897274 seconds)
    (171/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.308687031 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.367572638 seconds)
    (173/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.53408833 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.696447861 seconds)
    (175/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.32193913 seconds)
    (176/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.313063827 seconds)
    (177/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.182439183 seconds)
    (178/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.889321508 seconds)
    (179/286) benchmarking ("sort", BigInt, true)...
    done (took 6.326516011 seconds)
    (180/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.510621448 seconds)
    (181/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.435721552 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 5.428639914 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.400914574 seconds)
    (184/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.815474385 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.737686402 seconds)
    (186/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.423253397 seconds)
    (187/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.304936419 seconds)
    (188/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.593609949 seconds)
    (189/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.345294932 seconds)
    (190/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.69563302 seconds)
    (191/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.827296353 seconds)
    (192/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.321446095 seconds)
    (193/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.329932121 seconds)
    (194/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.839798494 seconds)
    (195/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.372271552 seconds)
    (196/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.389191255 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.974048536 seconds)
    (198/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.094526633 seconds)
    (199/286) benchmarking ("sort", Float32, false)...
    done (took 5.336555837 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.557885695 seconds)
    (201/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.32860764 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.372723447 seconds)
    (203/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.3330279 seconds)
    (204/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.36460799 seconds)
    (205/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.050419646 seconds)
    (206/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.363482307 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.352670134 seconds)
    (208/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.348281133 seconds)
    (209/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.568667602 seconds)
    (210/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.341505883 seconds)
    (211/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.344680849 seconds)
    (212/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.33967108 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.374482459 seconds)
    (214/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.10345635 seconds)
    (215/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.70548021 seconds)
    (216/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.447258785 seconds)
    (217/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.379979128 seconds)
    (218/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.949318568 seconds)
    (219/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.417118913 seconds)
    (220/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.361139782 seconds)
    (221/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.397524693 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.011248132 seconds)
    (223/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.799632637 seconds)
    (224/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.179939559 seconds)
    (225/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.319308776 seconds)
    (226/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.859064665 seconds)
    (227/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.182759379 seconds)
    (228/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.328051244 seconds)
    (229/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.337869076 seconds)
    (230/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.416598309 seconds)
    (231/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.312150179 seconds)
    (232/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.848617947 seconds)
    (233/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.314008805 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.559310322 seconds)
    (235/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.705294365 seconds)
    (236/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.543762452 seconds)
    (237/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.326562916 seconds)
    (238/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.355242027 seconds)
    (239/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.776784246 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.357299206 seconds)
    (241/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.917659364 seconds)
    (242/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.342664288 seconds)
    (243/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.419367102 seconds)
    (244/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.310770167 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.736512915 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.729147696 seconds)
    (247/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.458655856 seconds)
    (248/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.440099324 seconds)
    (249/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.587982437 seconds)
    (250/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.223657742 seconds)
    (251/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.050993838 seconds)
    (252/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.42902568 seconds)
    (253/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.330356629 seconds)
    (254/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.903907698 seconds)
    (255/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.313026714 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.414905867 seconds)
    (257/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.434854948 seconds)
    (258/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.440414737 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.414575224 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.287502679 seconds)
    (261/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.354862148 seconds)
    (262/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.333632078 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.458037379 seconds)
    (264/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.365602955 seconds)
    (265/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.333051627 seconds)
    (266/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.346375834 seconds)
    (267/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.333291313 seconds)
    (268/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.199938347 seconds)
    (269/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.625645346 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.165811666 seconds)
    (271/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.333073965 seconds)
    (272/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.340767635 seconds)
    (273/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.955690192 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.952093449 seconds)
    (275/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.313881489 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.378455728 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.74492389 seconds)
    (278/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.687414487 seconds)
    (279/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.317602359 seconds)
    (280/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.689807633 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.423541828 seconds)
    (282/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.461453051 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.333721348 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.360072022 seconds)
    (285/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.326943633 seconds)
    (286/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.116738959 seconds)
  done (took 938.393823364 seconds)
done (took 939.623273675 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.367735434 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369809876 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.344585497 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.36711969 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.463750514 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.368808132 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.356198904 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.347313294 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.393069974 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.395044312 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.350279812 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.367130075 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.353764762 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.352695263 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.344765957 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367853196 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.408400809 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.354231597 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.369582345 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.355431437 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.368836767 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.351809652 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.396381174 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.3674848 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.350979462 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.349263071 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.355275908 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.372984089 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.465460487 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.356487783 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.351004991 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.366558119 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.40951937 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.34590571 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.342266045 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.37257353 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.365156584 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.355839387 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.35152392 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.384925177 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.826495362 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.370112457 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.355874288 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.348566632 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.349364059 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.353221013 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.355063809 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.354260008 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36808353 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369715664 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.81311763 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.385785531 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.357215919 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.349218444 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.359186548 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.354310912 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.352124183 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3718362 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.374197086 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372675634 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.398772647 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.353577346 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.350574043 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.371555772 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.363981264 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.853140468 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.361754415 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.353541244 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.829308294 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.371702879 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.851548391 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.380966066 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.351077151 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.370429488 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.388395686 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.413579266 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.344805209 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.349627764 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.364443253 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.354484965 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.360095794 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371356865 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.356237607 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.351306879 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372541295 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.373865676 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.362100594 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.359200827 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.360762655 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.379365912 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.364791172 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.369210548 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.354696165 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.346867988 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.36152529 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.355794845 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.361161145 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.361490315 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.357254576 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.360884228 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.828812395 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393440943 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.348314709 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.34941567 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.351576635 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.372080113 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.82994194 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.3759547 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.373703697 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.399350282 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.354006602 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.407597335 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.361835807 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377320375 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.362091177 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.355894796 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.348433983 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.409952593 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.822395155 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.389282005 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.354855071 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.360039128 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378039954 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.354930998 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.350587305 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.419392544 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.355322835 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375704322 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.481124828 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.364875406 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.391947754 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.358719106 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.356975743 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.376382943 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379415748 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.39133695 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.358571224 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378558207 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.377459466 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.351038806 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.372223259 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.364604713 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.356280924 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.360701867 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.348642822 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.376418462 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37463793 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37511211 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.376111964 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.482641718 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.350480732 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.410103581 seconds)
done (took 229.066379806 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.412268054 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.344165111 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.434344162 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.351322842 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.449976717 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.451241998 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.349565524 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.349253101 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.348127505 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.725304006 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.349943918 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.351064018 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.349800362 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.34912078 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.434925658 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.351823433 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.349451245 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.689360917 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.354029658 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.421431638 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.347726571 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.350588418 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.353793324 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.777286542 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.350993208 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.348804793 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.422240606 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.352257524 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.696191119 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.345681914 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.347764993 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.697336723 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.442970987 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.371602524 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.363102366 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.360204529 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.457714153 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.372193247 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.435463236 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.436071338 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.437850351 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.393547961 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.351706129 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.35033112 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.354735425 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.354556712 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.350893634 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.381342368 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.349764293 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.352093023 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.691400638 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.364532597 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.362565254 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.353667627 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.353036924 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.37415475 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.3524114 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.355460792 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.443129394 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.356281916 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.416956229 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.73438578 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.728734874 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.355502306 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.350297355 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.353701935 seconds)
  done (took 149.727734109 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.421986473 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.428372706 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.468522398 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.37382519 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.403836424 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.470448938 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.373739 seconds)
  done (took 11.200005048 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.361437435 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.356708281 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.409406368 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.410054183 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.357009358 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.536086375 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357783437 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.366242321 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.354741797 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.423243987 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.35924428 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.358349832 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.364026893 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.357538764 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.410749581 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.368194881 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.471535106 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.357815081 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.360168982 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.51774247 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355522682 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.365811279 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.409356108 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.368410969 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.359685925 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.362309089 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.161231708 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357970449 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355923853 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.358782933 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355897765 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.432301093 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.357579412 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.351257405 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355307569 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.472917741 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.358755824 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357107876 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.358166219 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.353672026 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.358112724 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.359076655 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.358280556 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.356970521 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.359799164 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.380835333 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.358794165 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.35998634 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.36022271 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359764932 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.419544453 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.360523148 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.357610896 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.357739312 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.428325199 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366673998 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.360317008 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.356840684 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.35950678 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357121212 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.51955517 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.4130326 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.360642775 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.412888795 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.361228145 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.360615548 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.35968224 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.360009732 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.420066177 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.36053951 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.413126884 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.35758371 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.579610027 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.384166079 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.361911398 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.362489569 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.362992408 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.362387834 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.354494388 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.366679399 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.358660364 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.362893701 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.365634122 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.359441717 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359313919 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.543581986 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.469562427 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.359425608 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.372846749 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.368452534 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.359933581 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.424791925 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.362530007 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.358000974 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.425184426 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.476926769 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.414962888 seconds)
  done (took 156.241828237 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.366871301 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.36986004 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.364912364 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.384395736 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.381569771 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.363290043 seconds)
  done (took 9.496370764 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.36485095 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.364893083 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.36274889 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.363615187 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.363091914 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.365673992 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.363183599 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364040991 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.367609813 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.363604984 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.365605036 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.368132503 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.364757994 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.363195533 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.363373466 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.362193962 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.364196007 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.361062446 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.362761837 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364031475 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.468419802 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.363914399 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36392985 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.365734174 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.370411939 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.363834894 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.371729194 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.364746381 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.366045098 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.368844869 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.385201412 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.366129367 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.364957726 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.371348903 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.369449936 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.365431734 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370792881 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.369054441 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.363481135 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.367589256 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.369430542 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365857649 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.366657971 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.369500508 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.367338486 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.371778841 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.37454937 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.373588127 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.368066734 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.371150973 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.369928675 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.366223152 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.367621634 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.37153857 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.368002989 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387923612 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.375534382 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.368621205 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.367395356 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.366803205 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.368265272 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.369485911 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.367981003 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.372017655 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.36426944 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.371626016 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.367843933 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.372655819 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367642575 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.368774975 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.371952852 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.365994335 seconds)
  done (took 100.849253423 seconds)
done (took 428.772375581 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.866164866 seconds)
  done (took 8.137946446 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.479808287 seconds)
  done (took 7.754097399 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.491724256 seconds)
  done (took 22.769228297 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.384378834 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.417488023 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.386911212 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.366027076 seconds)
  done (took 26.826634755 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.722213596 seconds)
  done (took 7.99370397 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.359883943 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.358420593 seconds)
  done (took 13.992123782 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.427385977 seconds)
  done (took 7.698453718 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.466262763 seconds)
  done (took 7.745996641 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.382173141 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.399206408 seconds)
  done (took 14.067073621 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.343845801 seconds)
  done (took 7.614853932 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.92248032 seconds)
  done (took 12.196603976 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.36858731 seconds)
  done (took 7.643591233 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.445416852 seconds)
  done (took 7.719132895 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.612668656 seconds)
  done (took 9.886070957 seconds)
done (took 163.318972267 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.362597894 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.366464693 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.365373562 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.365856076 seconds)
  done (took 26.733398915 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.402164591 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.402768378 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.403967868 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.413951861 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.406106132 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.402606749 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.398835561 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.401002934 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.413703779 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.406909598 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.405484545 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.406186493 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.402759108 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.396613255 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.405985418 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.405959781 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.414778733 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.406225251 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.397268716 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.40658023 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.371275405 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.414972924 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.407826625 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.372313372 seconds)
  done (took 34.941336989 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.891220661 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.442486018 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.524070438 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.422892074 seconds)
  done (took 7.555297593 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.422572916 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.425844284 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.436997518 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.476015509 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.50548781 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.433646025 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.398874267 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.393666422 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.379954525 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.425691547 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.500809931 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.441827177 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.509934238 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.372209895 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.555889952 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.372712459 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.372754361 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.42495645 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.476287404 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.489540049 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.372430494 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.423333663 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.427919604 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.444159389 seconds)
  done (took 35.759105915 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.373752259 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.392411464 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.371192444 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.373177066 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.38061839 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.372548427 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.373896612 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.374378624 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.372748101 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.379540996 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.371260521 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.385046006 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.371797314 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.372004825 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.377640897 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.373833909 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.378331267 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.371739102 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.37212422 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.379621189 seconds)
  done (took 28.794681491 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.366315132 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.227509249 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.718428814 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.622959757 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.367716231 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.366325382 seconds)
  done (took 27.946378246 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.446318369 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.604804727 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.374220016 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.743248894 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.834736758 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.391948115 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.374867682 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.622028023 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.953218649 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.945806136 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.436609546 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.446190655 seconds)
  done (took 20.452754823 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.383001827 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.372432023 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.380847066 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.388375732 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.430503467 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.394800057 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.381862468 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.368550562 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.436191436 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.452399335 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.39648715 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.431428841 seconds)
  done (took 38.096301724 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455809759 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416401384 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.40413597 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424925954 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.091546155 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582236737 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.455498141 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124733528 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.397948319 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644265503 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382634952 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466132563 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626244142 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371923444 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393841869 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.381285744 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618699896 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86479245 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376913782 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.708503141 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400148308 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372442729 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.660935871 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.61733332 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606276055 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.349105309 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.63318688 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.150419207 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67076523 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389938116 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382880441 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372151834 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646974427 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048165615 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490459416 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.594330861 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407881885 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.917921002 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.360952678 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.569235933 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377667202 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376963016 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3851757 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372591941 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.307570258 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377486816 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141428651 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.401518764 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.083339742 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373824468 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646517449 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472842094 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.377134921 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.944066092 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.464040398 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.402322001 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.37773656 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468750302 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969737709 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.818505984 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389641849 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.311599041 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37288982 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.588203438 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022964909 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.401234833 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.378959324 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378172749 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310128723 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.569437958 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395233636 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52192084 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.400086532 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.020545545 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101137937 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.412579002 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.310433491 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922293317 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385023636 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.312756473 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604808845 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153790424 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312810743 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.319596145 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311120033 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096160173 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389236443 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.949227244 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4016309 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.147316445 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.624583187 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41562859 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399598049 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.600045463 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.255142287 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376878023 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.384453871 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509804408 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397976259 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.130805035 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334318004 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.380201444 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633318766 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.588549423 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385114998 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.397084357 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905400317 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400120776 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.410371141 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.38192162 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60408725 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.999736911 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.413830128 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.824222587 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398397764 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.153194136 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140373792 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381786543 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.402985855 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384748378 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660775638 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.153787225 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.264331529 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444966167 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381370245 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.378490871 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.610778693 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.231183903 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.271476634 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.588707975 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40589952 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.392659904 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.381078272 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326742055 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.389180597 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400865344 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.159645393 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603279152 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390596908 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657695941 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313737231 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526254464 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394567005 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.603555767 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.645964806 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.405899967 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63862462 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384315896 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389708899 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396779992 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399425176 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480379217 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402180497 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.392468268 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.641447721 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.382969705 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.387234634 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.754416013 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.162408226 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383605064 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.385772652 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381036861 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986860072 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381487545 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390495142 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270943181 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.396046024 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449138827 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38808872 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606847503 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.715034247 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407482662 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.405449041 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.378606092 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609561224 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392506857 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.595757088 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468109413 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.88768633 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.00942694 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419745702 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.317340658 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.093108958 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.074332376 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383765944 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.571076443 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.3832637 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.607833654 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420276893 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398904805 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.986882469 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405283939 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.597179312 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.395250719 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39638114 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.389098937 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383649811 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.697688451 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.883336558 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398645431 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.401725335 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529073514 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.397835111 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.31916012 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.901736898 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390110464 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384292481 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.161510335 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418853256 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.623007866 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250304949 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662158936 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386736041 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659034962 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.70596649 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.424066422 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.383726467 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396919441 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404276308 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.399475772 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399762569 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.397452891 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.596322571 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.830632824 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955187365 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145861695 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955983606 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.790832916 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.424771326 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.293469601 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.148897547 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346630447 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.042090111 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631781176 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.167259937 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357293676 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902401782 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.688035875 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213468992 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667751833 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621389948 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.693562924 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.419044647 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6697327 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604348237 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42201534 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.396249906 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.321991886 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.668614904 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985575114 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418089499 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472157636 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157630576 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411385703 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.170651269 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.392853188 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.153829931 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823238409 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.9567514 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.776623277 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394420257 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394730786 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304220178 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.421550653 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.913438503 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039369369 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.419825468 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.901288628 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351459541 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616348816 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.423691976 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.387002143 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.067724047 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.422786013 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.648730944 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666075911 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331484289 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402508009 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945696498 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.269485606 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.39684011 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390293274 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153962346 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397249806 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69904804 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.406927888 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.728137883 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415164967 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.324755617 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324397469 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.08327603 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393372821 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371980118 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892683117 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.397825378 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432884442 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409151938 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242120452 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647645626 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.40604913 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.996287523 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638666739 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395840562 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419330101 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.395658049 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400204419 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.381313388 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.272804688 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.628799756 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.491319186 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.623592243 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.412212554 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.298655767 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.475667603 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609298506 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.296291849 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393189695 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655898693 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.127040005 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.395331074 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134826452 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43886883 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392933623 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.406707031 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397004482 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433794122 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483232389 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620325681 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.428012482 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.404692122 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826029288 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42044621 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400968784 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.407150789 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48854022 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.903969337 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.736315618 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.188858518 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005976169 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191593473 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.04587061 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.692598549 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402244638 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395839476 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328884352 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543221917 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.919909115 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668809613 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526491098 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.403925694 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416873282 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398080082 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406095922 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611738576 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671604307 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.265434191 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402225369 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06089317 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.291546275 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406875224 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.607562195 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906714848 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972624434 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.782024589 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402827705 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.168912642 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696337712 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.487822712 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397499527 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989889011 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.404953927 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.166544813 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.40824395 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408495301 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549896619 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673450511 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112633465 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.432767278 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.556124064 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.16882282 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.658680479 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.660364775 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.923188444 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.631968625 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035293427 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.152894372 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667068966 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467137446 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628179236 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.528744666 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545466531 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.398593458 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.302477221 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398454927 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241736116 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.110233029 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.408358616 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01371141 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682941355 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.403408229 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.401956484 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428161431 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.408527713 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621977404 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135691195 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630043403 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409880298 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399818135 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.969098229 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019601203 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699116731 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340234666 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.402263325 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.654778054 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.658426105 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424404364 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.852457515 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.110372884 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96139309 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.371802744 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421330368 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.851987461 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.147121569 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022714306 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.772369338 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929104476 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.06215086 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411151858 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679101767 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.404231182 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401124372 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681097459 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.403961718 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.414167039 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634115596 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.029425351 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233315346 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.42305277 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.823266895 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.341824106 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.625745648 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428143872 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36272109 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410752758 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.844455272 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.425998345 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532251305 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413125593 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.3982167 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421176987 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.181579667 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683512218 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.408029739 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.403514528 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.399745545 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418396878 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497508236 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983196024 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427612406 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.074888771 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.752498657 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.658801309 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.413954011 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.387886668 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.406077524 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402598167 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.116667636 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.372253274 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402080835 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961426526 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.418551459 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.417739072 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405925385 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.618865058 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614560748 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404409211 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63855448 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439754065 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423365958 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.305017608 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.17146457 seconds)
  done (took 1691.580975486 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.446735378 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.453158009 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.419921073 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.422949591 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.418667134 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.418139187 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.430530854 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.441384489 seconds)
  done (took 52.764592112 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.410978049 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.564958497 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.435634629 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.406633494 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.420885376 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.407399943 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.886629948 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.422574544 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.412214201 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.413637175 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.405083821 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.403138563 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.093260995 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.43865155 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.414443371 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.390981539 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.414959902 seconds)
  done (took 66.660433095 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.690688396 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.556609762 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.606906258 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.478489136 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.413559352 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.418920093 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.592732046 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.422636875 seconds)
  done (took 54.494273994 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.417635703 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.417262982 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.418079105 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.416350925 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.417058532 seconds)
  done (took 8.399966093 seconds)
done (took 2095.455271485 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.410405538 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.412716044 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.410634966 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.413624411 seconds)
  done (took 6.961355331 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.386064696 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.115337904 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.389140208 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.40370686 seconds)
  done (took 18.608582813 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.422176877 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.417972413 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.143978272 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.070957973 seconds)
  done (took 5.530670956 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.15915604 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.168917099 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.153829376 seconds)
  done (took 7.797142976 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.407330094 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.413853395 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.412820298 seconds)
  done (took 20.549350285 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.711770213 seconds)
  done (took 3.026763579 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.554826558 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.604043448 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.722354628 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.729747676 seconds)
  done (took 7.9266986 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.805223404 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.776774797 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.59712414 seconds)
  done (took 6.495079043 seconds)
done (took 91.05165745 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.370851109 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.657547343 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.627006982 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.34287601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.641516831 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.62143761 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.629157749 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.309602289 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.01116334 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.846000946 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.341911831 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.639905032 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.570869615 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.658681057 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.572176892 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.659183021 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.639899656 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.62590435 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.222386372 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.24510326 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.628638682 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.980288074 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.436792691 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.174027297 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.646306263 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.566068618 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.562074374 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.411624731 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.203224447 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.750220621 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.579010635 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.410105602 seconds)
  done (took 198.898104776 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.41453332 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.412388659 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.40971672 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.410274434 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.4099658 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.415668542 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.411653072 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.443005548 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.41963965 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.417248259 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.428800175 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.422086709 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.412354028 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.410229235 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.410808657 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.411160149 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.418845206 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.414257228 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.411635904 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.41085366 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.433506494 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.42880254 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.41103181 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.410555914 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.433241749 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.41266569 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.410536478 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.410686977 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.431357436 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.412086044 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.418967249 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.415941342 seconds)
  done (took 206.662644925 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.415944782 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.412944524 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.413346041 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.413324822 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.412392453 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.416703473 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.412871007 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.411827737 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.434434822 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.416361976 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.411185571 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.411877668 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.432957916 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.412659638 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.412735955 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.44208705 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.421328667 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.412793163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.417909424 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.4144326 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.415309737 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.41258255 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.433719573 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.412465462 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.420250439 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.429705018 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.426595218 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.4134114 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.431357223 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.421913641 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.419531605 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.434802038 seconds)
  done (took 206.743260756 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.615428047 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.42066084 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.421931364 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.376601641 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.42165928 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.420789966 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.41982669 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.611821858 seconds)
  done (took 15.030431514 seconds)
done (took 628.651382066 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.830276518 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.541990713 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.629332568 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.447204772 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.287369221 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.460784273 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.441875386 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.618922217 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.369154847 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.624831476 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.747129302 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.460312225 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.870849447 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.441028039 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.707221024 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.552260761 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.360768891 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.479491192 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.765806582 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.010736884 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.709106454 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.988215603 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.646239077 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.377743202 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.889546467 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.983389081 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.217148078 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.360536314 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.459659018 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.774533655 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.183387477 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.497301779 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.49090905 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.509066841 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.569670557 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.550788106 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.45970153 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.507389822 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.654513882 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.741407581 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.023300687 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.188516136 seconds)
  done (took 96.753535173 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.408164375 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.407154211 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.406817809 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.406872541 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.408906662 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.407374722 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.406752156 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.408361772 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.408724931 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.408348364 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.410632404 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.410846294 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.409552277 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.41016439 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.410473017 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.409902421 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.411511085 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.413502073 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.411432251 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.41106661 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.411328535 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.410745258 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.412842862 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.410380103 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.411098192 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.410464788 seconds)
  done (took 37.979117829 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.428831164 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.678951669 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.848020302 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.432062495 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.426150165 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.431668094 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.508893822 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.432231779 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.431088265 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.429441018 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.582641369 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.429038959 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.463058343 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.888159991 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.433344609 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.428075568 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.426664295 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.426650185 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.687996801 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436033784 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.531747432 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.433117783 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.509759604 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.441425997 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.451181075 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.427955993 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.432505808 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.003476246 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.449335477 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.58462603 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.26657823 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.510451207 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.977614701 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.892954982 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.27260488 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.435436169 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.430281382 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.593961998 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.430068205 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.428076853 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.511076851 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.434763359 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.86080841 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.104430622 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.447299405 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.429454635 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.024299496 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.608598128 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.69089566 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.442094213 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.891252918 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.434106084 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.43104245 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.431355677 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.690148819 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.442403582 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.429360036 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.045954145 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.45232746 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.511380317 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.434907791 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.428711021 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.696399123 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.430310092 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.686394781 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.432165652 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.437896516 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.44918356 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.870421958 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.441474041 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.12578779 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.447721538 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.432384796 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.585501157 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.684971698 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.060625873 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.453662961 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.699720663 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.990327523 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.530396486 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.439117125 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.999072947 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.533691746 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.442142608 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.43444163 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.433798021 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.432104785 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.481417397 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.510894826 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.072146947 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.13904612 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.068850716 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.533505388 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.45229544 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.431794515 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.044730258 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.451332578 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.433125328 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.863184434 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.128729028 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.4517572 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.440666209 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.13213934 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.452175909 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.517143684 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.446046433 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.876639414 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.43673272 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.485978005 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.433894646 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.44047784 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.457058177 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.515992637 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.443767981 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.43431888 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.106136859 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.616881744 seconds)
  done (took 188.731533873 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.442461598 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.42639644 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.435965358 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.426854566 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.427507926 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.436137598 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.427627326 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.426987667 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.43341868 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.427047048 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.428091839 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.428683022 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.427998799 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.447882227 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.439680973 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.435372807 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.038679799 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.429386393 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.429083413 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.428760904 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.250525322 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.435775479 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.440684712 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.428568495 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.427610477 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.430218898 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.44205389 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.430996661 seconds)
  done (took 154.864514475 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.434618993 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.04236043 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.459413006 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.574609201 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.462961573 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.433987883 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.573541146 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.501597993 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.460368748 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.434241969 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.434350029 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.761290809 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.444598815 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.990262596 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.644054224 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.598590399 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.9703837 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.454497301 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.4353701 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.434774531 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.575899707 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.444627291 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.751271388 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.022370394 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.455764227 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.022282093 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.421855704 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.437554342 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.435270871 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.024155898 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.453356054 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.751967677 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.517914959 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.503559326 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.046962019 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.009107458 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.01105006 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.596028511 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.436895434 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.436751471 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.435348447 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.420880405 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.025171152 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.457322925 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.436354308 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.015356396 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.457172782 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.438362949 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.44518076 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.435896349 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.501696652 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.526483686 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.780661422 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.032677368 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.538206052 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.453928509 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.575244698 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.856096121 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.442767693 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.992234104 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.428091098 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.052410485 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.461271926 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.421618718 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.438529171 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.444150987 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.593823026 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.579602115 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.9979848 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.46230004 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.996160795 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.618007319 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.440288866 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.437832761 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.440077201 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.032250399 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.017153547 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.616875788 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.582274625 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.64478309 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.428427291 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.439307974 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.42347451 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.519943743 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.437512093 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.03391175 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.015701419 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.463687645 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.441711012 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.441364634 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.441544321 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.62471511 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.056038325 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.538936789 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.989177497 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.781630946 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.759724764 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.441151663 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.501927132 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.460070834 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.76135052 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.443268019 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.500888895 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.940182494 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.763837978 seconds)
  done (took 171.860945986 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.68650014 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.700406333 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.542390184 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.602246146 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.049991587 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.021531576 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.766413025 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.589429694 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.560281307 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.71126459 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.667319336 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.535905947 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.663653189 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.521649934 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.185322377 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.535215893 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.562053013 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.599841208 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.602528717 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.493631914 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.1427713 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.739889302 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.632919773 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.412943683 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.548153803 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.242136152 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.030858616 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.973423211 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.630802884 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.826291185 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.013635411 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.61038377 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.451006507 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.171725131 seconds)
  done (took 69.36562986 seconds)
done (took 720.878721437 seconds)
SAVING RESULT...
DONE!
