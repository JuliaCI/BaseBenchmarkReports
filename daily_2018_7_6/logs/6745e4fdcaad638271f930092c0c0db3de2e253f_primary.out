cset: moving following pidspec: 651
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.966827992 seconds)
loading group "string"... done (took 0.567243177 seconds)
loading group "linalg"... done (took 9.356150823 seconds)
loading group "parallel"... done (took 0.178644369 seconds)
loading group "find"... done (took 1.423601045 seconds)
loading group "tuple"... done (took 2.266029928 seconds)
loading group "dates"... done (took 1.432734035 seconds)
loading group "micro"... done (took 0.240726588 seconds)
loading group "io"... done (took 0.654812978 seconds)
loading group "scalar"... done (took 44.070372964 seconds)
loading group "sparse"... done (took 13.80999693 seconds)
loading group "broadcast"... done (took 1.205716461 seconds)
loading group "union"... done (took 15.630991621 seconds)
loading group "simd"... done (took 5.240389441 seconds)
loading group "random"... done (took 10.793152095 seconds)
loading group "problem"... done (took 2.330775491 seconds)
loading group "array"... done (took 27.219335434 seconds)
loading group "misc"... done (took 1.271443336 seconds)
loading group "sort"... done (took 3.99613503 seconds)
loading group "collection"... done (took 24.294267321 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.746141027 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.157916048 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.175472384 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.222591455 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.236905174 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160106682 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.185879068 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.624067821 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.112029265 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.256545379 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.168517924 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.687124189 seconds)
done (took 6.481308644 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.261533709 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088497211 seconds)
    (2/2) benchmarking "String"...
    done (took 0.153837898 seconds)
  done (took 0.903340421 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.09017456 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.218323738 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.120871296 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.136867026 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.137092344 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.121093334 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.136676921 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.136648083 seconds)
  done (took 1.670728178 seconds)
done (took 3.592702687 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.957205839 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.880928765 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.589862027 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.153663806 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.192415112 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.168202055 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.390571927 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.176403971 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.135542777 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.137181919 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.207906138 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.385891164 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.587043954 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.082920731 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.118037127 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.143373569 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.099089058 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.717885172 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.099131503 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.128749389 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.651750578 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.145558577 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.133801304 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.140848442 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.224359155 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137381293 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.205064094 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.133740788 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.686865763 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.120256162 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.207310612 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.115975179 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.183825676 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.299536732 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.097843924 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.124287818 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.691060217 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.211836028 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.134236944 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.111299701 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686605047 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.100435232 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.230820516 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.136375468 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.134972841 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.208530076 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.122003718 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.114181107 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.122366377 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.107595952 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.181220903 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.497221203 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.124521145 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.166426391 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110033288 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.718369219 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.11648884 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.173964837 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.143262505 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.126010476 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.11605036 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.11893345 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.189981753 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.121381171 seconds)
  done (took 21.686352743 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.144561248 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.168618044 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.109802599 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.163571766 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.170212338 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095465147 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.117700396 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093611855 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.152551568 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.220827062 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.166745232 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.171980559 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091535938 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.112387703 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.122987875 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.276155606 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.145890129 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.130819336 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.116225658 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.111942766 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.166635848 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.117922883 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.132144571 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.131802064 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.191611531 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220500729 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.127401366 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.142197434 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.112054691 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.125036466 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.159860529 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.187613362 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092203499 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.110510469 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.216722526 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121276051 seconds)
  done (took 5.914599389 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.137664082 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.243664752 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118236615 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.261576934 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.232079015 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.184046469 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.213807281 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.141957661 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.298611844 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.267421243 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.202940806 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.147119392 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115790452 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11198377 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097298707 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093348339 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.270408402 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.207726104 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.191990005 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.152769908 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10879212 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.113786574 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.39858091 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103945584 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.114961607 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.120013826 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087711228 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.219171923 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121630158 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.572586805 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.138228478 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114878137 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151208788 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.230769563 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.139639988 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.172624229 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10429584 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.117992165 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.26792785 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.133702027 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.091787016 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.147437277 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148491339 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13703964 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.120401503 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139193577 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.274972756 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.119032707 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127305767 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.311942279 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.239264002 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.117217886 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.156749926 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100080019 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.421660264 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.137238995 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108896837 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.11774684 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099322515 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.348058001 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.149667343 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.117857953 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097985733 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.111690831 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105827687 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.110914911 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.418049153 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134084982 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.20315848 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096595269 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.204464802 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119549361 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.130363305 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104881947 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.118361105 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.121413706 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.114832275 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094746598 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.114534707 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095321476 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101745557 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.13645248 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.117664931 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094218136 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.179651913 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.128330994 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.140577314 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142732548 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.105951102 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097116307 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.146486726 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113080748 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.101906207 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.175643747 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.126806328 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118149276 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120474026 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.158386485 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097425035 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.209879189 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.115939662 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.129023263 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.119202146 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145667259 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.149336161 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09601676 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.118092158 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.092167039 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.115054582 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163450747 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.113272569 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.094716622 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.118346486 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.115777436 seconds)
  done (took 27.618637902 seconds)
done (took 55.87982434 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.448142852 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.140384612 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.140206354 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.139935489 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.14013698 seconds)
  done (took 1.753414475 seconds)
done (took 2.465947775 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.426036085 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.255308337 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.12270392 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.244378664 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107783553 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.254960442 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.213747623 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.123332409 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.274721285 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101876928 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.239356188 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103100641 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.125737637 seconds)
  done (took 3.33849922 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11299615 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.143389637 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096395041 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110350989 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107536928 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109282555 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.125357747 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1320958 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.126108112 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102350159 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.109312807 seconds)
  done (took 1.981936238 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.109554987 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11513142 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.11308717 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107905584 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107433024 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10667997 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123886275 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120693156 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.126542115 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104666572 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.109011072 seconds)
  done (took 1.951144627 seconds)
done (took 7.972187164 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.243252949 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.271601773 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.121786456 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.199275104 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.418898797 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.233702786 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.668528207 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.142124183 seconds)
  done (took 13.255301589 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.155205795 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.117390163 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09658682 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.120688929 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100916498 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.118008528 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103734539 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.115209638 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101608016 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.11528889 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099352124 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10042169 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.117963286 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096738229 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.115492766 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101495904 seconds)
  done (took 2.565041235 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142357459 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.142067497 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.127092659 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.115441855 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.123474062 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104502237 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.127510712 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.107560011 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.120589049 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.120573471 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.115952293 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.13144314 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.112787546 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.119494212 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108305542 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.133803465 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.102785596 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.125421382 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108499048 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.126191005 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.132159636 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.106394531 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.130126771 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.11403807 seconds)
  done (took 3.743595832 seconds)
done (took 20.274646123 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.209849848 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.105326818 seconds)
  done (took 1.035200092 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.123137473 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.14068583 seconds)
  done (took 0.991651616 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.133879065 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.115342529 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.164777457 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.120496589 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.117153927 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09774588 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.157195786 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.116526304 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099158306 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.116458722 seconds)
  done (took 1.967957199 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.103987375 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.105412678 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.127643867 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.14215788 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114361164 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.118403931 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.105244242 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.122538845 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106270197 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.114724262 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.109741887 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.142280692 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.124211616 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12780108 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.123871289 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.124172194 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.111939902 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.121711613 seconds)
  done (took 2.875384989 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.098265886 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.101130088 seconds)
  done (took 0.930094981 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.101975922 seconds)
    (2/7) benchmarking "second"...
    done (took 0.113053192 seconds)
    (3/7) benchmarking "month"...
    done (took 0.102512262 seconds)
    (4/7) benchmarking "year"...
    done (took 0.118365107 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096940079 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.112487164 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097111205 seconds)
  done (took 1.473915795 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.609146665 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.275333201 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.406613252 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.141180417 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.18096814 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.440478584 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.181671796 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.136770543 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.136516822 seconds)
  done (took 3.287001423 seconds)
done (took 13.289229557 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.110850863 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.163359088 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.634331247 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.134064158 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.094812903 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.17856974 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.337367611 seconds)
done (took 2.385202945 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.413178102 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.144474632 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.102119816 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096499654 seconds)
  done (took 1.4863547 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.097871883 seconds)
    (2/2) benchmarking "read"...
    done (took 0.106982882 seconds)
  done (took 0.941214789 seconds)
done (took 3.163146025 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218755328 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.150956798 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.093061454 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.108847905 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.090378377 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.093008513 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.111075415 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08969913 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.111591727 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.093916234 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094707462 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.111877047 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095017682 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112548289 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092770899 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092074789 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109582675 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094263529 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.109916373 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092535741 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092228706 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113306112 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.091791101 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.110153613 seconds)
  done (took 3.353161992 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.123382587 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.115282891 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103806939 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.120981587 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10178756 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.121608865 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102848807 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.113989612 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.103663749 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.115915121 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100753667 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.119309342 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098694807 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.11936874 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099789659 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.119757378 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.120950083 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097574921 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098456416 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.120503169 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.12104324 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097730691 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.119254533 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103649454 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.118846451 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10167369 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.116860578 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097113579 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120973342 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.101761353 seconds)
  done (took 4.052556731 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.107806124 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.091927552 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.111654693 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.108094842 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.111786021 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096778516 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.113058731 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094508256 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095031807 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.112043567 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095290331 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.111213565 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093781321 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.113095718 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096460534 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101215319 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.140302873 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.093598563 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.109604172 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093234707 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.118169858 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092104624 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.114070364 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.092294068 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092619748 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.111109626 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094000698 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.110419318 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094545934 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.0927374 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.118333815 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.10209182 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.110769044 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.112177474 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.119858894 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093625689 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.122827474 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093202663 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.11208567 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094214265 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.092572536 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.1109895 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093125035 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.126615328 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.096942987 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094084169 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.111400816 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095029724 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.113002866 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098233144 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.110587368 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093794167 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096904685 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.113251399 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100098797 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.110505076 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095146185 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.110574812 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09575405 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.093223423 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.112396671 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.092445705 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.120444425 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094987018 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.146624494 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.109213351 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.111658366 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.096332865 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.115895637 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.106826018 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.11470865 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.120295804 seconds)
  done (took 8.316782438 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.10147886 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126261272 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.096999989 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096846772 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11153349 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094276758 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.120895054 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093927745 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114640847 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115115059 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112367376 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096449871 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114924347 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099630997 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112511097 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096816034 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.124511572 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092364924 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.094151847 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117863176 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094920928 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.121258812 seconds)
  done (took 3.096385353 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.288979717 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.125498172 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.179264055 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117820581 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.141920898 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.134697799 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104087813 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.124026025 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104451692 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.128457045 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110230472 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12309468 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.142086914 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110116479 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.128599172 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110039517 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122432557 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.128711267 seconds)
  done (took 3.168613802 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.114950199 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.11664364 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127347698 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.115759152 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09737676 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.119515425 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10725761 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.135115911 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.10177099 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.116522194 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.112087344 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119534259 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101087256 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116506712 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101577559 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.116572523 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101073332 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115923127 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11126654 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.126475671 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106885295 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.13065228 seconds)
  done (took 3.258930901 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.119242131 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116183293 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.122371313 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.12040195 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0935937 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.112173229 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105850552 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.113294345 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107035682 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.11501706 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096291425 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.113466731 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.107357397 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113088254 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104504608 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113234917 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098444383 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115864429 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101185162 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.111663387 seconds)
  done (took 2.951321768 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.15161762 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136199892 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11916793 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.152238903 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137224515 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.119593532 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.150155675 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118491012 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137157889 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138383693 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.13767627 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.136898663 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133161274 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.14511228 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118411611 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.15102366 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.149464617 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130352664 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.134440417 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115624831 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153645947 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134182805 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130814504 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.133600437 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115511525 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134276259 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116501726 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.143156317 seconds)
  done (took 4.524088458 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097208499 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095867321 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.112160847 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.093468307 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.112168971 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093877007 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.093406961 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.111031209 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094104985 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109254819 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.094637611 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09547057 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111953676 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.094418762 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112421902 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093791902 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094251709 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109428695 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09199888 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109630511 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.094268072 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11194897 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095335001 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092477395 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109997137 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09416645 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109956782 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091672281 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094691777 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109397681 seconds)
  done (took 3.777838812 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.111031562 seconds)
    (2/2) benchmarking "in"...
    done (took 0.124839206 seconds)
  done (took 0.986409519 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.097035609 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136398339 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091884772 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.098739066 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.122438558 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095322181 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.127238643 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121476698 seconds)
  done (took 1.643636089 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.13038352 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.140123977 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.102786565 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.130435803 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.117725965 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.135860904 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.205172061 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103291621 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.12293218 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09786851 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.137347329 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.097213437 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.125478847 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105373132 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.125818439 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117700702 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.112387488 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108251416 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.122853272 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099017212 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102708759 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.138247847 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.130349421 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.108071132 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.118290586 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112384623 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.136144657 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.110947132 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.121660257 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.115465232 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.123519503 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089774445 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.119764527 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103482505 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.111717277 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.116929215 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.140044095 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104718905 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.125522753 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104225954 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12726861 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091954069 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.131318626 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105561827 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.131255068 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102305212 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.120553441 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.0918728 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097946384 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.120662413 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.091494314 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.119545081 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.089733342 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.127972404 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110349697 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.143667422 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.098686479 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.120694276 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102313989 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.119168081 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105513235 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.120828942 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111683265 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.118585709 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109204011 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.126597953 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108200163 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.109618102 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.089910552 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.1125851 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110154359 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.144814802 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.115794086 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.122423517 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103106171 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.112677336 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104368361 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121124556 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108584523 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.13198412 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101455741 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123808025 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110501115 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.120282827 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101486833 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.122744261 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098185278 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.117964825 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097867722 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.147172786 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098766749 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.112485547 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097779376 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.132023989 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102477292 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.118203865 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098171219 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.126738557 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090085997 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102404147 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121938851 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105563908 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.13550668 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120478983 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103657229 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.127989318 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.11083905 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.123383872 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102906071 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092467954 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121512353 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099210704 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.127320517 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090137951 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.122370609 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104320659 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.121144061 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.115462248 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.116487633 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10325047 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.129473427 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114650995 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.117933013 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093559988 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.12167852 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101879744 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12538078 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.115566074 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.117144237 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092199038 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.090538724 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.128462025 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101081995 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.125187885 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103141053 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.122938672 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.089935416 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.113111832 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103173709 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.13483764 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101068756 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.124569059 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111411079 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.124715256 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099087322 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.129297752 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.10057985 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.116312122 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.110842613 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.122121397 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.091395613 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.126640838 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102467321 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.116982815 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102618111 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.125941487 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102893504 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.120905176 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09953428 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.120258223 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103636707 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.11470201 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105990453 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098769746 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.135746754 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.120237244 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.091720811 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093137871 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.123452099 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097870984 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.119853055 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097201789 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.121250839 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10358593 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.122847863 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100520945 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.119339704 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117770977 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.129919384 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104013178 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.125152155 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112511789 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.119400895 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106977606 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.119133473 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103878659 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.120739677 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111253722 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.124539108 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103677178 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101660297 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.111717524 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106345105 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.129215344 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.09762459 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113305291 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098278093 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.120109654 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.115808312 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.12035894 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103575697 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117841009 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107174587 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126304195 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103081264 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.119956164 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097925916 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102379252 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.127862443 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103624402 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122175395 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114221523 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.123855701 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.091452606 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126884089 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098985102 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.127245063 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.091392685 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.117257755 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098540167 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.122318873 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102065788 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.119145984 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090324269 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110960673 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130844929 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103859194 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.117847857 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101362016 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.137345499 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100687071 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.126769019 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10293738 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.128057997 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.145701601 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098806005 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.121207512 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116860645 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.120267662 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.090882038 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10669719 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.118798995 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097015329 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.119073607 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09966307 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.123596965 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106389243 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.124908803 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090654677 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.12161828 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10050878 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099084204 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.111539624 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113982061 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.124820952 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104306142 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.137302657 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122259453 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103755445 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106062304 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.120443107 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103635296 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.122508297 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104886946 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.122971655 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.100925562 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.116664053 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106498867 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.116519626 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095339706 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.120490571 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103186123 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.122779794 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106965406 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.119642623 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113704703 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.122088198 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104447872 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.164356181 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.099576783 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.116768797 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105030155 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.125354033 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10244205 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.121556741 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.092182349 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.128462114 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102215852 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.130477507 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102409184 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.111501139 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104780451 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.121344986 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10482952 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102795816 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.123365447 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101062897 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.120358745 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103151918 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.137412279 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098874223 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.133746859 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107960313 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.125852813 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102905667 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.124654482 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101751984 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.1184973 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104885784 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.122913557 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105399077 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.120435928 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107325395 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.123174326 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102451879 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.120117922 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10500855 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.123169882 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106513716 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.109582785 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.098903086 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098935687 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.122153883 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110942426 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.123003794 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.100889552 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.118609202 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104203327 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.120046425 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094346087 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.127801483 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107566713 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.122475866 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117482881 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.116354866 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104611793 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.140113455 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091621992 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117679574 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095989395 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098741325 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.130835496 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103453315 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.131628837 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104335262 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.118303408 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094850925 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.123023559 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100005815 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.109584391 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096179008 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.126335509 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.100189746 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100021929 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.12228614 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107147826 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124713236 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110363696 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.120251832 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10430687 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.123477454 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094483123 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.118459504 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.098228795 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.122864057 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104434426 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.117398508 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.094750876 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101751613 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.125084424 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104589034 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.120767189 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101784036 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.131264396 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102196488 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.123511671 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108809012 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.111289604 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103954449 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.120270527 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103201232 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.117277966 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106183745 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125061566 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105327733 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.13041008 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102520717 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.125717319 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102173389 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096043215 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.122052074 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101707118 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.122390816 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.098454816 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.123510074 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112868004 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.115791781 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106147338 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.124577649 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.099950791 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.125977018 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104590404 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.125291663 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108667197 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.123120288 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105351598 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.127381288 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103817458 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.124947913 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105092694 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.119560638 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110765186 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.116745552 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116956775 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.125298878 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105147971 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.121082351 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100379224 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102580722 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.121519536 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100451899 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.132781405 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104161838 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.117764219 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099210349 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.114727428 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106524607 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.127533797 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111649905 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.123782752 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105861328 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.111773003 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096167521 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124431225 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100309677 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.102801782 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.127419542 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109658193 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.124212967 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.100080107 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.120176967 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11139932 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.12925794 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109252732 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.119580293 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109826088 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.123574223 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104585806 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.119940628 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103078651 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124422272 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107943905 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.121530371 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.099349849 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.137042076 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112833737 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124999152 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.101891829 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.126462746 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104828474 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.112397821 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105601707 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.123382724 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110409235 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.123921275 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103209393 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.140111896 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.097762548 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.121709241 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110924049 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120902483 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115602117 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.112097137 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106211532 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123585574 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105421022 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09234342 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.118517773 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099966162 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.124693144 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100278972 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.112825244 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120755069 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.13187384 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106447129 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.12083279 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101223492 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.11257412 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.094147537 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.118067566 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10540478 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102180203 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.138618459 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.117089353 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099119766 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.093895461 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122538973 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105399961 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.126610682 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095637277 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.112644136 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100810344 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.126298698 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.117153746 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120151214 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103096 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.124996485 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105760514 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.095738619 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.129290964 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.093805432 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.125964444 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.14042344 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105942939 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.126866182 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.112317304 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.132659584 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105643775 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.111690853 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105985061 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107355874 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.127260681 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105216994 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.126336721 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.150895844 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107539344 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.118001065 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102009291 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105960386 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.119666421 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117511811 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126142989 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104269384 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.126595205 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.101834494 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.127132386 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114610302 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.12853288 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106803448 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.127233655 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102019248 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.123767924 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10049797 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.121766728 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106865774 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.12392482 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10381256 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.126499862 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.099877036 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.141245166 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117634999 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.125315571 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095543311 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.11901698 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.099834564 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.093635276 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.124953916 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.09718701 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.120730155 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100438993 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120015987 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10876116 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.126442885 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106614272 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.124115664 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103345407 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091454671 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.129485949 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105156833 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.129159832 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094875419 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.123325639 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105144536 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.133160216 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110068734 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.121806843 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106001089 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.123277333 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109155643 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.113812674 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108765226 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122361929 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.104072707 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.119134375 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105629766 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104174151 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.127581022 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104999488 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.127097427 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105329635 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.131132511 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106524009 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.11546549 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095529063 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.129327917 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.096869431 seconds)
  done (took 68.344379725 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.186117559 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10112559 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093566367 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113454501 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.14959099 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096051079 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112285263 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095610032 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.095525943 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.134669867 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112779905 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094193337 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.143401264 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.155424368 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129057156 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.135220147 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092443773 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115306911 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093063843 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114998974 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.141901078 seconds)
  done (took 3.304346961 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.12721276 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.136990522 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.135833319 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122801013 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.129269939 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115961032 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.134964596 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136903662 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.141377883 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111774947 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.141724372 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136858608 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.111457249 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.129455798 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111701287 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.132852205 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.140901115 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109073848 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.138460103 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.13501182 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115237226 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.136171395 seconds)
  done (took 3.628846376 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.111049891 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.105041174 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.130700858 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.09742719 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.122953452 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096283363 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.128664685 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099069336 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.129222255 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.104498286 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.120125653 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.103814657 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109265777 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.116058545 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.100667632 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.118669778 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110755403 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.12300448 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105697334 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.115313364 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.147779601 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.115622004 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097135164 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.119854988 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.114325223 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.124525344 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.102491732 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122535623 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.10118047 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102395498 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117997986 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108260161 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.130897813 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.101862025 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.12048115 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103488074 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.122558618 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.096865299 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098218724 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.130618898 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097061934 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.12416986 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.115622692 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.119653028 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.09826129 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.127116979 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103420682 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.11588143 seconds)
  done (took 6.230082943 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.134175725 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168246841 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.12328759 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.16507405 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.14166201 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11478618 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124148785 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.16394323 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.097302784 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.119694131 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124232532 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.142935344 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120369434 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108592346 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.122991908 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100802091 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.122321607 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099021752 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129906239 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102855177 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.13007294 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106961753 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.141727073 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.13860813 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108096172 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.119775299 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.098533044 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.128145749 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.137546842 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111648187 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.12744829 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128699327 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124494917 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.121777918 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102997059 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123266268 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.14359051 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102212716 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123174241 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098755968 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.122559878 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108276531 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.127994718 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124943688 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124262475 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.125364605 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101541229 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.09478056 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.140357459 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123556039 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115908697 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.141433359 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125769325 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102545039 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127933175 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123338511 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.122281869 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.098188443 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.126710787 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.138903126 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.0978369 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.129637271 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120863778 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.12432407 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.133857384 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121885532 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.127026751 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108811003 seconds)
  done (took 9.291653927 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126917545 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.14851968 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126158115 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.147600247 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131584834 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111220976 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.13187757 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.112078158 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.131744481 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.139596302 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112273135 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.194256476 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122727442 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119815773 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132164335 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112175146 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131290099 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111118973 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.132509552 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131753846 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112054036 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.14471059 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111475699 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.14614263 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.150032899 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101753781 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.132097635 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.130954475 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125941026 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131498577 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150547104 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112492982 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.131751901 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.144456643 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.130437128 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.131139181 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098980741 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131545163 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.112485576 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.131657056 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102558425 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.146027824 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.131793331 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103292838 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132655655 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112032228 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.145956854 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.150527626 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.139330514 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121989821 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.131774027 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.146612709 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1129468 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.131313628 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125678244 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.157135112 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.147027817 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.145087729 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112157895 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.146616948 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.146359247 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.157374979 seconds)
  done (took 8.929740734 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104623219 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100134657 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117127004 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.096985231 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119810864 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097035452 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099236772 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120034241 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099900599 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.119233523 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100264586 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095698853 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116435705 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100801262 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116284794 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097384604 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095697158 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118027416 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102375138 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.11677574 seconds)
  done (took 2.950777637 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.11196652 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.145658066 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.101745872 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.13114924 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103858147 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.131778264 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103089052 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124346398 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101707102 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12398825 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116101989 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.138031851 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120990625 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111719681 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.137014176 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11131201 seconds)
  done (took 2.730887274 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.132294367 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.139833994 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.151903749 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106271291 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.097082257 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.132675784 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.098939275 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.118945654 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.095827691 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.131816672 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.10917358 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.132542986 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100635595 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.11957853 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102060738 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.12727783 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096133597 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125684136 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101669262 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.149639292 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107389608 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.12482148 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.101755987 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125092457 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103988312 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128379442 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109611115 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.11877853 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.099716613 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.12185511 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104190524 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131243912 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096373877 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.126869099 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100310137 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.118357085 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102077616 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.121320321 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108415459 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.120069741 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10046994 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123920885 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102478996 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.122403165 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096911092 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.101465857 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.117632427 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108499105 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125135743 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103570058 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.121158768 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109512945 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.130294184 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115054235 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.13386557 seconds)
  done (took 7.17474643 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.121688109 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125701655 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.109554606 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.119141598 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105534502 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.128884053 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106439162 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103129959 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.125321852 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097627695 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124158914 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105011119 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124086045 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104830686 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.125090225 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106276422 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.115915377 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103936658 seconds)
  done (took 2.875834573 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.113650174 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10540138 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.13088202 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10009862 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.122003607 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103625262 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117841705 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.099554614 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119146058 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102227299 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121232571 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104333035 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099084488 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125111344 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101618489 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121624785 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.103903544 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119168709 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101512343 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115839116 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10514062 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098734208 seconds)
  done (took 3.258392857 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.130144632 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.166684601 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.121020478 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.176901834 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.129854907 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.108339223 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.141035213 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.110517361 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.151116387 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.107405768 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.127408512 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.108219804 seconds)
  done (took 2.404305288 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138376981 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172945132 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099520784 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125988671 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118295548 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131502617 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109697024 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130863152 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144036873 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.149264327 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110357409 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143925055 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123681637 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146054553 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138804209 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118275834 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130942834 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128827304 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10378239 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156842186 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108436489 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145143249 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129154435 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11046787 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129729034 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143631566 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123854327 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150777401 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129289513 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124039331 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138999604 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108655012 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146430069 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.149034639 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104248533 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145392068 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129484039 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136029262 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139303145 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143668119 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104511981 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140588014 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144108144 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11886117 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145733764 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12999948 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119072645 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130278808 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109276093 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167278137 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139169731 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143452589 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118791788 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145636064 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1435498 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168761402 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129832808 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145618366 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138667432 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.15029837 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123850813 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140775968 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144431225 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13041099 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139515643 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143947942 seconds)
  done (took 9.643319767 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160761862 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120998826 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109614399 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151438308 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144732455 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10954395 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131624649 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1291159 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110388133 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123877228 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191092181 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110612286 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145076672 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144446056 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110465021 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130248299 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110980024 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144596261 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102794072 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167791945 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130806505 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14437103 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124108639 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146420406 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150267808 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13943753 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110268352 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129946217 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111192028 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130541722 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119106983 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131183748 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14460907 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101639175 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143673553 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109480607 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13115891 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139647187 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110860286 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13900713 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144241171 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137598037 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131374083 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108698969 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150616367 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130209431 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109763293 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125446397 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109983574 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125016896 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151107401 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129494485 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151524603 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145795571 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130155347 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110912898 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129705625 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110584183 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130820069 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118953701 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145169031 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130829546 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168388893 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110855562 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130737605 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123966213 seconds)
  done (took 9.460463555 seconds)
done (took 180.094330763 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.128560294 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.16697558 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.118166882 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.187975347 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.103116854 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.159235556 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13793147 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.139668888 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.102225742 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.1007782 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.123391173 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.106130971 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.191538951 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101909753 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.123407467 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107515263 seconds)
  done (took 2.928846552 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.224016949 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.335035756 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.129426643 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.131298571 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.11166348 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.129220693 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.11005463 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.131305843 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.104657216 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.143209507 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107053526 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.128839454 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122698551 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.128400383 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.104576019 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.128004302 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.123243708 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.127393354 seconds)
  done (took 3.358339316 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.147240715 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.170746344 seconds)
  done (took 1.157344278 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.151435361 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.226972618 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.355772443 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.175282159 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.161098755 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.159870936 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.196582899 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128063745 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.232618166 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.157597145 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.156822993 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.111778457 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.166440738 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.140008213 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118068832 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.132146962 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144183744 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13577831 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112644247 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.134832932 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140182069 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.135123844 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.141024707 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115436196 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.221129484 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.156673079 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.113710814 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.135588896 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114374481 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.133941364 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.141868757 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13740866 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.155706196 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.220000931 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.140426895 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.214994533 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.145467936 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111995537 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.133740654 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111679762 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.13908287 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.137998065 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132612653 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.132522279 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115065893 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.144562004 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.11361394 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.135122845 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.123607443 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.149060292 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.14447696 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.121391899 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.234065055 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126050763 seconds)
  done (took 9.003263918 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.963286074 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.181486236 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10900349 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.129960236 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145215055 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15295836 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.204163028 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.139363726 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.316775733 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.946450538 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.152275179 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122642856 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.30737007 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.300898275 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.223688586 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.415665896 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.810406312 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.148782599 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.141081977 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.190122048 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142290153 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.169113384 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135791677 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.491432029 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.133539125 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107684042 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.14001195 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.143426301 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.20995146 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107219218 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.13509334 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.234080526 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.313394471 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.267004381 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110495172 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.128658202 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105672027 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.215390048 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.33918634 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.282734112 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.212258497 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102814346 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.128712123 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124555632 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.15831893 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101968011 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.236066085 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.222514998 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.222433993 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.135520574 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121577479 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143631272 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.145001356 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.210411001 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103567806 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.410943298 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.424055004 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106018478 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144157678 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.151683142 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.30926783 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129204845 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.298592336 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142548027 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.277646671 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.105573823 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.870458197 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.212902673 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.128651869 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119315457 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.141411786 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114899805 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.145847507 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.206666472 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.461411498 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.149038609 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114621036 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128381266 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.264449928 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.128356279 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106871152 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.212008752 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132921894 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119311737 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.150429403 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.147562162 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.22121749 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.297554489 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.149112474 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120047506 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.137077569 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146070386 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.112212551 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.26409595 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.294261079 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.20637472 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.264503647 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.147513497 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.212740741 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.235439138 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122397171 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.219388769 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.141802216 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.151038787 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125035743 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.287882781 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.180108091 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10662976 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.137941527 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140150911 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.179983303 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111244958 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.14534478 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.217306378 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.535731146 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.215091929 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.126646922 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111829107 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14392846 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.211587796 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14048176 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.306329141 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144646726 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.217288212 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.140606052 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.10384059 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.141966593 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.215485192 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.147173956 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121723694 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.148649274 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118137841 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.322040246 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.265059395 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.148576451 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.302712837 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.193442876 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.141988428 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.223320326 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.145040229 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.218662008 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.143505953 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1237048 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134761072 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.867451301 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126591377 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.142038624 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114133261 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.230461239 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129869507 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107840343 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.129244755 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104695916 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.879687845 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.11022267 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.125692661 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.108918891 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.141292393 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120278785 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141222464 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114570273 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.209428856 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308032932 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.146573306 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.139931913 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108257312 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.20937467 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.133097665 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107273882 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12903026 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10864362 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.142641664 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114225992 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.130114074 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.223851435 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.208052919 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.296555955 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.613717012 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12999393 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107454674 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.306708407 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106580438 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.381713592 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14298973 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.300070156 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.21865893 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104373556 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.413657789 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.218536343 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.228399548 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.132415788 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.223014552 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103779286 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141259715 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.211510508 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.128647836 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11886257 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.206581384 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.152388679 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149705465 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.204449525 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.130663141 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.280512629 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.126984495 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.22000582 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111434004 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147545057 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.38437664 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108452272 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.155845541 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.211661253 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13629948 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108340794 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.0853981 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.130737819 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121981339 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.143428864 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.301815094 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.216016137 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.143169447 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119255825 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.146840691 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.211660893 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.26271775 seconds)
  done (took 52.980058833 seconds)
done (took 70.267387675 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.409464355 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.341432424 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.376241652 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.255350822 seconds)
  done (took 2.338152278 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.226749405 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.19298382 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.155640811 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.129386947 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.189717299 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.107486219 seconds)
  done (took 1.864569662 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.64971486 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.567685684 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.437872632 seconds)
  done (took 2.517912634 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.30587551 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.329165315 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.377875735 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.574284469 seconds)
  done (took 2.571531749 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.25407708 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.127639804 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.143237807 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.162423015 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.188305458 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.278046957 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.173227996 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203973446 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135510996 seconds)
  done (took 2.585591421 seconds)
done (took 12.74047483 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.311691163 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.283231769 seconds)
    (3/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.195742326 seconds)
    (4/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.195045614 seconds)
    (5/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.127602085 seconds)
    (6/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.286058047 seconds)
    (7/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.315938699 seconds)
    (8/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.180998858 seconds)
    (9/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.168654683 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.12833884 seconds)
    (11/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.178228807 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.150254437 seconds)
    (13/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.267773782 seconds)
    (14/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.118150027 seconds)
    (15/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.240440252 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.139432848 seconds)
    (17/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.193283374 seconds)
    (18/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.121952613 seconds)
    (19/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.138047617 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.14856721 seconds)
    (21/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.135585097 seconds)
    (22/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.156876822 seconds)
    (23/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.253489478 seconds)
    (24/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.261968266 seconds)
    (25/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.142193856 seconds)
    (26/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.212882099 seconds)
    (27/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.123992112 seconds)
    (28/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.332704213 seconds)
    (29/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.159390783 seconds)
    (30/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.237483898 seconds)
    (31/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.171836848 seconds)
    (32/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.241748598 seconds)
    (33/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.110599766 seconds)
    (34/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.246717916 seconds)
    (35/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.176715619 seconds)
    (36/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126187225 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 0.261842636 seconds)
    (38/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.234058914 seconds)
    (39/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.270538027 seconds)
    (40/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.316998397 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.172961422 seconds)
    (42/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.236159402 seconds)
    (43/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.122566571 seconds)
    (44/286) benchmarking ("sort", Float32, false)...
    done (took 0.204589853 seconds)
    (45/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.217613411 seconds)
    (46/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.257553756 seconds)
    (47/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.278590836 seconds)
    (48/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.247371042 seconds)
    (49/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.12206524 seconds)
    (50/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.230547869 seconds)
    (51/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115626938 seconds)
    (52/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.131919427 seconds)
    (53/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.217636981 seconds)
    (54/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.192814673 seconds)
    (55/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.114580853 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114351977 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.171310545 seconds)
    (58/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.145911322 seconds)
    (59/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.107717867 seconds)
    (60/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.098604108 seconds)
    (61/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.137710718 seconds)
    (62/286) benchmarking ("sort", Float32, true)...
    done (took 0.26826912 seconds)
    (63/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.146473868 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112618104 seconds)
    (65/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.123072646 seconds)
    (66/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.234629639 seconds)
    (67/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.183811219 seconds)
    (68/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.135337617 seconds)
    (69/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112191564 seconds)
    (70/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.221276953 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.115310944 seconds)
    (72/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.237390953 seconds)
    (73/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.225686807 seconds)
    (74/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.089261519 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.139409271 seconds)
    (76/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.22774068 seconds)
    (77/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090840333 seconds)
    (78/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.112517685 seconds)
    (79/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.111919199 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 0.104675415 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.139897446 seconds)
    (82/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.092253508 seconds)
    (83/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.13752922 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.173898727 seconds)
    (85/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.104924836 seconds)
    (86/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.140364562 seconds)
    (87/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.213470616 seconds)
    (88/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.186585895 seconds)
    (89/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.161115553 seconds)
    (90/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138632443 seconds)
    (91/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.140626331 seconds)
    (92/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.122087817 seconds)
    (93/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.146807311 seconds)
    (94/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.173050679 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.148938408 seconds)
    (96/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.239835298 seconds)
    (97/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.147471079 seconds)
    (98/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.12097432 seconds)
    (99/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.18896152 seconds)
    (100/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.093261411 seconds)
    (101/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.115834232 seconds)
    (102/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.232597217 seconds)
    (103/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.117478965 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.146622623 seconds)
    (105/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.091671064 seconds)
    (106/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.124923904 seconds)
    (107/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.162223523 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.138655887 seconds)
    (109/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127443095 seconds)
    (110/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.136642134 seconds)
    (111/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.167922511 seconds)
    (112/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.118680489 seconds)
    (113/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.133557409 seconds)
    (114/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.123217929 seconds)
    (115/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.16623123 seconds)
    (116/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.092794413 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 0.231583011 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.144660846 seconds)
    (119/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.125442363 seconds)
    (120/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.215915103 seconds)
    (121/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.214848659 seconds)
    (122/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.122713466 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.147523236 seconds)
    (124/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.09224152 seconds)
    (125/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.23699552 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.135886401 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124069947 seconds)
    (128/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.135943779 seconds)
    (129/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.09253174 seconds)
    (130/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.149833586 seconds)
    (131/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.091172081 seconds)
    (132/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.182589722 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.123176561 seconds)
    (134/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.140839674 seconds)
    (135/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116935411 seconds)
    (136/286) benchmarking ("sort", Int8, false)...
    done (took 0.240018006 seconds)
    (137/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.113724536 seconds)
    (138/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.092414242 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.105384272 seconds)
    (140/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.139202711 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115656849 seconds)
    (142/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.11541086 seconds)
    (143/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.152477435 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.150283755 seconds)
    (145/286) benchmarking ("sort", Float64, true)...
    done (took 0.270682354 seconds)
    (146/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.130014576 seconds)
    (147/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.09263505 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.112696008 seconds)
    (149/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.139396847 seconds)
    (150/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.092697434 seconds)
    (151/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.153414105 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.121900668 seconds)
    (153/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.147859165 seconds)
    (154/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.115593638 seconds)
    (155/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.150907124 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.115238751 seconds)
    (157/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.173566152 seconds)
    (158/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.089491141 seconds)
    (159/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.134860356 seconds)
    (160/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.163963192 seconds)
    (161/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.092887679 seconds)
    (162/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.092077995 seconds)
    (163/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.115768067 seconds)
    (164/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.092619432 seconds)
    (165/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.192061089 seconds)
    (166/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.106409772 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.138823871 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.115344712 seconds)
    (169/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.113388907 seconds)
    (170/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.137805197 seconds)
    (171/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.131288239 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11575068 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.146457049 seconds)
    (174/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.125905356 seconds)
    (175/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.113760348 seconds)
    (176/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.1250045 seconds)
    (177/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.114658964 seconds)
    (178/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115863987 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.139057438 seconds)
    (180/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.14829969 seconds)
    (181/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.115148721 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 0.264087504 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.112429801 seconds)
    (184/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.114340007 seconds)
    (185/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.122218348 seconds)
    (186/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.193681626 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.11605257 seconds)
    (188/286) benchmarking ("sort", BigInt, false)...
    done (took 0.303835399 seconds)
    (189/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.13475292 seconds)
    (190/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.138939326 seconds)
    (191/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.113637307 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.140367818 seconds)
    (193/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.113282269 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.14972727 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12396053 seconds)
    (196/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.113017195 seconds)
    (197/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.093795175 seconds)
    (198/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.120918387 seconds)
    (199/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.202429242 seconds)
    (200/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.143260549 seconds)
    (201/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106993155 seconds)
    (202/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.141155337 seconds)
    (203/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.09078269 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.133874807 seconds)
    (205/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.288077126 seconds)
    (206/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.118294988 seconds)
    (207/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.189451534 seconds)
    (208/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.128279663 seconds)
    (209/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.139189822 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.112173515 seconds)
    (211/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.115233151 seconds)
    (212/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.145453351 seconds)
    (213/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.119774306 seconds)
    (214/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.092593011 seconds)
    (215/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.090240178 seconds)
    (216/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.137855308 seconds)
    (217/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.089670207 seconds)
    (218/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.126099984 seconds)
    (219/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.093062022 seconds)
    (220/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.114111549 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.116787759 seconds)
    (222/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.133639662 seconds)
    (223/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107924373 seconds)
    (224/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.138337502 seconds)
    (225/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.093729635 seconds)
    (226/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.212977914 seconds)
    (227/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113569952 seconds)
    (228/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.114630036 seconds)
    (229/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.09789606 seconds)
    (230/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.091931853 seconds)
    (231/286) benchmarking ("sort", Float64, false)...
    done (took 0.20422904 seconds)
    (232/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.159912605 seconds)
    (233/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.091975677 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.130770061 seconds)
    (235/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.113119363 seconds)
    (236/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.144571793 seconds)
    (237/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.115809687 seconds)
    (238/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167603089 seconds)
    (239/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.092290206 seconds)
    (240/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.186962853 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.116836063 seconds)
    (242/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.115920626 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116999598 seconds)
    (244/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.098195489 seconds)
    (245/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.162292744 seconds)
    (246/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.097823966 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.148912379 seconds)
    (248/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.118047467 seconds)
    (249/286) benchmarking ("sort", BigInt, true)...
    done (took 0.292249914 seconds)
    (250/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.119235851 seconds)
    (251/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114337753 seconds)
    (252/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.117408625 seconds)
    (253/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.128697766 seconds)
    (254/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.114451179 seconds)
    (255/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109000801 seconds)
    (256/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.174387124 seconds)
    (257/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.124836376 seconds)
    (258/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.135037103 seconds)
    (259/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118128193 seconds)
    (260/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.139207486 seconds)
    (261/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.140101918 seconds)
    (262/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.11593101 seconds)
    (263/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.098771178 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.140897198 seconds)
    (265/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.119479039 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107632312 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.134302891 seconds)
    (268/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.091402102 seconds)
    (269/286) benchmarking ("sort", Int8, true)...
    done (took 0.262038894 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.150140621 seconds)
    (271/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115304275 seconds)
    (272/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.136998828 seconds)
    (273/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.09512247 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.137592774 seconds)
    (275/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.114537185 seconds)
    (276/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.115046922 seconds)
    (277/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.115226764 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.140647721 seconds)
    (279/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.090650931 seconds)
    (280/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.135559967 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.112244621 seconds)
    (282/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.136393196 seconds)
    (283/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.093886095 seconds)
    (284/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.090616007 seconds)
    (285/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.115346526 seconds)
    (286/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.115809842 seconds)
  done (took 43.952869835 seconds)
done (took 44.826175773 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.126464286 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.178222937 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.121407979 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.167134994 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124131345 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.150771846 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.142155078 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.123668027 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.146931358 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126823659 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.151194277 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.10247513 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.143477266 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121223445 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.144690365 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142598523 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.148453025 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.117675413 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.135808062 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.113056893 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.135567274 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113801007 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.138579032 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.10195149 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.142877309 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119368524 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.139515074 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121295902 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.138066443 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108704495 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133439106 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116543292 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.133791137 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123668232 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.136430143 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.112906386 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.14453791 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118534831 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.138623092 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.114400365 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115487437 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.138762936 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.114597688 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.140714714 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.112085089 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.135608181 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.112579302 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.149540357 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166737072 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111508866 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.115690836 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.145132908 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.123524085 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.141187596 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.109924063 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.135473664 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.113538994 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.168567948 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.112229171 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.136190918 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115697536 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.140162127 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.112473704 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.135860514 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112618116 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.143963078 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119825564 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.135964448 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.119406893 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.155440017 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.107003621 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.136316132 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.110309512 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.132336345 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.118885022 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.141295308 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.105469181 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.111734204 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.139193492 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.114320284 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.136398984 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10891649 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.13948649 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113147019 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.132515653 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103389492 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.134016247 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.114416217 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.135984968 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.112550768 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.137172556 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.115407446 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115111159 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.145149623 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.136985882 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.1149016 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.13701685 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.114385426 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.139121914 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111452041 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105033398 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.132600294 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.115662792 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.131920971 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.113052676 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.148808835 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110809181 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.138072141 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.114031618 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.136570824 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.128302372 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.143572127 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.114498707 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.134627652 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.108129974 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.140932946 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112020828 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.132977379 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110528167 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.137166264 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11396179 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.137440484 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109252849 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.140832663 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12454759 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.106043968 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.136029855 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109014716 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.137912818 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.114930426 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.139093897 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.109402006 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.136108677 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.105298067 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.131549465 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109706847 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.14108046 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109780395 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.111798505 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.137642014 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.111844985 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.138256009 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113218013 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.139568456 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109898287 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.126344139 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111119912 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.132278349 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.115891996 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.137803655 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114571361 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.129497712 seconds)
done (took 20.241722983 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.126285996 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.222386424 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.175546316 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.157288956 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.190918026 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.167312126 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.151404076 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.159012501 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.149630313 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.179347964 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.15536755 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.165882805 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.180183047 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126200201 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.167256364 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.144455609 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.120711428 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.162787663 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.187528381 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.147902667 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.176007738 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.150344014 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149329974 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.177376981 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118577596 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.187313591 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.152619927 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.121455806 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.151896704 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130029709 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.166509415 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.153909334 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.126908054 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.161205949 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.126269959 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.142417079 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.166587935 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114217256 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.147873699 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.123034884 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.160273297 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133312955 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.142134028 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.160230162 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.123070608 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.151377263 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.120947571 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.144754211 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.121232762 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.13932619 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129204028 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.173156656 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.146300963 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.126834555 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.151155242 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121190937 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.150802916 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.150935519 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.126644042 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.1515195 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.123663179 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.150744087 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130748791 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.1720214 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.146768651 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.126644948 seconds)
  done (took 10.777796397 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.145600628 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.182245725 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.126995105 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.152491947 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.151958771 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.106422636 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.130225426 seconds)
  done (took 1.932195322 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.113102913 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.170043594 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.152111909 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.175054055 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134838317 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.181412793 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.155884526 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.108409709 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164022684 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.124416111 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.167375326 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.203313276 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109768665 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.150798771 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.152946942 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.133418311 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.179119494 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.10879649 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143501367 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.150948906 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141745745 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136105899 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.155382635 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.109822955 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.158882286 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112439734 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.22079425 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.152527556 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10825207 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.145325337 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118490929 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.230800902 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.16050549 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.122928628 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131846419 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.170275292 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135414088 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.141956413 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.141083938 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.142010275 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.135430204 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.1446686 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.121597849 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.143807579 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119729844 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.15033105 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.127220601 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.146538165 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116705793 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.168374338 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.149937966 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.137276801 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.136774352 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114929337 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.150995514 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117643334 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.153395424 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119319819 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.168101593 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121505405 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.169202084 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.168755078 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.136814301 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.168834183 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13299862 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.1609126 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.160448311 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117630944 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145546615 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121849414 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.169468891 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116526548 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.150648563 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.126859262 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146854482 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.141651186 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.165745787 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115155851 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.150088203 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115740405 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.139085207 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.109284299 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.153266705 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114842413 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.138814604 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134974823 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.151673362 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.118514437 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.140781048 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.166799407 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117835847 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.152718746 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.127534125 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.14164328 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133603352 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.172026996 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.152209472 seconds)
  done (took 14.843648672 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.117196886 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.111096428 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.144466512 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113358027 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.135843272 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.111823538 seconds)
  done (took 1.676392709 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.153248392 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.140778845 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.130335291 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.14524152 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.187133172 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.137245049 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.162183439 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124954114 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159994672 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129702907 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.162091348 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.16311934 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.148561352 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.145712455 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.13673868 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.146583943 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.138350212 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139899754 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130361538 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138897974 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.129669394 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146230807 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114698224 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.164718342 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.143197001 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122145234 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.143919694 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130969269 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.153643733 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125091714 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.144973065 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118775759 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.14566019 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125056527 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.16340434 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.144662898 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113318464 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.145529975 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121340496 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.142827227 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.139916067 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138424599 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129826719 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.146138786 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124771121 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.146978417 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120736822 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.143268686 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136509969 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.146048647 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12009675 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146201582 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118308825 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.146391035 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120050944 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.149626708 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.145842955 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.138595044 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145160178 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122114009 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.141734128 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119535224 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.150415571 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119437261 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.143544908 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120772644 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.145997066 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114160248 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139919495 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120753441 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.145456508 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11753679 seconds)
  done (took 10.913761807 seconds)
done (took 41.067354544 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.726060041 seconds)
  done (took 1.665704812 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.994248838 seconds)
  done (took 1.938370379 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.747805022 seconds)
  done (took 18.72345044 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.659335111 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.807808983 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.259044293 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.196895798 seconds)
  done (took 3.867870226 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.025718343 seconds)
  done (took 1.987123793 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.370068136 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.286931531 seconds)
  done (took 1.609080046 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.902400059 seconds)
  done (took 1.86430977 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.719492321 seconds)
  done (took 2.680007177 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.448555105 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.228918957 seconds)
  done (took 1.642625578 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.675455235 seconds)
  done (took 1.635689472 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.767980217 seconds)
  done (took 16.731817117 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.29457135 seconds)
  done (took 1.269475694 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.351305912 seconds)
  done (took 1.312912793 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.816698549 seconds)
  done (took 4.777497885 seconds)
done (took 62.658034646 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.128615405 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12602927 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.15316271 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123006675 seconds)
  done (took 1.488821533 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.135628785 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.148576169 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.128646072 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.147172447 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132997912 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.149206289 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.118944406 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.155266239 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121502577 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.150392964 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123718527 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.148160681 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.12492228 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.144695356 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.11829811 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.150656554 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126756356 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.149730471 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121712549 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.150123461 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119002507 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.150204488 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.150848199 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12210361 seconds)
  done (took 4.261154592 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.125457934 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11616108 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.143667012 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.115862471 seconds)
  done (took 1.473902179 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.133876287 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.165355394 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.13870541 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.154723229 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141176703 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.165606949 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115118247 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.141899375 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117832317 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.154601714 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117721178 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.167713287 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.164812994 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.111102946 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157110544 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.108085177 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.138761314 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.140759275 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.154768482 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.130771213 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.140880833 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128275246 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149758311 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13314424 seconds)
  done (took 4.346021781 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.224819983 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.15913269 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.170930574 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.126073667 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.207023811 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.173864495 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.114629996 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.173421956 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.116512509 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.169310211 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119447704 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.206944266 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.168057528 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121040768 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.145319296 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.153047274 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.141835636 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.173618229 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.118837983 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.158620204 seconds)
  done (took 4.116672054 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.130466597 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.140918555 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.11124709 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115403387 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.150564788 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.118035548 seconds)
  done (took 1.740596923 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.114966012 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.107556747 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.135706888 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.10843088 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.139283373 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10855312 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.106591798 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.134590917 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.107925775 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.134163693 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.108330115 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.107249566 seconds)
  done (took 2.390673149 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.511321802 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115154416 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.155847155 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.116973221 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.168330664 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.139418297 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133664139 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.139289904 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.209915602 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.127523081 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.16044604 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.20724448 seconds)
  done (took 3.160166269 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278441898 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121579217 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.347593291 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.496692366 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196434336 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212362673 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.376587663 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210969143 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.242647092 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169687684 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250967073 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196197519 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188634676 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224990472 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148716074 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.21929723 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226561511 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267252552 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186366371 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270775594 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217638733 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213802772 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.235521342 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188392448 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172456754 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20806821 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116503416 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156573735 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228500171 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219072305 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240443325 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193235233 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146556732 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297239597 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29737408 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244838816 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.466491849 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166683356 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.227375187 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.23687698 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.309794093 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176419304 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.270221105 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194012243 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134905092 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235871674 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200463117 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.231520721 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.160801644 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173732555 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25993903 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225366365 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.24041181 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17322139 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.397302681 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182931327 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.178126015 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237764152 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260460256 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250422594 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214514118 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.149128988 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.272098854 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231126524 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237277089 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.179103276 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.219348823 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155210436 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226193598 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.255459573 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235711103 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216132656 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.310347646 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140756196 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21428742 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216977568 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191647822 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229149812 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202232146 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118623602 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186700327 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170121101 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128998796 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.219638978 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120945806 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.301882037 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142113318 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.324889728 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309156507 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17286266 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209686043 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213084167 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219473849 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182293209 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.144512909 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155512886 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.204640021 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196855797 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163514633 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171348361 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181588913 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.153451446 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187658924 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120677789 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202159743 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136063278 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214883444 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210385233 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.158440094 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209924882 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185438591 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.175600273 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220695766 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240986075 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164636513 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161773535 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256097826 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198847743 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140191102 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225216374 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.242672073 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.209794617 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171868702 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22597352 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260297729 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177128815 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250190872 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180242215 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140012583 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.196775514 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204151523 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204125159 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164550453 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15776419 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.195453806 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253812529 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153374918 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13987619 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225048759 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154232044 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128576988 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180892641 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168961502 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.145786033 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.189237606 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.16981071 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201363171 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172462583 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192857982 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208643863 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184805272 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271392114 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163971617 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.201186314 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153589611 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.141643437 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.233825242 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242599552 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128843642 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266641472 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.21585615 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286535809 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210809761 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160121767 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.234399068 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129612482 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.14403472 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219042309 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207183646 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209941784 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.236756818 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288037338 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.216059864 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.193148681 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185906232 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22109743 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.224278288 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213298041 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.179821651 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182337997 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249568488 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120008246 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.148854482 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127369302 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173606522 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134296386 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161534044 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247767703 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212274808 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.304186512 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206637223 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146219765 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236085409 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.151692378 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212339866 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.224963186 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141692533 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.269981413 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233052453 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215129731 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149414857 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230097725 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.144521909 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123341988 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.163726412 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214942459 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133428568 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167189839 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18872372 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23786593 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227597565 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186721566 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303078429 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214834606 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276269727 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120929364 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.193705081 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216827539 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171900947 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.224022538 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164348092 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.204868588 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229514919 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156403363 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262523753 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208068644 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221651572 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.305068627 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.195715048 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133330436 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18796491 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214655931 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178388825 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17636011 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182563493 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1681656 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167684661 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.170281449 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154680929 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248466504 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174717611 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25092938 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.197696072 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240791225 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123493922 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188135357 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204027627 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177489478 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114999677 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217686937 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250896482 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184798276 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201754708 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225686355 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157595005 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.40778843 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251500554 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247192022 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171954553 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178977865 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176964803 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201422527 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211722141 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2353523 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185151703 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236511529 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199356844 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.148230888 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169180445 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181959094 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160528266 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.197684915 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.167515642 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.194890393 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.145753419 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285208153 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1516835 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19925948 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216632958 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.176449938 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.19152642 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14643727 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265302243 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199396232 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2325387 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.195322095 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.211345104 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241909595 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1200339 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155850973 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.152112991 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20684725 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161052343 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204871583 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.296955866 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299438816 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203109519 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215033492 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167514405 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121259052 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204764233 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185894285 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.317957948 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15744758 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.166760709 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248634303 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.183519455 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130162416 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207508275 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399495349 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178206389 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22553388 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.118701514 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.360057141 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151065779 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15996919 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173836697 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219545049 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161807249 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.219823056 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187817123 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185315996 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20200241 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170104193 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.275987697 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310500561 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228620181 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231489408 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.152040347 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204554543 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21116044 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226606753 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180055058 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.179760716 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17309892 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237304055 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.268069168 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.1352164 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207720046 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208798742 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20487636 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247291265 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162092934 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240040742 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131183011 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218914569 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178932607 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121889568 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195086613 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.291760074 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138228088 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22459236 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198994671 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16047377 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125396014 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196168126 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198750829 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181685808 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128496997 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244586737 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.154446478 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211159404 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229808945 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129294965 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19495975 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181531868 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130046091 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179498342 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184685699 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139148051 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.203960023 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241184332 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.160588048 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227921272 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23210553 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212719525 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204888515 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149520882 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.697267347 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.124883049 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232618969 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180525511 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25247327 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183115728 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217995932 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206125183 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15541282 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221368714 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188632842 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.256487944 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220168665 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.202729947 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130324126 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185352547 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182391121 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.132693469 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188711624 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207591971 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172250879 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.137506009 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.200147961 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184216511 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.183318962 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139674311 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243676013 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181497479 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248268162 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238164696 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171979787 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215867502 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247381924 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128157534 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.207908176 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220978586 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17841477 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198324071 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.127893612 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.165376151 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230503317 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.119243009 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206313367 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204611312 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208385797 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209641049 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.139246632 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205964575 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181459044 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205561393 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122714113 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.194692801 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199457546 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159608898 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127202467 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195112506 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207883568 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.200467116 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125234171 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.204425083 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236658117 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121738101 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164827341 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.377582215 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195620413 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255406659 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.194160726 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16499965 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145441475 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199744333 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.192913762 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202108185 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127416412 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160454014 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.160480111 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.190002757 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.191560655 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199989272 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245647249 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206016512 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242201052 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.162023971 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.273658717 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170199596 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195622029 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.136435103 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.156739083 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174448096 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13764084 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185522538 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.305662746 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230255236 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.161653588 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.183348867 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156087649 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124304907 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160742555 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17410933 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195693674 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199339397 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184591908 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.114227711 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182248578 seconds)
  done (took 97.684481168 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.186769027 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.189923618 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.195151384 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.245170216 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.217566198 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.298676214 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.25900891 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.274136344 seconds)
  done (took 2.926908709 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.133022126 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.165974438 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.175266381 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.126322964 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.140874438 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.453652795 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.170556004 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.154227836 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.150674702 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.196243837 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.115663 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.760092815 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.121825326 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.154947935 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.137448821 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13882226 seconds)
  done (took 4.357465403 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.905468133 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.607690989 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.365555318 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.307145289 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.290903459 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.21209025 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.817187048 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.249831712 seconds)
  done (took 13.814479896 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.155590874 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.16586422 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.17224873 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.195868811 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152085481 seconds)
  done (took 1.908292526 seconds)
done (took 144.627430732 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122960567 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124498692 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.149314143 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.123627729 seconds)
  done (took 1.573036701 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.135255475 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.102868875 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.13172766 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.099703467 seconds)
  done (took 1.538647202 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.539490987 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.130289201 seconds)
  done (took 1.774003237 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.152938848 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.160384626 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.134162407 seconds)
  done (took 1.514679743 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.134715379 seconds)
  done (took 1.20464457 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.125951443 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.123868198 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.16774135 seconds)
  done (took 1.487271077 seconds)
done (took 10.159565635 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139180904 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.47183928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410827175 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.163943828 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.726264666 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431213596 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.071966747 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.167521052 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201558879 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141004079 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136512924 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.722473478 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.064301255 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.396118118 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.04669266 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.393863566 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697661757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144169098 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123392852 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143089129 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017389383 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139918459 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116169858 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143490489 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.69711531 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420733614 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.143845177 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.413272078 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112921823 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121811735 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.4348739 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11344563 seconds)
  done (took 17.724772709 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121049506 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.218845383 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.124408026 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144178144 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120410226 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.143305315 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126854879 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.163994095 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.219732107 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112966387 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.16608134 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112608333 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.147502263 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.114079157 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.168077689 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.114865196 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.144616999 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118975709 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.150724871 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117622479 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136254434 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140704733 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116179934 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14551193 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113562634 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158531019 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113652309 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.162396209 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112760932 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.150653175 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120920315 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143123934 seconds)
  done (took 5.540032037 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.171611641 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.231424312 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.153165646 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153211538 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.208869012 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114954409 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.245993735 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.198259135 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.223974991 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141255003 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138092926 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112566004 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.186437068 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142299799 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140243219 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.142274438 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119239299 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145160294 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124835893 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143680282 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138788982 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140154834 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116907277 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116290705 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.143683287 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130900477 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.144542538 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.161858847 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115378774 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121594752 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.149942085 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.114001634 seconds)
  done (took 5.90364078 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128709667 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.154478285 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136309916 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164996942 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117395434 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.151676744 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.12628178 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.117030538 seconds)
  done (took 2.175449031 seconds)
done (took 32.410187444 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.137086281 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.119927107 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.158813321 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129369026 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.153807068 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.139912353 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.141299755 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.126589378 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.156917244 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.123271701 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.16179879 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.11441511 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.115162641 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.141611636 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.129301813 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.147872574 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131825605 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.152075473 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.139846755 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.160919853 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.11495222 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.155847331 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124843503 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.169320006 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.140574613 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.16943456 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.132396153 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.151081448 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.114738971 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.144019766 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.133221745 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.172632377 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.120878032 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.162447732 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119772673 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.14664054 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.115299787 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.115454528 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.160973065 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.127136188 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.150254575 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.12673776 seconds)
  done (took 6.915217432 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.152810573 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.193025078 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.110679979 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.140608666 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.112646827 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.190979235 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.157628808 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.140566418 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.111999051 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.174377261 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.175100121 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.112674516 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.110936402 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.140823785 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.111500832 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.140969611 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.143839183 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.173265295 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.1513893 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.177871742 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.199797646 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.153842175 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.182340521 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.145416122 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.192260894 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.185170085 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.141722051 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.186820641 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.17501764 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.111173861 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.182248474 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.150184415 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.140326181 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.111270309 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.19161943 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.185673241 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.14929423 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.191770293 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.181255384 seconds)
  done (took 7.168010403 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.132316302 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131941923 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.17170728 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.22599597 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162874563 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159409512 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.128770746 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.168764106 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.134946054 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.145132135 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125895828 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.185371385 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134970212 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.15428174 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.122073108 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.162216292 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.140350329 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.148802024 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121218307 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.169153512 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136119923 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.162154194 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.130055696 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.155825312 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.116210385 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.162262738 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.12107376 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.16142117 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121752418 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.153864123 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.123035326 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.149921517 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125296679 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.128965277 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.150161811 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.129460171 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.174066139 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.154904178 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127563993 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.186391477 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130783831 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.152601215 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145735804 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.192253076 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117223365 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.155151767 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122451601 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.154579227 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.114418632 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.166420356 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12922439 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.116102048 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.171861942 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.144641163 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.114985789 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132050092 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.14570456 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118540216 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.155375561 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.122872582 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.172964468 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122064842 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.162284777 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118827371 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.151651649 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.115862584 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.143612191 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.127319367 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.172621635 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121790538 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.192943446 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.123454374 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.153775318 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.124300164 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.151907196 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126405899 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.144927723 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13227296 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125538983 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.153569577 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128207551 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.149182608 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.120531022 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.166496639 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.141068638 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.159701801 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.153352833 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124620318 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119928202 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.147165044 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132938798 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.147137031 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120280233 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.164415042 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117565818 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.149044423 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124574846 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.152651736 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.115040817 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.160859933 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.123665708 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.143587135 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.127497596 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.11728834 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.15086237 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.127335628 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.150644806 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.11686211 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.152139461 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.12502976 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.144672566 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122114568 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.14971588 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.119932378 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.163250192 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.126134237 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119402778 seconds)
  done (took 17.701431405 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.301138138 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.264848125 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.244749074 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.369072096 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.176228878 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.149093711 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.259751403 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.20959067 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116278876 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.202848147 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.220400305 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.229579578 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.213163443 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.223812102 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.222246061 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115231313 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.174417427 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.210526475 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.264529456 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.333146923 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.175240282 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.165848632 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.171809921 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.202753307 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.171091878 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.137630094 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.175318197 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.175038471 seconds)
  done (took 6.982512482 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.145639384 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.196362716 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.124921357 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.183411863 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.179536415 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.117029253 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.151441395 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116435826 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.165059721 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137389234 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.148687169 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125696951 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.153451483 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.128976579 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.144719102 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.127072016 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.157467656 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.129808603 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.148845606 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.122010141 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.170103599 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136546692 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.152383576 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.125442136 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.169508257 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124964817 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.149119063 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.176516528 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.127890561 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.182660106 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.111703208 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.156823226 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133382746 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.145107725 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.126839666 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.148613631 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.118468885 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.147112144 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.118852886 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.111970568 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.145443461 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.10354442 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.155682853 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13608767 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.155893942 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.119042654 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.153470389 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.120649153 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.152113304 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.111834864 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.147782043 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118647773 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.150200747 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.138029532 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.149318854 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.111903132 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.119860458 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.13723877 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.128479327 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.148822192 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109620137 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.15462353 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.108917134 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.151209857 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127881415 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.138845717 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125532455 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.147914834 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.122235222 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.155034675 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.119442902 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.132963001 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.144332019 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.116831969 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.16114289 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.132939733 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.150816697 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124268816 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.157436991 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115187332 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.131716342 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114606356 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.100159023 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.153384854 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.114246074 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.154998995 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.118547376 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.153414854 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.168302802 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130518952 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.154754017 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116421858 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124843249 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.152660887 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113054751 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.151825653 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137506536 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.174328513 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.114412936 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.144956018 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.140067426 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.148113877 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.113232611 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.136870253 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128858867 seconds)
  done (took 15.637466243 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.182206347 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.220087307 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.146795572 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139358756 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.18905267 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.207311901 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.133529651 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.124884013 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.147480774 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139529099 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.158602854 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.127801669 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.157704416 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.1339013 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.20652063 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.157779011 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.118184781 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.165021524 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123789327 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.223232372 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.138910784 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.204087456 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.2129023 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.162572183 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.12225325 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.20248901 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.21124353 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.132044663 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.160501239 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.183712762 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.16256195 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.210108697 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.214066408 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.124102438 seconds)
  done (took 6.764036465 seconds)
done (took 62.246457605 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.212221851 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.418602412 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.184980919 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.187924616 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.182342777 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.211421462 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.197813748 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.398849408 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.923810414 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.170807885 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.188804496 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.18929716 seconds)
done (took 27.569967597 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.316096543 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.339835212 seconds)
    (2/2) benchmarking "String"...
    done (took 1.493837485 seconds)
  done (took 3.949204952 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.184510062 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.185807088 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.426467383 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.184869021 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.201758075 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.185912686 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.197094361 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.185084113 seconds)
  done (took 15.66507197 seconds)
done (took 25.21376203 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.200852948 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.52376289 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.551407353 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.20281297 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.186030468 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.196601511 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.19056948 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.24729808 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.199784116 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.187485655 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.198065539 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.490556528 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.200566415 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.623274379 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.185363061 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.18549462 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.209927801 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.556028462 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.186410155 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.226701291 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.168345049 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.169936251 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.20725138 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.205111865 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.194774925 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.200595258 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.248122813 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.197343355 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.502609959 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.191412382 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.228217894 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.186127957 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.254894554 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.186330445 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.313819682 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.219243903 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.487563257 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.195638261 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.175014112 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.202262075 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.484159013 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.616016666 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.192854494 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.190723464 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.196648524 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.261018127 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.169461072 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.903660501 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.189209569 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.18799023 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.235983673 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.635806408 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.194820034 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.194583585 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.198462474 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.544757677 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.18959025 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.258635079 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.212299586 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.201497097 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.197748327 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.190374293 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.216865205 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.197061648 seconds)
  done (took 143.643863668 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.195551344 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.194333295 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.1942829 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.213369488 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.193213438 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.193328666 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.193657415 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.194931267 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.192679814 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.195607718 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.193064315 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.191682148 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.194795182 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.205626727 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.195818166 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.20837347 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.195024539 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.209695822 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.210295502 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.197788565 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.203530857 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.195002739 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.192235396 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.191890804 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.212734763 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.282540174 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.199656956 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.208738127 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.190582794 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.198167154 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.204074248 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.202491674 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.840739888 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.043624018 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.215650008 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.235510676 seconds)
  done (took 79.882914261 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.195447611 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.191564183 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.199028307 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195796075 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.232198065 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.193876296 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.78048993 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.789751395 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.986273268 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.409520732 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.676257622 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.545861386 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.196083179 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29495344 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.20751419 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.198205622 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.216132377 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.226598782 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.192065473 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.20096633 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800438533 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.212316554 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.50965898 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.376449231 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.210752615 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232405748 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.591604798 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.191926292 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232910711 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.536318871 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.246291971 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.193962588 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.631061534 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.129515683 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31211174 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195802074 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230910627 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.198300262 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.484891045 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191963659 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.201080099 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.203997577 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.94298223 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.19848859 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.7847842 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194421589 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.176239183 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.194252061 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201804806 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.406456906 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.922911751 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.191889685 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.198649472 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.1979019 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.206446387 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.197921373 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198278102 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.198488003 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.232221254 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.407938063 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.320434808 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.201773678 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.205317805 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208104222 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233360432 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.200362787 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.685964202 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200172187 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.363648608 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.255156113 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.309497638 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.801957243 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19917922 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300899826 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319356518 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.196020155 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.204744803 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20409161 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.202871428 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.316576061 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.197384937 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.623509556 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.374089412 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.215081568 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.710950163 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.300831276 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.200921886 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.684986366 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.202044646 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.205852274 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.985900509 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295926883 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.196012182 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.204104001 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204178823 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.623934927 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.799964964 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.558808184 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.201879711 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.591490565 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.201042317 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.631621141 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.782176512 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.978887483 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.205620793 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316420764 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.377828789 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.21659684 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.197871769 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.718332157 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.204705519 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.261983357 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.202248765 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.601146589 seconds)
  done (took 367.61043839 seconds)
done (took 592.240025142 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.906040879 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.857917506 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.99784831 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.89191889 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.857284052 seconds)
  done (took 10.622157462 seconds)
done (took 11.733597634 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.406454414 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.402391496 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267137906 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.405545196 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239050777 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.433156632 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385743815 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.223271064 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.313214714 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.290322732 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.313085375 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.258865478 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243812288 seconds)
  done (took 18.292953653 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.477440157 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.20285047 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284002004 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.458648189 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24035532 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.487467798 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.509325744 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.198629493 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342331426 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.216797266 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217474241 seconds)
  done (took 17.753634705 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.483092594 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.200728883 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269654668 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.467732626 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24139472 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.484119337 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.516958779 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.200594343 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.34469884 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.218274557 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223149747 seconds)
  done (took 17.764393108 seconds)
done (took 54.923894585 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.25055118 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.379197422 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.238903725 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.2191022 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212369457 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.21419308 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.218251868 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.222227093 seconds)
  done (took 11.071105143 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.212260874 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.214720743 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.209041599 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.213655352 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.21298096 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.208462343 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.215820935 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.212649515 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.212363462 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.211734767 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.210463085 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.213577774 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.216694491 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.215565455 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.21298729 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219575179 seconds)
  done (took 20.524985446 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.218988632 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.215398464 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.216749678 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.212176277 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.211610374 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.216363317 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.216144099 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.211543738 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.215242663 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.212494051 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.216027795 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.213334139 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.21229883 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.215668988 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.214035492 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.212845829 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.212550655 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.213630616 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.218877438 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.213663967 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.212988942 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.212968203 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.215359443 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.217428777 seconds)
  done (took 30.267684633 seconds)
done (took 62.97754784 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.20792529 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.226450636 seconds)
  done (took 5.550960281 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.27564641 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.277668532 seconds)
  done (took 3.676250135 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.217221228 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.220174926 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.217315087 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.215764085 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.217108236 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.217879256 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.218056573 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.220122271 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.215330349 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.22169322 seconds)
  done (took 13.301319092 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.218062776 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.218232382 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.215881309 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.219200659 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.218565437 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.21632403 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.218737543 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.221875465 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.219507183 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.215625829 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.219259684 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.217549611 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.221058417 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.216810967 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.221252289 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.217249633 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.217529613 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.22013043 seconds)
  done (took 23.052665688 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.236550886 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.241146387 seconds)
  done (took 3.598066466 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.349551614 seconds)
    (2/7) benchmarking "second"...
    done (took 1.261440606 seconds)
    (3/7) benchmarking "month"...
    done (took 1.328217044 seconds)
    (4/7) benchmarking "year"...
    done (took 1.314632706 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.260363356 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.23996958 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.260566878 seconds)
  done (took 10.134816101 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.2212532 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.407397161 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.521220291 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.212041733 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.224351332 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.226016063 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.080849792 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.225254746 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.224476592 seconds)
  done (took 14.464451902 seconds)
done (took 74.89547463 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.214067364 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.224546463 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.240205699 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.238384106 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.580579724 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.248555181 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.213189277 seconds)
done (took 16.081073186 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.197965808 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.196641638 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.20716088 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.21307822 seconds)
  done (took 9.93475158 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.21660025 seconds)
    (2/2) benchmarking "read"...
    done (took 1.562304296 seconds)
  done (took 4.901147198 seconds)
done (took 15.959169639 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223097369 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.222925154 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.222496954 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.219107504 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.220600632 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.223510017 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.218412214 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.220679176 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.221195429 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.220832683 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.224071911 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.222149443 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.219883734 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222448188 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.217756605 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216407051 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217066965 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222113228 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.217855311 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218877267 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221697874 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224690231 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.219490022 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.21900899 seconds)
  done (took 30.420271999 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.224038779 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.223919661 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.22565233 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.224326795 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.222516675 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.228670649 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.226940182 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.221304471 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.223234997 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.225627628 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220895039 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.221004517 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.225082844 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.220775915 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225210742 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.221681104 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.223973505 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221771232 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223766701 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.221401025 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223220042 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223739788 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.223261649 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2263258 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.225082001 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224215453 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.226529473 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.221812119 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224596778 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.224285458 seconds)
  done (took 37.83819321 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.232369763 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.236174746 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.224705106 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.228177328 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.22543939 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.226054905 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.22841777 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.227657603 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.226674382 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.225114378 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.224461427 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.227034522 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.226791751 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.226959704 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.228477238 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.227691991 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.226925822 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.228110092 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.22973425 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.228078079 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.225239505 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.22923682 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.225917155 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.228869477 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.228491047 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.228731139 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.229595685 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.22471285 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.22758583 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.226980288 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.223257787 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.229045909 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.225452329 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.225654651 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.228201385 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.228958363 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.235840332 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.238865307 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.22631622 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.225523149 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.22618994 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.224892849 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.224988452 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.228549203 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.224292255 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.231193527 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225735842 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.228494367 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.227320917 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.225917741 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.230818755 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.230706643 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.225854813 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.22898643 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.227495867 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.228694886 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226877253 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.230918332 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.228326983 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.228673415 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.230202495 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.228406264 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.230235502 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.228150966 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.226595431 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.23074429 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.227149806 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.228585505 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.226921967 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.230020855 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.226855274 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.232127935 seconds)
  done (took 89.54670472 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.229904131 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.228017014 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.226487448 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228737987 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226577563 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.230171379 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.228804653 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233171644 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230561583 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22772566 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228702883 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.228894313 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227781436 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.230537502 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233763723 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.225919989 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.22981638 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226504469 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.230558938 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232892192 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234275899 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.233132425 seconds)
  done (took 28.182422624 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232976902 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.2330546 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.227225457 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232287497 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.228286754 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232487933 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230979384 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230927603 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232109309 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227939265 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229113429 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23306848 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230306517 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227971418 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230649418 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233458882 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229832478 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235325138 seconds)
  done (took 23.289196883 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.233117839 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.233864752 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.237053602 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.23306018 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.228723145 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231873604 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228730716 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234188097 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.230744126 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.231159124 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.233197328 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234223772 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.232464309 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229051172 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233557285 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.230753323 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.231962503 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232313345 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234316515 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231676653 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236715272 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233232583 seconds)
  done (took 28.250777163 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237324464 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.237483699 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.230825902 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.234510399 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.234059231 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.236835056 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.234661559 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.229950026 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.235762739 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232460705 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233114701 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.234861009 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.235062137 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.230732779 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.234103224 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231173262 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.234234729 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.231254769 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232411059 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.232609492 seconds)
  done (took 25.807684785 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.244898049 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243023903 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.244106747 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243266714 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245191969 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.243869002 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244275348 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.244891311 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244560924 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.244991029 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.246547323 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244710532 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244201201 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.243760402 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244960334 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244922104 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249558861 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.244212805 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.246298509 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245238 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.247494659 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.249541264 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.249209215 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.246519703 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.244944262 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.245253873 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244422672 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24470176 seconds)
  done (took 36.005572194 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237035774 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239606691 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.238704713 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.237002427 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.237801141 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.236381808 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.23740589 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.236854366 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236908429 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232865676 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.241745227 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.236261843 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.238712133 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.239245618 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.241637003 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.241770714 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240296581 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.235519559 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.240244377 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236679763 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.24399822 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241796289 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.237994332 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.237196859 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238803787 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.240233536 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240374124 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.239667409 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241672954 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.241732154 seconds)
  done (took 38.303895842 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.278850379 seconds)
    (2/2) benchmarking "in"...
    done (took 1.278389613 seconds)
  done (took 3.695512838 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.239617655 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238877054 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.240228569 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.236200373 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.235931754 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.239860064 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238673189 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235043743 seconds)
  done (took 11.0441024 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.244521274 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.244439994 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.239337821 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.241502908 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.756274898 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.239749119 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250951451 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.260906033 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.243368432 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.2421368 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.247302381 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.250222516 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.248339667 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242551703 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.238997736 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245345035 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.240209384 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.242715385 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.241349265 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.241004646 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245975376 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242628233 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241997113 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.23978525 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.246124499 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.251473313 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.246767041 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.242183277 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244984956 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.247676083 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240954079 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.238015979 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.24194999 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.241900195 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.240860759 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.242549731 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249977078 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263748797 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.251434943 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242813098 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248114697 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.243510012 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.244539257 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.242490129 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243064427 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.241198128 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.242120386 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.242091581 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.242304554 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.250038208 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.250367577 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241787319 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.238773316 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249182863 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.241885538 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248819949 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.263306336 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.244731868 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.259690664 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.259047538 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.25917964 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.270274846 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251164588 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.242427295 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254610457 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.277228236 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250416474 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.25908736 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.240560723 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.243927203 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.252965214 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255586477 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.270230865 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.243270014 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24272714 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.244106883 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247407881 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24592836 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253471093 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.266889747 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.243655769 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244397481 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254775402 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272286259 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.246000589 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.245890355 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.24461203 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.244503868 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.246955735 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257929088 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.264086288 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.246034255 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.245385021 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.245828603 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.248047767 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.247817257 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.245358032 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247052433 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.243664938 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.246971219 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245699661 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251824088 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.258050298 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249246081 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246378838 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.251643027 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.247001633 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248687574 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250800903 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.246736956 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249834669 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.249751967 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.25863022 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.244307489 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258168174 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.261945539 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.247279685 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.247976453 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.246538746 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.248471859 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261093066 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.277873557 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.247527139 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.249962655 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.255290754 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.261678254 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24820124 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.252157028 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.247881879 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.245620019 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.249592404 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.252090316 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.250866442 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.253855944 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249011521 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24792049 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.252346136 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.248085125 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.249378238 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.249740202 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.250618556 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.250057575 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.249630841 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.250961239 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.248827688 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.249895904 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.258551908 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.248294015 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.249327739 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.250028229 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.24695193 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253705499 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.251474684 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.251887528 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.248050987 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249828013 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.249373514 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.24895488 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250262012 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.256507022 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253188305 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.257202812 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255409808 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.251607215 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25450803 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.250407805 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.248328379 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.253268015 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.253709589 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.252501257 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.251705396 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.254672061 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.255972384 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.264666952 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.252762253 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.255398601 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.253813261 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250539158 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253468755 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253936511 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.255516989 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.262688157 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.251933438 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.256857603 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.25328199 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252808575 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.251882241 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.257330026 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.253997332 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253741312 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.255990499 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.26302533 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264006339 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276613165 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.258586523 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.263507693 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.252753106 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.257428845 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.25621938 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.252050032 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.253153457 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25306372 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254059371 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.2539618 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.251866886 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.251973575 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.253552463 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.255783105 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.255618566 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.252300781 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253257084 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.254551064 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254636243 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.252458231 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259466456 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25658529 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.251995294 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.252202253 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.256414486 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.25479459 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.254003724 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.253756964 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.258171405 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.251209071 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256794095 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257495236 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.255241486 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.254368116 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.259290273 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258705833 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.256007173 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265133764 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.276837173 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.259412514 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261572744 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.273835296 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.253124745 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.259762626 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.256524838 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.253920292 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.259952078 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.26800962 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.258465518 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.257104997 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.255671998 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255696313 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257417399 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.262320581 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.254203754 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.256454086 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.256863279 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.259044499 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.254497467 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.256153889 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.258532254 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.257885041 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259547492 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255709689 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.258505573 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263897758 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.258686606 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.254839327 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.259424525 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261258433 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.267488034 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.261985847 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.258249879 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.258080172 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.265189846 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.263637976 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.260249071 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.257373878 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.255912745 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270168871 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.283875471 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261787111 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.259371498 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.257793914 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266126741 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.260361693 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.263399875 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2591418 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258537644 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.261462368 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.260514439 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.254617293 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264481029 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.25731272 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.266564025 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.260371165 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.265810654 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.26129484 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.263558186 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.263800227 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.25774983 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.259126678 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.266469112 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.260523183 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.264264921 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259853496 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.259401867 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.259841194 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265976079 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.280518773 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.263232737 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.25916627 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.259302181 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.262279896 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.265605679 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.261063133 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.263370581 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.269103561 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.264306551 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.272615388 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.262716189 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272315644 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.259998819 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.265212514 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.270747576 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.25908831 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.260679663 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.259841522 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.269197383 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267011702 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.283197128 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.265632628 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.267987197 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262671425 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.262274639 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.261381221 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.26333357 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259736184 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.264882768 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270322357 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.288072244 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.268573353 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265142247 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.259619794 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.267757734 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.261519715 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.26156355 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268269241 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.26556706 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.264434758 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.263582583 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.262950331 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.267434545 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.265403744 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.263540962 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.264742514 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.269708065 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278916726 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.287576484 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27110418 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.26536183 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.276036117 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264782728 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271594394 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.285833931 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.263328818 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.266661956 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.265078684 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.270935155 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.264335709 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.26393222 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.264485924 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.266593712 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.270545748 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.270482544 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.267452665 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.270633362 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.26528793 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.265184685 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280368705 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300095207 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.266836646 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270840607 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.267966123 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.272506917 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.275438919 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.264735082 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.265042967 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.273478285 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278375167 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276650525 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.266362687 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.269277256 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266390935 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26600929 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.267912891 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.267094568 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.272656189 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.268040737 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.274439227 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.271818006 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268964999 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.266143621 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.272359812 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269368458 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.268881942 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.278568687 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.268834311 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.26566056 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267205381 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.267896719 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.269960862 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.268686107 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.269975693 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266743835 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268695976 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.272551855 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27872222 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.279369182 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.2730842 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.269696676 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.269557446 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.268317783 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.26975822 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272119388 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.267509246 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268424834 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.270705462 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.268274102 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.268934219 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.266002323 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.26813155 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.272029499 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268923384 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272280817 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.280737557 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268039478 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.2656918 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.271917862 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27395114 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.267613411 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.26899917 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.276761189 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270676494 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.281411311 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.281603687 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.276591535 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.268180829 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272306784 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.280268968 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.266324574 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.27224926 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.270119392 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.269873463 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.271441951 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.274688501 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271366015 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.275943205 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.270296146 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.269262013 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278370425 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.292613852 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270236219 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.27212868 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.277111235 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.271738622 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.267254577 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.27216708 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.271310082 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277690899 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.291967909 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272194847 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273140007 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.270550625 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.271615615 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279129239 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269954337 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.274738351 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.269583179 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.277153289 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275262481 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272607796 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.270742052 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.271516255 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.271283604 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.275534422 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.281232897 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.269691718 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272551122 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.272031238 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.271891752 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273026025 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27319391 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.270105146 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.270318396 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.273505787 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274803196 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.273000636 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.27365067 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.272062653 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.274511255 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.27447187 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272343309 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275309581 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.286968802 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.284740615 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.271333321 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.273600447 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.273877658 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.274599141 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.274389509 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.271782144 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273195702 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.274232526 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.27309714 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.278190406 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.274216898 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.278237978 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292146738 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.300228019 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275999214 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.275555707 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276098989 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.276043157 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.271514262 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.275064509 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.276526217 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.278973023 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.283211039 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.277380949 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278942476 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.297995772 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.276165026 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.280766907 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.281814149 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.285349171 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.279072282 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276530983 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.272959353 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.281305799 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.294385949 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277053171 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286399042 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.310032259 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.297939126 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.275238347 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.27694859 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275451303 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.277263382 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.278541808 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275510723 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.275405936 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280740852 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.277291538 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.27813178 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28256122 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.279407552 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.27807762 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.277128516 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.277215017 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.27742521 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.275952005 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.277319309 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.276914905 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.282035025 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.275676537 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.278072689 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.277889799 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291002661 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.307532948 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.279415822 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.278426978 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.274736396 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.28145041 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.280995295 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.29337774 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.288702068 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.280601576 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.278246824 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.278254396 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281067038 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.277412192 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.281753335 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.279309172 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280560549 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.276514845 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.293378999 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.309191826 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.284466384 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.278529626 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281456196 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.279616238 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281907078 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279227663 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279815163 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.279606843 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.284006371 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28579393 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.283006942 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.280940636 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.285274946 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.29390047 seconds)
  done (took 754.696731659 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.28290387 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2785939 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278621886 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280606304 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28385069 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280163054 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278256851 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279998306 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278810928 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278617937 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278959746 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279801712 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278503034 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281340287 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279772893 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277966882 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280804524 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.279206935 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278429412 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281508678 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278237706 seconds)
  done (took 28.053588902 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.281957714 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.281375622 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281835784 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287029318 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279894486 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.284844013 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.282408979 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289218266 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.284364445 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279698749 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.289474121 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283661507 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.282196008 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.282267994 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281117598 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285053321 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.284540729 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.280493285 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.284880781 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283968415 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283773709 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.281256352 seconds)
  done (took 29.413523493 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.287333575 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.284055997 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.283204592 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.281645851 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.285686449 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.280889444 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.291730766 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.284449058 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.285727635 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.282796903 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.283387274 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.285886936 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.295686281 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.292793136 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.287553146 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.286155603 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.288483062 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.284726097 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.284361635 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.283722251 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.293269954 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.287539048 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.285214976 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.28523297 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.285963427 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.285619714 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.286534156 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.287533128 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.28571639 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.289603265 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.286058887 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.287847924 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.286013289 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.286820137 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.289434628 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.292883095 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.287559676 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.282590073 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.288942371 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.299707765 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.31485515 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.287406063 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.291415189 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.286621793 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.287568911 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.289671901 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.296731322 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.282687968 seconds)
  done (took 62.997982387 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.28836843 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.289312661 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.28216386 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285338662 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.286588814 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.287394707 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.28848851 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.288206207 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.285258202 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.285345331 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.288369329 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.285721321 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286431662 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.288031373 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.289661172 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285603687 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287599538 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.285219393 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.287294255 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.286712514 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.284892838 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.288244904 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.289123342 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.286386432 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287223722 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287090668 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.285654357 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.289945925 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.286822491 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.286262417 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.289868694 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.288540692 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.292555408 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.289854424 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.286123528 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.289457314 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.290226805 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.286328632 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.290855857 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.284817618 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.290805465 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.289503576 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.289323765 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.289049313 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.28500579 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.288362379 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287580727 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.285153039 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.289589949 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.288505879 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.290736484 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.289532467 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.289599913 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.286265737 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292578206 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.291123419 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.289658534 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.288092224 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.292424445 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.289275359 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.28912349 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.291758317 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.288888806 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.290908199 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.294437884 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.287682409 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.288608822 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.29069072 seconds)
  done (took 88.787304404 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292683547 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.291235669 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292064042 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291225907 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2921344 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.291716417 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290289614 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.291151815 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291481312 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293029717 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291532832 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.293195637 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.294172439 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292021867 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.295336273 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291814701 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291210406 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291659638 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291740793 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294394398 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.291476555 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293982695 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.293515112 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.294122799 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.29413712 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293598223 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.29473148 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292713591 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29384376 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292227136 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293366248 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.293652924 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.292132477 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294245698 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.294695301 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.292953149 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293428066 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294142618 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.293842377 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.293916814 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.292371368 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.29380393 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292660585 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.293092315 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294104296 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292348905 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.294420371 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.295370464 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.294059408 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.296388945 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.295435538 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295718952 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295332918 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.295951948 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294041904 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.296868001 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295741193 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293802832 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294129888 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.296033463 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294304195 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.295167255 seconds)
  done (took 81.386323866 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298115695 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.294622645 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.294196139 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.295045126 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.29638101 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.292822422 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296943136 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.298312374 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.299011202 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.299442436 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29928155 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295565407 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296450778 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29883049 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2952084 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294613245 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293486827 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.294878134 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297670867 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.295683689 seconds)
  done (took 27.119750751 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.29526436 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297649872 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.293114651 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293167749 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.295452261 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295039007 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.297641609 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295931148 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295041235 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297294411 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296896059 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29993458 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295263828 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296431708 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29788596 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293897929 seconds)
  done (took 21.929170377 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.298296561 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.297235525 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.299046718 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.297757067 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.294375871 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.294796471 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.299391663 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.295684295 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.296619362 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.295374358 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.301862387 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.299345875 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.297759037 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.299469412 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.295808579 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.297423238 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.294402124 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.298463876 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.299457828 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.302301352 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.297817382 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.298497434 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.301055535 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.299494158 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.296201748 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.300142732 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.296982033 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.295379898 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.297359522 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.297124575 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.295443745 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.298949502 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.29867027 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.297191073 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.300707793 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.297346752 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.302228011 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.3015458 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.301372231 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.301378528 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.300515589 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.297244026 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.299961681 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.300088805 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.297453181 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.303615571 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.297569654 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.298006597 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.297843405 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.300262931 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.300598384 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.30239354 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.301169387 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.30092729 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.300697859 seconds)
  done (took 72.620316978 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301530701 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.304805189 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.299042988 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.301809743 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.303534841 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.300628272 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.301353918 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.300449958 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297364985 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.3007917 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.298296952 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.301342493 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299242393 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304619184 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.299922092 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303384938 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.299362859 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.298588559 seconds)
  done (took 24.613907175 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.301888796 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.301010005 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.302615409 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.298714426 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.29974417 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.302781415 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300877863 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.304312233 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304546046 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.300469449 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302466098 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.30426616 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304322511 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.30313522 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.301198824 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299226063 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.303801822 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305057264 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.300763074 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.302158001 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.303846311 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.304606065 seconds)
  done (took 29.84888218 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.303524673 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.304620372 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.302514806 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.319456005 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.32519094 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.303521562 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.303454484 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.301147951 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.326160411 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.360447501 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.357173112 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.327628677 seconds)
  done (took 17.033197809 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30425896 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303977359 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302828409 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305376803 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305618222 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301603745 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301689192 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303010697 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305307049 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30429838 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301291379 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305396473 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307875752 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302914095 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305986903 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305117987 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302745853 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305002902 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302765264 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306817158 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301997419 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305630506 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302170125 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3024998 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302045777 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303940079 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306291868 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303981022 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303831541 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307932079 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304458506 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304133053 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305705461 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302890068 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308209842 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304982433 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3060896 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306632586 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307204016 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303553388 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308034486 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306857766 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30656728 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303712858 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307885422 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305355135 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304279472 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304836496 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304654981 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307948654 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309018406 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304527394 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307474513 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307152604 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309177008 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311260907 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304512476 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305692208 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308734287 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304302987 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30577319 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309946592 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30598091 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305597174 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311366123 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307213151 seconds)
  done (took 87.356283051 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307124964 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.307128318 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30639412 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306846584 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307226853 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307960172 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307571319 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306688477 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309333484 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306892903 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311295873 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305927892 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307825076 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307647297 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306873934 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307244936 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309419709 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307542808 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3079307 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310600727 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309400522 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305932289 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308993029 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309212018 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308463169 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311364455 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307619843 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307848082 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308594034 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309321237 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307669429 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308973488 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306989615 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307593923 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308578929 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310682296 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309538948 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308211906 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309834494 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310427008 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31026917 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312835871 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30945346 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309763671 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309843435 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310109366 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309392401 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309056081 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310752106 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310287658 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310310053 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309232583 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310915751 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310786582 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308224963 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310099642 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311598883 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310638045 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310501724 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314252251 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311471412 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310597938 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314601416 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310643561 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311844236 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311768144 seconds)
  done (took 87.615842593 seconds)
done (took 1766.978052373 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.483824936 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.434556008 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.308635263 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.330674822 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.309655494 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.307594169 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.321992119 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.308384055 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.313517797 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.314590426 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.312109948 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.53039308 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.310836979 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.311650396 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.312594495 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.41104572 seconds)
  done (took 26.830120916 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.344187594 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.317461099 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.447210927 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.335210952 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.343754385 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.520708814 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.375826275 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.319000836 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.51677227 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.360139825 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.323571732 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.341215493 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.315478657 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.309544336 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.332944197 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.519532065 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.593240655 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.305559667 seconds)
  done (took 29.130350378 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.83210372 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.327291387 seconds)
  done (took 5.367236709 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.341357512 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.318585619 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.320475693 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.316774424 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.307772513 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.324895033 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.318483944 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.312119274 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.309120579 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.462466044 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.321104649 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.32923346 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.340020748 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.319951542 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.317710335 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.361648203 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.478446666 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.313255853 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.316715484 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.323768312 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.319177704 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.457934227 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.364280112 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.316724703 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.463306032 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.314202267 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.322744406 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.326707841 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.499690527 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.313019997 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.317107022 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.318884053 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.317747745 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.286475685 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.835093294 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.31216899 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.365348537 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.327275287 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.315532357 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.530656169 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.318235061 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.325568727 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.311883571 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.827527873 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.46460404 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.45276174 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.33889791 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.317167884 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.320719201 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.391601556 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.319896499 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.321398231 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.366952638 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.152505938 seconds)
  done (took 84.826564004 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.328732908 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.311831367 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.498085956 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.336857615 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.308747867 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.313987196 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.314662617 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.649697764 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.378258739 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.313400069 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.628362019 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.918446027 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.328852464 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.362903925 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.160796522 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.372789154 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.317545452 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.329204867 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.314821003 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.310838512 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892229854 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.312397837 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.311278749 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.543461329 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.354944069 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.877084358 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.310019614 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.311137466 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.333652282 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.309686608 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.867833826 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.339889498 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.398648714 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.314569485 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.610266742 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.737225844 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.695798967 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.314641875 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.325510304 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.313585345 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.317300171 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.855648768 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.713075239 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.314299403 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.309972546 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.862519709 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.313494215 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.319457792 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.322549365 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568465431 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.31100308 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.316666856 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.330870676 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.311547684 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.314000386 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.384875794 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.391864208 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.875609267 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313537943 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.312405479 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.372456562 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.314858135 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.315710897 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.314568774 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.316402513 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.718999087 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.503121535 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.32459144 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.721210664 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.862432864 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.32948405 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.935546124 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.330231438 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.336217655 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.46586765 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318208709 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.313959378 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.885220065 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.316759174 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.313562614 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.702857825 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.320202479 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.631725833 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.34572324 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.316553295 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.907690361 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.322561414 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.326348374 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.316961602 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.315242809 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.312789393 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.336366264 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.621113566 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.387094871 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.318057857 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.318902039 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.333548527 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.322649385 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.317088431 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.319732108 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.937615492 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.34205142 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.318325127 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.316972214 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31917434 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.315567102 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.322626395 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.322235237 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.589356897 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.318506577 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.338571745 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.321174615 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.319439273 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.323163447 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.547219033 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.32090407 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.672957364 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.317667109 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320370115 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.337614534 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318479567 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.368175513 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318621954 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.322733508 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.241689521 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.623782737 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.339777627 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.319493804 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319412929 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.322954025 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.316052776 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.337251596 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.357848756 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.319461555 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.120793568 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.357921744 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.346596854 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.321856782 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.329000005 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.320014627 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.342990654 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.322239402 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628245756 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.626269191 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.513303364 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.326032749 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.321229152 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.12356242 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.383610208 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.504496193 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.342713116 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.320310355 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.578913458 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.563996503 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.321597258 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.319474899 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.324715856 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.587653081 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.324247752 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.634245748 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.901708496 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.336153448 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.324278732 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.12021132 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.071953513 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.325298 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.328026885 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.630126438 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.339449571 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.323685585 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.320909946 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.325789905 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.322868381 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.324846029 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.33627257 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.323268523 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.324479321 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.441298441 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.522065373 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.342651772 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.328489777 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.877847402 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.332162616 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317856755 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.325698061 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.32415072 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.323545405 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.391463149 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.324430447 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.357909083 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.326012736 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.329366746 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.936222145 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.319941164 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.324965161 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.521633179 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.059975835 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.342054071 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.328024645 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.342177941 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.205429322 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.90408654 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.326227851 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.683118745 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.329615561 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.368196048 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.324849075 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.353036558 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.899879225 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.322542786 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.345405642 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.01818525 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.33760061 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.183278005 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.322906045 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.323059952 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.968151068 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.340837768 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.325454319 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.32306461 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.323678367 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.624120512 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.324707636 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.357871613 seconds)
  done (took 497.461525129 seconds)
done (took 644.822453958 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.32803504 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.329483261 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.313288904 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.334509976 seconds)
  done (took 10.52682014 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.342405587 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.339391608 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.350709515 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.337931957 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.34277186 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.337653952 seconds)
  done (took 9.282134111 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.330956093 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.33739736 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.335951059 seconds)
  done (took 8.234456789 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.575844004 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.366255764 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.700425326 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.361038731 seconds)
  done (took 9.235294671 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.351947531 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.349262346 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.350389318 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.342477355 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.342501627 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.344407841 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.343338237 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.342843671 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.342503301 seconds)
  done (took 13.338766643 seconds)
done (took 51.84120512 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.366989158 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.441505831 seconds)
    (3/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.342549821 seconds)
    (4/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.348787098 seconds)
    (5/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.350425168 seconds)
    (6/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.471644547 seconds)
    (7/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.318894857 seconds)
    (8/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.334406404 seconds)
    (9/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.347840006 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.37548597 seconds)
    (11/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.46385304 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.35856843 seconds)
    (13/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.607582278 seconds)
    (14/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.336564275 seconds)
    (15/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.554736115 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.354914765 seconds)
    (17/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.36480288 seconds)
    (18/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.349872439 seconds)
    (19/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.344732524 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.388629287 seconds)
    (21/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.342341902 seconds)
    (22/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.424347975 seconds)
    (23/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.325908758 seconds)
    (24/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.128979475 seconds)
    (25/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.381331075 seconds)
    (26/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.129125116 seconds)
    (27/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.365129268 seconds)
    (28/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.441087966 seconds)
    (29/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.474634992 seconds)
    (30/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.24096244 seconds)
    (31/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.357747796 seconds)
    (32/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.244424521 seconds)
    (33/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.366940808 seconds)
    (34/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.483610014 seconds)
    (35/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.379380129 seconds)
    (36/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.414595558 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 1.775427218 seconds)
    (38/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.486047899 seconds)
    (39/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.332963133 seconds)
    (40/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.456137229 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.402632959 seconds)
    (42/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.390775677 seconds)
    (43/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.364012777 seconds)
    (44/286) benchmarking ("sort", Float32, false)...
    done (took 1.504283335 seconds)
    (45/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.433153472 seconds)
    (46/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.467065649 seconds)
    (47/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.319965253 seconds)
    (48/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.007054716 seconds)
    (49/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.341572901 seconds)
    (50/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.4904012 seconds)
    (51/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.353932307 seconds)
    (52/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.331030334 seconds)
    (53/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.124886918 seconds)
    (54/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.09433933 seconds)
    (55/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.347230314 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.344122469 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.35914559 seconds)
    (58/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.376329175 seconds)
    (59/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.345452003 seconds)
    (60/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.339984302 seconds)
    (61/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.423198518 seconds)
    (62/286) benchmarking ("sort", Float32, true)...
    done (took 1.929763565 seconds)
    (63/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.344415232 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.342359892 seconds)
    (65/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.546626292 seconds)
    (66/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.113389441 seconds)
    (67/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.524115118 seconds)
    (68/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.430278114 seconds)
    (69/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.34279848 seconds)
    (70/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.326553828 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.40840761 seconds)
    (72/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.650211367 seconds)
    (73/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.40976127 seconds)
    (74/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.397643947 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.462408145 seconds)
    (76/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.500616541 seconds)
    (77/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.655979351 seconds)
    (78/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.449988859 seconds)
    (79/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.352127376 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 1.517939882 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.333560545 seconds)
    (82/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.438367915 seconds)
    (83/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.35029813 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.522020371 seconds)
    (85/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.502252092 seconds)
    (86/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.365533511 seconds)
    (87/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.366483592 seconds)
    (88/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.333804447 seconds)
    (89/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.395511781 seconds)
    (90/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.547205168 seconds)
    (91/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.535892941 seconds)
    (92/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.341616645 seconds)
    (93/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.350626186 seconds)
    (94/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.349593032 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.442107312 seconds)
    (96/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.359283978 seconds)
    (97/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.344073668 seconds)
    (98/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.348282854 seconds)
    (99/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.529626106 seconds)
    (100/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.996636786 seconds)
    (101/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.049232786 seconds)
    (102/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.008385034 seconds)
    (103/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.335539687 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.390970066 seconds)
    (105/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.32428281 seconds)
    (106/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.38964994 seconds)
    (107/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.356190765 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.44942286 seconds)
    (109/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.419743714 seconds)
    (110/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.350658168 seconds)
    (111/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.353422719 seconds)
    (112/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.473756923 seconds)
    (113/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.346294902 seconds)
    (114/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.336174723 seconds)
    (115/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.349042402 seconds)
    (116/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.617532708 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 1.367791966 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.343511121 seconds)
    (119/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.347528163 seconds)
    (120/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.993618256 seconds)
    (121/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.321291856 seconds)
    (122/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.772811339 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.363893892 seconds)
    (124/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.321864099 seconds)
    (125/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.991652869 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.433534866 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.367374251 seconds)
    (128/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.354891901 seconds)
    (129/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.404633141 seconds)
    (130/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.352407349 seconds)
    (131/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.509059886 seconds)
    (132/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.513111664 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.345618364 seconds)
    (134/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.352491053 seconds)
    (135/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.344683504 seconds)
    (136/286) benchmarking ("sort", Int8, false)...
    done (took 1.471789054 seconds)
    (137/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.423001336 seconds)
    (138/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.493138472 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.433838078 seconds)
    (140/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.344990723 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.345483194 seconds)
    (142/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.099222765 seconds)
    (143/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.404004678 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.390895932 seconds)
    (145/286) benchmarking ("sort", Float64, true)...
    done (took 1.974298683 seconds)
    (146/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.434633027 seconds)
    (147/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.192570255 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.376490407 seconds)
    (149/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.435117656 seconds)
    (150/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.492164768 seconds)
    (151/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.362019805 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.346996882 seconds)
    (153/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.567083967 seconds)
    (154/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.353471928 seconds)
    (155/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.338415793 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.411324035 seconds)
    (157/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.384272044 seconds)
    (158/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.342996235 seconds)
    (159/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.354200243 seconds)
    (160/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.566924746 seconds)
    (161/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.321754238 seconds)
    (162/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.349352795 seconds)
    (163/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.439493451 seconds)
    (164/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.05315772 seconds)
    (165/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.340935356 seconds)
    (166/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.380855779 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.392991624 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.396702676 seconds)
    (169/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.42825196 seconds)
    (170/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.372527379 seconds)
    (171/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.429481344 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.348576663 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.353358116 seconds)
    (174/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.354655675 seconds)
    (175/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.008934961 seconds)
    (176/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.351961837 seconds)
    (177/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.345065442 seconds)
    (178/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.357591024 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.395269638 seconds)
    (180/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.345538904 seconds)
    (181/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.327402184 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 1.575625509 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.352016104 seconds)
    (184/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.420720284 seconds)
    (185/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.342180839 seconds)
    (186/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.491618546 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.547229327 seconds)
    (188/286) benchmarking ("sort", BigInt, false)...
    done (took 2.344984675 seconds)
    (189/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.568574677 seconds)
    (190/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.34584882 seconds)
    (191/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.514536777 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.53682941 seconds)
    (193/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.34574738 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.481979961 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.365373386 seconds)
    (196/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.405158444 seconds)
    (197/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.426021532 seconds)
    (198/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.433399452 seconds)
    (199/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.396818375 seconds)
    (200/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.567342567 seconds)
    (201/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.440067052 seconds)
    (202/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.351536121 seconds)
    (203/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.329389282 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.354315482 seconds)
    (205/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.347543865 seconds)
    (206/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.364311697 seconds)
    (207/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.350288383 seconds)
    (208/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.716426098 seconds)
    (209/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.352529149 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.351780696 seconds)
    (211/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.187518474 seconds)
    (212/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.35057934 seconds)
    (213/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.377551767 seconds)
    (214/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.401595482 seconds)
    (215/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.476637434 seconds)
    (216/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.368535198 seconds)
    (217/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.34996589 seconds)
    (218/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.238268949 seconds)
    (219/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.132419578 seconds)
    (220/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.347306638 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.457788505 seconds)
    (222/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.35670198 seconds)
    (223/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.5093381 seconds)
    (224/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.353250367 seconds)
    (225/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.108110344 seconds)
    (226/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.480180525 seconds)
    (227/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.401256854 seconds)
    (228/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.401940177 seconds)
    (229/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.439599603 seconds)
    (230/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.515745173 seconds)
    (231/286) benchmarking ("sort", Float64, false)...
    done (took 1.573982565 seconds)
    (232/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.349907559 seconds)
    (233/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.548973148 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.378884368 seconds)
    (235/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.417628313 seconds)
    (236/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.34610689 seconds)
    (237/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.376472912 seconds)
    (238/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.350648218 seconds)
    (239/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.072885144 seconds)
    (240/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.331997581 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.462681826 seconds)
    (242/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.342021411 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.354510764 seconds)
    (244/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.548085356 seconds)
    (245/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.378612791 seconds)
    (246/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.492775822 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.40298179 seconds)
    (248/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.477423659 seconds)
    (249/286) benchmarking ("sort", BigInt, true)...
    done (took 2.371277543 seconds)
    (250/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.992344681 seconds)
    (251/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.3571651 seconds)
    (252/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.263899433 seconds)
    (253/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.373071139 seconds)
    (254/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.395599349 seconds)
    (255/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.42116955 seconds)
    (256/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.41164863 seconds)
    (257/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.4531122 seconds)
    (258/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.364245494 seconds)
    (259/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.35592308 seconds)
    (260/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.354208657 seconds)
    (261/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.366575888 seconds)
    (262/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.483113923 seconds)
    (263/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.508512338 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.381014751 seconds)
    (265/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.555863393 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.361034644 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.366993228 seconds)
    (268/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.122380115 seconds)
    (269/286) benchmarking ("sort", Int8, true)...
    done (took 1.767706372 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.532639789 seconds)
    (271/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.355157017 seconds)
    (272/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.3601018 seconds)
    (273/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.001736758 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.357755784 seconds)
    (275/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.357958751 seconds)
    (276/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.46910729 seconds)
    (277/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.358982595 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.464001482 seconds)
    (279/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.432025512 seconds)
    (280/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.364590774 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.409266671 seconds)
    (282/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.350180924 seconds)
    (283/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.360869291 seconds)
    (284/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.482110589 seconds)
    (285/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.386198611 seconds)
    (286/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.351468854 seconds)
  done (took 473.336439399 seconds)
done (took 474.567721632 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.392285747 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.407819278 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.361112582 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.392778927 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.474117609 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.53380739 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.373683951 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.40122441 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.405196468 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.413074852 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.36786827 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.531341968 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.363122522 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.362843981 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.361015435 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.405846979 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.349739135 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.358858435 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.377953495 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.396247764 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.377035036 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.36678336 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.412702225 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.536125093 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.364558956 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.362595486 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.365778738 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.386591458 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.478708623 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.365066659 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.364084367 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.374453957 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.353579377 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.364753902 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.356421258 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.383142403 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.375198567 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.370497785 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.397162692 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.47798266 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.354568315 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.369962324 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.367250729 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.366205535 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.365302632 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.404799523 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.364604801 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.420516576 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.407163384 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.408545398 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.366319283 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.37567487 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.37458374 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.364141731 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.374251488 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.365239526 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.422542199 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.411788571 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.38170703 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.412011294 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.367607259 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.365948928 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.403719361 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.381851891 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.377844156 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.368276796 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.357228033 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.40457523 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.355483967 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.369321326 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.369614177 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.373544441 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.365714795 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.379997698 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.400578342 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.357248284 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.356392801 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.363499357 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.376068449 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.366728924 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.413644643 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.406720168 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.416077932 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.368523768 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.408261365 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.537952613 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.375394102 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.367737901 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.403579014 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.3834957 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.375915027 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.378324196 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.398055041 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.368910914 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.412476866 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.422876854 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.374512443 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.377335022 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.41559884 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.376938965 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.360062622 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.408127994 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.364221453 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.362715306 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.366832467 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.490550739 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.361438942 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.362569539 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.402420844 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.41758461 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.428288945 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.372624562 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.377378415 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.415981111 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.378918944 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.430232078 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.369769747 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.358751879 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.375965585 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.50922775 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.371843322 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.374166526 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.416438755 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.428262556 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.372696594 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.360507721 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.367623038 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.412689151 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.490421497 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.381742735 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.483934779 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.368925944 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.373366831 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.401286262 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.415116892 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.404793963 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.431751619 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.418762841 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.390435803 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.373005574 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.382996106 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.380631834 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.368975205 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.425598635 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.364819899 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.401392816 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.412023129 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.414216555 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.401282591 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.491535976 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.376341353 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.376849 seconds)
done (took 228.983327035 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.430209056 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.367885771 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.467174323 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.369183962 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.473904816 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.470423953 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.365143642 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.36545273 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.365705002 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.747645709 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.365236276 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.366903102 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.36929561 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.36462594 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.454260269 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.369318997 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.364732666 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.710269544 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.370081996 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.439436171 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.368666378 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.366288698 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.371235603 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.754985341 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.366863811 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.364730544 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.44083374 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.370984263 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.719126055 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.365178776 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.366809549 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.719748038 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.458847666 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.384257005 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.382242838 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.378559957 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.479958568 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.38936516 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.451962478 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.455388349 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.475570561 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.408389589 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.364628662 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.369942485 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.370662733 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.371358334 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.367282362 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.396657595 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.370328176 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.368283303 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.716587272 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.380773477 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.370802337 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.370326901 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.370873161 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.40282725 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.368520903 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.373955416 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.460306962 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.371942833 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.436361432 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.756141475 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.752773866 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.370655598 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.370284608 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.369544444 seconds)
  done (took 106.915074841 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.440391843 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.446695898 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.495502363 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.367631897 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.423984534 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.498608524 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.370791319 seconds)
  done (took 11.302485292 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.378041491 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.373208096 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.423533365 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.422025703 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.371711178 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.584083109 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372811751 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.385887367 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.368124698 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.452559706 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.384615186 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.375421714 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.380210465 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.373706379 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.422008406 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.386939247 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.48999564 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.377470874 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.375885842 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.528866021 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370550536 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.380450367 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.452515743 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.387390519 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.385702593 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.383726764 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.318271186 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.37676543 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370553016 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.374568298 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370237218 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.484313247 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.376310508 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.374684965 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372079145 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.536061715 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.375761202 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.373514264 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.376415799 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.374598216 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.377535603 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.373432351 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.374217926 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.372480681 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.376828659 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.398505853 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.37527389 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.374905446 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.376370644 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.377969647 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.456848246 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.377055086 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.371334986 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.373924108 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.454840314 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.382563002 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.379652576 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.373613144 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.375713087 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373766609 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.535694795 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.424592481 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.378807881 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.423649109 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.377978645 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.378661629 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.376245921 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.377148384 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.46889051 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.378192737 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.425253489 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.373776362 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.604281933 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.402918979 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.381636788 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.382804226 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.3825804 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379060459 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.376584515 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.386313849 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.374844911 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.37927264 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.385247882 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377777471 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.377046537 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.5614423 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.536567825 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.377504787 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.391613465 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.388344117 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.377373626 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.455970045 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.380578665 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.375736144 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.43188874 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.495663873 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.46169366 seconds)
  done (took 142.344381082 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.384871198 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.385587418 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.384629847 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.403307749 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.380941211 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.378367053 seconds)
  done (took 9.581611707 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.383151052 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.383866664 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.381343207 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.381956541 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.380255989 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.393414936 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.392406553 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.38207666 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.386377847 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.381582536 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.393212777 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.382196644 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.38283191 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.381780582 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.390580275 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.381125117 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.392057187 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378244278 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.382782741 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382089222 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.379732618 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.383070471 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.383002754 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.383461915 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.400091735 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.384579946 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.392284254 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.381479407 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.381892673 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.389413439 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.405035537 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.393204301 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.38674651 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.393090912 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.399210863 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.385430293 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38647578 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.384539227 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378861753 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.393888663 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.385889945 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.383374779 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.38576733 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.385643994 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.385319783 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.391160648 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.391741044 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.390992934 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.394773925 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.38488333 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.384071303 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.383871422 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.397036655 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.386930574 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.38617553 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.408422463 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.392642962 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.395608115 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.384149667 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.385530761 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.388319424 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.395957421 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.388504649 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.39906853 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.382911593 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.388072908 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.386394594 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.390183793 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382907381 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.385255005 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.389400018 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.382589701 seconds)
  done (took 102.172411145 seconds)
done (took 373.569861217 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.410397447 seconds)
  done (took 3.679222585 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.508487168 seconds)
  done (took 3.784315428 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.162401144 seconds)
  done (took 25.438226409 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.401552109 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.434604758 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.39018833 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.376997946 seconds)
  done (took 10.874741047 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.737153191 seconds)
  done (took 4.010586713 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.391174773 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.373724842 seconds)
  done (took 6.035893127 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.723994258 seconds)
  done (took 3.995209871 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.823947538 seconds)
  done (took 4.101927913 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.404452381 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.393835102 seconds)
  done (took 6.079919888 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.364193363 seconds)
  done (took 3.634929255 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.525737625 seconds)
  done (took 18.80039229 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.384463419 seconds)
  done (took 3.663859719 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.401072629 seconds)
  done (took 3.673434587 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.473223686 seconds)
  done (took 6.745714101 seconds)
done (took 105.787870338 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.380265267 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.379046955 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.380450004 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.378322103 seconds)
  done (took 10.789243504 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.420639947 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.420257137 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.441527641 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.432663834 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.423793686 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.42069079 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.411627806 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.430313054 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.436784063 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.42392396 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.440295215 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.422734447 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.422734065 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.41500932 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.425493105 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.443669569 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.432378284 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.422847176 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.433901593 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.428120142 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.3906121 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.431988703 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.429761507 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.391679702 seconds)
  done (took 35.464289875 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.88620688 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.463450715 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.54222058 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.4457447 seconds)
  done (took 7.611925948 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.459110899 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.458497072 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.470546562 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.508279864 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.536844194 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.465365825 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.418084386 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.411359026 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.398541752 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.465976266 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.519313807 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.455012503 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.5396589 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.389931179 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.666646892 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.38922111 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.388561633 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.468167867 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.521002487 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.522956254 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.392115212 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.468963008 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.470702269 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.455132023 seconds)
  done (took 36.514770452 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.391334323 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.408869681 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.390417569 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.388742688 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.395302281 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.389623478 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.391819391 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.392218447 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.392850507 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.946361943 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.385982517 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.402531721 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.922843765 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.387659656 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.397142944 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.394852856 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.926059902 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.917538228 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.386683316 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.396546802 seconds)
  done (took 31.279937735 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.385061743 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.38457131 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.737776165 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.640006607 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.386288283 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.386865764 seconds)
  done (took 14.196245213 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.477275892 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.633810938 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.391241907 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.813726806 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.890127619 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.392361696 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.396305209 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.680016759 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.052921849 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.045782325 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.465338383 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.476665459 seconds)
  done (took 20.995282083 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.40479849 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.383149835 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.400586739 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.401912031 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.457993171 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.393060923 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.403136021 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.385844015 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.457647149 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.462378877 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.395901087 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.463819835 seconds)
  done (took 22.2901868 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482479699 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387165001 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407465034 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485131541 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386280067 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.234075304 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.483794671 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.196300469 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.413291818 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661695783 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388131329 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48092731 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.649234285 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38611708 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412408371 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.372219298 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622162438 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952015623 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387746579 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393581232 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419631799 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397635273 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401194533 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637496872 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390297994 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388927636 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.648108453 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38831788 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730578938 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402862304 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398396561 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389333349 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664127726 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115867073 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512909335 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.640659445 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415867743 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387377653 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.383716477 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.406418072 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389972915 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410586765 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401090587 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390003703 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390807439 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399378245 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215600983 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.416656839 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.387424784 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390248248 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705403806 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487030141 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.394987057 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39072559 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523393293 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38488167 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.396702681 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.406870055 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971903971 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390501029 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417856272 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.391229927 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40919071 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387818915 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096225778 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.395082246 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.394528353 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395462712 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391033316 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405143416 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408656443 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390275553 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.418091656 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391239599 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195514347 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388931054 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390648065 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005932497 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392547244 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.39342168 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627807402 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393441091 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388873671 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.392503642 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393388211 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228890684 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402868519 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.378880667 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393310473 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.211979638 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666381595 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415175423 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425060613 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.621695628 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.376118845 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394347718 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.393279933 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393241968 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413751219 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.219257739 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41570627 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.395611001 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656637452 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.60680698 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408234684 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.392976348 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959909961 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420276323 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.408387336 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398393248 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.650141716 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.081714235 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41069561 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404771284 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411411719 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396892315 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272580456 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400533086 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.499677986 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397787919 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697270317 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.307355532 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391801884 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463445483 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402203181 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394519479 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397441458 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393161292 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394522871 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.634362788 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43269233 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.409332741 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.406729883 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394876497 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.4006251 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402904451 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.394575458 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.622900817 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399097253 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67160336 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398614508 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397089117 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394782541 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.618665913 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.39287392 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.729575873 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666794028 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397080154 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412826602 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413666184 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416234916 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505707085 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41888707 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.407917798 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.653670838 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.400237588 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.402082787 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407571738 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3951122 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403841085 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.405721745 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420053555 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070756174 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369713752 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405896092 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302622128 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.410695798 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466437585 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40578939 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.651530306 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.411459395 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417818571 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.39942933 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.406556547 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625471252 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407597145 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.401781993 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473710535 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.963314563 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.097055763 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409705986 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.401992348 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.39853027 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.398641547 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402791067 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400047502 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401338467 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653646468 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415915816 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417885916 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.078354641 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399891795 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398068391 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.405003483 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414543037 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.404805767 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399096029 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.41165447 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413370688 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399387732 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.414248166 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546814077 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.415666702 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400063387 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.92120877 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408914266 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401975273 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399679652 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438339714 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403094884 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383114588 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668934107 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416625062 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.714129405 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400468008 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.433726429 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.402821891 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409135873 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410168581 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.418864791 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40884305 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.415800654 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400088864 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404250708 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97757791 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242755425 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023480214 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401717904 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.431620315 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406804398 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.230369561 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425439422 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402276063 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673116413 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.228415527 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425280753 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968952571 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.439177649 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.286210959 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.716577894 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635184938 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423715284 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.415455115 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.717542214 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616927278 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438399188 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406620893 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407807493 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.383812518 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035868293 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422891956 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481809772 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232947463 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432745196 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405475271 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.487996125 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.4236265 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881989078 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426617476 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405775929 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403715729 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.435760555 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388369192 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417120561 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404674894 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11726637 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412224991 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.974905865 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428436408 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.660320992 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.420643972 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.409139182 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.416149283 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.401156017 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.662935681 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.720140815 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404339942 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412267665 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038295828 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.278921248 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.415136704 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40896593 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259086726 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422567714 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.74462126 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.406851144 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.424839749 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409642793 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408994821 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410112369 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.406244033 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416353493 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378826359 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968210196 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.427530411 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437729794 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429295413 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409335725 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.665889019 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.420374349 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.085924521 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638781063 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436886428 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430096969 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.412663705 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42594393 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.391293579 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409841726 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408455283 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552136325 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634449583 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.426731883 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.388361185 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.526606378 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617426258 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408170177 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.420122418 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69245483 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.408167466 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.411572782 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242466715 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439855848 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421482731 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408973339 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42693583 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405053754 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500943733 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667123554 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.424582219 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.421708236 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887568034 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444143169 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405915427 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.425353115 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506057076 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410719788 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.40895552 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.201271992 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093084312 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253241976 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.092017211 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.722657137 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411364298 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415696128 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410739831 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573518661 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41122311 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686679067 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409458273 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.418610879 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43487818 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429980884 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415706397 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62796002 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688153837 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412183309 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426162856 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413943884 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.411537417 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421067769 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.62495354 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98030296 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037208053 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411734894 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411144897 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.250144066 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705914341 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413232532 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41195988 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41271218 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.416272525 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.431872674 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.415800321 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413472216 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574151405 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.732650139 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157583393 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.446742753 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.442943242 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.191493501 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412678964 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.669239824 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413603354 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.668251339 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09928606 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.22158496 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68109635 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481237137 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671152596 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.415006401 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577834955 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.416313328 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412202983 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414165004 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415980773 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.410467152 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.426012663 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128191559 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682454838 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.416839614 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.415881545 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442982132 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.426921244 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.642338701 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.2734703 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.643162749 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425831799 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42400109 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415989119 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123826606 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736577536 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41897838 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.416361478 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.696638612 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.418785697 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441999996 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.881128231 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.415595825 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047462905 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.390710322 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438470828 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421685939 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.233475363 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123613054 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.415540261 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98534852 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416783664 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421490147 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693191218 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.422954997 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416792901 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696478964 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.422252072 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.420251246 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677886731 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.125392689 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.308975016 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.419967216 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440212619 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.417754863 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418655597 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535870069 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416571487 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427054957 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.916635312 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.441649096 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417205656 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425011439 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.429465288 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41810689 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.418771424 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420688123 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.419381655 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.431445592 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.402400701 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419396089 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.428275301 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092503492 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446563658 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.093807629 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.7457596 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.679140775 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434718496 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.404987414 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.422041827 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423484249 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420328497 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415280689 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.429505871 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049463114 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.418681462 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.434302917 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.427786468 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.640506765 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631600825 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421862838 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.695497853 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422597185 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45963628 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.403238842 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421035716 seconds)
  done (took 1001.789021483 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.482775169 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.461187888 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.470443734 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.468983303 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.42924129 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.478445159 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.510001495 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.450092032 seconds)
  done (took 21.061215941 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.440209769 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.428397797 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.434993115 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.428908517 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.421456407 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.962728713 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.443887665 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.429892715 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.43245624 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.436533541 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.431015379 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.237440377 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.429411177 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.434521041 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.41552662 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.42871802 seconds)
  done (took 33.551939934 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.763439148 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.7140498 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.090906545 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.436087397 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.457623917 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.436554774 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.845225584 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.439215152 seconds)
  done (took 28.493728959 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.436604079 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.437943041 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.432722402 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.434706513 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.435137023 seconds)
  done (took 8.487566231 seconds)
done (took 1273.798632482 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.428340216 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.430418698 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.426398458 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.432688668 seconds)
  done (took 7.026810148 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.408974884 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.408618081 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.407294118 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.421643752 seconds)
  done (took 9.958364776 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.258025914 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.14671961 seconds)
  done (took 5.717487257 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.429185162 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.178394968 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.176672673 seconds)
  done (took 8.098129691 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.750226886 seconds)
  done (took 3.064366012 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.850238226 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.799109153 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.62202475 seconds)
  done (took 6.584144374 seconds)
done (took 41.759569189 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.443680757 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.677377436 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.586237344 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.4258534 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.602810158 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.61475576 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.186135808 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.437702733 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.431686927 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.427337295 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.424366203 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.602971047 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.243792846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.681030052 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.243262292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.692238091 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.586865559 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.429969492 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.429468242 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.422380958 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.184590536 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.426807692 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.430077072 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.428851942 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.617878752 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.575442185 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.440119221 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.67794537 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.437807696 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.441969421 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.57141177 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.427591787 seconds)
  done (took 84.565145808 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.438802914 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.442473597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.427238616 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.445501191 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.451886592 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.428231867 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.455823577 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.442387667 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.427108595 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.42446838 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.422827209 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.45100824 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.425861154 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.442234923 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.427282628 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.442587955 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.426045719 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.44476323 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.424094752 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.426194761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.44069396 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.425890564 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.433798057 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.427003823 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.440386103 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.429872951 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.445272918 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.42851731 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.423514929 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.426513255 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.431784043 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.445958057 seconds)
  done (took 79.233052801 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.440440528 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.424197418 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.435075083 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.425561785 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.442949181 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.432426941 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.427153395 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.428438975 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.442677767 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.427957623 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.427348456 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.445538471 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.428858934 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.438768074 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.426091914 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.428523742 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.428569283 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.443461331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.429787901 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.443336991 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.430483851 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.436787887 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.433980523 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.436957832 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.427087587 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.464260973 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.431067325 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.428141852 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.440462747 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.430967842 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.450532518 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.42894049 seconds)
  done (took 79.22484691 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.716530686 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.440757583 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.443578715 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.422192686 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.439983525 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.44074472 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.433080717 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.716965777 seconds)
  done (took 15.371869629 seconds)
done (took 259.710485681 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.445528549 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.42827371 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.67458662 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.4568016 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.433449648 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.478944175 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.461311997 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.680327758 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.459885662 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.681121625 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.448181671 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.452925427 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.43340961 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.453397752 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.745163037 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.592383131 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.439166768 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.440910896 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.806130175 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.450119914 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.724053342 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.439320747 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.732777448 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.431881983 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.433052477 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.439193331 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.431240041 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.422512735 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.476612764 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.822963818 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.451653455 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.41896558 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.528973836 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.551869439 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.663194014 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.608791607 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.429860884 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.531144547 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.676719834 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.444754986 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.432319459 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.27435 seconds)
  done (took 86.148115245 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.443034371 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.555306091 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.441760258 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.444995546 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.443562417 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.558262742 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.536618031 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.442527075 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.443669743 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.443324838 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.442700783 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.443448918 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.443017648 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.443709783 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.442647455 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.442980092 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.442639281 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.456583435 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.458293254 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.487133978 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.562529401 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.469996568 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.434073344 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.444051446 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.54620972 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.58032969 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.443742108 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.434027428 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.483180405 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.445524661 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.449346901 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.488060684 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.447698258 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.445818931 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.556151088 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.543843221 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.458086861 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.441671285 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.554070472 seconds)
  done (took 58.809135358 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.445192301 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.716179416 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.916754436 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.449688417 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.446277798 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.449834519 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.542550175 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.447602214 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.45111144 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.448532191 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.633310888 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.448052458 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.485070865 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.948147523 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.448719111 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.447599597 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.44918564 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.449080389 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.728869913 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.454425491 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.563728975 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.449846686 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.542883693 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.464135601 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.473507803 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.449055439 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.454144538 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.038067963 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.45136691 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.63174811 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.393529125 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.539896976 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.976398257 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.95098017 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.40799126 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.453641452 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.450788514 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.638502099 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.451745235 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.44959498 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.545418634 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.453213095 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.950091649 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.145173076 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.469050047 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.447925092 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.068296138 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.641684624 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.73810289 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.455788232 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.964783982 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.450231528 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.451800946 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.452907571 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.74236657 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.45446431 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.450648134 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.071092103 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.475021843 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.545501395 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.452618091 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.452377108 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.742362398 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.452024441 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.731239687 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.453697806 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.458911979 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.474015349 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.946866832 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.454547697 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.168333563 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.485701546 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.45132409 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.638446635 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.729258718 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.108046449 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.456820566 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.747166303 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.996063961 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.544778343 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.458756862 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.028366148 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.549502264 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.458232789 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.455231627 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.456588424 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.453169535 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.50591906 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.545225813 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.100337556 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.16357406 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.110204022 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.569722704 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.468272267 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.455399904 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.078353299 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.474792668 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.455233629 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.948139247 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.16987711 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.473852618 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.458851197 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.171093604 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.471947355 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.551756996 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.460286946 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.949862172 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.451737014 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.557910115 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.454530153 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.461807967 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.478773204 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.549669529 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.461202208 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.454670062 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.132253101 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.663662881 seconds)
  done (took 192.396593986 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.447114793 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.445807875 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.447374305 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.44328362 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.447471498 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.456178799 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.447622891 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.450129874 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.455458069 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.446750831 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.449592429 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.451133267 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.451070509 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.448760238 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.457655342 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.456072346 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.449259237 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.451954517 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.44905145 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.449380153 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.44836656 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.487335637 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.450999565 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.445143459 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.447795765 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.451154766 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.452020957 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.447481995 seconds)
  done (took 65.962972137 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.456631152 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.119905665 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.454419192 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.616089589 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.479839015 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.4539255 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.613118312 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.523358614 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.461090106 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.452673197 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.455168715 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.836844349 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.459681444 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.062998393 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.681490744 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.614775711 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.062046961 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.472428373 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.455281518 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.453551588 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.615723635 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.463974208 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.837614997 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.166896493 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.460209415 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.165905122 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.447588973 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.458524335 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.457631576 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.169877733 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.462430738 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.838143765 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.553133631 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.530987498 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.166701475 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.071253368 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.085493342 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.635135345 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.457241887 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.457932727 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.454854951 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.444519491 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.167652856 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.463632148 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.460054483 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.161734799 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.480617688 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.459393744 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.45413262 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.457456615 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.529489218 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.530675753 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.840869123 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.247017899 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.554583636 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.459031318 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.6191465 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.772612831 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.460255549 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.069724518 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.444327032 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.1720949 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.470427329 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.448339255 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.462659161 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.45160312 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.642289453 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.618929037 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.066658051 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.480767683 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.071535298 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.657706981 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.45922556 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.459693265 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.46392485 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.175225325 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.07415409 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.657952922 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.624722037 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.698231634 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.451193844 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.461331584 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.45191425 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.552615337 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.458107001 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.175027258 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.094542433 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.477167054 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.463549309 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.464502228 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.465137679 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.682482929 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.179658385 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.558091942 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.061977544 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.861683629 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.848584196 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.465989581 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.532773968 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.476395797 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.915171368 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.464774206 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.531632678 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.82793807 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.830664996 seconds)
  done (took 176.466452316 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.744124343 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.48183825 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.566005828 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.624342258 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.15096143 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.091867881 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.452849681 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.601257217 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.588340321 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.752596978 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.477435881 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.555110618 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.719426774 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.555241689 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.241045838 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.543561839 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.562558443 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.620291296 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.617919321 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.45712584 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.19608717 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.799668351 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.679518413 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.480484266 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.609399903 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.345978813 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.09263706 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.005400585 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.666361385 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.46876838 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.05129451 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.456644839 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.47920223 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.228309385 seconds)
  done (took 68.305903472 seconds)
done (took 649.406622195 seconds)
SAVING RESULT...
DONE!
