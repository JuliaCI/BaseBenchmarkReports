cset: moving following pidspec: 10050
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.324598942 seconds)
loading group "string"... done (took 0.596480369 seconds)
loading group "linalg"... done (took 7.258186509 seconds)
loading group "parallel"... done (took 0.16962854 seconds)
loading group "find"... done (took 1.148289457 seconds)
loading group "tuple"... done (took 2.032078382 seconds)
loading group "dates"... done (took 1.293329388 seconds)
loading group "micro"... done (took 0.240396008 seconds)
loading group "io"... done (took 0.984928949 seconds)
loading group "scalar"... done (took 39.782337517 seconds)
loading group "sparse"... done (took 12.892928491 seconds)
loading group "broadcast"... done (took 1.023025631 seconds)
loading group "union"... done (took 13.759989119 seconds)
loading group "simd"... done (took 4.756433593 seconds)
loading group "random"... done (took 9.511612099 seconds)
loading group "problem"... done (took 1.969032413 seconds)
loading group "array"... done (took 22.156324031 seconds)
loading group "misc"... done (took 1.978151284 seconds)
loading group "sort"... done (took 3.201341024 seconds)
loading group "collection"... done (took 18.71641656 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540937468 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146729897 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.121311682 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.144196785 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188592318 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133993011 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.149555519 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087428888 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.035330021 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.170589772 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141128797 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.480517868 seconds)
done (took 5.09799573 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.205230666 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087989981 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097324255 seconds)
  done (took 0.886136004 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069016752 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128457639 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08126058 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069303826 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067937421 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083972365 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069524102 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068028968 seconds)
  done (took 1.277361119 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075397832 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069535486 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085978767 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069304264 seconds)
  done (took 1.0094045 seconds)
done (took 4.166244682 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.898745967 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.238914761 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19035198 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461821731 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.154472198 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.194434884 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664598842 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.331117917 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.212085854 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101975857 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.110251839 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388862398 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111831263 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665061099 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076248287 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106846296 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.16172247 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.439590371 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082334074 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083864693 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104693389 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142726235 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10228076 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077824805 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169845158 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070209962 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150601631 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.099666347 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069590825 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.249345804 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.192842928 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685995673 seconds)
  done (took 10.535676905 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102126962 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118324827 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070776268 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14262999 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103051291 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087544372 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072730091 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084381452 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09434922 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163470962 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115506917 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107761792 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.084532883 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073428115 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.1045239 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.216004337 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108148412 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086869828 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090628332 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078636996 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126769821 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.086190072 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.098704944 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081873401 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.155945454 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195519667 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111975693 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11286232 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071073026 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082237776 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132666543 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14325062 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067831547 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083306741 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.142561692 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112294204 seconds)
  done (took 4.630673622 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.040047902 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.162180608 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095759899 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15687067 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088415111 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11355214 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.086797878 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103356647 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.249491063 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.077940735 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.465997283 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129521709 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102372224 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069060909 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085716516 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068972983 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.537847695 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145934972 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103768059 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103498692 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076451221 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087209335 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360399766 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069452691 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068275806 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085510766 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061442135 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146678041 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069423391 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.238247394 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.09038085 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088718057 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103562719 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197801429 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095933376 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125889164 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067534918 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083430875 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172544923 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076511868 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066862335 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108459058 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121054054 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.107317114 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085860118 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071272448 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184939225 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068101288 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.112863593 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.104353028 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.897402073 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165185743 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078456572 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066900724 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292401678 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104099375 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071003979 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.071585828 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083484686 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.24856416 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.168129456 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067747728 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069712493 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.087033677 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069041775 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.086881187 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.37054832 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070447208 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.789052634 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073241479 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.0797018 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088761995 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070758689 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092075174 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075345516 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10529112 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070056413 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07070806 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086265148 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068786985 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.087102342 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.089362662 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.207419447 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.086537043 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07004284 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066863288 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.105961869 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113642639 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073832629 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068032769 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119959443 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070037412 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084289478 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103833764 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087489266 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066896969 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.105230857 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087578786 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116881938 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08241551 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.130997564 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06879806 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111170769 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073312572 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115604786 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094083733 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068920554 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153393929 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06584394 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082539634 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068552998 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067490038 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087750274 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069322693 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099232719 seconds)
  done (took 21.217861763 seconds)
done (took 38.133637974 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.299031327 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096038749 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096732964 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078356562 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.095846046 seconds)
  done (took 1.450161969 seconds)
done (took 2.208583618 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121196258 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118925466 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065140969 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112982894 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065262106 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117639171 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114603539 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082712818 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119680981 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06504 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1123024 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065385402 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064907878 seconds)
  done (took 2.009797583 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083717653 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085531408 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087020164 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082767097 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080445777 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085755752 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082243829 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108635682 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083606663 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090809942 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067478342 seconds)
  done (took 1.691987991 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083803765 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085092742 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086763199 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082459852 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081980711 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085025713 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082635753 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106438892 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083737584 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093193278 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066626921 seconds)
  done (took 1.692067977 seconds)
done (took 6.142900665 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079302939 seconds)
  done (took 0.827466507 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.703757734 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.595024575 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084463374 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136160549 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222639077 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154360488 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.441666278 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112701216 seconds)
  done (took 10.371777764 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091179787 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086854525 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083058873 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088465762 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073526985 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089846546 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070067972 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071063369 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087945468 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073347259 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.0858691 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070249349 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087865622 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072502927 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073547682 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09127633 seconds)
  done (took 2.115769838 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094602078 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093940477 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092749819 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077770409 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090621115 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073489861 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092405393 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076633337 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089290786 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075236849 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095100804 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078238936 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091970058 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069827813 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094135423 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079931243 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090919526 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078963037 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.095486682 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079650731 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.095489661 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068921516 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091219432 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.079115015 seconds)
  done (took 2.906659016 seconds)
done (took 16.9781117 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133186841 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077602412 seconds)
  done (took 0.969081508 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083638921 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099587348 seconds)
  done (took 0.948405289 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084417714 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081931591 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091400096 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094924142 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083116752 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068086332 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103168129 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068325614 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08369382 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.071148476 seconds)
  done (took 1.595671093 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070781611 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094592434 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073139505 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098222399 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076239392 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082370403 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076837392 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087998233 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082332367 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082126951 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074590363 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102851747 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074727184 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103479534 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.077311734 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.087013718 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090363323 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071473794 seconds)
  done (took 2.273719667 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067548965 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068980674 seconds)
  done (took 0.904531777 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068088339 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065657912 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084189676 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068103648 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079540481 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064793244 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080598267 seconds)
  done (took 1.278680681 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.408656232 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113307496 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.250299849 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.092145661 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106621878 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.268882187 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.087278201 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074080376 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092094428 seconds)
  done (took 2.300632348 seconds)
done (took 11.036545513 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080802977 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088731531 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111597783 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.420677619 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107388935 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068100946 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.142804313 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.207582236 seconds)
done (took 1.999947618 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127167661 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.617902166 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.416796347 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.220453674 seconds)
  done (took 2.030515532 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.374916409 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.0945645 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077137753 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070718074 seconds)
  done (took 1.396835263 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067618945 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071729026 seconds)
  done (took 0.916896389 seconds)
done (took 5.247787584 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068193528 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068388488 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.10446993 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066579621 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08561117 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065987298 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066985952 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085366864 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069274873 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067263812 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.086386982 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.072051673 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084054498 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066115115 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066306481 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084195281 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067951166 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066489469 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.082914281 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067550816 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067760868 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086343298 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067592769 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067437537 seconds)
  done (took 2.592207919 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087134341 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08454909 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074489095 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089112275 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072822609 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.091089338 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074471733 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.07046936 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091658169 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07243318 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090824053 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073912546 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.088342624 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.075824003 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088651135 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074537443 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091585708 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074188282 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071881788 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090672154 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.076169112 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087274665 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07403886 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090896699 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.074731196 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090111685 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072657882 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086650184 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076121227 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090789655 seconds)
  done (took 3.229605511 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07274897 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065710663 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08386718 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07467707 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067446473 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085634752 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067211806 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083741817 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069003236 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068113986 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.085492536 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067935654 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067668315 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084869835 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068563372 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.087077891 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084512302 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068601704 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083674192 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068554642 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069755726 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084330539 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067582249 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083305935 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067313225 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06700281 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08432485 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067155471 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068512802 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.083759881 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070493826 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070648301 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.084051942 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074199041 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087827486 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066951602 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071168721 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083217893 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067925371 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067344188 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083279229 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0667444 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066776611 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.090697645 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067839802 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085582752 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068211561 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068423352 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.084769631 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070396495 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083507586 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067262012 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069231418 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.085093946 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071425126 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066493948 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.084701862 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067130526 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083921569 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066755597 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067282799 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083441295 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069671354 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067480775 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.099236194 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074145898 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08293585 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069952364 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068216049 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.0864861 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069495238 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081512786 seconds)
  done (took 6.191126744 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118637328 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09331357 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083824972 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067532571 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080833268 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065477767 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071043335 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084311444 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069091452 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089402772 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067644009 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06917386 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086280407 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080840452 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084499586 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069564048 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089683209 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066481514 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068243029 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088081842 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068647131 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087843515 seconds)
  done (took 2.537365127 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.186763854 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088667822 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110722113 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09126296 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085486825 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074669305 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088456054 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072053426 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07455052 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088928124 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072103928 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088215291 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070964045 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087000513 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071304864 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087701567 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072937623 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088261727 seconds)
  done (took 2.385347255 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080037195 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067746911 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107539883 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068629994 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084745654 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070951982 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089613838 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076990457 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086592544 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06877396 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09253593 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071624159 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088170125 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069294735 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072198415 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086476415 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073531045 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08615826 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079424873 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091006342 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075404499 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095222484 seconds)
  done (took 2.569156875 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083773113 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069675316 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102399385 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087142568 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064733902 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067001233 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09048467 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068727395 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089400029 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070810918 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068639739 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082735355 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074697993 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086063337 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075288058 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086992489 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072235092 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070119265 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088784847 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066462727 seconds)
  done (took 2.353003839 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0889894 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085737325 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070501948 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095572535 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071577146 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0887592 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08011494 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087593275 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071765487 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113698245 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071829944 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088073343 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08017186 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092587487 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071304107 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095656512 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080148997 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096241657 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07211364 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088056871 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.222880168 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070994495 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096525575 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071960106 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086932241 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07150924 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071079261 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091848517 seconds)
  done (took 3.266287687 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068393543 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068146051 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081764478 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066624172 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066259976 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082669011 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066939376 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06627829 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08458088 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067335533 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069295386 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085506035 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070328507 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.086484158 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069980314 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070113231 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086140346 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067501354 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068406277 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083918103 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.070411817 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069407159 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.087475736 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068627288 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084146896 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069641029 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068265073 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084643322 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070191349 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067349195 seconds)
  done (took 3.007204609 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079151269 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092314592 seconds)
  done (took 0.965847092 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066640025 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082630313 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081877762 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072746779 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089268261 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069426972 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09268567 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072825931 seconds)
  done (took 1.419455617 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082849207 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079043367 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08637836 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079845965 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096082006 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084926186 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157809723 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086680618 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075228286 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083637613 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081985314 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068674126 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093500573 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071158903 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09183602 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075257608 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067905123 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093458066 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072557786 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.0850242 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072407134 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095345067 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072711922 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066146837 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088975864 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.079172581 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098157268 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071157018 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08955304 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078091777 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075149759 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.080741708 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068929518 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086314259 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068134298 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096765004 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086277458 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089197273 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079605237 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071851596 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097849565 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066115792 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091162591 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077259396 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097423266 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071436643 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070758277 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.083536333 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06755211 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088780399 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065832571 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070232725 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.082447173 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076710902 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.09108463 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081004796 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071490846 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088543425 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072596307 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.09007157 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077620369 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088695279 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071942425 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070310122 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096562677 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074545889 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096064102 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06535009 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063665572 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.084403692 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080718123 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108738252 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075312777 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086314192 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070661377 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083689251 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07320212 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072036461 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092674397 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077148813 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087484801 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076118343 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094143442 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069845428 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07219689 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094718452 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068854203 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089994714 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06769991 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104042006 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069289344 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.085393754 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067862412 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081308962 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090605113 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070085705 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083630592 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074810346 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063631342 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085852245 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070188814 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08476651 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078129195 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090234874 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075124171 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092527839 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076636321 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069393493 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089191715 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066302541 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086952996 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067561699 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076243287 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081796243 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072921883 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086992135 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071113725 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078894185 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.086212324 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070851239 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094564167 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075452905 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.085649451 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067632584 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073490612 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087456856 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073598401 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09566784 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069762473 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065158175 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082938868 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074270701 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.087079388 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07430956 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092247724 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073225883 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06522534 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085438321 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075749982 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096223653 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070845293 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070316966 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094171752 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071561187 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085880849 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07637018 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089110477 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068786042 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075699627 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086984525 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064051251 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087819328 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071073684 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067230403 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088515463 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072348657 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087500656 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069621691 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084448684 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073544629 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070195572 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083666281 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068952585 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083838376 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078988927 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070259926 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08074452 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066951908 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091915064 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067041467 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068214596 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084138069 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071420352 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085988169 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066917245 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067770138 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086168775 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079617891 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090024773 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069055558 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090173965 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079875242 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085294106 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070315285 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068235438 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08762151 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069664768 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095499135 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075099183 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092476481 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072859743 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066365611 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093326208 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07733979 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086729703 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068465498 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068663933 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091848584 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075552333 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091286344 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071474695 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085523631 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071076773 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074171593 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090127991 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070081582 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086227806 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075101328 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086653546 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077513061 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071078223 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097929691 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073774611 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083211011 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074476055 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08514421 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07551534 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06585461 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085281328 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070294866 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088944662 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069780943 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073301958 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082181557 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077800394 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094826866 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070300581 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069666975 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.088281363 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077360875 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088373268 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074369913 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072643707 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09382839 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080006494 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084959305 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072463368 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095478314 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069556919 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062894832 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090497204 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067818992 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084559883 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067942995 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065708175 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088731935 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077762495 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091222682 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063572508 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087335456 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067614716 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067565609 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081172695 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073595367 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087573416 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069285086 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074838719 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087037719 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070124166 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088682032 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069103456 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06899795 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086926104 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072687868 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086506573 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071583238 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06812832 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088538949 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067753776 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084191617 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070706382 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068216677 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086298081 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073899623 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085399071 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069514215 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070279778 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087572609 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069313326 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085414102 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068268441 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088060886 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069293116 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068406326 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087639893 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064086143 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091957351 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068951006 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075765342 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084978541 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066336255 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09105953 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072219784 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075136306 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088360039 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070462368 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087959606 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.071036494 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089098306 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076850767 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067675923 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098019216 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078126063 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088487405 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073178861 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070151192 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089784106 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069400117 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087850519 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071906658 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070011204 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087641861 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074731299 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090472853 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070188964 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071409916 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089120257 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070227489 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088677542 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065731869 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069260944 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087534904 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.07041356 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097882805 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071243109 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086539209 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069933895 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071825418 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086729793 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067144375 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095642981 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079225633 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088564414 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077563816 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068311179 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089709745 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080920357 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.08220094 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.069888415 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067974689 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086661546 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077714917 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088787059 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079544673 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086820046 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069953928 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068196688 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088679326 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068983078 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06475022 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085694246 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0738652 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086468931 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069502839 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070245428 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090960613 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071105666 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098406538 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.07060776 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089323949 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071010188 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067271009 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087795692 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069617988 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090044522 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071348749 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068155692 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085096075 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.07068271 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069930106 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08847954 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.071231314 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089020446 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076730405 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069980644 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091327058 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073420113 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.086169452 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073357783 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087531226 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.0704689 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068920088 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091512881 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073793783 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08922494 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079049927 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069836444 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089126749 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070643625 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086167717 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070663284 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070293245 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08826989 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069775702 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08909742 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077989229 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085430913 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073381156 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069500919 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087888568 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077575652 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089412736 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073741244 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095537112 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070882161 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072240932 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095803188 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074727508 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090972057 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072014865 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070786242 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093287658 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067642101 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091150254 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069165532 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087250456 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070472706 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067042786 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087459407 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.07039735 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06816694 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093652029 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07027749 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086690116 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068606477 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067544323 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087406765 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073217631 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094744287 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071748472 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091011999 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06624705 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067640686 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09000652 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068888993 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089680938 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073874816 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075472424 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090643626 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071364025 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086686531 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080103325 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075762658 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092125168 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067871801 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.09111205 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.072554664 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090108956 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071288642 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070099781 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090179011 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074761532 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088872631 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069895525 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077190345 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091578919 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071930655 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088788657 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071003714 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070183104 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083629516 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071678481 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089508893 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076399332 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071789354 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087977404 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080791148 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085100793 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070764284 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091398602 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070591625 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075186674 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083427569 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072651649 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089478224 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072555331 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066148872 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087482033 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06825144 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090048249 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069389885 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065428931 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09870603 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079085222 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091720038 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070218104 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068976355 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.083532116 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066196531 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08739716 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071737208 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071938572 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098738629 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069048291 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08743626 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065964463 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070092293 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09151668 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073034274 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085491644 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066461092 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068608846 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091625363 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076181491 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087442362 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070263691 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072904382 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089612047 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068543038 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092103042 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067396397 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073630152 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102768258 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070840527 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088183318 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076760684 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096026867 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071055592 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083495729 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073049507 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073505639 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088259106 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.072056564 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089198884 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085848403 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091247869 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069683755 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06875657 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091312899 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069904412 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096264631 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071670398 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071293905 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093212586 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072680432 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098003705 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073235517 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096085918 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073823116 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090950876 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069913197 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07035833 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08819419 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069242813 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.072099415 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.090640754 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075759523 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09750104 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069559235 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099261293 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079683219 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090563772 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068017618 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068912747 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08895876 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066628732 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090419163 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.069712146 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068518003 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087604477 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.070580332 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071078755 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09508116 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071344525 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.090002132 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.071261385 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063956869 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091249888 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.0728438 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089146425 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.068368785 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070760027 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089922942 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074296691 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091886385 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068109894 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071311443 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091236383 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071215827 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.084683402 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077347633 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068469008 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091034905 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069787901 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089328611 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07242224 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07279652 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095239368 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071665836 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090947619 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.079344133 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091226932 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.069197681 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06701736 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093452385 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068019224 seconds)
  done (took 48.021278361 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108723538 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08407116 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064643188 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082312764 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077602451 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083205631 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064705469 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064826033 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083930727 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06788091 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08195076 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064819828 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091777496 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088223864 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094997611 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069023869 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082766163 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065246764 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082496367 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066170752 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092021535 seconds)
  done (took 2.502664533 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076889115 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.09062334 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075705616 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096260281 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069847824 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091977465 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075842363 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09108671 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096909132 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070603204 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.0967741 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074350467 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.08728003 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070814484 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087697369 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074352887 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096539794 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070476004 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090227614 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075756876 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091511983 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075688751 seconds)
  done (took 2.664677052 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069578103 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067732725 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087436077 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064423916 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066944457 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081973685 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071874993 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083720034 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071969237 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.075061699 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084910482 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067081071 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086405359 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064223884 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067501083 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084327018 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132069618 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072782883 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067678388 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087215045 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064231904 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087771536 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064271393 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064121716 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085629283 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072115681 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087438305 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066721945 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067744125 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084723737 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068253273 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083318448 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069669419 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068133851 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08411703 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06748013 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067521366 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085846308 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064480965 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084611563 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06935564 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064594462 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08821367 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070387443 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065998385 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084694229 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069817508 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085375032 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063698264 seconds)
  done (took 4.548764973 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087718389 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.132564846 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088933618 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093235566 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.103458223 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094838986 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072683393 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112604702 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066841543 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085768386 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.086326225 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104976018 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087020983 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073754031 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093146197 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06881409 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069606858 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085391442 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072760056 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085926019 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072839694 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09272032 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100736092 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083488781 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090782112 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068156118 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085507546 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073595724 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099516235 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073364989 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091476789 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074407144 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.10211048 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074141363 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086767794 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070612909 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.10362833 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086538355 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071078227 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066191322 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08808408 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071880996 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093199518 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103093054 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068387045 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072838279 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086910369 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065752404 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099639523 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070766986 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.096041743 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101632156 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073826981 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086634093 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074041536 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102095166 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068930625 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084655118 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072297343 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099057524 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06727639 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090352387 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082798951 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088460253 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076523479 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101746858 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07392852 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090643674 seconds)
  done (took 6.756291959 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076965681 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092919873 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083444931 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101694303 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093621729 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075793501 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0921699 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075001234 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093079478 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080195909 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093178786 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115907191 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070759589 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095376689 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075878504 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093552905 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075606087 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093355131 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093725206 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075673572 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09375597 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083731914 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092875983 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101649185 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104332456 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088568562 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074773039 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093463016 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083643281 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094732189 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10452321 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075995206 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093582569 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102078171 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087327116 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092560284 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067324898 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092230563 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075293257 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093000815 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070414872 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101960282 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074775917 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089677597 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075503696 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093992919 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100303244 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086610647 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096795901 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097871978 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07612978 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101252775 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075293111 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093980809 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102070663 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.109264851 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102275368 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101248929 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075535007 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102740381 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101016552 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108911606 seconds)
  done (took 6.435311327 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090380614 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095778651 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098771275 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06419004 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067136627 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091408513 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067487857 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084631986 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077827746 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095794365 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080065275 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091376856 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076452136 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098623057 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091580046 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076649538 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091558285 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07411763 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09614916 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072321016 seconds)
  done (took 2.536480572 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078162961 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10432033 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069995683 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07472403 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091763721 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074178853 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090133784 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071571079 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088082778 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072058393 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096957218 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079210453 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087756976 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074665478 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097142281 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074826203 seconds)
  done (took 2.184012405 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080784451 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097780559 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083140998 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087942219 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066266577 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085515835 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070056127 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066181461 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086521755 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085705879 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090523659 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073238448 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.0899425 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069020536 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066611532 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092958304 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066589528 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087290469 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.071282251 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103513428 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.082704158 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087945202 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07177316 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.071228926 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.091169711 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075958297 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.089772498 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068716684 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088196977 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.07132449 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089336663 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.078174311 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.085659029 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06961729 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068634752 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086648808 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.071289647 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089985535 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073422863 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.0693027 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087768322 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070783694 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089194056 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071775392 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085782412 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071489635 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.067068364 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095461564 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068774513 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090072514 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.071020198 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091599288 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071663677 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079848435 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.094397806 seconds)
  done (took 5.26964158 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083085909 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071067217 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08356488 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067231486 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09046442 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071582443 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073338135 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092650577 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072319808 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087436603 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072274877 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092012901 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072722301 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072776843 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092174093 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074086396 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085691395 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072710337 seconds)
  done (took 2.2910172 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074350516 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06881629 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094157911 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069538811 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087070324 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071195644 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064947307 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086471886 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067989526 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086827571 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069509232 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070552434 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085228176 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070950469 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086964674 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069483838 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070256743 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086457873 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069423204 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083172256 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071660526 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067145496 seconds)
  done (took 2.537751732 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073619942 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095029529 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.165331669 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109274351 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084792512 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.1011891 seconds)
  done (took 1.494292755 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093264048 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099515956 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06984812 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108560178 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076244515 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088765012 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071031569 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089049933 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080636972 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102632209 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070808621 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098047796 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097850001 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08108276 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096824139 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07764396 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090979133 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071762968 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089434339 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10865723 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072809337 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097936287 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072759281 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091359611 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072257464 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100091711 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080856996 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106191593 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090263324 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080635361 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09602462 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071906344 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099045036 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103422434 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073947417 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099464632 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072227102 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108611256 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077341406 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09829667 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071868486 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096026417 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097887163 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076469965 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098881987 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071626913 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09490283 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069655818 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090550585 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113520584 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077254544 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098775092 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095729354 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080988937 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098179864 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115475087 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084858286 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098515103 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095246668 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084647135 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09796712 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076242616 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099109654 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102739207 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076695475 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098169075 seconds)
  done (took 6.756197555 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087473717 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107466859 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071570641 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103188022 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097880802 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070911514 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089585471 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071358744 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089655685 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071490356 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131080853 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071282387 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098256076 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098637515 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071658298 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089665802 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071028856 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097027498 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070742557 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114905379 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089593299 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0788627 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098348912 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097777678 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084504254 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095192937 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071249697 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089978153 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07102564 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090715158 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076151274 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090252617 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098476373 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071472863 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097659131 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071594847 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089494459 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076686221 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089597069 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077166523 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098705313 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107155405 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071272739 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08871665 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084153289 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091017999 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07042772 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090098736 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070803787 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088613427 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084433658 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104904536 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103723627 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098297989 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071093878 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089148142 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071738813 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089488169 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071978318 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095336377 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07998599 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08997509 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115310468 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07154599 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089840016 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079690847 seconds)
  done (took 6.61751865 seconds)
done (took 131.910591678 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.220229947 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.206954999 seconds)
  done (took 1.292725027 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070697923 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097309455 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098588346 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130672945 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087716923 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102516462 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119859197 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081535389 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068495823 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087660985 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069340091 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088809413 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132922183 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069174398 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08759701 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070851564 seconds)
  done (took 2.33868234 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105785797 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197236496 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11034852 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068298871 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100907112 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079919082 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086361977 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078311801 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096391067 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067950477 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078864438 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096842876 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067504022 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097661568 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076825458 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098732762 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06711184 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100028474 seconds)
  done (took 2.552257612 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106129489 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142995609 seconds)
  done (took 1.123740904 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.200663683 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124104891 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203458717 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.418517806 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.208201468 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.281864588 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.173726526 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.173021265 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.153313366 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170428079 seconds)
  done (took 2.978407161 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101226467 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173583994 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.313542616 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139831468 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087729933 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.117460245 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138943632 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.091705828 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.10267739 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101656337 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083423521 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098985641 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098398623 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097081319 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077209174 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099207497 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122292025 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076599439 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078356329 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09794349 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118927787 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06945635 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07576043 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095871246 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079040715 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099533074 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067942666 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087907043 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077114033 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095842599 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081272909 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116250021 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.100011449 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.135053118 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.086034559 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136325421 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102541007 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076680209 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.098767772 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077960006 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102457093 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081194646 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.108593433 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07971218 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089832132 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080460034 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089282563 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070687776 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.103809487 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.081953582 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.103673874 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082691339 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.135669153 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102542355 seconds)
  done (took 6.360829241 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.753641047 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.114566826 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097794403 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.822614854 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090707489 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107046957 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.712720924 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11863132 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209506734 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759651094 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090170832 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099619516 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179815942 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.216042516 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.90209637 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286075088 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.636219717 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105525658 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109820606 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132874896 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140809801 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.180247576 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153637349 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.441713231 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075770504 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093123519 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139073742 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076026461 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163513306 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.088963016 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09743088 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.160616019 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.232817178 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.156343693 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097851214 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072122624 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091746115 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.153140258 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.227394051 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.198483446 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.16239784 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071880215 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095481929 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.145519714 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135748336 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071757257 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.145666688 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.156585926 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.175538797 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.078097123 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09998681 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147523056 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144986934 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.14797746 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10452137 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.270781158 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.283442558 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071880236 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121355344 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106056137 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215921026 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10588036 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.200658658 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141159269 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.167354724 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092098011 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733163158 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.148891957 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092764037 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077776257 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120130538 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095273164 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.141288177 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.147743614 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.351148128 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.167162591 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077143313 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072513718 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232714963 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085014295 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094562058 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145196118 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0767639 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125705631 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.148254168 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.167648033 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.149921103 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.208763506 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143661222 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.141030864 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09618071 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123409743 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077385011 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190831114 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.195247332 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.143882702 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.18581995 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.159981302 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.143321213 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.148092025 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077060738 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.152308082 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123716137 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104882066 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144707363 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196379581 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127057005 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086139779 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097985931 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.144397927 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.12952502 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089977252 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.145391277 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.175022756 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.463796637 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.153609828 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071395975 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113166111 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144796178 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.145382921 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100975954 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.222079899 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126885881 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.152672209 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126045565 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092189341 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124040766 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.146872939 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082690457 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129099054 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143091015 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102663556 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.217070214 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.173774637 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100377817 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.196634834 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165438683 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098341688 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.15502659 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123612857 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150688835 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080414041 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142377298 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100967887 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779247302 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.145521121 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12360652 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076003476 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183210545 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073552336 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107098066 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084021862 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091558397 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733865924 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107350033 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10129644 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085598164 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096486603 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123194506 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140981311 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076326797 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.145009954 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.208041949 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077415483 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120884619 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108481274 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.143551761 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.099654018 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.087998433 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.109412235 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.087368139 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128328668 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097961379 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087308738 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149680354 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167074974 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.178937769 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567974383 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074771015 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10782716 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.185608813 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096065848 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.247424527 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161713404 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.182110841 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145627361 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105820147 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.292829532 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.14748585 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.157924624 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.111627707 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154692552 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089425589 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140178692 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.148383582 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074337184 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100830971 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.146811363 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.150094451 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146266219 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.940802666 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070771303 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223555678 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070423953 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.153028815 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097175435 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076928744 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260340793 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071682595 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146598166 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166578204 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076432112 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107549941 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.6853683 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108379134 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.145555332 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078255689 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.200047534 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.14831874 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.141156655 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141439104 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101569889 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.145427949 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.192395075 seconds)
  done (took 41.093378388 seconds)
done (took 58.615722471 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.25960018 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178730909 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.243206267 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146237143 seconds)
  done (took 1.800170593 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.14697479 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105886683 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119343338 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089223964 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108021296 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090550074 seconds)
  done (took 1.5588565 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.413047331 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275555773 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237543911 seconds)
  done (took 1.823354702 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.283331914 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.21943583 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.451311903 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.300816923 seconds)
  done (took 2.257827301 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.179428092 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11911985 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070603525 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109523526 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.165595038 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.262223522 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.133098397 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.194309962 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083222493 seconds)
  done (took 2.261990544 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.204407048 seconds)
done (took 10.809913431 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115441532 seconds)
    (2/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.275498895 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.127320425 seconds)
    (4/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.143326338 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.203410897 seconds)
    (6/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.100796297 seconds)
    (7/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.196655465 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.22421819 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106609584 seconds)
    (10/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078201369 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.10534705 seconds)
    (12/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.217383037 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076205527 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.104439353 seconds)
    (15/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.211568214 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076602235 seconds)
    (17/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.206321176 seconds)
    (18/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.156125445 seconds)
    (19/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.180562133 seconds)
    (20/309) benchmarking ("sort", Float32, false)...
    done (took 0.153802999 seconds)
    (21/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.132110747 seconds)
    (22/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.091702092 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.138734587 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.093677368 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.181190355 seconds)
    (26/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073658564 seconds)
    (27/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.184740798 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213999136 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.16160978 seconds)
    (30/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.133252377 seconds)
    (31/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.141235198 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082449172 seconds)
    (33/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094881591 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075210506 seconds)
    (35/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.099874453 seconds)
    (36/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090487106 seconds)
    (37/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.171725743 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094794883 seconds)
    (39/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.210107541 seconds)
    (40/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.07787147 seconds)
    (41/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.233860976 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.093306554 seconds)
    (43/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.189723657 seconds)
    (44/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075530375 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099153268 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09548897 seconds)
    (47/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.194188017 seconds)
    (48/309) benchmarking ("sort", Int8, false)...
    done (took 0.167549578 seconds)
    (49/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073274869 seconds)
    (50/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.123534853 seconds)
    (51/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07846058 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.138526808 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.129590656 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075996799 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.055034905 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092453908 seconds)
    (57/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.14838869 seconds)
    (58/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.088142439 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.129502073 seconds)
    (60/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.136130205 seconds)
    (61/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094207943 seconds)
    (62/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.065485623 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.212367451 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.161752228 seconds)
    (65/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210589148 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.160161266 seconds)
    (67/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.181168548 seconds)
    (68/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.101750149 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.1274201 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150131643 seconds)
    (71/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.101395435 seconds)
    (72/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075197417 seconds)
    (73/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196296224 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053652034 seconds)
    (75/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.088877221 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.069486285 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06835877 seconds)
    (78/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098817165 seconds)
    (79/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.223576084 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055085515 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.17164536 seconds)
    (82/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.189570444 seconds)
    (83/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09906083 seconds)
    (84/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.13779608 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.143651611 seconds)
    (86/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.105980707 seconds)
    (87/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.103150246 seconds)
    (88/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.099966215 seconds)
    (89/309) benchmarking ("sort", Float64, false)...
    done (took 0.129976431 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.124696992 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07804683 seconds)
    (92/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.103173606 seconds)
    (93/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.057028399 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078299792 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.117573925 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055846629 seconds)
    (97/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.10417001 seconds)
    (98/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084965042 seconds)
    (99/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.196119118 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.094236254 seconds)
    (101/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.166045619 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093951749 seconds)
    (103/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096030924 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148989537 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094482768 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.208530675 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075341391 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087379416 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069591803 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.171265159 seconds)
    (111/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075834174 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.122281421 seconds)
    (113/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055996161 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.196801521 seconds)
    (115/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.077962168 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.090240298 seconds)
    (117/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072753138 seconds)
    (118/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054028329 seconds)
    (119/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.128864118 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.162467974 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078110759 seconds)
    (122/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.10193164 seconds)
    (123/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.176972944 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.12130799 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.11870585 seconds)
    (126/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.1732836 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098403345 seconds)
    (128/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.161010866 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.121434273 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.101252619 seconds)
    (131/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07914398 seconds)
    (132/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.164942132 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.078012787 seconds)
    (134/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.19814792 seconds)
    (135/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083851099 seconds)
    (136/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.102955466 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.070023087 seconds)
    (138/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055722285 seconds)
    (139/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.092481897 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070131642 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078058708 seconds)
    (142/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.087460671 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139751892 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.168148699 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.124227293 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070564404 seconds)
    (147/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065452288 seconds)
    (148/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.101213802 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.055983984 seconds)
    (150/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067318663 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.155075389 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054499177 seconds)
    (153/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.099104728 seconds)
    (154/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.201279756 seconds)
    (155/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071547286 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097120376 seconds)
    (157/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081003899 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.080192396 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.095167556 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.071148628 seconds)
    (161/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.055835512 seconds)
    (162/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.104630874 seconds)
    (163/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086035895 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.121255728 seconds)
    (165/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.082149097 seconds)
    (166/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.122756791 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070329461 seconds)
    (168/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069389751 seconds)
    (169/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.100716447 seconds)
    (170/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077166016 seconds)
    (171/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100794145 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169494303 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.075899349 seconds)
    (174/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075409119 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074349257 seconds)
    (176/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.161936286 seconds)
    (177/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055271654 seconds)
    (178/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115170843 seconds)
    (179/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077550109 seconds)
    (180/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.091714899 seconds)
    (181/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.135584124 seconds)
    (182/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10325245 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068252666 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078907506 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.078862032 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.149480763 seconds)
    (187/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055803696 seconds)
    (188/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.056405411 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094304663 seconds)
    (190/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.081776641 seconds)
    (191/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083861001 seconds)
    (192/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.081155134 seconds)
    (193/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077408484 seconds)
    (194/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.055123002 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.092167293 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110950845 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.117209945 seconds)
    (198/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.080899311 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089888719 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093216053 seconds)
    (201/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.071501482 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.307178938 seconds)
    (203/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069999298 seconds)
    (204/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.160759018 seconds)
    (205/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.0768581 seconds)
    (206/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052711347 seconds)
    (207/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.075292427 seconds)
    (208/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054487575 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077122966 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.09732136 seconds)
    (211/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.075316098 seconds)
    (212/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06779323 seconds)
    (213/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.091653732 seconds)
    (214/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.137679355 seconds)
    (215/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.08522762 seconds)
    (216/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069451217 seconds)
    (217/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053643014 seconds)
    (218/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.074751364 seconds)
    (219/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055169584 seconds)
    (220/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055569455 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.144731148 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075353866 seconds)
    (223/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.093179772 seconds)
    (224/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.114513951 seconds)
    (225/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069875607 seconds)
    (226/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.132370535 seconds)
    (227/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.192806701 seconds)
    (228/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054738879 seconds)
    (229/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053653973 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120218585 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067275639 seconds)
    (232/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053481074 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.09595706 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171162157 seconds)
    (235/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.075291787 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.100848101 seconds)
    (237/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093075763 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143494134 seconds)
    (239/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088007952 seconds)
    (240/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073887121 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05336933 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105325168 seconds)
    (243/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07067267 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089093339 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067668498 seconds)
    (246/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053600231 seconds)
    (247/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.090367607 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053545345 seconds)
    (249/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054589176 seconds)
    (250/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.119929262 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093761744 seconds)
    (252/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054391909 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.092666645 seconds)
    (254/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070835343 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072833549 seconds)
    (256/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.099313304 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091695054 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.200697214 seconds)
    (259/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054830861 seconds)
    (260/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078013426 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067479403 seconds)
    (262/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.089864216 seconds)
    (263/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054011509 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068448897 seconds)
    (265/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102065523 seconds)
    (266/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054546862 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078564513 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201624936 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074523689 seconds)
    (270/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089740985 seconds)
    (271/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053850514 seconds)
    (272/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052417095 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.089208792 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076441546 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.165898311 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071785867 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.089296479 seconds)
    (278/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053860834 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150690851 seconds)
    (280/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.093450165 seconds)
    (281/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07241595 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.125074513 seconds)
    (283/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055113964 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06735786 seconds)
    (285/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.076398073 seconds)
    (286/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056261306 seconds)
    (287/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.160057409 seconds)
    (288/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054750464 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054132653 seconds)
    (290/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084771334 seconds)
    (291/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054178341 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077604719 seconds)
    (293/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054350508 seconds)
    (294/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.088892629 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067090382 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097371466 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068436764 seconds)
    (298/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.053302411 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159376702 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068800671 seconds)
    (301/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098283543 seconds)
    (302/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086004949 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075091202 seconds)
    (304/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.087065296 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.09000869 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.099752539 seconds)
    (307/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.056248183 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094167618 seconds)
    (309/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.095448913 seconds)
  done (took 34.027713602 seconds)
done (took 34.938395731 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083542515 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114957037 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077667814 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116479264 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082848308 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102366139 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075819259 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081367596 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105278273 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085214506 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102643906 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057346211 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099899089 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078083963 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099014744 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094838637 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104820825 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076266119 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.100014132 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069156516 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07768708 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092303821 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072003384 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.059395624 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105452572 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077469605 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.099815191 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079566442 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069279429 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.093331301 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07345532 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.099075607 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06985919 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083182508 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097725414 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076682928 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099618591 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078510498 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070601633 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089904079 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07605196 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067313312 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097389617 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076401652 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.097939713 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075109163 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077532275 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10609242 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096239211 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096167289 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.0780453 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.103388383 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080793167 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.099621137 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073335876 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07689166 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.098185156 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09730443 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.101906141 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072614133 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077011411 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.101827622 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075205655 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.101158713 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078031779 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079724529 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.10408891 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074847148 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.1027916 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076316084 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070138267 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100692436 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072242771 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.092508248 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080074632 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080739223 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.092433882 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075323415 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.098018386 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075804978 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069749697 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095566649 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072641638 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076455906 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095650364 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058677909 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073280538 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.099001408 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.07032872 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.101321375 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076274506 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076615944 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.094416176 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081839257 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069767913 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.098482299 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069712397 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.092805385 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072173149 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07444699 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.092621325 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072170221 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07835558 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.092972602 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075018406 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.105515636 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069470132 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07580628 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.092878491 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069448754 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.109626083 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079209125 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070194728 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095840144 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069680856 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076294066 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.092445406 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.07020425 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068552843 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.093097637 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076103847 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.092726488 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07276898 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077337757 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.106902951 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069614066 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073857722 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096393768 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.0700991 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.098700888 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.069608695 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070196441 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094780149 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.067582454 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072679788 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.093854941 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077210252 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071968505 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.101259494 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072794325 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101679636 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075720005 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075375952 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098675408 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070137787 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062531732 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095826068 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073347947 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071636321 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.093359337 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071826031 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.092225668 seconds)
done (took 13.770982606 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068253316 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.171123539 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.128164977 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098789787 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.116927094 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070473466 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.105919691 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.109382062 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.096611484 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.132924416 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092508617 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.113550325 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119658543 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.092872498 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.07045978 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073878183 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.095621236 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.093328994 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.131565644 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.114592655 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.122091157 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.093356762 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126781356 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094099346 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117896787 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10864278 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.093643637 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074686287 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.097210621 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.097555347 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.113767718 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073692568 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070253387 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.130428205 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122958953 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090185315 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.092793138 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088501764 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.092866912 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070106084 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119787307 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105137588 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.110985663 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.109805352 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.076396248 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.072896373 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.094957666 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.091069556 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.119336821 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085471593 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.116870225 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140394481 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074601496 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.112047754 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069671938 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.117169878 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.110532001 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073068063 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070412535 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.096591656 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069641863 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073092202 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.117969789 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.122303591 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074764007 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.111461283 seconds)
  done (took 7.562359362 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086557147 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118680837 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088149868 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.113044885 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070128872 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070827256 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094236646 seconds)
  done (took 1.60967717 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068659408 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091535688 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117805223 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093963262 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.115878671 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092186704 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105241167 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070798255 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.11285096 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.07289488 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092877734 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134332818 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072468185 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.102880244 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096502916 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.095097145 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095644845 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094301266 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074563541 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11947099 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075172982 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092090691 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.098127156 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.071361998 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110100122 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071775566 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144298791 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075994343 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095746937 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074261754 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070115685 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.145986594 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109818625 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081950773 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071611439 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110581436 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086755134 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093253064 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087901408 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10057011 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.086564522 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072673556 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096759095 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069514154 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076340844 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106519449 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.073768907 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.096406166 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074997727 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.092453814 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.096246699 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.086550511 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.095281761 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075712362 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072610487 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102148288 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081736726 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09642977 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092761693 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072772617 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114040004 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089106633 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.110265203 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088317061 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097802664 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.086653236 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.109758791 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073822982 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073456016 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.099954245 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088862589 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.093054162 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072954571 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082382812 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097194755 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095290106 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.118951664 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073834821 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.105442242 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071855234 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071597768 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095274917 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.095312458 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099361477 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072154483 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075580377 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098735088 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069284848 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070346354 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.098608496 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069740276 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.096110933 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074247599 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071666041 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098302799 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088784178 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.096338376 seconds)
  done (took 9.762048766 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071017718 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069959055 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094564094 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071719921 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071266748 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.095827246 seconds)
  done (took 1.45478441 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100888659 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095414945 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08627329 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.100704154 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.112126714 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.11072792 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087486053 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111929583 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.090259736 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10913201 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087925887 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111646022 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093835731 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.102005758 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087013438 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101944401 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087799986 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105561745 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08443154 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102216536 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093455706 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101744725 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078523313 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.11182353 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075427197 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07858222 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.106820612 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.084741634 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.108903945 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.088417008 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.102973983 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076515683 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.100766587 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.087811792 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.111779131 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077209038 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10159885 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077600359 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.106065862 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075301358 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112816492 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078880759 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.083210653 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.10103346 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111716515 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076752488 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076463996 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106470566 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087462198 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.10104153 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077415478 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.10130695 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076024657 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.100394237 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076687023 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111593555 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076437182 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.11179678 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.078581844 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076664806 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.098700381 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07709601 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11166218 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076174794 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.110040136 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077206879 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101560274 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078625703 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102484121 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.078111859 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076252002 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.098884438 seconds)
  done (took 7.707481869 seconds)
done (took 29.058771814 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.651524851 seconds)
  done (took 1.630778212 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.773092777 seconds)
  done (took 1.754397605 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.369269806 seconds)
  done (took 15.355673323 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.628410491 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.783194311 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.83296005 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.140694266 seconds)
  done (took 3.365470079 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.888519886 seconds)
  done (took 1.896597691 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239032454 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232172564 seconds)
  done (took 1.460043008 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.732484026 seconds)
  done (took 1.727166664 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.310773629 seconds)
  done (took 2.296458821 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.325955068 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18894056 seconds)
  done (took 1.508643313 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.534508962 seconds)
  done (took 1.530804261 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.971781041 seconds)
  done (took 7.972330103 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231094724 seconds)
  done (took 1.242785275 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270645514 seconds)
  done (took 1.270927526 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.138845411 seconds)
  done (took 4.138949984 seconds)
done (took 48.140518792 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079472274 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083225943 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105400951 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080950984 seconds)
  done (took 1.343097532 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078547028 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075445087 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103685289 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076948456 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106004109 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077787175 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103896521 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081580451 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076750878 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102297352 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078227738 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100885214 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079748458 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103190121 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074893941 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080544201 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105601258 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078313618 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104785504 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078149434 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075503498 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.103625077 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080474456 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.100109219 seconds)
  done (took 3.133682646 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079128001 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074540976 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101258887 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076698702 seconds)
  done (took 1.335089263 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079682747 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.118350915 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092961301 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081429754 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.121267475 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116259517 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074339642 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074834566 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.101007332 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081888318 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.096681194 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103457824 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.116868391 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082252512 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.107943006 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.071241476 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072850251 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.116574367 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081331294 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.106522942 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075325608 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08480731 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.096746705 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.095493608 seconds)
  done (took 3.259411528 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079357592 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105982817 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103796652 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09362741 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.121449673 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069840525 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.105302918 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096493958 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.155753504 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070335989 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.099393223 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071045506 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.101807952 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069595836 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08262969 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.137551553 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117466763 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.0976554 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101976317 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.094926822 seconds)
  done (took 2.9889725 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077073394 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072255773 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090894676 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070656445 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080341701 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102492409 seconds)
  done (took 1.503289447 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069182878 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069883278 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094325078 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070414875 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075592183 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096445226 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070292829 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071215433 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095968898 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071541336 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070594743 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.093877714 seconds)
  done (took 1.959659008 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.389950353 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.097845193 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070921906 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091854069 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075443816 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.095459914 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084578933 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072327922 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.121283368 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.07095486 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.095677223 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073073723 seconds)
  done (took 2.354361642 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267252193 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08193809 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.337239458 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174231067 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147731304 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162327278 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10986477 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146827938 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206428862 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144366808 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207299116 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234053144 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139770281 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175317283 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12012821 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.113273422 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219846883 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228936109 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110114876 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233923984 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214898162 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162793129 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18876805 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135417985 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14159018 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156992034 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.077142146 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111155244 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24143769 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167475749 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210667204 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144618433 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103063021 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239730551 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233819857 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203737446 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169125315 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089549852 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.163256443 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.172893885 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265078949 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120153879 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201731285 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14079908 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111269372 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178764368 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153158567 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.153178496 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.143318316 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120623892 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180838603 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250251029 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173247542 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118204963 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143377017 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148270726 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.149633621 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109216606 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252319284 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226698936 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166970797 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101227942 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101936123 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220477568 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165975809 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148924441 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159954319 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125141018 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174911125 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221196844 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152350532 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181344619 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.189449507 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093709746 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153335591 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204484382 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162528806 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210515723 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185301914 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078020054 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160647279 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136845058 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086392547 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.174592739 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105527653 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215960063 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131535248 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.146424877 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145097776 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142269607 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11631471 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229439421 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209664629 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109540795 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.096455149 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136207635 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156070073 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184587814 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118876026 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141311069 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154015346 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.084388233 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199151547 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080242977 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160654221 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.109237796 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157491219 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168965648 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081131844 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162229518 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134564466 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.133934076 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17154048 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229197424 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096338704 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114679615 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209194947 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187467247 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139760891 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183533583 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196652802 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.134232205 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136857449 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21403275 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250903289 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096082628 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232045142 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141262338 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089249051 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.119449094 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162465797 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14737926 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155791251 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088659322 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185726756 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208185168 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.106030949 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102249827 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198436611 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087380623 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112984725 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146564445 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135220433 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.102329908 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.134159354 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140425849 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178128971 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160351033 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139538217 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158819444 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1303497 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235916828 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121020884 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.137019154 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110625379 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100904773 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172412087 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227581259 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086514963 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234329161 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.16138546 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138174905 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154138828 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0892137 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176485038 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109698866 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075990369 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206830375 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144628365 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115985689 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.21784047 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136722675 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162764342 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159697347 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170253741 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167062168 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.194209828 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137786952 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092418876 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147473487 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161436215 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.104589546 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.100471806 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.114833057 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137039735 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129012675 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089026606 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178306959 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189511934 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103599193 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146897582 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130136906 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187108016 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.107716099 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165199452 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.154755357 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127910024 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.1925285 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221603656 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172832149 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134007164 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182871992 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.10118564 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07913018 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.123684009 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163679679 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114561224 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090102017 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152317687 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213255234 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164554598 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174882522 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143171693 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156904408 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221181418 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.077248589 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.148451849 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18634254 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160241175 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.162917067 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096893815 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.130261312 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18151949 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142981939 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254602854 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149792618 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1837505 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190788422 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.136232086 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086260317 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140527888 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173570543 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139853118 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216423012 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134236829 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095778883 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143426911 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.113663012 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136485556 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164724973 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156503242 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171829428 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149797831 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193777957 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082323296 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152302959 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158685655 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158281185 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.095451213 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154846647 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230993028 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101299873 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151905874 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220396238 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084653297 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.157557093 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246978784 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208514322 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090372673 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150553736 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156424959 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165867227 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151793329 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203621265 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146187694 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170752896 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144581498 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090892238 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12043578 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104434045 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140348133 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.128991594 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145864714 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152942138 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.127428993 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167665759 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146562458 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145780321 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155145539 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103733989 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.123726072 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130171381 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217092344 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182624136 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244397293 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.107731268 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.215935483 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23570702 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081305891 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110904772 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.085798249 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177545308 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116931361 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170939125 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.128864846 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111577685 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185880358 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180781101 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12938692 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073977135 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14373421 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172140124 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146481758 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131650342 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.140619681 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204725821 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.137659936 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084751823 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159708216 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137888114 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136664332 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243320683 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.066551053 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130360965 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081651727 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113271937 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165336491 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22339543 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.088948773 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.159925219 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154766932 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156689625 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166827023 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136609064 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130200824 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119525625 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214616967 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164342261 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.123022153 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148137708 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165201024 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224263262 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113763977 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.129096166 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241721008 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193776546 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.232571971 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.123101566 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15121447 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150657233 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143157409 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178972063 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115545174 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210375276 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115253437 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174219267 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13889202 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126395899 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16614868 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.148061747 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121852734 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187702356 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156357896 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114932265 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085849319 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152214516 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156176313 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139618614 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.107687257 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176737678 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.104654832 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175369138 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237209283 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087826207 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140684095 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129964257 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087803125 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144310657 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137271517 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118660189 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.128071746 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237774588 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.123832855 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188955027 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20557397 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149768593 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17501271 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134810091 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.671504657 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.111016131 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19501785 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156860505 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246608417 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132555968 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155324926 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144456672 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160124296 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18229937 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138465956 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209772734 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169034451 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156828538 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112656474 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137972787 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146362197 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.098224105 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140205614 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149560921 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152072939 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134010295 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156265405 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164503551 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.114850152 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128987898 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199206547 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153111811 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210176244 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178726431 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090583671 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15402036 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205977072 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112179843 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158899993 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196651571 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142807484 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132285391 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.113124061 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.1394151 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213525342 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.105154126 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200805591 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187839917 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117308109 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149820471 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.182108372 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171780303 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143735662 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162287165 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131685274 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14757158 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152156709 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090499785 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.111110518 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140815124 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14858956 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.10583173 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137999842 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.151459335 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191818836 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103192181 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130306756 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110435407 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20995655 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249357422 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.095874517 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116265561 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155640448 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147319607 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.15129949 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163896319 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.113607669 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088591365 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.115937705 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.119138428 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143178143 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149872323 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1365864 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146566994 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207900736 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.117177511 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.258602138 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101257879 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141353392 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07458652 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.112390661 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130275018 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130959973 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116255181 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131040887 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243554781 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.129768629 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.097790364 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126378265 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078151097 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115871204 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166376928 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145948636 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157537804 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132257214 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067693628 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146380751 seconds)
  done (took 74.53011116 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133111114 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105397063 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117677665 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173592045 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.147257698 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238844274 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.183341967 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.224879049 seconds)
  done (took 2.413745232 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070546844 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117240692 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103291699 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.117883338 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091310894 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070467468 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.296279504 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.116172673 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070064017 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.117796822 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.124268114 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092970142 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.481271861 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069009145 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.099447585 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.088236211 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069471509 seconds)
  done (took 3.276706972 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.434420196 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.633490581 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.456939249 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077295185 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.923957755 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108785215 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.369284579 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163220571 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092742569 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.431666167 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.732914085 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.14868364 seconds)
  done (took 17.664648961 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076381312 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07076002 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110763055 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08577034 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100812716 seconds)
  done (took 1.537528862 seconds)
done (took 118.296968898 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082490034 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.353395499 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057167558 seconds)
  done (took 1.534350794 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08506484 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087687421 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116482467 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087538665 seconds)
  done (took 1.47973012 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076511164 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079537814 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111803269 seconds)
  done (took 1.368674749 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.285041511 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170020766 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093740572 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.0844374 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080725042 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105577104 seconds)
  done (took 1.372884748 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074610105 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078247232 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100438424 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078773977 seconds)
  done (took 1.426951943 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077230785 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05463318 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057082328 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083170915 seconds)
  done (took 1.373632067 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091790009 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107021445 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082769791 seconds)
  done (took 1.380637276 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109383568 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114030467 seconds)
  done (took 1.326597486 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083506478 seconds)
  done (took 1.181526264 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094151408 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141991869 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.161758367 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.139101819 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.168192262 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.138600851 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087953723 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.116532556 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105266005 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090125539 seconds)
  done (took 2.346896121 seconds)
done (took 16.512395913 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07975144 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.394172226 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362575877 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118982185 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670375301 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35895211 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.008306144 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121089324 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124248166 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096213734 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085490668 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677578245 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.970423314 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.349036304 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.958026545 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324442919 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677899918 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069283149 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094817693 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069581779 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966322386 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095131479 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069689663 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070351854 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677062424 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372575363 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09640681 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318531521 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069907827 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096886301 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357019313 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096231857 seconds)
  done (took 15.989823116 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071929079 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14531224 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07487196 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085554724 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098169197 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070810699 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099165575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070950895 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155604097 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071372578 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117788651 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072604031 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102835017 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073355706 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090278955 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096823876 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07027951 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06991176 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09584046 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069761041 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113706137 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069760595 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070533851 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096683304 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069926398 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108034533 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069966473 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069575337 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095547418 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071419024 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09845964 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070600066 seconds)
  done (took 3.909964809 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118060908 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.154616513 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0757832 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131238507 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115570222 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098158138 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.172226594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095574855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.159982492 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071967689 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114348644 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071986629 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133281946 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072829266 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119340077 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072943653 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072400523 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096725712 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070791571 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096191679 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08803167 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094920883 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070455441 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0713381 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096421575 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083573074 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095930319 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070021795 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070544047 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09755017 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072942034 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095751087 seconds)
  done (took 4.232169845 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074329175 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07776891 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110588167 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087183126 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09981973 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076552038 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076598049 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.101676011 seconds)
  done (took 1.811028309 seconds)
done (took 27.047759055 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079785024 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072003019 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101198798 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08383173 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101315802 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08281395 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071951691 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.107199451 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.081805775 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077006377 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.107685075 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071194063 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.101873649 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070693748 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077952487 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096657083 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081965243 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100514033 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082393261 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082555713 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099467682 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079738359 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103136996 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081488859 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108080313 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082652122 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.087106052 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103627882 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072401802 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100817751 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080024703 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116282657 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07201704 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083550965 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.100219232 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072517808 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071298099 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.100453361 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084463252 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.105785077 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074687412 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.106748804 seconds)
  done (took 4.819176733 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089734936 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093139437 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.116338215 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.069052515 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.102731598 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067693167 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.117263214 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066533544 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061663249 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.117232311 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058586414 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061504862 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.091467049 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055831891 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060746166 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058330464 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090714606 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058554016 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060917756 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087548499 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059493397 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05601269 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089177929 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064319197 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058275743 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06444113 seconds)
  done (took 3.091174713 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077553118 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085115856 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116176359 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131109786 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136206643 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078526834 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106186613 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089607297 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115108476 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069307851 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072772285 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126389827 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089738339 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103319556 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069461798 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116466315 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084573406 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070744739 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103551574 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091826469 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112973229 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080767334 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120375532 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083220817 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068466368 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098625132 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073569879 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.11058948 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074894948 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079455533 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101914986 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073298773 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098866338 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081625486 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075178629 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098272682 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092321909 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10664139 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08051819 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070224488 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100147399 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07108214 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116814478 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114721597 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096260569 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077157243 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07712182 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.106228434 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070731987 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115912879 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078306701 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069239073 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099679075 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06933808 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097059333 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083156959 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071944666 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099080099 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078645313 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.10063815 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082107448 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073136252 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112490259 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068652478 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104176079 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069090106 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070166655 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.096370938 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092969576 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07053426 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.137714519 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072684726 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.100159154 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078567723 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104282042 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074946595 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070052044 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112667396 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079034486 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100024393 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07786697 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072883989 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099703208 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089101935 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.099518376 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071495124 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071272518 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102917183 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071564713 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098122928 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08233202 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069453901 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.100392237 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086155679 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096906101 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071274026 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076802478 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.103317248 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069345871 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108914898 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075199145 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070426133 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105639742 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070359523 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.100038292 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079378775 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07491703 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096038386 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074747412 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.103544482 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070158679 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070842711 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099446386 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071562378 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.106792903 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075382366 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074218889 seconds)
  done (took 11.541485744 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.194652153 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.188656954 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072661074 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.18188787 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078146932 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.110239422 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.182483531 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097559595 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.099607461 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071379623 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070544033 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.132209762 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.126891273 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.108126561 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107547226 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069562828 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116138999 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.106511151 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.184547568 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.17856017 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.126945425 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077888181 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071478805 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098644309 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071593445 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.107362242 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08615121 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.103569836 seconds)
  done (took 4.349994069 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082836021 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131336104 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075145287 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090772552 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.121658811 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069981714 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.103467861 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071504482 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110128338 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.0818461 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09792352 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075848379 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07628207 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10849729 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071053869 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108024729 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079518307 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071489074 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.101015674 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074541159 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.107242262 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082043772 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.102036893 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068650384 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076988994 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097367838 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066383168 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115116747 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069479064 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.1194956 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068903994 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075829458 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.11193736 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069824711 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097159491 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072886794 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072545885 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101184226 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071867652 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067889607 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096529561 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060007813 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06814277 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.11050496 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076121593 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089694074 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075570766 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.076055977 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102598924 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06746365 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100018562 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072519611 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072779233 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.107342159 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074104767 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075637479 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.102528453 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068521967 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105697258 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073878554 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06582602 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.097308272 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076725841 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070382978 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.107888247 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076436483 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09860038 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075551633 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.076529101 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.107992603 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.075190712 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073203952 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.098121265 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072682808 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102952994 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074544459 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074472771 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096723268 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069440961 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069401004 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.086120264 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069806892 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055574463 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100265461 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069129466 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069206743 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100044352 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075660192 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.111557106 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071640646 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.104069097 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070544073 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068925243 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.10114257 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066179207 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072525568 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.113612449 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114685638 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069524807 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067760198 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11267897 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074691642 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069196201 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.08668625 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076610614 seconds)
  done (took 10.05719943 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097428165 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094547229 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099819449 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085401395 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125317596 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095406015 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105704212 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076759443 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071809419 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115361775 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070877711 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10636149 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070391987 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078564838 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126232377 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078096529 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099995308 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078686953 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073859228 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137366381 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084670705 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112349464 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082560155 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098024911 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073746378 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082311848 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.126066436 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081454004 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108429198 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086388598 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081469149 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.126754941 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087387167 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101306121 seconds)
  done (took 4.358682316 seconds)
done (took 39.324619419 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.198771986 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.401612748 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.182883348 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.072427821 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.219118347 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.205666503 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.19819254 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.187307455 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.342495371 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.18831305 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.451849222 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.81517838 seconds)
done (took 58.594818794 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.269099189 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.327575788 seconds)
    (2/2) benchmarking "String"...
    done (took 1.454974571 seconds)
  done (took 3.912894735 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.602034767 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.058698648 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.441797519 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.185057385 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.197168807 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.475482606 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.773422054 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.005237872 seconds)
  done (took 27.266318376 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.18884881 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.540664206 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.502912087 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.502465838 seconds)
  done (took 17.867242022 seconds)
done (took 59.049479229 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.171747931 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.246170326 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.187175879 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.174349448 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.295772234 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.218401485 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.491418729 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.383158751 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.193108727 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.177240536 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.209665763 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.184783549 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.190887252 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.504350519 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.184412293 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.188832068 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.200612061 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.59228769 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.551806455 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.199194206 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.195881577 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.229271442 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.184675421 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.188690475 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.246947827 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.182978264 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.184397639 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.183714112 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.279140571 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.188040712 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.26471621 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.653044254 seconds)
  done (took 190.657702754 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.183591925 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.274059922 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.35282771 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.243292034 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.690748519 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.383710754 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.319429169 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.744528558 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.201930636 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.196382453 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.507353203 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.182713116 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.573661414 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.146452832 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.192523398 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.266182066 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.359291337 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.533743097 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.200923718 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.453787834 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.194166675 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.427369354 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.33814205 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.44128777 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.211992305 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.297350993 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.192078371 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.211403427 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.37148892 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.291747634 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.225137563 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.200425171 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.715422713 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.043287046 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.204564943 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.186937101 seconds)
  done (took 149.689311749 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.445041514 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.18120801 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.181311591 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.181965195 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.209537931 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.181474249 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.677467521 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.680255486 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.680517307 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.333549 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.242094607 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.354051029 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.181954669 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.271160535 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.195494788 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.181940171 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.196274855 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.20665424 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.184295922 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.181901217 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.673907406 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.19737331 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.205206372 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190395803 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.182190062 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.209937796 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.574109356 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.182456232 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.209889515 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.491176051 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.22272553 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.18186099 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.427038342 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.29698999 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285575183 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.183177632 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.209113057 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.181608232 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.445082394 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.181328479 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.18230509 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.185632365 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.715213367 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.181986064 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.669011541 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.184339541 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.020029436 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.181430073 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.179802684 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.181389937 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.433464055 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.513248628 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.180593213 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.179272202 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.181687741 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.179467909 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.179854382 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.178851543 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.205925486 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.429698775 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.274157463 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.179897479 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.180178468 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.182244412 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.206082176 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.1801665 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.389213994 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.183598998 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.192281723 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.237917367 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.286514165 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.651476538 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.181789113 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.267916724 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295419982 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.179588407 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.179509993 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.179211238 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.180337351 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.281819113 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.179761703 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.534722438 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.185787888 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.18131543 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.237264076 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.269643711 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.179792019 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.407017047 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.179478692 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.180291091 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.821881801 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.268363176 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.180959986 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.180706747 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.180425434 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.180181022 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.535247388 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.649289916 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.289293391 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.182674695 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.431377976 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.179525712 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.543943152 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.631658673 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.685921144 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.179658982 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.281910311 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.182868903 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.179379269 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.178012828 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20684944 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.179305262 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.240501856 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.17839638 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.569837531 seconds)
  done (took 340.456322181 seconds)
done (took 683.380566769 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.84346362 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.828117235 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.93705844 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.831721489 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.808533574 seconds)
  done (took 10.374085839 seconds)
done (took 11.498798958 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.342436326 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.345191098 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.229791829 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.34398306 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.207314553 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.361666564 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.325417688 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.202228435 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.269817245 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.245682438 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.269834363 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224357268 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.203719428 seconds)
  done (took 17.696411406 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.472631383 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.472805957 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.24469579 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.472158704 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.219970806 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.476013876 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.371669429 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.375842176 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.362223344 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.194617644 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.193378085 seconds)
  done (took 15.985907912 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.48099862 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.471120533 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.251002862 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.472833903 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223389401 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.496580566 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.368919419 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.375633246 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.366750229 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.195972227 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.193515287 seconds)
  done (took 16.02121802 seconds)
done (took 50.828415249 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.188627051 seconds)
  done (took 2.314147837 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.219453104 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.37878393 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.202830376 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.193769441 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.18947369 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.190730646 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.193084705 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.189439983 seconds)
  done (took 10.883896432 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.18573191 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.186478139 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.189870417 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.188896174 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.188820589 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.189439608 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.186837799 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.186427918 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.189340991 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.189090925 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.186350939 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.186632864 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.187508291 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.187101153 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.18964725 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.190080393 seconds)
  done (took 20.134905932 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.187502693 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.186227468 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.186780149 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.188770611 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.188363389 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.188443403 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.188757252 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.187935908 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.186688029 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.187622888 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.187659373 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.187475777 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.188208496 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.187278994 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.188006603 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.188731972 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.187870781 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.187635937 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.192967062 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.187380573 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.188248 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.188511469 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.188300029 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.189578326 seconds)
  done (took 29.644071197 seconds)
done (took 64.101945344 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.014735429 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.590078302 seconds)
  done (took 8.73220837 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.190517584 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.190944873 seconds)
  done (took 3.510950983 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.190322649 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.190620387 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.190874904 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.190708926 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.190815705 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.190747106 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.192037408 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.191282604 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.191533622 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.19145344 seconds)
  done (took 13.037947128 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.191722552 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.192162937 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.189065625 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.192241851 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.192193314 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.189697856 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.191705982 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.191800287 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.191901991 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.189586525 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.191677483 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.190729664 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.191627149 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.189931991 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.19287405 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.19011974 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.189937771 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.189483033 seconds)
  done (took 22.567393265 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.192282382 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.192799245 seconds)
  done (took 3.513888104 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.192755167 seconds)
    (2/7) benchmarking "second"...
    done (took 1.190483412 seconds)
    (3/7) benchmarking "month"...
    done (took 1.190488076 seconds)
    (4/7) benchmarking "year"...
    done (took 1.190504416 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.190419002 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.189987298 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.19004033 seconds)
  done (took 9.463915366 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.193590587 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.359537835 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.439150781 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.803873479 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.194165026 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.19615008 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.051110017 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.195672734 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.199074601 seconds)
  done (took 13.761838224 seconds)
done (took 75.715582145 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.137455689 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.186744256 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.953470785 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.203529705 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.202067937 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.527282144 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.211346248 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.300493491 seconds)
done (took 36.852455805 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.189045316 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.862355678 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.900482535 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.192521419 seconds)
  done (took 11.086594007 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.172685748 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.023241829 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.177038554 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.118597231 seconds)
  done (took 17.623652827 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.735132103 seconds)
    (2/2) benchmarking "read"...
    done (took 1.518958493 seconds)
  done (took 4.385687645 seconds)
done (took 40.415553928 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.193297015 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.194023622 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.193870291 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.191870724 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.194470124 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.190513433 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.191663745 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.194149006 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.193976908 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.191529623 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.194157921 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.194411408 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.193626491 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.191860985 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191821538 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193735881 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.194569329 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.191783745 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.19167956 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.192644887 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.192660983 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.194992927 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.192191522 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.192002822 seconds)
  done (took 29.763166137 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.195539018 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.193475891 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.195201714 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.195986992 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.193150842 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.196033799 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.195808408 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.193396617 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.195376357 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.195563103 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.193145992 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.193480961 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.195953643 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.194101495 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196385723 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.193379493 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.195720936 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193765535 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196379659 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.193187346 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.196663376 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193388551 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.194557821 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.195755686 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.19326863 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.192852066 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.196796296 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.194713233 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.196027685 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.193732498 seconds)
  done (took 36.976044678 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.200329613 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.202787927 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.196984414 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.196727314 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.196462443 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.196696295 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.196681307 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.196818944 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.197065427 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.196774627 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.197067814 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.19702757 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.197186922 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.196549856 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.19693807 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.197836752 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.197863042 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.197354994 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.197265821 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.197071561 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.197393057 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.19725483 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.197316019 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.196124088 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.197726309 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.197350265 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.197766186 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.197906383 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.197427099 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.198656002 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.198429309 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.200001555 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.198385439 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.197780396 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.198363333 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.198012975 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.202157903 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.204498185 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.198398498 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.19894103 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.198491933 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.198652177 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.198525267 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.197768417 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.198128519 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.197736105 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.19841276 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.198703285 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.199002778 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.199079206 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.198748126 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.198277086 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.198744742 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.198973866 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.198604179 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.199077404 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.199690603 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.199646951 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.198654483 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.198821973 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.199600977 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.199095374 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.199347192 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.199689865 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.200380346 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.199294423 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.200330466 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.199753928 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.199063882 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.200447798 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.199664507 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.199838112 seconds)
  done (took 87.426355133 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.200300551 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.198997243 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.197527884 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.197866342 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.197348046 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.200269323 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.198200675 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200218357 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197763288 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.200316925 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200348353 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.199459246 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197918296 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.200144222 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199897182 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.197628835 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.200290508 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197881606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.200681208 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.20091629 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200223325 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.19870138 seconds)
  done (took 27.52007647 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20166823 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.201555671 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.198469378 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.201583793 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.198248016 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.201343775 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.201721523 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.201193124 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201108655 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200253105 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198861295 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200686976 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.198913733 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199314751 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199583803 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.200045624 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.201520726 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.1996664 seconds)
  done (took 22.74413368 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.199643612 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.199260969 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.201807324 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.200476522 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.199338797 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.20206499 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199376634 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.20214174 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.202664688 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.199758415 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.202255505 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203308224 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.202703273 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199576286 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202101769 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.200073234 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.202196154 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200204481 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202358201 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200597668 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.202068717 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.203139266 seconds)
  done (took 27.56688874 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20271127 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.203247102 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.200348222 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.200101994 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.201155119 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.202245864 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.203175158 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.199710309 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.202541929 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.202802768 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199581411 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.203347179 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.200696775 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.201050456 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.201329957 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200828841 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.202835426 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.201765118 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204009318 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.200755584 seconds)
  done (took 25.17418413 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.202970654 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203619019 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.203867405 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204549821 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203624712 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.202832201 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204595092 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.204621855 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.204511842 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.20525486 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.204273503 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.205201739 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204858112 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.204511187 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.204889457 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205426167 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.205919913 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204642261 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.205597269 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204880386 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.205507881 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204786719 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205014758 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.204797307 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.20497022 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204831565 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20524743 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.204766678 seconds)
  done (took 34.872380667 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.205629784 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.20479907 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.202139646 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.203212806 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.203284838 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.203579224 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.203065229 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.203599828 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.205415387 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.203425485 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.205361541 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.205863866 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.205515537 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.205597281 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.205869594 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.206377126 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205879753 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.20300102 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.203682239 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202485336 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.206085492 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205766854 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.205916165 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.203561867 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203842226 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.206635301 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203673216 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.204018151 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20602901 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.204350183 seconds)
  done (took 37.281074708 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.225168385 seconds)
    (2/2) benchmarking "in"...
    done (took 1.2251339 seconds)
  done (took 3.594464512 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.203023234 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20679445 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.206004903 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.204318028 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.204906948 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.207254826 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.206601197 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204852571 seconds)
  done (took 10.787527618 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.207077469 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.208607484 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.207660416 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.207532205 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.206735333 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.207267694 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.216475274 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.221487137 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.209150346 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.207835694 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.211693881 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.213672864 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.211710444 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.207728977 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.207402725 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.210499181 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.208617097 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.207491963 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.207864201 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.209113015 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.207712288 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.210583722 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.210237695 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.206530952 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.209116341 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.221489988 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.215583882 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.209214563 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.208140936 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.215216656 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.208946966 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.206626218 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.209083309 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.208159709 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.210370903 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.209390367 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.220522246 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.223429831 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.21768745 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210251339 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210204703 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.207170993 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.211008666 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.213113962 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.21125782 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.209787088 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.210192443 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.207983678 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.20883834 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.211590745 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.213659224 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.208544541 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.207889343 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.216472775 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.212348166 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.219476268 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.224557152 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.212211593 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.217600064 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.221302967 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.224371841 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.21698982 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.212853681 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.210179791 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.219302551 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.231185507 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220084463 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.222962973 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.209485861 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.211818096 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.21974964 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.225031056 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.219385792 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.209909734 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.21101732 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.211806468 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.210822239 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.211675133 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.220560248 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.229488037 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.210891492 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.211147876 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.219957689 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230475576 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.210165541 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.211450325 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.211568388 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.211859129 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.212729071 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.223749221 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.225787122 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.213414753 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.210887518 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.211482251 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.215213813 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.211664282 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.211119144 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.213135622 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.210981249 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.213073846 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.211791212 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.214680532 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.220171477 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.21238906 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.21235629 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.22161593 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.214035491 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.211978343 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.224062387 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.215797509 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.213118054 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.213092783 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.220488941 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.211005238 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.215661222 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.21978616 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.213100968 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.215692174 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.21360105 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.213895343 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.222975849 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.238101739 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.214376597 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.214987448 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.217865911 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.222463569 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.214167586 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.217932176 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.215332835 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.212522766 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.212765885 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.215417088 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.215010563 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.216117435 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.213313856 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.216267303 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.212729411 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.2152244 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.214426736 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.216820477 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.21633571 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.215193156 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.216272093 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.218454444 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.214990679 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.216481604 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.223675957 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.215564368 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.215836419 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.217346037 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.213700282 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.215907039 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.216868516 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.215391914 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.215570856 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214738254 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.214547359 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.215252895 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.216152926 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.216219084 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.21660238 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.215806379 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.218923461 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.215565637 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.221479835 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.214506924 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.215406739 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.217168827 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.217523731 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.215603727 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.217431568 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.215238699 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.217619393 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.221970453 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.217084467 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.216337373 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.220005601 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.215875947 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.215976281 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.216689891 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.218507875 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.222972399 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.216526597 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.226537731 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.217831987 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.21680311 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.218038793 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.217210003 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.216160439 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.216143701 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.219326368 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.224083683 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.231534464 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2249304 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.218217974 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.221487762 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.217661379 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.220207569 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.224005515 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.217732181 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.218459235 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.217266805 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.217205097 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.217292521 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.220207159 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.218520835 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.21810091 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.219055898 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.219382596 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.218413623 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219867091 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.21879244 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.220810787 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.217307491 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.220360178 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.217946117 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.217940963 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.21685797 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.216859176 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.218992129 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.219903371 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.218344886 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.228725673 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.217272495 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.22044029 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220089011 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.219152331 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.217648013 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.219881317 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.221571417 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.219746647 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.229073368 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.234760552 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.219980858 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.228750592 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.234749589 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.218152574 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.222513322 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.220527535 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.217755632 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.221617287 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.227106698 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.221507299 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.220240989 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.219215759 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.219920643 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.221373828 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.228790263 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.218220535 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.219302109 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.221751299 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.223295072 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.218752581 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.221757489 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.22116165 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.221528882 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.223130576 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.22191742 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.221741595 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.222709644 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.220990716 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.222100826 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.220681464 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.223668527 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.226978218 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.228297445 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.222960345 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.224580171 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.221616606 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.225262355 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.222492599 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.221352827 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.221064238 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235512584 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.22838402 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.230573719 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.224408777 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.223612673 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229610856 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.222807843 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.225729875 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.222401449 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.223572774 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.223069383 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.222071665 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.220922792 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.223507745 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.223449942 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224225169 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.22402387 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.226392662 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.224319959 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.221951166 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.223253336 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.222584496 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.2232296 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.222809818 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.223973383 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.226432444 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.225550263 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.222268789 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.222703531 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232030511 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237895198 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.225102197 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.222652983 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.224067124 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.222932261 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.224778392 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.223446605 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.22588051 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.229178821 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.226726779 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.232801501 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.225587334 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234590354 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.22403052 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.226704893 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.230232128 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.221920696 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.222612979 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.224545996 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.224580942 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23451009 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.239396449 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.224279473 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.227007039 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225022319 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.22453368 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.225319786 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.224378599 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.225469585 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.223771747 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235224537 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.239301858 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.228298687 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227745588 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.22292202 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.225082672 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.226741355 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.2237192 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.230731985 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.224692711 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.226031775 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.224504141 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.226262635 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.226127948 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.225016741 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.226100201 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.224088195 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.226557023 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.233643672 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.240658037 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.22856287 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.226999668 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.238405362 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226615518 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236088274 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.242230152 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.227196069 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.225467502 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.227211573 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.229260749 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.225952852 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.228003024 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.225699566 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.227471546 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.230376912 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.22593653 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.230114993 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.227565684 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.226123759 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.227185878 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.235183544 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246235808 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.227544003 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230690877 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.225906444 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.22790768 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.231156062 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.226582884 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.226203296 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.228845637 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235451711 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234829969 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.228236316 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.227395137 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228194188 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.228250908 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.228416876 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.228331588 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.228101854 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.228543783 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.230180206 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.227321321 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234135645 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.228513955 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.22890726 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230443776 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.229419529 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.240785315 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.228631537 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.230245086 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.228441306 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.22955818 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.229840988 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.229193149 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.228806817 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.229791125 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.230595267 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.229801671 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.234390749 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.233500384 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.232591509 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.228368113 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.22914358 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.230500315 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.231152172 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.229513774 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.229577745 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.229372542 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.230729486 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.228730483 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.231574309 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.228287954 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.229420954 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.230842649 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231730453 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231844829 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.235150084 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229589995 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.229293445 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.230549353 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.230844165 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.228608574 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.230479423 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.241729134 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.233716402 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.239029157 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.237321365 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.233928172 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.230645304 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.232747754 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.238384002 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.229507613 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.232026289 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.23063712 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.233775459 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.231167995 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.233806717 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231223761 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.241096455 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.23244145 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.232299165 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241726117 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.246974535 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231945152 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.232599787 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.234340794 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.231456572 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.229862117 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.233216851 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.230702137 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24129074 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.248976698 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232598314 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.23390722 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.229996719 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.232933762 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235126426 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233562659 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.234034089 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.229590529 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.232478862 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232047573 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.233557685 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.230268609 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.232288266 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.232152989 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.234656228 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.237711056 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.230131293 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.235364773 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.233242071 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.234373561 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232345595 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233972195 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.231903301 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.232093991 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.232862328 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232045748 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.233873752 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.235914211 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.232592227 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.233583999 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.235469892 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.23289952 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235720186 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.241411243 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.240270472 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.232202696 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.232986671 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.233560089 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.236763135 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.232819466 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.232686029 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233718658 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.236757191 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.234332474 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233021716 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.235339502 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.236707263 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251741628 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.248943728 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234137832 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.234891099 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240523433 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.235072705 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.23290879 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.235488385 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.238465855 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.237943949 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.239871757 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.235250993 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.242891449 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249658033 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.235715225 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.239149992 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.237626302 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.242642827 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.2380847 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.234791713 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.235889198 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.24058729 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.251483722 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.236722684 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244832335 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265428195 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.251399422 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.236700242 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.235450879 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234734762 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.235126472 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.238683412 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.236814016 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.23662038 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237565862 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.235623001 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.2361527 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241634335 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.23767792 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.237164487 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.2373216 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.237119425 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.239486734 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.234280771 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.236419583 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.236874701 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.235495184 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.237153615 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.236872565 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.238086027 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250968705 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.247218144 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.237398099 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.237081457 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.234848937 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.242663049 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.239889729 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246059916 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.244481469 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.236644314 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.236649895 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.238737298 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.236588134 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.23533504 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.238293075 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.236912212 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236616011 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.235876587 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.251025439 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246029703 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.243835418 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.239023453 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237830466 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.2389406 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239889385 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237299395 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238131375 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.241311568 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.238018555 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241840717 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.239586112 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.23857231 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.24109084 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.244930143 seconds)
  done (took 731.516800495 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.237308987 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236240312 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.236123318 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.23697422 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236742435 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236700966 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235984551 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.237250846 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.23732477 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.23599897 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.23741525 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237348159 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.237479019 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.237860491 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237122174 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.237957301 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238390225 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.237495362 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.237601927 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23745167 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.238541983 seconds)
  done (took 27.156628768 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.239012723 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.237425773 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.237389091 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.239926339 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23757231 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.239485373 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.237862675 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239803796 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.239838218 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237467079 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.240221243 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240319909 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.237810488 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.237404542 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237578988 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240278243 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.240487981 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237833758 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.240288397 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.237952821 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24055449 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.238223504 seconds)
  done (took 28.430956629 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.240319321 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.240117139 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.239470451 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.239373276 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.241029637 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.239350804 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.239783646 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.241319072 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.241637791 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.242367334 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.239538573 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.241231004 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.246817029 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.24549747 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.24386944 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.241523896 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.386371654 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.240803932 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.24173834 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.241471409 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.240130246 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.248557806 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.240231582 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.239412503 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.240056897 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.241906188 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.242336248 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.24263582 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.24198038 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.242689718 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.24511753 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.242542969 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.240887868 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.243585968 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.241390333 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.24305431 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.246678642 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.242125993 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.240639991 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.243023905 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.251226665 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.260921573 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.243012499 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.250827443 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.243260029 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.244088557 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.244984527 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.24941327 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.24172818 seconds)
  done (took 62.230638204 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.244166448 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.244582496 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.241522872 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.243933921 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.244232032 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.243566024 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.244299451 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.244011822 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.241621899 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.240088941 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.24504181 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.242641464 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.242364794 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.243888304 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.24443453 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.242213768 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.241758765 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.2424505 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.242168246 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.242140642 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.241905019 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.245572482 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.243864478 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.241810547 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.244501612 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.242041779 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.242242627 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.244377391 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.243020292 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.242540597 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.244650707 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.24534466 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.245400213 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.243277185 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.243199462 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.245213911 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.246152955 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.242429131 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.245440607 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.243564838 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.244806074 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.245720499 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.245689985 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.246087894 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.2426821 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.24343117 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.24320669 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.243793499 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.243684254 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.245815396 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.245824052 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.244028217 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.247084783 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.244152253 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.246305781 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.246266202 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.243868305 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.24338472 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.246093876 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.243779599 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.242982708 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.246237052 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.244223748 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.246162366 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.247145109 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.244041195 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.244506374 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.24613128 seconds)
  done (took 85.776536127 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.246377585 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.245886269 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245871737 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246142523 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246505113 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.247115741 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.246148619 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.245816132 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.246581118 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245935991 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.246159333 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.248285705 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.247046823 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.247803989 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.246816772 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.247195593 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.246067476 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246789293 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.246719251 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246866734 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.246971248 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.247420837 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.247116965 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.246955387 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.248249534 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.246862269 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.248479839 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.248066001 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247525724 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.247998747 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248190179 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.247466896 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.247294058 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.247218561 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.248489467 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.247733523 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.248016168 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248133682 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.248020763 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.248392907 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.247474877 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.247926632 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248248148 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.24781543 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.247714767 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.247879356 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.248638501 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.248728559 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.249667129 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.247825618 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.248501215 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.248057399 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24904637 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.248350958 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.247646308 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.249837928 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24929851 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24829269 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249309243 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.248745207 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.24978676 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.250237418 seconds)
  done (took 78.540283329 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250467177 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.25018137 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.247198708 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.248006538 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250450224 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.247435525 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.24997632 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.250739405 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.250400824 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.251022269 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250361003 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247859388 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247720893 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249617865 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.248746767 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249282524 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249753848 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.249205424 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251632522 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247717339 seconds)
  done (took 26.173356 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.249033375 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.251337164 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.249149758 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.2485876 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.25001215 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.248728554 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.250716577 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250930011 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247758412 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251538079 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.251419707 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.252154388 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248651086 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.248767896 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.252552391 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.249664254 seconds)
  done (took 21.187452109 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.249317046 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.25186942 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.250933336 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.250855718 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.249488502 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.250168974 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.251844689 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.249545914 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.249740609 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.253367971 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.252273371 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.251441749 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.251015297 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.251962794 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.248654549 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.252902965 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.249005312 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.250113003 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.252220057 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.251639779 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.250053465 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.250897364 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.253087485 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.253120012 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.250187951 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.251444477 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.250513956 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.249988357 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.250850135 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.252749566 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.249430574 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.251258729 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.251284665 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.250808273 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.252673478 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.251045435 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.253297829 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.253322814 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.253131184 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.253491597 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.254507122 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.251266533 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.254060956 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.25425628 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.251048458 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.253973923 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.251619687 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.251690343 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.251318176 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.252097897 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.254219422 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.253325478 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.254629724 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.25533153 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.253314571 seconds)
  done (took 70.036624079 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254381861 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.254712976 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.252127468 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.254740691 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.254611172 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.252379386 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.254879512 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.251955987 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252302958 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.255932314 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.254085114 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.25438951 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.253200189 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.255327617 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.252452718 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254938658 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.253005981 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.25413264 seconds)
  done (took 23.758928152 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.253374968 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253907842 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.25547982 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.253052742 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.253507278 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.255473212 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254043579 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.256145426 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255861656 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.25387759 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252974479 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.255782836 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255678498 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.256036721 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254682429 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253821009 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.256025155 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256503874 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.253699821 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.25375239 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.256327565 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256016665 seconds)
  done (took 28.797280946 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.254743801 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.254553437 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.271691901 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.296569766 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.283967123 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.254334658 seconds)
  done (took 8.806927792 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25471564 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257271585 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254473998 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258150873 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257562004 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254912401 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254745365 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25479705 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257918458 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25543136 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25559157 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25791331 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258031682 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256317986 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257206172 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258674039 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255037016 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255976196 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257335095 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258238408 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256352939 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258503453 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256323603 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256084461 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256145598 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255676619 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258757391 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257136631 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257023874 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25879732 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258256523 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256338195 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259026722 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257279256 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260555188 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258280316 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256498888 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259110763 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259112587 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256736581 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.258845103 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259603516 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259098116 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257095835 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259587354 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257703345 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257747185 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257511695 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257320222 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260468816 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260445231 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258172205 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260526268 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259961691 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26002685 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260640031 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258186844 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258253642 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260378978 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258024472 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258257687 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259859838 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258199744 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25847195 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260646904 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25802995 seconds)
  done (took 84.209800648 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258669595 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.257707897 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258255215 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259064681 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25850654 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258232437 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257849553 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258261792 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257919108 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257958028 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261550955 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258460972 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258559156 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258134968 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258297607 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258698364 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25787067 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258699017 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258983519 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261548754 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258511797 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258864673 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258372494 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258666145 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259129919 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261295426 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258909744 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258563405 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259614724 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259851162 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258626504 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259410081 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259546782 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.259801107 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260301789 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259524654 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259330526 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259538168 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258768968 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262426893 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259179666 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262039078 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259391995 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25949845 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26035907 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260685914 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260467906 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259878351 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26021265 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260254811 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260482253 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260198162 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260856883 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261239044 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259970097 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260428927 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261505242 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260716483 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261148091 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263684143 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260713653 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261939761 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263765699 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261188701 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260628841 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261238261 seconds)
  done (took 84.341459634 seconds)
done (took 1705.800639862 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.340439944 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.267717981 seconds)
  done (took 13.806694609 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.425001728 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.378627294 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.261417539 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.290706882 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.262165615 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.282525096 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.278529375 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.261659678 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.261601221 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.261327096 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.261203075 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.450875544 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.258759258 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.262668674 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.261820629 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.354697878 seconds)
  done (took 42.021918796 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.289324966 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.26973859 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.365292617 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.285139718 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.287534631 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.427734229 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.317082773 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.266628154 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.41370092 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.306832452 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.627022492 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.288246005 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.266318341 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.233463284 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.282420776 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.427520503 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.487260225 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.629477184 seconds)
  done (took 28.671873506 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.653310679 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.281937165 seconds)
  done (took 9.135308641 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.263290519 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.285616655 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.258279766 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.258397487 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.293653963 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.288958872 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.288381636 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.291430596 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.297766941 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.265101627 seconds)
  done (took 64.003496561 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.283351546 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.267524975 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.267480289 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.265587339 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.26427919 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.258642629 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.264908295 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.258047091 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.377773068 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.37798398 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.281857517 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.274291137 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.268246398 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.267873706 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.264762576 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.301715996 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.392469607 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.265021036 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.264772123 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.273987449 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.267393032 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.387505228 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.30414075 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.265956008 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.376684819 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.392425489 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.273432368 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.273361396 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.384752911 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.266368969 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.267183328 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.267948396 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.269147874 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.809457614 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.742459158 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.273580229 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.301744617 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.276981913 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.265994526 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.44091294 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.268095412 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.275128354 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.260597387 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.733624333 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.421622319 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.368460872 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.394683745 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.271165926 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.269653785 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.326686947 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.268954982 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.269826611 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.294100376 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.987547459 seconds)
  done (took 106.460784437 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.272982941 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.749162745 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.428955939 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.278764081 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.018723666 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.888275922 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.265820271 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.510798322 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.329746085 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.261842943 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.580812276 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.724274299 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.268796846 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.265655596 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.335273016 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.35419244 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.263633546 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.998260463 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.263574191 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.263825794 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.661363786 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.289949636 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.261797198 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.300829833 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.300845121 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.687894185 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.568676242 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.67384119 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.267755728 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.263321707 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.687275352 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.265500642 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.337861028 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.264575225 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.519545475 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.580137039 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.560701855 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.269472014 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.271074837 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.265810725 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.291791668 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.684763389 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.56947394 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.263864944 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.264080837 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.689582896 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.264810982 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.265060119 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.26732933 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.460620462 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.250171024 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.264462732 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.583030874 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.267740518 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.607669237 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.353850511 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.336407183 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.717905776 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.26469851 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.317377186 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.316376756 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.265919183 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.263822894 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.265377458 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.265005562 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.575147265 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.655421378 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.269256924 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.574977766 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.686146041 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.267735834 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.75192976 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.108230872 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.267380786 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.312015188 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.273818386 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.797243509 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.715277458 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.308411228 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.265759518 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.560668594 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.268804835 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.569528305 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.277064328 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.265779406 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.674211434 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.285773463 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.282051698 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.276090854 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.265309642 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.90938817 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.268654952 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.515765602 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.333707195 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.267046989 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.267110818 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.270951566 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.266020362 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.279457112 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.268553908 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.755207469 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.270454047 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.540240184 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.285988756 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.267765996 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.266622635 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.269223446 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.268971906 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.480341927 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.692029678 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.27270399 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.267863994 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.269315123 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.271272757 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.58003257 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.271051436 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.539501545 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.269135654 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.267348027 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.28105461 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.952509986 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.279501584 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.267326279 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.271934614 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.107504696 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.477061461 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.293339935 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.267088695 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.269108386 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.281409864 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.475500833 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.268019706 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.307160395 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.273068519 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.938689554 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.296009929 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.303250172 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.911352729 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.274671775 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.109890924 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.28458716 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.268517153 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.562692404 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.526876508 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.590045207 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.269902774 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.26912206 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.919684755 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.311723444 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.403000402 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.286503639 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.268331907 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.467925386 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.549043791 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.270555015 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.845991873 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.269786058 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477361023 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.270377447 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.575723664 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.719887369 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.27297306 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.275888017 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930408252 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.937834194 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.890286379 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.271248092 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.585227288 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.236944593 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.721739873 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.270162221 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.270606426 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.695552434 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.271904757 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.274205109 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.27103415 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.270232232 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.34103642 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.443938307 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.810696559 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.270565981 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.693219015 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.270240485 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.274886853 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.274120192 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.274092835 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.625659738 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.339513063 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.270721726 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.289654256 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.272454689 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.278695237 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.70776662 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.141758906 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.27108708 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.423001375 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.864206811 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.275196899 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.27477996 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.836027918 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.561835405 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.745077609 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.317226012 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.546107454 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.278491724 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.309342927 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.961205442 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.282192763 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.710490907 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.276124713 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.273523086 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.837911743 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.274716446 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.325898394 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.271845582 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.273624972 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.762524097 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.27524889 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.278475813 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.487988939 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.27337518 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.530058481 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.272130446 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.300576404 seconds)
  done (took 1094.211672721 seconds)
done (took 1359.509781594 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.27326868 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.276605723 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.263503899 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.276503652 seconds)
  done (took 26.305404643 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.283114105 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.278706305 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.279935884 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.278593831 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.282821862 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.27956589 seconds)
  done (took 8.898014422 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.312634148 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.277647929 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.277868909 seconds)
  done (took 19.083753632 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.476192603 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.434467769 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.610739736 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.229724857 seconds)
  done (took 9.967819393 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.281735069 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.281955431 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.280006543 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.283462782 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.284395413 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.285387459 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.28308094 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.284348635 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.285274861 seconds)
  done (took 12.764789765 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.835307565 seconds)
done (took 83.070408421 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.291914396 seconds)
    (2/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.261146634 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.328113151 seconds)
    (4/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.786954591 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.28062721 seconds)
    (6/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.308959484 seconds)
    (7/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.601401815 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.868934029 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.730697208 seconds)
    (10/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.30270837 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.506380423 seconds)
    (12/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.440785893 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.937797555 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.319674947 seconds)
    (15/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.270230779 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.304872042 seconds)
    (17/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.646993786 seconds)
    (18/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.824043666 seconds)
    (19/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.564601594 seconds)
    (20/309) benchmarking ("sort", Float32, false)...
    done (took 5.270294476 seconds)
    (21/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.40666833 seconds)
    (22/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.784751487 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.254267301 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.545324909 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.304580942 seconds)
    (26/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.50471026 seconds)
    (27/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.958900689 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.325692496 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.288033075 seconds)
    (30/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.290503935 seconds)
    (31/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.921302882 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.39916614 seconds)
    (33/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.294135788 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.377962663 seconds)
    (35/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.38227059 seconds)
    (36/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.407687402 seconds)
    (37/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.290417327 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.334800202 seconds)
    (39/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.788576216 seconds)
    (40/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.818426981 seconds)
    (41/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.273865816 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.532664931 seconds)
    (43/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.797449162 seconds)
    (44/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.980224514 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.387577808 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.54254108 seconds)
    (47/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.494909089 seconds)
    (48/309) benchmarking ("sort", Int8, false)...
    done (took 4.284909194 seconds)
    (49/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.339826387 seconds)
    (50/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.823918168 seconds)
    (51/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.361742975 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.349221777 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.095426545 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.293765311 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.861857135 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.337878799 seconds)
    (57/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.781416245 seconds)
    (58/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.265368836 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.35685649 seconds)
    (60/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.261707019 seconds)
    (61/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.337440971 seconds)
    (62/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.26123851 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.325044636 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.389473852 seconds)
    (65/309) benchmarking ("sort", BigInt, false)...
    done (took 6.27811003 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.784114412 seconds)
    (67/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.716189297 seconds)
    (68/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.024218845 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.287236708 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.279163216 seconds)
    (71/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.379470656 seconds)
    (72/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.294181962 seconds)
    (73/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.277916683 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.500880779 seconds)
    (75/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.688835546 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.38207017 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.298198844 seconds)
    (78/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.409621112 seconds)
    (79/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.576233272 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.809665912 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.386954063 seconds)
    (82/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.868035531 seconds)
    (83/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.281919642 seconds)
    (84/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.609568323 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.970866879 seconds)
    (86/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.278934604 seconds)
    (87/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.48908936 seconds)
    (88/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.306740446 seconds)
    (89/309) benchmarking ("sort", Float64, false)...
    done (took 5.499379066 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.829677088 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.305972378 seconds)
    (92/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.304739851 seconds)
    (93/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.264678764 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.308204805 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.999985127 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.04511286 seconds)
    (97/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.418856938 seconds)
    (98/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.963006873 seconds)
    (99/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.318590097 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.657251239 seconds)
    (101/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.426953239 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.49768896 seconds)
    (103/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.310444385 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.304191858 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.538272658 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.86506173 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.495777352 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.458559974 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.294331397 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.282710563 seconds)
    (111/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.366299989 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.801246481 seconds)
    (113/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.265447677 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.689496561 seconds)
    (115/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.281151857 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.44196822 seconds)
    (117/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.34541635 seconds)
    (118/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.831687231 seconds)
    (119/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.280763398 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 1.790044233 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.304513546 seconds)
    (122/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.281726463 seconds)
    (123/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.281411882 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.542109618 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.421585846 seconds)
    (126/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.482370813 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.976209878 seconds)
    (128/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.731084553 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.549063824 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.124798291 seconds)
    (131/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.281043896 seconds)
    (132/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.284459906 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.425908145 seconds)
    (134/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.043123976 seconds)
    (135/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.974234842 seconds)
    (136/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.35924773 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.133196376 seconds)
    (138/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.689224941 seconds)
    (139/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.281146134 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.986135727 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.309250066 seconds)
    (142/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.639054784 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.391171504 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.859755864 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.134809997 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.881472565 seconds)
    (147/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.416464659 seconds)
    (148/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.305095913 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.730152402 seconds)
    (150/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.567371783 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.298768639 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.572618072 seconds)
    (153/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.423034445 seconds)
    (154/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.282358588 seconds)
    (155/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.281988641 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.7100056 seconds)
    (157/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.285733637 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.705856239 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.303370786 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.683640798 seconds)
    (161/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.437935684 seconds)
    (162/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.281734859 seconds)
    (163/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.490221403 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.987688089 seconds)
    (165/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.295256543 seconds)
    (166/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.372036496 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.881542553 seconds)
    (168/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.051902009 seconds)
    (169/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.309756187 seconds)
    (170/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.308514197 seconds)
    (171/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.293300605 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.282740202 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.058042017 seconds)
    (174/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.311430673 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.962647591 seconds)
    (176/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.802841785 seconds)
    (177/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.271580731 seconds)
    (178/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.311612992 seconds)
    (179/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.362220303 seconds)
    (180/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.282997684 seconds)
    (181/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.019092768 seconds)
    (182/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.315800578 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.739210103 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.404013536 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.270103096 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.275370773 seconds)
    (187/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.106920355 seconds)
    (188/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.274294958 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.287847317 seconds)
    (190/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.37204352 seconds)
    (191/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.369265218 seconds)
    (192/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.271064737 seconds)
    (193/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.336546942 seconds)
    (194/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.392940752 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.343006682 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.358245812 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.301829382 seconds)
    (198/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.294627281 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.804960304 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.562024576 seconds)
    (201/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.271557199 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.069173584 seconds)
    (203/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.394306388 seconds)
    (204/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.439070202 seconds)
    (205/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.295994038 seconds)
    (206/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.596365523 seconds)
    (207/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.561866002 seconds)
    (208/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.631118813 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.823533131 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.503187052 seconds)
    (211/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.542574961 seconds)
    (212/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.966733683 seconds)
    (213/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.345734903 seconds)
    (214/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.980108476 seconds)
    (215/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.465485789 seconds)
    (216/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.285607328 seconds)
    (217/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.591580657 seconds)
    (218/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.6276363 seconds)
    (219/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.512069864 seconds)
    (220/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.725198469 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.389822976 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.308426776 seconds)
    (223/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.371709659 seconds)
    (224/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.971887356 seconds)
    (225/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.341010471 seconds)
    (226/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.626805753 seconds)
    (227/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.701931181 seconds)
    (228/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.460661684 seconds)
    (229/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.738018821 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.34174595 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.328044958 seconds)
    (232/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.531521472 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.408683888 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.286511796 seconds)
    (235/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.568950307 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.307610265 seconds)
    (237/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.465043811 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.286804707 seconds)
    (239/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.273381649 seconds)
    (240/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.318689861 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.055718697 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.55128846 seconds)
    (243/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.373618097 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.626586675 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.078165838 seconds)
    (246/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.44890665 seconds)
    (247/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.375790939 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.702167769 seconds)
    (249/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.486918663 seconds)
    (250/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.4692557 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.434310415 seconds)
    (252/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.610743312 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.411672959 seconds)
    (254/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.351475603 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.314418069 seconds)
    (256/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.288021913 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.037747681 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.287627003 seconds)
    (259/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.273215852 seconds)
    (260/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.286730585 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.551877209 seconds)
    (262/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.287904727 seconds)
    (263/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.534136934 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.484430504 seconds)
    (265/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.338815964 seconds)
    (266/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.831197359 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.625662919 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.301464446 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.315814615 seconds)
    (270/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.483730728 seconds)
    (271/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.083672951 seconds)
    (272/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.468166893 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.375092943 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.673232859 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.287984285 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.354720851 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.686273387 seconds)
    (278/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.650497778 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.292854398 seconds)
    (280/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.399026147 seconds)
    (281/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.384856642 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.274783462 seconds)
    (283/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.760123329 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.689387024 seconds)
    (285/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.56741509 seconds)
    (286/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.291650876 seconds)
    (287/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.457260765 seconds)
    (288/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.106369553 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.511660703 seconds)
    (290/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.601914377 seconds)
    (291/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.819868504 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.381912532 seconds)
    (293/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.854578924 seconds)
    (294/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.376497663 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.406585521 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.486305551 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.083631054 seconds)
    (298/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.487515611 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.30637617 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.132732282 seconds)
    (301/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.301278497 seconds)
    (302/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.484558535 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.33294645 seconds)
    (304/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.626022347 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.632639983 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.332224545 seconds)
    (307/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.471174695 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.111266447 seconds)
    (309/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.355739284 seconds)
  done (took 895.331966832 seconds)
done (took 896.550227983 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.321356022 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.316239717 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.29997389 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.322254676 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.413241837 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.330840974 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.310895487 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.302946957 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.348310872 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.350135373 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.299981975 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.328639916 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.302177731 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.301026351 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.299963523 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.315490688 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.211995158 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.302112476 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.31825456 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.311180099 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.318042629 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.300434291 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.350216242 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.330403735 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.304476551 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.303909705 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.305005715 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.320607822 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.414495206 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.303932998 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.303881764 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.313313475 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.212762322 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.299828464 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.296917352 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.32195519 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.313439762 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.310970379 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.305583446 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.334541138 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.577008955 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.30229359 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.303019039 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.303453809 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.303133622 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.307481778 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.303932794 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.308916816 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316211526 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316847571 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.569351372 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.318312182 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.306920558 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.303463364 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.314254549 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.304379139 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.306793428 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.319812404 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.32309895 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.320103892 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.207434136 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.30889986 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.305832563 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.320728664 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.311961359 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.610363205 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.29945779 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.30930654 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.584271062 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.309966792 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.61386583 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.312425098 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.306186944 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.318365421 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.336135872 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.218477166 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.29909364 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.30378209 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.311896782 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.304131636 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.314203728 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.318409706 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.309534642 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.306118221 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.319313946 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.334283499 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.315535625 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.305811856 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.314143341 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.325179072 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.31217312 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.316932788 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.308306689 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.300784948 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.31519488 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.31018511 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.308842866 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.308980388 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.310008252 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.31601986 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.584589187 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323121905 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.302597854 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.303201967 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.305390232 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.320275663 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.587355884 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.307333336 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.327727528 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.354070207 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.308269505 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.212342006 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.310707707 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.32330315 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.31541805 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.309506276 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.30314912 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.213225422 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.579428724 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.32314623 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.308584294 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.305540687 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323402584 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.308713423 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.303639538 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.223458196 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.309514928 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.32165664 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.428296122 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.318737941 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.339405775 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.306004617 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.310523324 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.33740153 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323563922 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.339087619 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.310717123 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.32317964 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.324752707 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.304141071 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.319003957 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.318585569 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.308864237 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.314717281 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.302797865 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.341584718 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.320393331 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.320620109 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.329101528 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.429803335 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.306038802 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.215446032 seconds)
done (took 218.816303209 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.367923882 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.300854398 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.416571647 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.306839618 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.403068731 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.4056652 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.303418172 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.304278217 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.305140987 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.684205154 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.305039331 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.305071183 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.299790861 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.304666298 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.389879134 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.307280096 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.30472369 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.648320472 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.306770184 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.377252008 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.299342972 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.305101665 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.307969657 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.699449387 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.307045386 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.303847982 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.376758505 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.308137763 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.655315669 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.306685613 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.299514734 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.65390144 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.396069961 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.333951825 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.318700618 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.305652359 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.405351364 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.333014725 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.388762865 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.387011864 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.417688386 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.337276209 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.308142039 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.305346025 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.309767615 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.309675466 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.306559323 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.336040489 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.304318397 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.308287119 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.649292796 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.318901195 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.307169772 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.306500463 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.306812653 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.337721716 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.306761348 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.309383359 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.398265072 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.309028179 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.371492849 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.701638682 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.685804897 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.309803211 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.306883502 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.307418197 seconds)
  done (took 146.756027466 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.376830511 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.383025256 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.415603864 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.309918575 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.359053976 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.418897036 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.310238054 seconds)
  done (took 10.816474714 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.315267459 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.311360413 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.359300092 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.359278564 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.310114449 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.457404898 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.30999782 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.321336392 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.307588244 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.363176685 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.312603655 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.312556154 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.317717957 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.303591275 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.357977707 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.321303049 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.424578213 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.310553276 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.310567726 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.464016937 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.308728213 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.318358317 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.363075128 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.322011385 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.312673406 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.31702641 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.87513487 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.310990591 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.308318744 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.311925426 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.310230046 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.348493632 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.312667753 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.308873671 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.309637102 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.428087212 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.31180273 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.309379262 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.311631691 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.31021642 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.312376668 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.311921928 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.313028539 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.310114338 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.313424943 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.335497424 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.312351376 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.312970033 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.312391559 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.313254945 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.363732341 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.313546898 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.310413743 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.31083017 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.368427825 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.320735384 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.312765117 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.310401118 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.314182311 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.311666473 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.466521386 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.360161229 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.313374687 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.360486929 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.313704936 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.31442292 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.314128784 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.313930372 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366912242 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.314145433 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.360777391 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.310937394 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.467263755 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.336269222 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.315405687 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.316193819 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.315012421 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.313114919 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.307826794 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.319114568 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.311662153 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.314465648 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.319614654 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.311683918 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.311876482 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.41573214 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421092472 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.311871919 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.326160412 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.320252629 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.311946368 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.36806387 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.314600777 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.31315618 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365805604 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.429083915 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.366675241 seconds)
  done (took 151.123044411 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.319305593 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.321563305 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.315876393 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.330816136 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.315482971 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.314802397 seconds)
  done (took 9.166188886 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.315851351 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.316407707 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.315771833 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.316239572 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.31542809 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.317037815 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.316168159 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.31631091 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.31903452 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.31654492 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.316402791 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.318122256 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.318243557 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.316042335 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.316012381 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.316351372 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.316382027 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.314026943 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.317527158 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316191837 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.423047864 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.316228002 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.316534415 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.317652017 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.321824466 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.317051747 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.324362423 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.316329965 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.317515841 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.324614132 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.318842627 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.319578563 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.318297873 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.321759865 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.322151998 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.318111587 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.320896081 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.320233349 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.315722115 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.318770361 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.319680337 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.317518017 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.317900238 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.319945278 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.319418 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.321861015 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.322136315 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.324875393 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.318278223 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.320433705 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.320612459 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.319664153 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.319898742 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.320676832 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.322872384 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.322543191 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.323891095 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.319034096 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.318342144 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.318240662 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.320291253 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.319875853 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.319991398 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.321960949 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.318356577 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.320364165 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.320657253 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.322040772 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.318969168 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.319889054 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.32103158 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.31777983 seconds)
  done (took 97.319232131 seconds)
done (took 416.420464658 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.544863175 seconds)
  done (took 7.797651293 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.556743544 seconds)
  done (took 7.811082161 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.366801398 seconds)
  done (took 19.625119685 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.378441102 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.37498988 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.32463198 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.316746989 seconds)
  done (took 26.645448825 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.490112411 seconds)
  done (took 7.741441273 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.319482214 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.313047012 seconds)
  done (took 13.885254596 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.791141276 seconds)
  done (took 8.042921242 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.93650543 seconds)
  done (took 8.193670777 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.333567833 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.342946359 seconds)
  done (took 14.194255784 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.304189062 seconds)
  done (took 7.55577145 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.347553434 seconds)
  done (took 8.60274048 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.323463375 seconds)
  done (took 7.579176424 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.345670581 seconds)
  done (took 7.597910101 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.580037327 seconds)
  done (took 8.831505636 seconds)
done (took 155.356557479 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.310614523 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.312154295 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.311898931 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.311101972 seconds)
  done (took 26.497624685 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.352487858 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.353143055 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.354220603 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.362969702 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.35526525 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.352945122 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.344424006 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.358980198 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.363608016 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.355784153 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.355062339 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.35580653 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.353318043 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.346253209 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.355497344 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.35491568 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.364469795 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.355297844 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.345794687 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.356240478 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.320107322 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.364052829 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.356656747 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.321122162 seconds)
  done (took 33.711262059 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.518366429 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.390178032 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.472304451 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.371492197 seconds)
  done (took 7.00519832 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.371921826 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.374040269 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.385624268 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.423480259 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.4505287 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.383443417 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.347765839 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.344246067 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.329384249 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.373918143 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.4501296 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.391317207 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.460135505 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.322469027 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.507833679 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.321798373 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.321538201 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.373391512 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.425021402 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.438311645 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.322482767 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.372940301 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.37677953 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.390706888 seconds)
  done (took 34.513473294 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.321080795 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.329310867 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.327409493 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.321878775 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.321434644 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.32117195 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.326789018 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.322043584 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.341621195 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.323120435 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.320160757 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.321271211 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.32072802 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.32147482 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.321481723 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.334248718 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.334987121 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.321717605 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.32462274 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.327507821 seconds)
  done (took 27.758380456 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.315701897 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.168201362 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.66601122 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.570530553 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.315502661 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.319126843 seconds)
  done (took 27.609812781 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.387092054 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.502330802 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.32188772 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.645035985 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.728155379 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.327507924 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.322857208 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.533142349 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.812375986 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.820800161 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.372379384 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.384226383 seconds)
  done (took 19.419044389 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.32778808 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.319965223 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.330014211 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.337383498 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.371601057 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.325985107 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.32903594 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.316191526 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.376138119 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.377491397 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.325607905 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.37292276 seconds)
  done (took 37.36862753 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405564181 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363442056 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.244062295 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.038189698 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.698668733 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529231241 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.096247251 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.741878139 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.326998998 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592554649 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.0716573 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424427562 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.573234177 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319021816 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.322956411 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.264462463 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.546879967 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783154526 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323346696 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.025367025 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349059043 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.32251522 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.16634199 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.348655685 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531014931 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.448292265 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.580533109 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320615897 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578425811 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.334648963 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33100078 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320347658 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594597219 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972477541 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416353697 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330693984 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.999113186 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.034507936 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.317127242 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.051307127 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.824651812 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327321074 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331192575 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320230952 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.254327837 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321573122 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753744625 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.333722091 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.032525858 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320494546 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.331674054 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416132385 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.324817663 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.136847785 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327083432 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323807841 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.320003489 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327811117 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895767914 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.503606588 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341248299 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.25526539 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.682422027 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.036175605 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903653913 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.424221978 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.326043084 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325121661 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256409837 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.040575672 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345684546 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469630704 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.343655993 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.97163095 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978365672 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.096897889 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.269273726 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842749439 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338406334 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.260603421 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550096981 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322941722 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259002341 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.278795938 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.257482467 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000488198 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335942791 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.71263909 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.334645044 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.743414513 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.33887042 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34608235 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346501484 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.547509689 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.206410717 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323257655 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.887071777 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48299821 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345479707 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.746825926 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264024187 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.328287736 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578421461 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.535085748 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334092415 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.267753923 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517815217 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337335821 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.343114975 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.324551309 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.337667352 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.860506632 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339354906 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.552464718 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344480586 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.324893014 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041090969 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329742246 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.429062862 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.14520311 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572894489 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.081800948 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330920814 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408165863 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327044504 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.325654873 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.198482415 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.842773237 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.325853872 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.326702791 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324920505 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.340128778 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.326269028 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269933794 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.32236651 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.19377482 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.331969977 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.548521242 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334442993 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604449932 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260516199 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472454218 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.418716894 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.550040215 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.444098482 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.326468962 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583554357 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338604801 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.337486984 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340570437 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345758946 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425425165 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348550553 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.327649357 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.584270729 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.330957664 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.331595763 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.584897166 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.332183648 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327755739 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.332511191 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.153290495 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8648088 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307398617 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337651247 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.216208052 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.341012643 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390981859 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.332931095 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.338052138 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.020029774 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.116395319 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.338608889 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.334634358 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555057418 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337952389 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.04940854 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412834487 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.513244337 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.869483476 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346370893 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.261367975 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.039845292 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.021332597 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328210233 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.26281702 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327607585 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337504023 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338828322 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.819458516 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.870241218 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334010076 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.05259786 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.33818149 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338549224 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.332766739 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327800773 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.986289004 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.533025286 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335830833 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.343427148 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47228628 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.342415937 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.262505794 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.332823672 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.334300818 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329000978 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.329634613 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362694656 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.060678907 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803767546 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591091005 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.998771572 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.346128141 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.154175688 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.363599539 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.328976794 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.919400349 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348203735 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.353262619 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338610083 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.341007412 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.069477127 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.994768211 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902121348 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006628473 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823864263 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240028162 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.336529277 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.334429361 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.757492638 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269410284 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.887577917 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.506228514 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.760862067 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281984435 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517647176 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.45594809 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.043265208 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340658651 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558637674 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232662492 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.934062537 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358343723 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542751853 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367802322 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.337098111 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.264225877 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.616996283 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569951926 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.897462533 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417941946 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756016228 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.928059895 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.349642634 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.329902449 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.653999463 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498324604 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.05130602 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.502973411 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.334916493 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.142317489 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814153617 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342362161 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.556728621 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914239715 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347392693 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.523177568 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272532921 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.344066161 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.343768723 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.334062997 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.496443891 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.336690773 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.590604306 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343758285 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266302623 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.343236353 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830806986 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.191772573 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.340553859 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334404823 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052428086 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352205716 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599159233 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.343689076 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.982225849 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341796799 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.269166101 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268829761 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.02859207 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339807512 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309633372 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80357155 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.676276948 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.326705788 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366378513 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183361282 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.588258715 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.348899173 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.874773941 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5633521 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.108367054 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360526115 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.434874116 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.003752297 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.335090492 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.334254096 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.569858312 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.15979035 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.558562068 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.287070723 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.24971731 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332947563 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.55007944 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.334989305 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.174720543 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580274983 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.05003628 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.34943576 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001427147 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364189042 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.207153146 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.266264845 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.696936898 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345240972 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415129981 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.345911196 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.347231394 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.347771162 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497638135 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.174134466 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353870164 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.351050428 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429954775 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.594754695 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.992705765 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.339944853 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88213164 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023726577 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.88669342 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35251021 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.336931488 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336892781 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271048107 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485759893 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.562075918 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61016732 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468100058 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.760535672 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36291983 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.973005967 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366919241 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551397028 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612025688 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.232526849 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349556868 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.352104417 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.338022266 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348959904 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.548361637 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809185057 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870976541 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457369366 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.344918301 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.767931698 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617480186 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339150487 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337985782 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928482051 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.352972123 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.662080699 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.347403964 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261747718 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489336321 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34758871 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991857102 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.35211776 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.498321072 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.112587291 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.09357343 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597231471 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.760371471 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.350018946 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889505915 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.998336052 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6071211 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406723872 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.35049725 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.457407153 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486933496 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.342568653 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342344689 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340151302 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185296649 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.049245154 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.350514104 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889381593 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607901205 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.336360279 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.340888289 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367700694 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.34934283 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.56317816 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07619073 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570105242 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348726654 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.343898444 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.159144859 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890726567 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357831377 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275012716 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.344204664 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568596991 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.582138493 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363709296 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.792952453 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.051802357 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871956421 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.312741731 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362954517 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350892342 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.003670344 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895001403 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.006450604 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821253349 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.904926781 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344908964 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619053934 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.346883835 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.343083822 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623902151 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.345552616 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.35103149 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357627707 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.888084165 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06635376 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.35070591 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.116392888 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.282318131 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.682448912 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.958686098 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282794481 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345331623 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.51644366 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347837727 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473653199 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354406473 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.345168905 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35688081 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.07902447 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615460477 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.348283778 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.341477473 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.05506577 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.360313106 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351837443 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584238276 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355474298 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.016596682 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.692844235 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.597676317 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.351666343 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.331218337 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.346907006 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344561168 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.329637999 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.542348949 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.838224493 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886278329 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.350033897 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.358841194 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347701311 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.55985025 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554987027 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.243593338 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371322424 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343283219 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3658388 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.249478086 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.845629226 seconds)
  done (took 1580.938969076 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.348423819 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.373105616 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.374878562 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.43655311 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.373277498 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.402722016 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.423869601 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.399985832 seconds)
  done (took 52.415694996 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.346570644 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.56871122 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.375977791 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.343708901 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.356413622 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.346183639 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.758491116 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.344782292 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.352269076 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.353331692 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.34360493 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.352410422 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.946198297 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.355994971 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.35418454 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.334187827 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.357123515 seconds)
  done (took 65.480645186 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.344637653 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.642032029 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.426513732 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.366375742 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.141769023 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.353378411 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.754012855 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.40234614 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.371297706 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.438152553 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.003239133 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.358047868 seconds)
  done (took 83.887028449 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.352796263 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.353088527 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.351979174 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.352853549 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.353328969 seconds)
  done (took 8.04818746 seconds)
done (took 2005.907212358 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.596161233 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.992516648 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.024481173 seconds)
  done (took 5.301430615 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.491893899 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.540361431 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.66146827 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.667461947 seconds)
  done (took 7.645121959 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.622018403 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.712456435 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.53451626 seconds)
  done (took 6.153979546 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.661284298 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.363091419 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.4684599 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.345664955 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.351487175 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.351049462 seconds)
  done (took 20.33408881 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.351639577 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.354140993 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.35259297 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.353505183 seconds)
  done (took 6.698702537 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.330497278 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.083256206 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.337250535 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.350356584 seconds)
  done (took 18.386180156 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.096921157 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.113040631 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.096575033 seconds)
  done (took 7.593535239 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.346388004 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.190508978 seconds)
  done (took 9.827616074 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.649154166 seconds)
  done (took 2.934715208 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.482616297 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.618890995 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.310888314 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.269388906 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.339244172 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.873967351 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.857677505 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.468188536 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.254992425 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.357238139 seconds)
  done (took 27.118274834 seconds)
done (took 125.367697118 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.920143095 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.591994373 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.55147832 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.893392425 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.57905286 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.553417653 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.571790394 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.862218291 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.404894762 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.391835698 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.89634441 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.579395916 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.512406644 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.591614176 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.512601502 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.596094249 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.579737539 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.96316916 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.583502319 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.779719089 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.572916957 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.52815596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.728742744 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.549758843 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.580490392 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.503891569 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.127517754 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.598896056 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.754680561 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.144543165 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.504474738 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.957884646 seconds)
  done (took 190.754137913 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.348360747 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.34851565 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.36145964 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.34904589 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.355904677 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.353717823 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.347111672 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.36295479 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.348585186 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.360429494 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.349265903 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.364565161 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.349826024 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.362611956 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.349691909 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.356211587 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.349754273 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.358079269 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.348287999 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.364708138 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.350800183 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.349979391 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.34870354 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.362354824 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.348868732 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.349379445 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.366400498 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.351100184 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.356607824 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.354484297 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.349543086 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.367947202 seconds)
  done (took 204.633717676 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.354100106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.350706593 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.351121368 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.357250939 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.349241547 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.352250378 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.352105456 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.349601424 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.355695338 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.352591214 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.34974171 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.350361248 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.353448735 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.350470191 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.349436872 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.351100668 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.362909329 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.354949106 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.349965915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.352574336 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.351826173 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.358947869 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.350836815 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.354936696 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.350436137 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.350010088 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.369180162 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.363864042 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.349607659 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.348946432 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.3518341 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.363127428 seconds)
  done (took 204.60353655 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.553739388 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.360782129 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.361419446 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.318786858 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.359874318 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.358392286 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.352901263 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.557115845 seconds)
  done (took 14.5137544 seconds)
done (took 615.790150284 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.594844992 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.3135118 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.552934018 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.383727826 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.08836365 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.380346803 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.380906567 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.542252496 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.271263396 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.54435605 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.576639056 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.377170078 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.707986643 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.378744939 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.61908559 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.472358408 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.20534497 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.313505129 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.681845837 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.872949673 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.620290051 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.774877156 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.538537703 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.266659895 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.712646228 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.776820815 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.013911605 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.203234648 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.380298798 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.688735547 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.946003015 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.368833725 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.434755197 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.417973449 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.473558249 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.456334697 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.250768483 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.416537035 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.55545542 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.538994925 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.873131498 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.079966663 seconds)
  done (took 91.34022891 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.349451241 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.349614745 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.347857616 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.349597951 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.351310883 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.350290687 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.349558443 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.349776946 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.349745003 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.349094249 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.347758174 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.35048031 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.35034082 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.351935093 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.350798295 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.349377518 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.349744394 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.351056388 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.349005582 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.348578127 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.349706803 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.348595502 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.350328878 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.348578134 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.353012773 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.351463137 seconds)
  done (took 36.39133091 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.363879564 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.585614681 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.758175357 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.370349475 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.361709523 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.366760576 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.434416803 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.363238526 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.367423116 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.36641365 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.512089617 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.367244014 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.398324971 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.769921149 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.368034964 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.365476193 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.36511531 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.364044144 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.593985033 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.373113716 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.437710653 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.365096992 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.43620049 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.375178079 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.367561547 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.366379589 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.370383647 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.858475251 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.366440321 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.512600021 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.077058101 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.434289764 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.812016373 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.771322537 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.077944629 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.369733089 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.36659428 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.519305023 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.366138079 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.365373282 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.435322516 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.364484316 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.768591592 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.985641989 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.381624487 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.366202429 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.881488269 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.517715079 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.592933288 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.374849658 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.7906694 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.374151217 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.370205696 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.368207257 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.594234338 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.37713512 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.368098699 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.888260753 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.375575164 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.439560851 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.369493722 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.3690046 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.606613234 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.369786132 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.593851394 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.369992558 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.376662958 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.3687422 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.776621452 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.371283157 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.99914804 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.38649101 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.369477041 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.517663424 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.594348518 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.911586212 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.371995465 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.60866682 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.824915947 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.441559309 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.375025364 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.852676352 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.444668348 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.376357568 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.373951214 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.374119773 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.371771654 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.414540208 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.43984067 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.930891578 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.996486706 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.908258271 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.447571728 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.384963899 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.372069849 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.891418534 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.389396405 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.371807624 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.770203536 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.01246114 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.386929232 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.37951661 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.987473983 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.389984954 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.442408741 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.377894948 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.779343106 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.374950695 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.414687674 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.371996558 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.378581716 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.374592507 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.442348537 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.375308973 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.372257956 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.979908563 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.543878645 seconds)
  done (took 178.816422977 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.364879149 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.367191655 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.369295418 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.363859507 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.364880813 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.369857476 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.36449887 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.365978717 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.370785087 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.364951532 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.365798708 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.365559509 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.366728075 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.387973147 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.375448987 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.371991967 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.977591752 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.365862507 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.366266662 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.366081919 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.155283882 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.370387272 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.366870627 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.365675294 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.36617339 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.367121636 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.367175886 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.368878155 seconds)
  done (took 153.007733723 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.373726424 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.890779307 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.375388374 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.49439587 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.392275799 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.372756863 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.49208678 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.427011929 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.375231207 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.372650344 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.373449742 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.652751468 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.376057915 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.846950238 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.548045147 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.498157807 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.843668859 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.375554541 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.372776394 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.372908767 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.497043815 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.380984063 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.653117232 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.89324662 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.375718221 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.894328755 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.362957717 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.375531949 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.373313727 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.896564898 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.374234886 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.65501973 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.444631823 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.428601741 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.896330704 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.848441101 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.854789488 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.511664929 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.374642774 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.373215419 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.373470547 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.36396667 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.897418379 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.376685477 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.375356903 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.890223711 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.391471924 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.376031538 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.385247145 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.374005253 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.429305654 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.431179338 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.658532602 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.903226042 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.446922124 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.395898104 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.49538783 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.747664888 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.378610321 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.848338672 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.362967709 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.909845331 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.38177817 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.364455661 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.37727186 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.382121642 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.514741883 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.498617192 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.849092887 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.378128755 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.849662271 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.515685711 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.377343693 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.377118264 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.379124679 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.911627997 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.852489869 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.51491416 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.502594844 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.557302091 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.368618279 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.376067395 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.366333348 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.447145159 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.376519462 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.911410837 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.856475359 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.381672894 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.378514686 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.378506959 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.379649188 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.538753962 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.90507315 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.448410832 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.844119839 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.673311241 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.664822258 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.380009437 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.432233398 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.377472038 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.66183309 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.380343895 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.430890291 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.811985877 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.661411803 seconds)
  done (took 162.428237777 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.604165192 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.509935344 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.465721609 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.481883389 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.884588293 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.920177503 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.567303008 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.495048318 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.481937087 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.616553015 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.497796613 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.472514637 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.549470474 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.462599464 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.072161671 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.442975497 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.464567438 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.496276489 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.481191121 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.38418712 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.977030179 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.647635035 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.537914606 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.457300696 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.469654507 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.122551145 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.909616101 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.871774293 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.535172713 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.59469308 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.858961737 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.476492942 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.28384353 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.00965935 seconds)
  done (took 65.414577401 seconds)
done (took 688.689099405 seconds)
SAVING RESULT...
DONE!
