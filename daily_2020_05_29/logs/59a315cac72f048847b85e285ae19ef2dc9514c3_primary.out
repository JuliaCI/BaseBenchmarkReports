cset: moving following pidspec: 1207
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.332086505 seconds)
loading group "string"... done (took 0.587547512 seconds)
loading group "linalg"... done (took 8.062793963 seconds)
loading group "parallel"... done (took 0.168822283 seconds)
loading group "find"... done (took 1.230841333 seconds)
loading group "tuple"... done (took 2.034367122 seconds)
loading group "dates"... done (took 1.366798235 seconds)
loading group "micro"... done (took 0.206308718 seconds)
loading group "io"... done (took 1.023730929 seconds)
loading group "scalar"... done (took 40.866616671 seconds)
loading group "sparse"... done (took 12.854953947 seconds)
loading group "broadcast"... done (took 1.00280914 seconds)
loading group "union"... done (took 14.844014567 seconds)
loading group "simd"... done (took 5.180237557 seconds)
loading group "random"... done (took 9.881133498 seconds)
loading group "problem"... done (took 1.666536033 seconds)
loading group "array"... done (took 21.764499227 seconds)
loading group "misc"... done (took 1.591002475 seconds)
loading group "sort"... done (took 3.291835547 seconds)
loading group "collection"... done (took 18.572168625 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.539287769 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125862108 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140360159 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122807692 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153648304 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117637465 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125689329 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084908592 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.881133336 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153942031 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11507066 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416562326 seconds)
done (took 5.397827872 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172668601 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087950355 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079652334 seconds)
  done (took 1.259364134 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065999196 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128031675 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067303882 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067605605 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068867712 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068623645 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068369443 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069098056 seconds)
  done (took 1.629098563 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073353306 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069439663 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.0664012 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068394209 seconds)
  done (took 1.369007378 seconds)
done (took 5.598317739 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.800192757 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211665421 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190071214 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.414269608 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.140084699 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.185895295 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.661192116 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318974209 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209246843 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098255329 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11729699 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.372887359 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128636427 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.650303558 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08145315 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.101176113 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142341708 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.475080199 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.073210069 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087184064 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095445774 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13283079 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092319676 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078932678 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.15026582 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071122324 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145231545 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083713952 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.0695653 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.223690517 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177004442 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.666370544 seconds)
  done (took 10.57588994 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102493706 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100077142 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069182723 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126744243 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101906879 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073226235 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078339417 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070136657 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.096052948 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133598501 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095364297 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.112560465 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068891588 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072140272 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085864193 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198616686 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081380688 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082271337 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06931259 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079326574 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108248587 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083197116 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081925042 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083635324 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132638417 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.173783645 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097127228 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098180513 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070266162 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085457997 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117825076 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131204231 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069429118 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068399822 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12915984 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097864529 seconds)
  done (took 4.656285702 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.03103942 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151070108 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090926859 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135829701 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.092160326 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065781457 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113688503 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066361404 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094550622 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243184592 seconds)
    (10/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085821004 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.437580103 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067939944 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.633852888 seconds)
    (14/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.123117482 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118170992 seconds)
    (16/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105690593 seconds)
    (17/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071310923 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069578391 seconds)
    (19/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068334353 seconds)
    (20/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.292227347 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101349493 seconds)
    (22/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110948773 seconds)
    (23/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085807306 seconds)
    (24/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072747127 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07172582 seconds)
    (26/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066849005 seconds)
    (27/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073893721 seconds)
    (28/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065945261 seconds)
    (29/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070842278 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090837927 seconds)
    (31/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078453442 seconds)
    (32/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.333602617 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129991926 seconds)
    (34/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071007336 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.972722499 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.173671768 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071051379 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109295254 seconds)
    (39/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164549931 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098402194 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145788335 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.208109649 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066403866 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162650043 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065768246 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072638177 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067556691 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085734412 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109897281 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122641146 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067762235 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069188804 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.176314287 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067530114 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084553432 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066204512 seconds)
    (57/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.235265362 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.156321913 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068888392 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.305068035 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096115744 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074164612 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067586854 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.217214744 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123007941 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071241812 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070421357 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071928178 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071445496 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383250865 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067070694 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.219332547 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068685142 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077978086 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071167612 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071964725 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079805088 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079975628 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09331069 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07223084 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077211294 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069454105 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068706213 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069709953 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096511931 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.403961712 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069880755 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074976939 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067044415 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095292729 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102042872 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070091348 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06818563 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105669055 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071712225 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069063295 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0704838 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.123229085 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072903232 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.218698039 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070835921 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.064319004 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097741436 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070585906 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101923073 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083965556 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073987091 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.467640271 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066360861 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073464184 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066931967 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070385783 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069337183 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083836221 seconds)
  done (took 22.522213164 seconds)
done (took 39.876696684 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242941494 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083688199 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084026982 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083710709 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084469525 seconds)
  done (took 1.762364235 seconds)
done (took 2.92731366 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126465078 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100647534 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06520396 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098323338 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065279344 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101446092 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100789692 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086762319 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100129572 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065216127 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097802752 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065494826 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065861196 seconds)
  done (took 2.31974656 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08260749 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083137562 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069607109 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082245121 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063239996 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082041923 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080913886 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088256887 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081011086 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072356143 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063222519 seconds)
  done (took 2.004807412 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082394007 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083822216 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07011151 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084031155 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065042668 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087206184 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083301482 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08763616 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084057658 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07564073 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064566377 seconds)
  done (took 2.020625637 seconds)
done (took 7.496394185 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076424562 seconds)
  done (took 1.220088198 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.543221304 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.609336739 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078874986 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100530388 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19383739 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112028462 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.242654905 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086148417 seconds)
  done (took 8.283523085 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097465621 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071066126 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.084595327 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071601445 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.0709048 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072366841 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.0721218 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071464258 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073027273 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07181384 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071481003 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07321314 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070992033 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072385094 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071710837 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072589923 seconds)
  done (took 2.415085027 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097873457 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09838214 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075857305 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077705176 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.0746762 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074563322 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077210045 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075828766 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073747684 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07528441 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078056988 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0762089 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075699437 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066905217 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07716739 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078787116 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073722097 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076459206 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077778037 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078201419 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07750814 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06676052 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07620823 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077389155 seconds)
  done (took 3.115707794 seconds)
done (took 16.187784515 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115817594 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080521121 seconds)
  done (took 1.348535326 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078760963 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082041287 seconds)
  done (took 1.321894242 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.078239286 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062863621 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087098239 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076472283 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065578722 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065638975 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08624586 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066267722 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066478304 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066151119 seconds)
  done (took 1.883733924 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065566751 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.0753645 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071350752 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081833691 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072681283 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067349995 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071737199 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067963986 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076440373 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065332173 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070886255 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085571969 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070300221 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087683308 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071182414 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070748124 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072690491 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069254183 seconds)
  done (took 2.479533896 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063377111 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064643227 seconds)
  done (took 1.292370652 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067082024 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063844086 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066252675 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068344597 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065310894 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064643479 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066018172 seconds)
  done (took 1.621925743 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.410332329 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.12585619 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.339470205 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072502525 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083178245 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261716354 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064895892 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069906717 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070114137 seconds)
  done (took 2.703354103 seconds)
done (took 13.820902873 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080843791 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086792372 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097893488 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.414999552 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09565276 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070328175 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115685499 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185202578 seconds)
done (took 2.322003376 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210384977 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.087210686 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.495725644 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214635938 seconds)
  done (took 2.963085905 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.458637707 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.083784248 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079036272 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069556559 seconds)
  done (took 1.869237133 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067263377 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070689751 seconds)
  done (took 1.313649093 seconds)
done (took 7.529655496 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064985456 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064822874 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.066600858 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.091782528 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066117619 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066404852 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06727191 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066070541 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066554512 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066360673 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066369092 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066468651 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066867905 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066567985 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066761948 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066388152 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066687596 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066417154 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06718673 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067178483 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066135759 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066508008 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066792192 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066652482 seconds)
  done (took 2.830948821 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081586286 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067306817 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068983832 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070433064 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071480956 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070865344 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070691355 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06886131 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071983462 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068985439 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071209354 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071063928 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068612065 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071935676 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068835802 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071312849 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071064394 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068854498 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068794577 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071640401 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071106372 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069112053 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071781733 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070648259 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071532998 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071440126 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068366922 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068937663 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070632938 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071409386 seconds)
  done (took 3.303974061 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065574432 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06136423 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063186526 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071696876 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063105516 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063418973 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062422951 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063131879 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064413935 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062991817 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063844747 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062953917 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06291467 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063502011 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063531464 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067479404 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081035163 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063186126 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062929415 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063508352 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067425745 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063510105 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063336747 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063166348 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06590842 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062665836 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06354644 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063030249 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063560509 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063381539 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066884594 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067454795 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062881029 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071542236 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068181927 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062768611 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067356396 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062339722 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063284982 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063401219 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062622704 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062874916 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062800352 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072137036 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063313197 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064412285 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063334214 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063869541 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063584418 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065577925 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062894916 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063316899 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.0653258 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064618245 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068421401 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062595109 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063738604 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062704382 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063941914 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062827646 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063151973 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062936989 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066070706 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063668538 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080523995 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071951233 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062685254 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06418715 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063686854 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066128793 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064567529 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07853381 seconds)
  done (took 5.871525799 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084998111 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087251339 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066522299 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066736789 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063505165 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063956196 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072381288 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063899441 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068454097 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083169578 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063766653 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068279504 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068503706 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067905473 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06385903 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068485532 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07262411 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064105798 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063606431 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067889137 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064244434 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072008182 seconds)
  done (took 2.725506226 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146807743 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068522032 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105153135 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072602191 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070569054 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075045979 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070013131 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069589098 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070208918 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070267108 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0705488 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06970434 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072530735 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070475088 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07043357 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070181423 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069866497 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070338198 seconds)
  done (took 2.575409519 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078610664 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067817642 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08735981 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068766419 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069091277 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068918591 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073193198 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074574168 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068985083 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069871332 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074131599 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068811761 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068896477 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06904625 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068708828 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069387128 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068680892 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068978535 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074460287 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073349231 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073615314 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074242204 seconds)
  done (took 2.773621595 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087176423 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066895667 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084868899 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070814532 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064008371 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063445569 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06979125 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068264318 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069591876 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067942061 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0685427 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063559326 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071058154 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068241979 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071170111 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068559989 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067974688 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068923884 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068127636 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063666462 seconds)
  done (took 2.586513093 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08405443 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065078872 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066048769 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073740472 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066869989 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067063475 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073536829 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067023544 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06674565 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087645698 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067149825 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067514701 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073535103 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071170847 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06704408 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073870229 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076413015 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073651262 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066977464 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067148113 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087923989 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067380575 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073733133 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066921641 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066963723 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067040725 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067151972 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071520602 seconds)
  done (took 3.185420019 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065040352 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064890315 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065164548 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066167103 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066083667 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06652655 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066704671 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066824351 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066710697 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066866675 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066674624 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066350798 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066430315 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066928198 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066381675 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066780632 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066477722 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067219576 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066668517 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066827002 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066784037 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066508947 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065888199 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066491801 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066928058 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066460545 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066223466 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066128677 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066022362 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066294211 seconds)
  done (took 3.191856837 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075304498 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073660745 seconds)
  done (took 1.348732403 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063283103 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078852919 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06117151 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073197878 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072600714 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066974119 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073299599 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072554109 seconds)
  done (took 1.756987273 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085130644 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075261573 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066277892 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078246081 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076899387 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08631214 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129776931 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065804027 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076848886 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066805496 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084747038 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067958577 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076180019 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070822394 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076284147 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07938737 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063150679 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07110657 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067241977 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063812189 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066581349 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079208599 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075618232 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064050567 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07134807 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093951557 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082321055 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06552157 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073064715 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078281672 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076043407 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063130906 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065397488 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06555406 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064091815 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077294922 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084795924 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072576014 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078424182 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066301052 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074601019 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063559026 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074872052 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076311705 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081783298 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065461009 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065753247 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063186655 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06683566 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071738786 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063419739 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069908544 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063205533 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078137402 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073420359 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080815904 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064007221 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071754111 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072251866 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072509028 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077239251 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071477484 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075419132 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064987843 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081174929 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074861724 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077357752 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063571056 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062441223 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063788914 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079560661 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09545647 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075510543 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066408498 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066233109 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063177443 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073023499 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065994089 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075020354 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076777361 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06502892 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070164218 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077736412 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070639748 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071894937 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072019175 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064189408 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068796957 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066341146 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085633538 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06442673 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063326026 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066146583 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08091386 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074990095 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064797992 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066348954 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077834619 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062305179 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065796585 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066018958 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071212902 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079387962 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069766458 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070271656 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079040002 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074447475 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070592385 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072558839 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062705834 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065850001 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067995041 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076960012 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062098396 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071965207 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068741854 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064830905 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076647377 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062833741 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064483469 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077078779 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076501883 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06295092 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061511722 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071156059 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064108998 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066756492 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078041688 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06298858 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062585999 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063213592 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072021657 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.064005952 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072203673 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068736607 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07180863 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.190106591 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064975184 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071216217 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079002933 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069854485 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072553525 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076535021 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071790181 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065265112 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078591041 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072713541 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068505433 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075523566 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069756947 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063652108 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067484003 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.0723602 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064146125 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072661406 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068220552 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072051536 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065688298 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064239255 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071627372 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066113344 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068578418 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070812168 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064369611 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081733699 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072897283 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063708733 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06311793 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072665442 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067482628 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06477275 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067480512 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072242324 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065865995 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063867828 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065329342 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07209422 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073617499 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068432592 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066869706 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074969772 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083632315 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064966765 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072635137 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065208449 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066821644 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066088768 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080973743 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076474493 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070141203 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072335063 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06290568 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075506253 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078015956 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068133643 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06381579 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067785411 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06949186 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07751925 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069591976 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06637352 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063966911 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071408099 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068313828 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072417913 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065193708 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068378138 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07101323 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064257376 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071556309 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066714581 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081015794 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073519482 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063997026 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068271695 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064469981 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077008773 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063776579 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067007277 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068309196 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066086911 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064642751 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072440772 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062657597 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078273037 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078657888 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070871607 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068063076 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06510859 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077980087 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071242738 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074136421 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07244848 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.076111587 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081719219 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068251331 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072913723 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081128648 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065634129 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063440731 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075693398 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067027905 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064583928 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064506458 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064422347 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072888096 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073409485 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076297261 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062295555 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072401837 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064490666 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068057965 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064063239 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07464005 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07260495 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06965947 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077729936 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065686286 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065307396 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073017398 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064814291 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065413632 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06557863 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072164639 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065324605 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071027161 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067224266 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07114857 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067334814 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063148728 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070945713 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065045442 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069962813 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073786872 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064620307 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070716722 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071992089 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065182392 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.205465714 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070903583 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069313796 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074436606 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07321843 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071539581 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073383543 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063772943 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078212393 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065389217 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079403648 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07074432 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062931476 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07168735 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072426382 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070374895 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066452317 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066347029 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071590366 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065581083 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073240155 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078365101 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067358669 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082264467 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078080312 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071902718 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072815834 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071558935 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071580762 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067696307 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070306115 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066024735 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071015171 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065382717 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074370492 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072529305 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070374549 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071809252 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06637323 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071582297 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066809996 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063464006 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068599718 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06892547 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065791301 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078668743 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066311152 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068695561 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065482023 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066696097 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065358995 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063271107 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073044352 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074164177 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06650918 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077057972 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068641696 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072006196 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081942742 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063603053 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064143056 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063935256 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066867315 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078511349 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066365391 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079829677 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071040965 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068623952 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063208242 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066639561 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064496726 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063451645 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06375626 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074968746 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068236744 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064877173 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065906723 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072721253 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066873401 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078384984 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065259812 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07006958 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065678873 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06326435 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068940538 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068101949 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07254978 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066757603 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067112434 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063531145 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06542909 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070039752 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.0717124 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065268384 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071573081 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078787799 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065611652 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072606614 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068285996 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064087159 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072710321 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065517952 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06551769 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06779976 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073336343 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073486141 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066290452 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080292053 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065498902 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074137243 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065618235 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063583376 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065193077 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06510659 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065156302 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067398425 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066252828 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078422267 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063741976 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072142055 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070769782 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068910049 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076131836 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066745388 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071189633 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070244578 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066926552 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071926621 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078040834 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068133459 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071854784 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065090505 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070015045 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074344674 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066829175 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076164237 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070610063 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065042618 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070048533 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065582551 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064283678 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064560736 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063905359 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074806339 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.201486227 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06897694 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068905066 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064297904 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070501353 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068986327 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07915332 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07296651 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072866074 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063790305 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063022379 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066121474 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067334496 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072114547 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072509236 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07553306 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072641758 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069083769 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064749667 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080828422 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076028173 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074108291 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06714332 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073984273 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066492941 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072934339 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069926443 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070469413 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067047841 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074067131 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071850819 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06860089 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076808048 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073709213 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067251016 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071589634 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072101032 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.07111132 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063903961 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066340559 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072138453 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075352316 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072925851 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065658916 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081150503 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066341424 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071106713 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06819943 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065120394 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074520907 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063896718 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072406916 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06711886 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066812947 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064575862 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068803424 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067698378 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073248069 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068681392 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064402218 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082194487 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081538873 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072174707 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065520036 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06494024 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064255657 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06433416 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068941827 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066822324 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072048893 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081312387 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068357621 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068193149 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064218714 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066060353 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073273996 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074022543 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063188496 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064369146 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068437532 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072552121 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07795269 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064723364 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065607386 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073880087 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072375183 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063979278 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068803733 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063100911 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074489538 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082849727 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065915155 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072025444 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076080044 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079431333 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066184503 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064395175 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066111016 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071855017 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071403149 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066371721 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066615373 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085475837 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073543775 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068211151 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065150619 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07255647 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068509039 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079796323 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066480325 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066215631 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074836791 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075214813 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073173962 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075462127 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076925775 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072096666 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07152126 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065164023 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071045884 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064416658 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068672697 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066656416 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06599342 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069984889 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072694208 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067684686 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08230129 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.081008157 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067874938 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061969506 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067486764 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067508452 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062794668 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065438679 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063430299 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063449053 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063450876 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064043166 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071490462 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074542639 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069360545 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065253363 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064851998 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.198165054 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.076661412 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073971688 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073243334 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063891563 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066924668 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066975225 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074539402 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068685999 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06737319 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072807002 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072122288 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072143672 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064066466 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077682108 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06504276 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073000954 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06821156 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06582206 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066753723 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073853564 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07018317 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067090036 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072548103 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07311 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067507197 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064458845 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063823 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075232939 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064424198 seconds)
  done (took 43.58584006 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100042888 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063898339 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06259649 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062331443 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07264337 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06354659 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062436458 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064137293 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063330983 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066978416 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064069971 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063623066 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071715216 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079839802 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074645752 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068696801 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064421289 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065685162 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064570491 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065657296 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072177313 seconds)
  done (took 2.715517645 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069916764 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077924585 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076205965 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081792317 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073840297 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069330011 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077593671 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069028261 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077570164 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075221977 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077944789 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070059279 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074716908 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075277948 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075092501 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069958226 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077968932 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074697473 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069998475 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077909054 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070204204 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077588417 seconds)
  done (took 2.907473042 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064347085 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06510013 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072247896 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063178037 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064701527 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064016469 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068678292 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063200529 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067197424 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068126778 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068199089 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067636878 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072249149 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063714048 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068909424 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063727093 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112972013 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068901009 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06597696 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066136773 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064190752 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07313449 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064223991 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064515166 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067532978 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068646465 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066436684 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063950581 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065502491 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067741202 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065879969 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06312562 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072606349 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071280103 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068154675 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067655896 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064732767 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065636175 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064496978 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063978063 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07201248 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063970996 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068647485 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072410722 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063667311 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063251207 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072163874 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065752211 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063310913 seconds)
  done (took 4.589179445 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075203713 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113595431 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070267186 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093326941 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079169536 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072029632 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07011648 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094824401 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065903045 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066732136 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080640295 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080947141 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067846523 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069411881 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072286716 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068237387 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069250639 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066717996 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071116663 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067189984 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071199716 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072126666 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079148163 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080106197 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068820845 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066962355 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067630571 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068915698 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079610359 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072095763 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069419389 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07028991 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079714818 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072769511 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067061502 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067188162 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080660572 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.0675998 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067251124 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06572443 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067038494 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069421925 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071970219 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081180777 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06794455 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073317085 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067861641 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065598626 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079773733 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067650987 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072715441 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081014435 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068966857 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068160045 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069272426 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079759314 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067911449 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066667668 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06834235 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079603594 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.083511486 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068332903 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079886841 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066678761 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070790276 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079856055 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072558229 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068380093 seconds)
  done (took 6.385312855 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072707009 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094807066 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081726324 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081671159 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075145335 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075836095 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075531709 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076161066 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075823841 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080156262 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075456241 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118405125 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071292606 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077596682 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075390818 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075500292 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075273967 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076168325 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075477656 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075753203 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075426529 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082291647 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075306811 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082161519 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078709972 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070819476 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075204052 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075109016 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082481686 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075447531 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078704621 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075377199 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075538523 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082253813 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078716052 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075738361 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065123167 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075334497 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075768995 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075669165 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070781936 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082187407 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075073512 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070978858 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075325856 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075370322 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082009936 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078510975 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07756504 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079283463 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075240017 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081914375 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075321615 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075428515 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082269052 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084591209 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081972112 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081683885 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076208661 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081799795 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081815601 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084954819 seconds)
  done (took 6.161960882 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078233203 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07131708 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084193692 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063809596 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06362045 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0745197 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063923544 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06370594 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072592684 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075319437 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074919963 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074836887 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077466874 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074674221 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074230098 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077145478 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074799532 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074453036 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072266523 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074515187 seconds)
  done (took 2.773913053 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076879357 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083711956 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070021725 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074227794 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069324097 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074133788 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069285726 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070236149 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070152511 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069574575 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075912274 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075825777 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069982402 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074504444 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076227536 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074209529 seconds)
  done (took 2.474982028 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083521548 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072149705 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079626771 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065545123 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069037398 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064754231 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064816205 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063420157 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064582714 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078648009 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064835404 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076820861 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064995841 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064145723 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06474864 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070936603 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064468623 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065874469 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064986 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078367069 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07212725 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066179767 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06897768 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065444051 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071032778 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072929696 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066991928 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068714568 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065483179 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065522856 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070820338 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072501316 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064962601 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065795302 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06458418 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065343928 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065029722 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065693995 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071669189 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083888338 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064175636 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070987389 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065503559 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06641047 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06478431 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065831955 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064633669 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071288151 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065666108 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071148727 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065324119 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067584841 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065626809 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07273474 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068134632 seconds)
  done (took 5.070669024 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078741731 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067691897 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063721578 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062962434 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068875274 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070219646 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069450844 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069481581 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070351771 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063549722 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070366536 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069601703 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070008637 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069369993 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070551459 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069712168 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06373574 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070124454 seconds)
  done (took 2.554086275 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07331688 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06861561 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073296381 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069113342 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068557492 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068929541 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063628879 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063934592 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063897619 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068762255 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068380462 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068326803 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064023153 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068395603 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068546146 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068448592 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068059237 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063813075 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068696615 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063818436 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068198744 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063981115 seconds)
  done (took 2.790286915 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096181807 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084981946 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143514755 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081334994 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089472454 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074340303 seconds)
  done (took 1.876473725 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092251832 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099934817 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069143059 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069081553 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075003495 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072179771 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072763873 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072728193 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077358614 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077888826 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072565952 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077985058 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077376417 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079415623 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074969189 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07544089 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075623555 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072800404 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068944969 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082797728 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072875333 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077571485 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073095057 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072720245 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073201589 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07957383 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077163905 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078172591 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072660514 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077712919 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075115994 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072652978 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0773376 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077803829 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069567034 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077505002 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073004841 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082102972 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075547468 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0790445 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069302676 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07557431 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077649885 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076654322 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077360466 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072721213 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076182439 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072573545 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072878705 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084048571 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075325931 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07880647 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07480775 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077417587 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077110161 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08362661 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078048864 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079154757 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074707409 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077496933 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079223002 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075294852 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079425235 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077974322 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076353134 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079127708 seconds)
  done (took 6.36080007 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104981906 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068717827 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072334383 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078042251 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079181281 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073219356 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073360086 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072680781 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073058162 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070360049 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108794991 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073423142 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079554901 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079798135 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073060405 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073581091 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073055844 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079668841 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070209767 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084348175 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072927176 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07928968 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079368547 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079349508 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077752485 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075133145 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0732264 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072903407 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072650326 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073410745 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077246718 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073113971 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07945143 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06972048 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07943847 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072865514 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073036264 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076938063 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072748595 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075521205 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079742617 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082920052 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07326585 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072775993 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077520872 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072511109 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072993402 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069726233 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072697884 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069869747 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078243371 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077875804 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078021051 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079158638 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07360904 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073173158 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072699674 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072953649 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072981131 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075438755 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081332617 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073190754 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083983419 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072464289 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072329031 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079066762 seconds)
  done (took 6.357944222 seconds)
done (took 129.933388024 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209509002 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18420113 seconds)
  done (took 1.69012162 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074069639 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104591014 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085132406 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135890074 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071656706 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106837186 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104359148 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084244748 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.073794492 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073691847 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073750401 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075896963 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.140482041 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071780357 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07338628 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076009614 seconds)
  done (took 2.740611047 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104969252 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172676575 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11187019 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071702505 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107624285 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079700857 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071443286 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.085004786 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078754009 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073399181 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080090003 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07781115 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073370828 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08035338 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07842157 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080014996 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072563451 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079521433 seconds)
  done (took 2.896272911 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103912953 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.098376943 seconds)
  done (took 1.521507739 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.175997649 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133599573 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202778391 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352781817 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162313853 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.442356252 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142764677 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139406839 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113052249 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136829584 seconds)
  done (took 3.315504055 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10447444 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.196575228 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301449546 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124574209 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078760864 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116443843 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126103789 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084079287 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086636941 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.086606313 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.087037879 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081865612 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105937708 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079691687 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078621626 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080994033 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.109339335 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077679288 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078668871 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.081677813 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10993804 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.07213797 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079056104 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07736461 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.083707189 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.08409897 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073039838 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071970884 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080979446 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078868768 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082395062 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113698929 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083415876 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10946335 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076517266 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110424598 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081185469 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.079318498 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078018335 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.079297771 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08266596 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082930851 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.081284428 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081337432 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073739877 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081228626 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073738401 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.072334392 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083548507 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073799678 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083435265 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082672707 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109841201 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073540287 seconds)
  done (took 6.347236406 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109092841 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10730446 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07317166 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116544197 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107235491 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07300418 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108919162 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102478294 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.112547882 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073554672 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071549751 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073068726 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082393082 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08510886 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116703508 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108385356 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073460027 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070550812 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10846005 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109911868 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071019197 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103315499 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10147811 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111712155 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070159004 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073157584 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071500748 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073304316 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079440858 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081195178 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071723481 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082493182 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087808848 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078155339 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06910363 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069398397 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069728103 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081199088 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081658416 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081289571 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078743814 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070186672 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071005564 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072390872 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072112384 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070572341 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080069966 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082029721 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079953157 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071150506 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072450296 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.07186241 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072321188 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081055322 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078997196 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082358862 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08160382 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071311211 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071159119 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074028612 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082387467 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081271237 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081036761 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071853111 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081142833 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071388018 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082907377 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087102433 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074662001 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072510771 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071236185 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070892808 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07236843 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078618498 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079189447 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072588043 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070961702 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071236589 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081507835 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079919894 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071349442 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078517602 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070136744 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071276747 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072496239 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072465568 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078497945 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080616432 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072596101 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070971779 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07072604 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070624525 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069989722 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078561772 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080610306 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080301645 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079811618 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072478811 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080060353 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079387166 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072549362 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080100211 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071253471 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072396032 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071892286 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079580763 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078360143 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080291842 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071077425 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071116711 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07863201 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080284655 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069995314 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077462065 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08040715 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078572326 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069802356 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081653062 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071258929 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080272683 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070515728 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216660501 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07336535 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081801935 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07320388 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071628327 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072335955 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081148233 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073544351 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07199541 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072742738 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071822637 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080326187 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08413323 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073092722 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079509033 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079992251 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072880026 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080196579 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071467254 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080359288 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071935981 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072679561 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070487819 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083334252 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072357625 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071352841 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071342017 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083007518 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071796266 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081463402 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079092591 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070501165 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085984261 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082411606 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078984569 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08194122 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073013521 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071373971 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071508831 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071621402 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079076673 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080997314 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072780272 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071485657 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079112379 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083261813 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071279774 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07977906 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08029171 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080398428 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071980716 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072416446 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083135682 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082207486 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079643812 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080146836 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080761484 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072001026 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079483525 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080455249 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07207792 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086163782 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072659578 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084538273 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081721563 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078881118 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080772603 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082000636 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083103227 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082549061 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082186037 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069261866 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071575199 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080594298 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071450667 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070889801 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078847622 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073316462 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072849711 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085712074 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069988017 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079316785 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06886144 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080789211 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070598042 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073012003 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084126079 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072299509 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072521855 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080384874 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071641644 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079703662 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082657694 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079806681 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074407148 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072020889 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081075472 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.08111257 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071337644 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071346218 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072602942 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079203584 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078844134 seconds)
  done (took 19.015874184 seconds)
done (took 38.860129323 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.206512918 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153740966 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183200245 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115072958 seconds)
  done (took 2.071297309 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.108015379 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098330364 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088958799 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066498192 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09746216 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068449826 seconds)
  done (took 1.873957832 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.286340608 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.195803307 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178436435 seconds)
  done (took 2.008705182 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209993633 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195606887 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472340176 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.286768472 seconds)
  done (took 2.608547402 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142006663 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085824836 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066666995 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085595344 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127596653 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153936842 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096265668 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.119787848 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078544915 seconds)
  done (took 2.357623449 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150484524 seconds)
done (took 12.437437922 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.207805721 seconds)
    (2/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.271181177 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.163834684 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.106522481 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.113060352 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075152087 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126579043 seconds)
    (8/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.216836341 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.161367852 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.224696687 seconds)
    (11/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.295295127 seconds)
    (12/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.201803935 seconds)
    (13/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067997508 seconds)
    (14/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.178708553 seconds)
    (15/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.22791963 seconds)
    (16/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.121464746 seconds)
    (17/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.069554266 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.19928359 seconds)
    (19/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077524575 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.133484353 seconds)
    (21/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078229466 seconds)
    (22/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.166654291 seconds)
    (23/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.196372185 seconds)
    (24/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072562088 seconds)
    (25/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075325157 seconds)
    (26/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.174633787 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.211505892 seconds)
    (28/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073146516 seconds)
    (29/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.083838429 seconds)
    (30/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07716155 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.234839941 seconds)
    (32/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076668127 seconds)
    (33/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082347227 seconds)
    (34/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.144640385 seconds)
    (35/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.182755476 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107818821 seconds)
    (37/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.196626884 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102636104 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184271955 seconds)
    (40/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072277366 seconds)
    (41/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074900821 seconds)
    (42/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077181353 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06803855 seconds)
    (44/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.183895215 seconds)
    (45/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078716849 seconds)
    (46/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.185097414 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184075196 seconds)
    (48/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084703923 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075952842 seconds)
    (50/309) benchmarking ("sort", Float32, false)...
    done (took 0.134416082 seconds)
    (51/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.11852424 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.101949398 seconds)
    (53/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067404114 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078622957 seconds)
    (55/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071755522 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 0.160400938 seconds)
    (57/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.182490395 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.102430375 seconds)
    (59/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.094953827 seconds)
    (60/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.176031516 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 0.068787088 seconds)
    (62/309) benchmarking ("sort", BigInt, false)...
    done (took 0.194876733 seconds)
    (63/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.203410239 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086589379 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068389715 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.066970602 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07645798 seconds)
    (68/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07546169 seconds)
    (69/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08048528 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09448662 seconds)
    (71/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.170515445 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.23283982 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127505595 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066603556 seconds)
    (75/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085770173 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.12682303 seconds)
    (77/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.139063154 seconds)
    (78/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.172043561 seconds)
    (79/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077059524 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068544662 seconds)
    (81/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070157457 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.102632607 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.136158563 seconds)
    (84/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078273995 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067244705 seconds)
    (86/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.17979625 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.136983611 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076505034 seconds)
    (89/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.120182034 seconds)
    (90/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075561425 seconds)
    (91/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.19484613 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069385234 seconds)
    (93/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07822737 seconds)
    (94/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.126415251 seconds)
    (95/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.081752632 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.071260769 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.126584863 seconds)
    (98/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075045053 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066637366 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181690667 seconds)
    (101/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.126877495 seconds)
    (102/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.17159307 seconds)
    (103/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.089655929 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067821914 seconds)
    (105/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.174543773 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067553691 seconds)
    (107/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085541356 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.216348268 seconds)
    (109/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074664753 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143412813 seconds)
    (111/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.088346908 seconds)
    (112/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067259832 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093630389 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067550775 seconds)
    (115/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070340034 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090946472 seconds)
    (117/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.205152943 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073367101 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.194197769 seconds)
    (120/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066386855 seconds)
    (121/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072014255 seconds)
    (122/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.079526189 seconds)
    (123/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067116306 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.088171991 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092338764 seconds)
    (126/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.08008222 seconds)
    (127/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.180223354 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.166853334 seconds)
    (129/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06732089 seconds)
    (130/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067429482 seconds)
    (131/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075152383 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09132324 seconds)
    (133/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172597275 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087748921 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066356066 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078202202 seconds)
    (137/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07467257 seconds)
    (138/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075095179 seconds)
    (139/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075467874 seconds)
    (140/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.172832272 seconds)
    (141/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079163615 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068535755 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125979274 seconds)
    (144/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078450756 seconds)
    (145/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069047854 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088210572 seconds)
    (147/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075506601 seconds)
    (148/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.216425178 seconds)
    (149/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064377349 seconds)
    (150/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.064288818 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066271063 seconds)
    (152/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090245287 seconds)
    (153/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.064925301 seconds)
    (154/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073783775 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.064550729 seconds)
    (156/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072029981 seconds)
    (157/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.086141014 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066285688 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.064478187 seconds)
    (160/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072585495 seconds)
    (161/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.063686245 seconds)
    (162/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071957645 seconds)
    (163/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071405564 seconds)
    (164/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.070176903 seconds)
    (165/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07520599 seconds)
    (166/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072653535 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067496128 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089306972 seconds)
    (169/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.215033523 seconds)
    (170/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089028036 seconds)
    (171/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.16403373 seconds)
    (172/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066730932 seconds)
    (173/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.065712506 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064612841 seconds)
    (175/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072783336 seconds)
    (176/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.074746903 seconds)
    (177/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065289181 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065375284 seconds)
    (179/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073971732 seconds)
    (180/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065162243 seconds)
    (181/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067345558 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.089464752 seconds)
    (183/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066830427 seconds)
    (184/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067003184 seconds)
    (185/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077080638 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.0853358 seconds)
    (187/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071809672 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112356285 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142773833 seconds)
    (190/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074959825 seconds)
    (191/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.080053118 seconds)
    (192/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076918713 seconds)
    (193/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06659759 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066523402 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092263034 seconds)
    (196/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067284514 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.0884034 seconds)
    (198/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.06708706 seconds)
    (199/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067127312 seconds)
    (200/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077681604 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065228386 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074260627 seconds)
    (203/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07812208 seconds)
    (204/309) benchmarking ("sort", Float64, false)...
    done (took 0.12982707 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06716563 seconds)
    (206/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082807434 seconds)
    (207/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067630921 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067065413 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087366036 seconds)
    (210/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067621387 seconds)
    (211/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070238213 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074008172 seconds)
    (213/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.07853199 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.348899585 seconds)
    (215/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.106038644 seconds)
    (216/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.20793219 seconds)
    (217/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.188895639 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071884084 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.078915701 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.189384386 seconds)
    (221/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084845867 seconds)
    (222/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.071314217 seconds)
    (223/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.15542965 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.071947212 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148566641 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.079992785 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.08249607 seconds)
    (228/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070129766 seconds)
    (229/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073904226 seconds)
    (230/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.135678774 seconds)
    (231/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.07203163 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14494876 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152378472 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096248067 seconds)
    (235/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077357804 seconds)
    (236/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.072016335 seconds)
    (237/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.071820846 seconds)
    (238/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.073893453 seconds)
    (239/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069440712 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.125343585 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077101846 seconds)
    (242/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.132074442 seconds)
    (243/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.187233312 seconds)
    (244/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07371923 seconds)
    (245/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.069360035 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136626234 seconds)
    (247/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.069341925 seconds)
    (248/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070918595 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.072566033 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131140518 seconds)
    (251/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076949842 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099333038 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076257369 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.068787806 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141416701 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068929987 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067906234 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067155461 seconds)
    (259/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069672187 seconds)
    (260/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.081469822 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070460505 seconds)
    (262/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075289066 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.122869539 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.09103657 seconds)
    (265/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.069592493 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.177439301 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068837136 seconds)
    (268/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075922045 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116550449 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070111381 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119206148 seconds)
    (272/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.080326083 seconds)
    (273/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081644369 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.069884658 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078585082 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091406568 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075825665 seconds)
    (278/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124605626 seconds)
    (279/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.069995248 seconds)
    (280/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.069851721 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075934923 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068610635 seconds)
    (283/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077196777 seconds)
    (284/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069015535 seconds)
    (285/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068613794 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.069395314 seconds)
    (287/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.081515516 seconds)
    (288/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068178686 seconds)
    (289/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.143914604 seconds)
    (290/309) benchmarking ("sort", Int8, false)...
    done (took 0.150998138 seconds)
    (291/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.069924058 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.07066287 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077683105 seconds)
    (294/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.07072965 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.132611068 seconds)
    (296/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069185849 seconds)
    (297/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.07039079 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075776548 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068382147 seconds)
    (300/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06973881 seconds)
    (301/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.069521668 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075904552 seconds)
    (303/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075795907 seconds)
    (304/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069293721 seconds)
    (305/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.07033388 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.068697993 seconds)
    (307/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.069865469 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068900496 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138297453 seconds)
  done (took 33.573979105 seconds)
done (took 34.933292219 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087263195 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100335823 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075397736 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095906826 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086854164 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.10143795 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078964583 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.084518618 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.087353932 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085565749 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084808307 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.077036909 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079451395 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079717487 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077430962 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102780288 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.084174381 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07816389 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077842481 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069096115 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07775484 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069292131 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068621807 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075700865 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.081196891 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077002691 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079273104 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079093562 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069944187 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06997465 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074332788 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078954658 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069120638 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081917004 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079102831 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077794993 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079370942 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082106086 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069604681 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06951179 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079424061 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069693136 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077422032 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075911195 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074388571 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07630034 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078346688 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082080151 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101959444 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074963795 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.079540826 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080905518 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081303222 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075275395 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074120613 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077648679 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07611621 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102380191 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078242522 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074434806 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079199201 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079376429 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075887709 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077545155 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077891395 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080013617 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081294808 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076315242 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080315382 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.0769499 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069692512 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07831983 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074855544 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070113361 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080852634 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082279429 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068582681 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073774587 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077247862 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07816899 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.071668528 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074043955 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068227913 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073740477 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073779762 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.075696854 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074434039 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076111415 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068557633 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077428191 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076613002 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076560162 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067703199 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.082407428 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069023835 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075405679 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069172168 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069087357 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068822254 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074105538 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068377476 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073848557 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077785039 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068257814 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073490658 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082407409 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.0689117 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076491901 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068202457 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069160884 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080578094 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079378989 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069059014 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074031926 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068097829 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074401423 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068095055 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068667559 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068358181 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068840629 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073149396 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068807555 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073883157 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073947878 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081755568 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068398531 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07325618 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073799066 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068805993 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07609161 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068985986 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068959276 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068513462 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.083826272 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073850479 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069031048 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074373191 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074153979 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076554195 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067898832 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077807461 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074790536 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073658392 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075603395 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067948081 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.080576042 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073774194 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073570889 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066664257 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068334698 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067544524 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068063723 seconds)
done (took 13.105386195 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070022523 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.118099842 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094549956 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093726009 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083680447 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067938694 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074405468 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.0926337 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069729835 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.097792104 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08932683 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088971857 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110302839 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066904183 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067513671 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068694518 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068502364 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.07909466 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.094983446 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089542077 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.106641518 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067453643 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.087566092 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088237248 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.084596703 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.089264597 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068559169 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068962486 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070552008 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090377255 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092975274 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070436867 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068197148 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.091197196 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.086142024 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080791396 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068854513 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.076000585 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068973688 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067471507 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069093932 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.088393623 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.076265928 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07600381 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06863151 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.0758079 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069395774 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083498907 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088687705 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07625353 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08327343 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.092101243 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071042599 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08404554 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066540727 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082857821 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076848641 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067844421 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068958469 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072855901 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06807671 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070580502 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078518684 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.07707084 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072483214 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082161407 seconds)
  done (took 6.734509012 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086475437 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094805863 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084447741 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084858581 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067278278 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06791894 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067539793 seconds)
  done (took 2.062602876 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070913074 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088486873 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091086413 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091607413 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086202058 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095719368 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077872366 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070426125 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099774373 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069069818 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090963446 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101661746 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073574214 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.080228236 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092888199 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067830463 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092518607 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068064557 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06883803 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091910544 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074501963 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097266218 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.082093135 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070344194 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083707188 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070405463 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103254325 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078024014 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071669585 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071432394 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071034254 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.097763846 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082793788 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08256701 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07165728 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085355878 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.0839318 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073660831 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081364785 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.082659577 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083862818 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071370867 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069163131 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071260049 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073573604 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08168149 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068679486 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071544299 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070891777 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089910722 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068648977 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083148201 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074016308 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07649045 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075961604 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075395033 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078833722 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071755578 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090182634 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071327439 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.0879948 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087061781 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083613405 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08743444 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070794172 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083163007 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083401971 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071247526 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072150015 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072048601 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086740467 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073524685 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071989314 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081861119 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070213447 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094839383 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095240035 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070000518 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084473606 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070588443 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072252618 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.082290456 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094936451 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076376789 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07133482 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075003113 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072371571 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.073468638 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069027086 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074306868 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.071347846 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.076259367 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071563052 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074420841 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073089178 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087647646 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069369643 seconds)
  done (took 9.182011983 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070866277 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069124927 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070635978 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068710505 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068887334 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069097579 seconds)
  done (took 1.957164728 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092256557 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068715478 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081667644 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068926294 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104704702 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.084650018 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08561327 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081523109 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085673891 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083234518 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087949595 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.090293556 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092397636 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073773437 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087350608 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071928284 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087688315 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076044667 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08299866 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074306175 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085033665 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074095169 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073983282 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.091963178 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07506314 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072309209 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08075853 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082890451 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083111031 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081611268 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073284238 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075139762 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079464194 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081327354 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087699538 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.079364753 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071167601 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077486422 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074566582 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075078011 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089461591 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073991359 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073280139 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077624706 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081541404 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076888767 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075162098 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077151752 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08371229 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074959286 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075001261 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069586535 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071962641 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07507912 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076965523 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078174067 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074658974 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083704125 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07046103 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077073635 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070839808 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075127016 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080515443 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074235162 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079051256 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077287103 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.079222323 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073437368 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073779182 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070819708 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077846443 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070828905 seconds)
  done (took 7.184610832 seconds)
done (took 28.646067376 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.51780689 seconds)
  done (took 2.010383307 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.627492433 seconds)
  done (took 2.150170093 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.616035841 seconds)
  done (took 8.137044589 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.384652835 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.464416179 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.766814859 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136116513 seconds)
  done (took 3.314165112 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.700791278 seconds)
  done (took 2.228371825 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238012101 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231568197 seconds)
  done (took 2.002400065 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348732055 seconds)
  done (took 1.873762656 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.075093749 seconds)
  done (took 2.598926509 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.236376361 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161533333 seconds)
  done (took 1.925522447 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.455429466 seconds)
  done (took 1.979543398 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.246686158 seconds)
  done (took 5.774551818 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.220112559 seconds)
  done (took 1.780896054 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238301427 seconds)
  done (took 1.767859926 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.75435599 seconds)
  done (took 3.283765541 seconds)
done (took 42.360836235 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.0843006 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086316564 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086028686 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082455348 seconds)
  done (took 1.851381136 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075462213 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071149853 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075584558 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070820332 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075925961 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071919178 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074205811 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076270673 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073534423 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074065835 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073690321 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074070497 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076650551 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075732806 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072492857 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076739295 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078037855 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073999667 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077148049 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073709361 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07174177 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076412423 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076894087 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073308672 seconds)
  done (took 3.321662649 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078954126 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073635173 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075821553 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073077703 seconds)
  done (took 1.840431185 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077346265 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088263004 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086600884 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.0775254 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088883388 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084556126 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069822119 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070148329 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071425419 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08004007 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069579263 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096620177 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088466867 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076829283 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079406557 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065237612 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067265089 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088478204 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080172197 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08036939 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071738541 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079638535 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068982758 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.09021977 seconds)
  done (took 3.429817068 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086658539 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066360057 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086105624 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094700148 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096469305 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06898287 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.089226151 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097034026 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.14599698 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069393067 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074940131 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069076134 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.108744219 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069145226 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089598621 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113909827 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116658957 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072865905 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10234279 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.072206738 seconds)
  done (took 3.336056258 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.08354827 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07118157 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073837858 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068392411 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079303451 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076347976 seconds)
  done (took 1.999557819 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069545444 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068564574 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068253023 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069969017 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075464224 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070472181 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069027333 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070999195 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071324512 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070626815 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070709487 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069585722 seconds)
  done (took 2.388784428 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.194309907 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070548829 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071215898 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067353315 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074647995 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069871255 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085458395 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072295656 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.098131233 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069543728 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06977101 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072262644 seconds)
  done (took 2.559950877 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191115155 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076409434 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226462654 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148500676 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10633653 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113072298 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115477342 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111778106 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.137169148 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099723864 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156411191 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163531064 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107431537 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132949406 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091330219 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.124951402 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1480606 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16014192 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102795918 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158458862 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138843413 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125977941 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14542337 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100357446 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104834612 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116547054 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074490123 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08045189 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162842162 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12646597 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139705063 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108583056 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09370161 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17014296 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160681551 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14147182 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1458019 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085228968 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.121987874 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133970818 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197391644 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090848184 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155921833 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106887129 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081391932 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128836003 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114241266 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118958268 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104308942 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089710568 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283049717 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177109072 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13184034 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087222773 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120839864 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10875578 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113394396 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11809004 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173105097 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15335771 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12465777 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071969569 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110580624 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146964727 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129723167 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108110895 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121684296 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093346472 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128484098 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15574659 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121753481 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136958302 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116299185 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087999218 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118684232 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134121198 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124003165 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166732747 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122012059 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073697691 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11908242 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09871267 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080742201 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145182849 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075898655 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168796233 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098824095 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.124440982 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129621416 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108546689 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108177107 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154018275 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138012557 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104786543 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.087037502 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102680247 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118282264 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141205437 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088041934 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10789841 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113799502 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080506635 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131521677 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075764108 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11871195 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.096004625 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116986769 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123824246 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.080631345 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270348142 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103346284 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102762738 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126621291 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153209691 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08842979 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081813194 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160554812 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119564776 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103893432 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139029741 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153334485 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.121195718 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097669775 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141433516 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167159351 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090904288 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156305402 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102683646 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085045033 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.107011467 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121105849 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110063302 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122580224 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081933811 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118424485 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157918127 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075544591 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096978507 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130075352 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081984925 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081452289 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104544377 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103470028 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097767069 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101810599 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104140677 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134381226 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12087838 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105472808 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122536977 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100450754 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160646291 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0880706 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102825836 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104842661 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072987815 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.130288095 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150957658 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079887985 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154825811 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120657591 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115729467 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118079331 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084161446 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134569393 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080206353 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073246314 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135670672 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11151936 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107813092 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.298021148 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113461829 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12216464 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118878313 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128581867 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126140237 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.1263461 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107192056 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089532743 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1137138 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12711224 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073782008 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092230374 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082562697 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103859787 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094688978 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084649053 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135620986 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119293531 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110502208 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11361634 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096458862 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144895408 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079426741 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122096024 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.121127042 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095573695 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150356668 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147404202 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130041737 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101457571 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132958949 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074233204 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075750553 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09006176 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121073033 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084762663 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084633462 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112486459 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145462717 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123538747 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133659567 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122714079 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116067871 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153109678 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073716284 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.12000968 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140016467 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119036607 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104624414 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091622853 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098551935 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139066455 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103387578 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174864031 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112710421 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122137141 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151557412 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101116947 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079424128 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10329257 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279024083 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102064101 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139639049 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098884094 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087505419 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107518291 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079071462 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099200309 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126074908 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115832856 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132439272 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111554248 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125131569 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07853539 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109548519 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121315801 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120451318 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084535528 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115156798 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15789393 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094947043 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114378418 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143801361 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080345408 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139334356 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166202494 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139155618 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085826498 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102472948 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116564851 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120996544 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116307529 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13513945 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104467485 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134210381 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110275298 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085077034 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086675682 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095852453 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103654823 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.112879556 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103960693 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114033674 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096416468 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127557309 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103047835 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110746622 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117122218 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10079611 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096489547 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097049695 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166998705 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116594037 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163018322 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100273599 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.139386705 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154431379 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075625591 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079464434 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080754724 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133408303 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084472836 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275772298 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109635821 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113538186 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117347007 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133962428 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097333568 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072308372 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108554264 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12980629 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122027109 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096798436 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104023988 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15001004 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.117396973 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079846028 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111705189 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115600468 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104107229 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167320815 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.08206623 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10951104 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077632271 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080586372 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123407817 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147091613 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08422435 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103771379 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11970097 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110648651 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123961404 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098000003 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112370224 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129452985 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142724425 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125583605 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09077687 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110058115 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126170805 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149021513 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10372622 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100628807 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167439703 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147172434 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155312847 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087542507 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11344227 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113370265 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10890497 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132176786 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084821465 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155784188 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082274912 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130943059 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101242343 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090415849 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125683108 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111608539 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087628773 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139015666 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267227528 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084300029 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081541508 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110788038 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117537426 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102881597 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076004943 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13468502 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07454673 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131663968 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163417604 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080941964 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1045802 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096425316 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082693853 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103414681 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101626987 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086773349 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099970244 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163938602 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088406517 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142814617 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129026012 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109727332 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133898288 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104233275 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644079506 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081167758 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146581245 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114728372 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170262702 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098703499 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117214841 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109818461 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119379067 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138176016 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102133413 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179706806 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127087625 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117437652 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080470795 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101731681 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103443187 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089630396 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106819183 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112035831 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112369941 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095974775 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116252175 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120129452 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083840744 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096690291 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150277175 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114900146 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138481878 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134676717 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085043728 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116036934 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129929081 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080314942 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.267694702 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146237901 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106151475 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101078431 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084247942 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101240207 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166238805 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074069665 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153635402 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117983195 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109910465 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115380745 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109151553 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126816484 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102727943 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120584506 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094102039 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108038818 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150678361 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083646596 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079758537 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10485093 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109506805 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098933787 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098304599 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099767704 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147320891 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072873913 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099351941 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113842296 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139749784 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165277754 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106350139 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084205832 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117699465 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117815711 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113449538 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12020698 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082142328 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081704171 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082745856 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.101391939 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.125944672 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113383249 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118480181 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10821766 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155503369 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084662599 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226830214 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096736322 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105108074 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090170904 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081104533 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096707613 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096819267 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103623995 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110691058 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167457546 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09555523 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09052893 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093090101 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07532594 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084356904 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124421696 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109091199 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267794735 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104596662 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.084211286 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103616706 seconds)
  done (took 58.509477757 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10340785 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.077303881 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100462743 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144112831 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121336782 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199555422 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150793083 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188712679 seconds)
  done (took 2.722098839 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069011532 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094740375 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104219854 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085554563 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070132715 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070600359 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.230881079 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084417726 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069960199 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094240382 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080400811 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071904831 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.45825351 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068737619 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069966195 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080968763 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067777344 seconds)
  done (took 3.498209553 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.383290777 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611622638 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.355301231 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078505322 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.00570082 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088854016 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.220983301 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138126828 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081361303 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536757922 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.371544714 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132454407 seconds)
  done (took 18.650852784 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08190735 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075304821 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090459434 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089698852 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077963379 seconds)
  done (took 2.054512775 seconds)
done (took 107.716988381 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080900497 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.44430309 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07115121 seconds)
  done (took 2.181679664 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090838166 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08894005 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.091408094 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.089302328 seconds)
  done (took 2.014340342 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074466966 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07707334 seconds)
  done (took 1.799159344 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.227117068 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.178540499 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.1017265 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083040889 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080385082 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08074692 seconds)
  done (took 1.890240768 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072490425 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07264586 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073203082 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074312919 seconds)
  done (took 1.931716261 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067961693 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066911459 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069092405 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07181168 seconds)
  done (took 1.918071257 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084574979 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084495 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07963756 seconds)
  done (took 1.889866665 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100437409 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090356284 seconds)
  done (took 1.831741351 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081457875 seconds)
  done (took 1.723536237 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090168491 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100221577 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135185224 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.116953488 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141849882 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118535428 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087785775 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089290056 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082302104 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089757132 seconds)
  done (took 2.693190804 seconds)
done (took 22.099926678 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078517708 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374784661 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363455872 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09488673 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671823489 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360731564 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986347896 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096910377 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148049932 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073034138 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090443471 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652807619 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975233233 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.334129487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964006034 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331288705 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.6564789 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072531384 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071570186 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072579339 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971100163 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069921088 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071361345 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071856963 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652309088 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377617601 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073334291 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.33243765 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072805305 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077131728 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362628603 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073920108 seconds)
  done (took 16.299195377 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070799973 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122706324 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073084855 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085829035 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073369304 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070476518 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072476951 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069397195 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126236682 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07265126 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090360708 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071893122 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076454083 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073522822 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093579099 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072036372 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075175462 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072994377 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073300111 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073691456 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092573981 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072711437 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073874757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076394777 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073556497 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086344186 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074742 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072993772 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073678094 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078268347 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078775368 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075160817 seconds)
  done (took 4.196267586 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116337902 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126978422 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077915178 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110896384 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116854651 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074113861 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.15165227 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098073578 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.134341255 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073238797 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09128293 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071770995 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108594166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074183099 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094568708 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07344565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076248935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073773749 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072640884 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074667462 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09318003 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072754235 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073998238 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07326642 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073875987 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088741615 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074669138 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073279995 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073029326 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0776462 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079244642 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075029042 seconds)
  done (took 4.479016428 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070888697 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073060027 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081016436 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08460067 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070476147 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072862918 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073833151 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071209079 seconds)
  done (took 2.25934404 seconds)
done (took 28.88542202 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078359805 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068092635 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074047247 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090238421 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076946328 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081886369 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067772992 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077478554 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075092761 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.0753552 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076385649 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069988524 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073492826 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067894272 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075182973 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069039327 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084118935 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073654451 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083379861 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084685911 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072444678 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076089844 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07877411 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084728582 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084317968 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084111672 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080036268 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07557625 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071083308 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073349725 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074186696 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082816332 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.08412295 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084060383 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069927379 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070319367 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074965021 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071948927 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085219182 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079740927 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07259675 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079449931 seconds)
  done (took 4.865594943 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084991581 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088845417 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082574116 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081499931 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091814087 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083213567 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086652759 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078017075 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078360517 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088877864 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077072292 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.08490488 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.08000652 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073207443 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078945841 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075693403 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080386549 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074863285 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078001349 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078268066 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08756276 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072785544 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088070713 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080112384 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078348786 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.084498112 seconds)
  done (took 3.785139263 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073649099 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085691014 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092750953 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147718204 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114309628 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083496413 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084668793 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095111357 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099739282 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071122164 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076038012 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09607288 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096113426 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077192165 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071725908 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087705203 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086990573 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072791489 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078189258 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099987017 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092414598 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088734564 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097384233 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088038145 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070869542 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073565709 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076003145 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.090354087 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07350769 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082657489 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074354413 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075755022 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072522125 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082328847 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073680465 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070551877 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096051577 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082550152 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083704181 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071182034 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080638736 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071887156 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096584481 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131466098 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069731801 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075137495 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07452613 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08233295 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070072137 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098481967 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082571285 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070188096 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071744926 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069674797 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070699207 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073651375 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072281217 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073332152 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080550609 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077832047 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092885895 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075770191 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088640681 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070372895 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081060945 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069803901 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071957703 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069486271 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099880141 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072458398 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116277515 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071239065 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069424182 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081793575 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080665184 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0771118 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070327132 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08841072 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082080751 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075028291 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079465501 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074217874 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074474371 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101727517 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071308094 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070389782 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069402233 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074682338 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07489463 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071429253 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082875774 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070368838 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074197776 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089414148 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070554979 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071994684 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075468159 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07386025 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070832988 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082043143 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074512629 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071716282 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081167167 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071820937 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074043328 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084208566 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077575897 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069714872 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07358361 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074538127 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072037857 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072762133 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074355333 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071659857 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077432909 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077841601 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076505569 seconds)
  done (took 11.074650305 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163175802 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15569137 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072322855 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148193246 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076853883 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082508871 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155350316 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098055213 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070858995 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072435689 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071383871 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113475537 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10621399 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11628936 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081494584 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069965851 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091326148 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114779397 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153394373 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146761291 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091074263 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076832702 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071584464 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07046797 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070867456 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078408976 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085829235 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077640615 seconds)
  done (took 4.486609692 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077850051 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10337311 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073213451 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091348814 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087963487 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069215886 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070933123 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070274025 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085842607 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078993414 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069266338 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074698603 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073555691 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075083679 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.0722711 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078010658 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078840125 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070954126 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075344426 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077546499 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081989758 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096662453 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07607034 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071477819 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074254733 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071070111 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.080036285 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083871638 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.074260862 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.108509616 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069175568 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076479654 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086108765 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072383707 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071134391 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071536378 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071513828 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071395917 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072722293 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069620593 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070047749 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075101735 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070546553 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079373766 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084002428 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.0734148 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07287295 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074592531 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072897963 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068902222 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074056738 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07411987 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074566555 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078410202 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075438021 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073912591 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072261292 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100038408 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077151041 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071083369 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070309368 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07034377 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073663843 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.080858002 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087088854 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07364922 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070128901 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071104186 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.084142531 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084234606 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070494027 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076366717 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068939026 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073390667 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074575009 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073513366 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072498201 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06995672 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070787478 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074248707 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.071631134 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070896462 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.070435503 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074920899 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069604254 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070267999 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071895125 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072972537 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080181247 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070251774 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073432447 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070260902 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068463112 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073130312 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.076866639 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074296265 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082229863 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082640247 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071943371 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069630594 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085508154 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073935465 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070978322 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077883358 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076255229 seconds)
  done (took 9.650568789 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091219273 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06899765 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086071827 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093897665 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080856132 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076503844 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080595905 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068796458 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084469323 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073769542 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076714111 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070203877 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082312549 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080968285 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070768884 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079356503 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071878207 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08666283 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083392032 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067480571 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077276214 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080794778 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08099649 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08560147 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084894557 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08646624 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08364631 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.08176075 seconds)
  done (took 3.948080279 seconds)
done (took 39.466868181 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.765508127 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.974896493 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.73247454 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.95948496 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.79305388 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.921920996 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.826291092 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.727356178 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.903937617 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.772199221 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.06423703 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.974284296 seconds)
done (took 65.219804891 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.764671978 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.880362547 seconds)
    (2/2) benchmarking "String"...
    done (took 1.980444474 seconds)
  done (took 5.530261869 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.907950714 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.584963899 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.967755423 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.725811918 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.733365874 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.021551544 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.496939797 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.17851448 seconds)
  done (took 30.378238972 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.959227899 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.951373896 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.451464615 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.48606217 seconds)
  done (took 15.56196778 seconds)
done (took 62.902261694 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.754147755 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.742460781 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.734472534 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.726458897 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.817860787 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.749570482 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.856360442 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.768830655 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.73435725 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.733569745 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.729288272 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.154089012 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.744223062 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.927798775 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.733680949 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.728458755 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.779508966 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.272845131 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.881950248 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.742311214 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.744404407 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.795675668 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.736548241 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.733244096 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.732196349 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.730387521 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.124204929 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.744597413 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.561124692 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.730649837 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.778059684 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.077225645 seconds)
  done (took 202.469694535 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.727696213 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.698178672 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.781639752 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.765274184 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.211100639 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.927632459 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.827430618 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.248073286 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.735357244 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.746445268 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.982628725 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.734972039 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.995641699 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.681218922 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.764627269 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.829323805 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.939407968 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.030546136 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.772366665 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.874880087 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.738681231 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.827267087 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.764251286 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.984209982 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.753915632 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.752321158 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.737398726 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.743823714 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.914939352 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.923161679 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.746290067 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.739798893 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.934120422 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.598453636 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.755669828 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.73894399 seconds)
  done (took 168.60011202 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.913250224 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.73142619 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.729138873 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.729608208 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.729328724 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.735372097 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.73006201 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.851493245 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.734211926 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.387605245 seconds)
    (10/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.851227749 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.141675471 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.733764506 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.784256648 seconds)
    (14/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.730179309 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.514509372 seconds)
    (16/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.735011216 seconds)
    (17/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.796107797 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.742924269 seconds)
    (19/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.734355692 seconds)
    (20/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.744358918 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.755671741 seconds)
    (22/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.735236155 seconds)
    (23/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.730989771 seconds)
    (24/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.85339736 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.743186175 seconds)
    (26/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.734150029 seconds)
    (27/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.739745779 seconds)
    (28/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.730742147 seconds)
    (29/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.735741303 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.115947489 seconds)
    (31/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.730525962 seconds)
    (32/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.909508325 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.733076737 seconds)
    (34/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.737489843 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.972650134 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.731216626 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.733006815 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.56952705 seconds)
    (39/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.285776881 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.816242774 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.733476223 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.736066436 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.730273485 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.948263002 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.732483059 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.731942393 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.73106269 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.732362773 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.849866452 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.735792065 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.852975377 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.737655433 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.222789328 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.737615976 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.733678307 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.732133686 seconds)
    (57/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.961519451 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.35398472 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.736982437 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.734075317 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.731471935 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.733117056 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.738248667 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.949017833 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.80823681 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.733744016 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.732555093 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.737691722 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.732646712 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.884837916 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.736301745 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.113891522 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.750014785 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.958267736 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.85353577 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.73872131 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.797151209 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.825532876 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.732333439 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.733519552 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.73298285 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.733380829 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.813278014 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.733681663 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.814702927 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.744916806 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.735789235 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.787418839 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.8023639 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.733979783 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.562535484 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.737532373 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.733949479 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.002485987 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.79845596 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.733865318 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.73407905 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.813687023 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.856277546 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.451874071 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.7375766 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.919500257 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.810203575 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.734739581 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.860377756 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.738815376 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.81404419 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.741201016 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.736363496 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.769366401 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.735442042 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.747369141 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.7388844 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.106816504 seconds)
  done (took 395.386003502 seconds)
done (took 770.097525032 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.343272378 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.30977611 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.40415253 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.324324889 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.303667785 seconds)
  done (took 13.360922639 seconds)
done (took 15.036755097 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.811613329 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.816652399 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.753929434 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.817497496 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.750845151 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.815458109 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.799235312 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.757518145 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.782780291 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.75684518 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.785303289 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.755976164 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.742267351 seconds)
  done (took 24.822156514 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.985549153 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.963256822 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.798904834 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.976199693 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.776342078 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.954129946 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.887029436 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.879065108 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.871700107 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.746212381 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.744662263 seconds)
  done (took 22.260809927 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.974842216 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.958337391 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.806379976 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.95970959 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.778395027 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.957788908 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.888193807 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.879041052 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.875919686 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.747039296 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.745456303 seconds)
  done (took 22.248972191 seconds)
done (took 71.006876771 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.73944894 seconds)
  done (took 3.417252777 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.758304772 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.914146747 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.737565546 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.738873463 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.737465091 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.739344025 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.738361429 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.737854753 seconds)
  done (took 15.780409459 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.738570028 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.738340245 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.737848224 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.738200648 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.737511036 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.739212117 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.738248461 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.736981215 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.738743242 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.738022951 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.737089956 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.739081336 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.738739007 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.738216639 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.738025708 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.738332256 seconds)
  done (took 29.489798145 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.739162728 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.737943719 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.738291969 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.738354532 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.738952456 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.738836819 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.73987336 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.73851668 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.738874899 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.738838371 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.738899636 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.738146399 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.738921423 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.738942428 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.740001253 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.739053485 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.738368066 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.738922383 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.743230756 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.738924262 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.739652527 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.738620141 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.739164756 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.739455735 seconds)
  done (took 43.41856562 seconds)
done (took 93.78294702 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.459072166 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.576751549 seconds)
  done (took 9.713905484 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.745520516 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.742768076 seconds)
  done (took 5.246984205 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.741857335 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.741054377 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.740319657 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.739180454 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.739693905 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.739793475 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.739694577 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.739900005 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.738985082 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.73933143 seconds)
  done (took 19.081862201 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.739948063 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.73994459 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.74009877 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.740532779 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.740807224 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.740063058 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.740260793 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.740745962 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.741407401 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.740536934 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.740781025 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.740655418 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.741040623 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.740527037 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.741024002 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.740967437 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.74045295 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.740489183 seconds)
  done (took 33.01082371 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.740429955 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.740863035 seconds)
  done (took 5.162455572 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.740774322 seconds)
    (2/7) benchmarking "second"...
    done (took 1.741143969 seconds)
    (3/7) benchmarking "month"...
    done (took 1.741369374 seconds)
    (4/7) benchmarking "year"...
    done (took 1.741472806 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.741446907 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.741602827 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.740671384 seconds)
  done (took 13.869890017 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.742860459 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.903007279 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.966963176 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.353916073 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.7442725 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.74515098 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.669227251 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.744589301 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.746048674 seconds)
  done (took 19.297203346 seconds)
done (took 107.061201186 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.601993583 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.74670011 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.994824246 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.80394145 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.813814945 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.036403911 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.763809486 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.022855296 seconds)
done (took 42.464903408 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.761454729 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.49243521 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.533857044 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.847388584 seconds)
  done (took 15.556363404 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.741876318 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.059442053 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.768098409 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.59889281 seconds)
  done (took 21.855800712 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.107931861 seconds)
    (2/2) benchmarking "read"...
    done (took 2.090412841 seconds)
  done (took 5.884333394 seconds)
done (took 51.741135613 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.742431927 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.742488613 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.742490594 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.743009765 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.742585387 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.742859118 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.742964347 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.744043495 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.742942577 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.743828328 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.743246916 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.743874746 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744396741 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.743677476 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74367215 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.745114155 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.744560465 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.744724898 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743948971 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.744946361 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.743302179 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.74425495 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.744404184 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.744832806 seconds)
  done (took 43.53081814 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.74462026 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.744842724 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.744890269 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.744792869 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.74455164 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.743900981 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.744886505 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.744652136 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.744303487 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.744952966 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.744433867 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.744534821 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.744682657 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.744525379 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744634602 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.74456174 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.744481177 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745341357 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744672091 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.746097935 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.744533852 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744652579 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.745075793 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.745266145 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.745254756 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.745723023 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.745543629 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.745815174 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.744684688 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.745572561 seconds)
  done (took 54.032161554 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.745259326 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.745619351 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.746401769 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.746140789 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.745543338 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.745995097 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.746143217 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.745820291 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.745872546 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.746200719 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.746457617 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.74625627 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.746958769 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.745796573 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.745579901 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.746442741 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.745828787 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.745969887 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.746205973 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.745951318 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.748829562 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.746288278 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.746992037 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.746914106 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.747355509 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.74715842 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.747711862 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.746968953 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.747242101 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.74756063 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.746837776 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.747871432 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.748135223 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.74628513 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.74703898 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.747082462 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.747346414 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.747413022 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.747006639 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.747404222 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.747737707 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.747823461 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.747201683 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.747274137 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.747245349 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.747712434 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.7480256 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.748708841 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.747390012 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.747965264 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.748255913 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.747737424 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.748359507 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.74811634 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.748129023 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.748278243 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.749121508 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.74823078 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.748243519 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.748075113 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.748779451 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.748998549 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.748720882 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.748451191 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.749204391 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.748395339 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.748917907 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.748584683 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.749136085 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.749822293 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.749833511 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.749079993 seconds)
  done (took 127.50064239 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.749700963 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.750108087 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.749022469 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.748965901 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750080703 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.749249627 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.74975989 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749943256 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749551523 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.749624648 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7488706 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.750247146 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750207481 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.750917428 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.74984511 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.749051433 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.75082409 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.750004305 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.749989302 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.749860795 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.749730676 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.749652047 seconds)
  done (took 40.184519203 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.751160214 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.752066286 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.75156583 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.751450264 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.751640385 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.751952148 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.751963497 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.751270722 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750788237 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.75023374 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749664239 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750811906 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.749814985 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74958995 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750473751 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.750642693 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.751036728 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.751085154 seconds)
  done (took 33.207687082 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.75088462 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.750423006 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.751447713 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.751419218 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.750711811 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.750859138 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751661005 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.751726672 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.750695899 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.751517109 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.752410026 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751085883 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.751018032 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751100603 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751956649 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.752055939 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.751237652 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752954873 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.751548672 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.751455474 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.751279542 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.75141858 seconds)
  done (took 40.221302434 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.75174618 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.751961246 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.751489917 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.752234199 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.752176382 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.75205124 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.753187252 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.752646733 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.751464126 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.752337728 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.751967522 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.752308256 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.751913129 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.752557078 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.752596549 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.752835535 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.752471632 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.753550392 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.752376063 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.752813825 seconds)
  done (took 36.738739171 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.75279067 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.752691573 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.752676892 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.753472774 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.753701464 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.75342148 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.75262477 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.753391336 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.753716404 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.753848499 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.753599888 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.753300794 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.753380901 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.753105184 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.754051406 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754063277 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.75369778 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.753961226 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.754132169 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.7541364 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.754592949 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.753889358 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.753636647 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.7542821 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.754456822 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.754630548 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.754162551 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.75442574 seconds)
  done (took 50.796817851 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.754181533 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.75440637 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.754484677 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.75588304 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.754598729 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.755112003 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.754719251 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.755632094 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.754707494 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.754364653 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.754735871 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.754641169 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.755270354 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.755169608 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.75425815 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.754430746 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755020094 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.755058617 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.754562272 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754861214 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.755583955 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755132329 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.756104993 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.754960411 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755047273 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.755141518 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.755126425 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.75458411 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.755686802 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.756369114 seconds)
  done (took 54.344002347 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.77618232 seconds)
    (2/2) benchmarking "in"...
    done (took 1.777932089 seconds)
  done (took 5.248666595 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.755340383 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.755248914 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.755552151 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.756301639 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.755289156 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.755832535 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.75497197 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.756472683 seconds)
  done (took 15.740400774 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.75787364 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.755555502 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.756055319 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.755937501 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.756516109 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.756971251 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.76377672 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.756339472 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.759111497 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.758099124 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.765701995 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.766535366 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.760925706 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.75932865 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.759201984 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.76039813 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.756565855 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.757719424 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.757349476 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.757290054 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.757745474 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.761758071 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.760679561 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.757224558 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.760007018 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.76896226 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.762596446 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.756592014 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.758714594 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.762552674 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.758224098 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.756992499 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.758563774 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.757515417 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.757125006 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.758048173 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.766214655 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.761009612 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.764485984 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.757999151 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.757473565 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.757544597 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.761237759 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.762311379 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.761572891 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.758559396 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.758080816 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.758109219 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.758306465 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.763475974 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.765955942 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.759616327 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.758312656 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.763662952 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.760968691 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.766488159 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.759147213 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.763177718 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.769816184 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.769829518 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.773061927 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.769234232 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.762263607 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.759033783 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.77028395 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.786925138 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.767002244 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.75988603 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.758549294 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.759101621 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.767445136 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.77329966 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.772248426 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.759926177 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.760234988 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.760473785 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.761717416 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.760096248 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.768264993 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.765423168 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.760575229 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.75995985 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.77084953 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.785746994 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.761860844 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.761422566 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.760984462 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.760299441 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.761228839 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.773170278 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.761895562 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.759977466 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.761317683 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.761700355 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.762839223 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.761179683 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.760307455 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.763370473 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.760626571 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.760749163 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.761837187 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.765367747 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.771918377 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.760988764 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.761245617 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.768439947 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.760494661 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.763239285 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.769147757 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.761829295 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.760799239 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.762628237 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.769627224 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.761288644 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.765300334 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.771129726 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.761456236 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.765015755 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.761982677 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.761250639 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.772952205 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.791631615 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.761523002 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.761251506 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.768905676 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.77510587 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.762905266 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.767727631 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.762806313 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.762522752 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.762339419 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.766037604 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.76323228 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.765538158 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.762258484 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.765776491 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.761744792 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.763553087 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.763802287 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.76533181 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.764619233 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.766479969 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.766200277 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.767733055 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.76364184 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.766884065 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.770123937 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.763104225 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.766375499 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.768606737 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.762732162 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.763759254 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.766670778 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.76372043 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.76435899 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.763920768 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.765209541 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.76383597 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.763997782 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.764486438 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.764504375 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.765303854 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.771011 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.764453724 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.768476817 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.765174471 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.763904308 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.763557277 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.763692009 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.764302638 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.764972543 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.76368728 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.768305903 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.772752301 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.76371435 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.764379918 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.769379515 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.764882322 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.76473682 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.764638514 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.7693143 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.775344927 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.765048296 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.772118118 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.765088745 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.764632987 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.76415086 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.767246151 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.766156525 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.765057665 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.770122604 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.77299031 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.779190851 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.775870641 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.766563675 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.769945701 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.766927031 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.77079762 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.770631539 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.766138411 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.765481772 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.765933718 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.766843285 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.765426311 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.768495931 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.766068228 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.766238469 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.765652255 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.766558225 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.766354228 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.765914792 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.768680174 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.76930647 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.767230224 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.767185589 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.766606728 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.767828283 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.765479355 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.765903967 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.766933659 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.766928325 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.767816279 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.774542187 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.766437617 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.769732638 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.770582375 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.768981993 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.766510773 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.767355825 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.770610431 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.768044454 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.774987254 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.767814128 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.76955108 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.774487685 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.767932839 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.767259293 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.771904314 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.767026126 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.767454859 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.772019723 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.776765128 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.767285502 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.767972674 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.768071963 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.769739063 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.768440211 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.775682931 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.76822718 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.769324968 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.767597222 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.770594662 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.768172272 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.771059431 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.771276389 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.769244563 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.772760694 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.767952635 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.768846554 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.770719283 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.768696261 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.768119293 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.769145703 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.773039375 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.776947217 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.774161605 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.769229427 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.7723979 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.770515939 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.773536998 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.771351645 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.768856364 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.771041349 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.782746825 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.77808814 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.776821931 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.772791359 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.768947565 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.776049538 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.771452332 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.775074992 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.770853734 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.771664996 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.770799031 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.771106975 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.769435396 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.772294749 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.769830144 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.772363309 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.772318386 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.774180925 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.769752688 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.771717191 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.770586515 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.770566604 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.769884713 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.770830742 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.771539851 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.775181003 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.774817109 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.771573802 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.772474367 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.777866294 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.772797171 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.774782579 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.772568183 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.771959387 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.770661544 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.772566323 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.770781364 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.775029866 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.779407246 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.775452184 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.782338294 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.773922792 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.782058612 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.771293105 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.77474 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.779516457 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.770942042 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.770439117 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.77186254 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.77150597 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.779741005 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.771880889 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.772794017 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.776215387 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.771649387 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.772857941 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.770965319 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.772162339 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.77229834 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.772148044 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.78101569 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.774214361 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.778117978 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.775640644 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.771881324 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.77237434 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.773075408 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.77203559 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.778588465 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.772580712 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.774964229 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.773224885 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.773042799 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.773125544 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.772959909 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.77199028 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.772275131 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.772997056 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.780505883 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.774344882 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.778150257 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.772819057 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.783181166 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.77321846 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.781678521 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.774071942 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.774665264 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.773847286 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.773053495 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.775788461 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.775065397 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.777004045 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.773876567 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.77522877 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.777905864 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.774369838 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.776150046 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.776664166 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.77457917 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.775901203 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.784080964 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.799149034 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.777382386 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778177202 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.774275933 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.777187412 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.779196496 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.774062555 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.77365516 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.778087247 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.786072889 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.783024317 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.776510336 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.774406138 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.776418717 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.774478846 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.774757784 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.774825895 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.774582641 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.775144744 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.776409059 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.775169814 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.780493271 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.774607974 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.777474856 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.777244939 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.776728364 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.787675233 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.775119941 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.776658929 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.775247043 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.774804022 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.777981627 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.7778941 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.775466495 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.777800092 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.776494595 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.778221147 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.784490523 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.78392074 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.780347073 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.777967643 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.77647623 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.77801165 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.777351443 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.77644671 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.777374392 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.776674659 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.779540405 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.776380152 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.777516312 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.776370301 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.775999007 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.777296321 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.775957003 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.780432905 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.786640908 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.778566306 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.776029979 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.77564567 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.778089923 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.776468679 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.778648534 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.785243126 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.781145765 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.788957359 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.78619271 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.781573918 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.778562662 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.780848958 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.788182815 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.776931824 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.779684984 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.777878999 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.780945127 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.778198282 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.783125803 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.777281464 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.786104421 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.779392905 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.777727759 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.787687523 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.781388775 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.778232157 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.781065311 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.784244085 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.779719224 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.777239024 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.777672245 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.779920108 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.785544949 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.781785264 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.778681378 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.782083248 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.778080692 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.7805083 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.782954089 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.778532879 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.781598365 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.778113522 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.781399916 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.779312011 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.77876083 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.778821009 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.77953074 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.779940225 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.783714408 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.787476535 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.778691386 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.782718237 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.782305879 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.780440586 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.778190299 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.778608892 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.779008453 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.779195612 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.779517457 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.778572388 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.780718452 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.784320847 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.779331084 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.7811824 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.784497417 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.780524679 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.783367573 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.791643894 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.787545126 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.779618956 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.782924422 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.780438521 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.783879266 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.780519204 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.780245455 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783137179 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.784219486 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.780558142 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.780486607 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.780365502 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.784501372 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.798003326 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.780255739 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.782554665 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.782609317 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.785138167 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.780725924 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.780226282 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.780367321 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.783129284 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.784676301 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.79028984 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.78202982 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.789094781 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.783061771 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.783041113 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.785279584 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.785659847 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.79042228 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.785489703 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.781791385 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.781425175 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.787753933 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.79989117 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.781935536 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.792620229 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.814640496 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.7829277 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.784012132 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.78192813 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.783556375 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.781835287 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.784686466 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.781904308 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.781784914 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.782289462 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.782219039 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.783584954 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.790317007 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.784721531 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.782309635 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.782010752 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.782547202 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.783988226 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.78258397 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.782045669 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.782835678 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.782747815 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.782895044 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.783278827 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.78482197 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.796018279 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.793881207 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.783311468 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.782651718 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.782947938 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.78789863 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.78755907 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.795348143 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.790983278 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.783352573 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.783478572 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.78652757 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.783290558 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.783479425 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.785765577 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.785539272 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.785288817 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.784431468 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.796514502 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.79327473 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.790011412 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.784268349 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.784639084 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.783680622 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.787360403 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.78366021 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.783687541 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.787514634 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.784442004 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.78901269 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.78404269 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.785174286 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.788794537 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.791431463 seconds)
  done (took 1058.498107452 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.78441766 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784411759 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.784585335 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.784370429 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784609066 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.785399187 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785628005 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.785098402 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.784032165 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.784988109 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.785103539 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.785409958 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.784379989 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.78492803 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786119936 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.784614464 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.785544586 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.785909791 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.785263199 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.784790174 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.784861402 seconds)
  done (took 39.208008482 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.784574229 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.786035077 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.786122555 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.786236289 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.785798601 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.786475295 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.78559288 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785951441 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.785643036 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785407019 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.785967351 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786058448 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.785740371 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.785495895 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786065352 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786086088 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.786559944 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.786658349 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.786655987 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.786698902 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.786669079 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.786762871 seconds)
  done (took 41.017144944 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.786814002 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.787395325 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.789627607 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.786917352 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.787113566 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.78739342 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.786785584 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.787927706 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.785934766 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.787067874 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.786255992 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.787071231 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.795067965 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.795387106 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.787963725 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.785373932 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.931063936 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.786419357 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.787084376 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.786110005 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.785684872 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.792908017 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.786442047 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.785696631 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.786731263 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.786622533 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.786315597 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.786924443 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.786373826 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.788190469 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.791932212 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.785740388 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.788132253 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.78971809 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.786102597 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.78908551 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.788859882 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.784983704 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.785127262 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.784613252 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.796534528 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.809327828 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.785201178 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.792682873 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.784877418 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.785083879 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.790762166 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.794550424 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.784931323 seconds)
  done (took 89.4983517 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.785383392 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.785841821 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.786887374 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.783831779 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.785394729 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.786723266 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.784742724 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.784366481 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.783462279 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.783991659 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.78340192 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.783583622 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.783393033 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.784824498 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.782259034 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.780349617 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.780440809 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.780796909 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.780283542 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.781446302 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.779228883 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.779853505 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.779969943 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.781049701 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.781505008 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.781731505 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.779707804 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.78012615 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.780517605 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.780469924 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.78091705 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.780427512 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.780431419 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.7805074 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.780702332 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.78038701 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.781454217 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.781007912 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.780373653 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.781252981 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.780798123 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.78088944 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.780790413 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.780638652 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.781692462 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.780710295 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.780960121 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.782200842 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.781367435 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.780658044 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.780839455 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.781141247 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.781413869 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.781070925 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.781742041 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.781095203 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.781253154 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.781539923 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.781867251 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.78192028 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.781241839 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.781790142 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.782445076 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.783180131 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.783504208 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.781419191 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.781311137 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.78175929 seconds)
  done (took 122.890870628 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.781367705 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.782636697 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781956335 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781025556 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782419335 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.781699819 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.782474734 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.781169325 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.782209822 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.782334762 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.781667563 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.781243241 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.783432887 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.781870573 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.782186445 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.78262725 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.782538524 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.783332884 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.78250171 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781994796 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.782574526 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.78236027 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.782647637 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.783353289 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.782601139 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.782786449 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.782916494 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.782427635 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78281871 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.783649652 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.781829669 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.782474647 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.782092991 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.782050256 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.782503842 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.782293318 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.782473163 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782664595 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.781680546 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.782539553 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.790331265 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.781456016 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.782143257 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.782316952 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.782542355 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.784082712 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.780458534 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.780156752 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.78005453 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.780651694 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.780997084 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.780614527 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.774502845 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.774761316 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.775600581 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.775095474 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.774943851 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.775589848 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.77515613 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.775526878 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.775136642 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.774848097 seconds)
  done (took 112.152609757 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.774607467 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.773845365 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.77371595 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.773483204 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.77352377 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.774596176 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.773848825 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.774269631 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.77340761 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.774323564 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774114225 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.774844393 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775470087 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774313287 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.774426984 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776151018 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775422252 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.774913358 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774580255 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.774830747 seconds)
  done (took 37.203584685 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.77506877 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.77707621 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.773734294 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.774193201 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.774935637 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.774532682 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.774455686 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774761676 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773600021 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774755493 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.774698187 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.774765234 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774601405 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.77455188 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.776532437 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.774541317 seconds)
  done (took 30.110030388 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.775591622 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.775561903 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.774997873 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.775589106 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.775776148 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.775843053 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.775029788 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.774581923 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.774966343 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.775628075 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.774363107 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.775571786 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.77491 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.775502577 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.775370052 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.77541596 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.774735101 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.775169224 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.77468498 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.772787063 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.773134896 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.772494682 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.772240947 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.775088318 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.771510616 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.771700095 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.770767455 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.771172983 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.770758682 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.772544351 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.770788327 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.77046955 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.769976727 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.770039309 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.771058774 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.771021389 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.769473171 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.770433417 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.770081243 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.769826306 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.771054383 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.769661598 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.768712646 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.768957163 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.769003712 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.76956066 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.769590715 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.769065813 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.768948754 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.768416043 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.768500896 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.768597715 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.768327136 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.76712027 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.768272023 seconds)
  done (took 99.174574227 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768412097 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.770042225 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.76669707 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.766795878 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.767060241 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.767398252 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.767183738 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.767197045 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.766852163 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.766939752 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.766940872 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.766657092 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.766852891 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.766637401 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.766597633 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.766736285 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.766192977 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.76708855 seconds)
  done (took 33.513550851 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.766047914 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.766086819 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.766411791 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.765238261 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.765840021 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.766817834 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76484337 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.76494496 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765085214 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.765776512 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765273292 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.766040046 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768563172 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.765001273 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.765460586 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764279362 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.766567629 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.764492671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.765862483 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.764723454 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.764694737 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.765155021 seconds)
  done (took 40.549527617 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.764678784 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.764776553 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.779546629 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.785601985 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.785424572 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.798925775 seconds)
  done (took 12.382997003 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764188021 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764427152 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765069184 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765673355 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764761965 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764774029 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764917066 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766254486 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764911345 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765388417 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764351743 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764704739 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764224546 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764533682 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764890239 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765457635 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764794464 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764720877 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764622701 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764813551 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766017786 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764800119 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76478679 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764314114 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764817806 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764588488 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765108214 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764006313 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764520283 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764998715 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763977628 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764223272 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764189932 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764513843 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76390897 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763752359 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764875636 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766152575 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765884799 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766259294 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.764650299 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763731099 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763987026 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764273356 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763771975 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763988693 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764483541 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763752598 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763560419 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764238303 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763372377 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763894964 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762897806 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76422047 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765280949 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76336584 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76320277 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763558167 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764025938 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762951903 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762614532 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761723846 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762213733 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76290187 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761399064 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761745201 seconds)
  done (took 118.147218509 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761707196 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.760864318 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761774617 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762101978 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762416456 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760718087 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760468212 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761940037 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761443253 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761848407 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762629495 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760773259 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761483938 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761004864 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760895324 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762093061 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761298887 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761634684 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761024166 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760735616 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760710198 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762001912 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.760252904 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759786789 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760139709 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760272468 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760012727 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761630644 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760071616 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759842614 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760669492 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76028225 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760182963 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.761422212 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759971168 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760054329 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760393753 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759976598 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760954072 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760385558 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759573219 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759873891 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760271947 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759498045 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760752144 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759689157 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.760066958 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760304244 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759281209 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759548048 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761434831 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759559317 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75969319 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760712322 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75995598 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760491582 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761229672 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.759899432 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760011549 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759813831 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760633479 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761912482 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760758355 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759891292 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.760200347 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759954167 seconds)
  done (took 117.906025062 seconds)
done (took 2455.483761522 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.827056677 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.769049521 seconds)
  done (took 15.294339595 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.922040242 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.876690534 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.759262326 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.801847908 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.76116253 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.783565488 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.784055426 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.759428176 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.7588581 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.759126308 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.760047117 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.945306334 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.772374833 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.76051195 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.759661239 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.850545539 seconds)
  done (took 50.515686171 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.76219151 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.764796788 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.771453826 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.764956737 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.761761053 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.774207548 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.792012855 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.766405546 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.795140618 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.775580621 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.829693985 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.773055222 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.762090356 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.813042075 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.777226284 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.7766662 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.852089912 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.837227311 seconds)
  done (took 33.845393839 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.837660782 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.775128902 seconds)
  done (took 10.316419917 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.779516418 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.798265672 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.824295683 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.774879589 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.761486393 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.796873307 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.770095358 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.795306041 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.810633349 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.796138749 seconds)
  done (took 69.607451319 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.76800867 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.767109623 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.765152087 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.764081269 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.76234671 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.765070307 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.761824955 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.761264429 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.421917558 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.797112677 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.770065327 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.766960154 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.762941555 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.764641364 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.760306146 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.784964276 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.896812384 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.760991227 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.760676007 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.769307636 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.763153807 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.814086261 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.776479581 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.763319579 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.793429716 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.420876367 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.770170739 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.768543842 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.867904621 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.760740317 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.761882705 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.952537541 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.764469327 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.223599762 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.024761412 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.769854612 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.775732691 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.771236047 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.761163209 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.880579578 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.764154957 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.769440294 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.738207969 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.004604157 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.860537074 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.806650529 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.068874344 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.780365046 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.764992491 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.792247577 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.766667211 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.765246261 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.776558651 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.281087382 seconds)
  done (took 126.955820657 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.764595829 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.126537298 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.926869489 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.761181475 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042977537 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.967293341 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.765538362 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.806614391 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.767910045 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.988565837 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.013689131 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.86747984 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.763856425 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.762435894 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.76290116 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.763656425 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.917354188 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.83224406 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.763819092 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.762296517 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.78940494 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000805848 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.885090677 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.765620593 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.789240695 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.973404029 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.882977725 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.864101403 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.538960915 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.761997245 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.823885273 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.766618593 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.763413276 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.762424703 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.917933928 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.854247837 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.85100051 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.764111239 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.761330672 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.762292497 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.505252474 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.959982485 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.857652816 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.892952222 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.015671134 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.965330044 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.537894692 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.763317597 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.509619668 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.92785425 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.989897061 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.989825861 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.883341101 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.76806086 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.01748653 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.763855528 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.76318459 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.009922079 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991170885 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.860223277 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.766959341 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.764568694 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.763228649 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.053929576 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.766200584 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.857954759 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.766659189 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.765176708 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.859437312 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.863879634 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.996741603 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976435485 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.793179869 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.088319941 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.27305939 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.009306236 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.829007331 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.016541163 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.765113718 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.764336881 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.840927308 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.609765257 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.016205569 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.044506014 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.009593218 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.801096912 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.479684303 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.764033557 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.990552871 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.988665738 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.025179331 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.009434205 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.003587944 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.095680633 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.763939375 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.764160449 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.052421563 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.887425316 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.767514878 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.112321721 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.995116177 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.299044506 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.791526608 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.06753155 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.898507626 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.768471291 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.39551556 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.766516688 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.992550065 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.803862745 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.766989067 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.766414636 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.983225711 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.750929301 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.766188133 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.649357862 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.825460529 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.770731574 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.997156361 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.770103223 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.032678347 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.77128111 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999758116 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.167454949 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.795390985 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.936634502 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.010938487 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.769862305 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.004377684 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.011135715 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.882664639 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.036445442 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.670293591 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.76547358 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050369185 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.771104322 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.766665397 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.935619305 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.768511119 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.907493169 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.770472039 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.057318057 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.789647807 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.422063444 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.770890814 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.019640925 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.80275323 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.815420282 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.773793047 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.896827306 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.76799876 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.679707992 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.921966306 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.770246963 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.769376189 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.316796668 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.767431256 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.915766947 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.992780707 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.790799394 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.837387222 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.433511486 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.767539328 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.85131683 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.793124315 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.164052871 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.769177582 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.017538714 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.770730858 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.7674867 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.767219435 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.053252268 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.005474112 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.77086377 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.768414775 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.668785037 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.768053723 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.767578154 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.948563213 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.125578834 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.768980932 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.968347306 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.774819832 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.895285598 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.771437585 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.850542448 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.098849296 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.768780767 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.76875527 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.769342783 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.770227259 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.770225016 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.974905793 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.796510665 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.260250213 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.905253276 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.038885694 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.079989535 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.009266406 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.813733889 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.772860537 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.028626091 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.774469261 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.832777428 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.773668527 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.78968101 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.995432522 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.773240918 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.97854679 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.038067895 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.769388567 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.816635598 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.773343204 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.771861709 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.769849247 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.915121378 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.85193298 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.772128211 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.770191281 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.883284126 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.890757659 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.977427857 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.772043891 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.810518374 seconds)
  done (took 880.522172331 seconds)
done (took 1188.75433196 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.772002425 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.771960053 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.773822104 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.774079038 seconds)
  done (took 28.8014688 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.780692499 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.772513749 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.773713504 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.773262177 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.774322544 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.773597265 seconds)
  done (took 12.357657447 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.787444544 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.772179641 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.77408651 seconds)
  done (took 21.044834646 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.842965942 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.158545227 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.90357875 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.195419066 seconds)
  done (took 9.809462521 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.773663494 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.773055282 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.77310547 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.77301513 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.782329575 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.78091673 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.772966116 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.77345692 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.781029736 seconds)
  done (took 17.694799273 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.827604584 seconds)
done (took 95.244281504 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.782409068 seconds)
    (2/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.041268565 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.592250496 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.070774117 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.093748564 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.840681154 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.896881144 seconds)
    (8/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.007326712 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.773522189 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.075823447 seconds)
    (11/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.874384963 seconds)
    (12/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.901094366 seconds)
    (13/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.778031561 seconds)
    (14/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.683731255 seconds)
    (15/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.034417493 seconds)
    (16/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.634533786 seconds)
    (17/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.853351501 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.094945659 seconds)
    (19/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.776622463 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 4.266782562 seconds)
    (21/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.797023323 seconds)
    (22/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.850699967 seconds)
    (23/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.082774281 seconds)
    (24/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.879650591 seconds)
    (25/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.795295368 seconds)
    (26/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.907656937 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.958955249 seconds)
    (28/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.835938745 seconds)
    (29/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.775053844 seconds)
    (30/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.040757023 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.773324263 seconds)
    (32/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.800433498 seconds)
    (33/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.449872531 seconds)
    (34/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.011864443 seconds)
    (35/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.910004703 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.781191334 seconds)
    (37/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.01056051 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.115026166 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.777945852 seconds)
    (40/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.836078412 seconds)
    (41/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.860689745 seconds)
    (42/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.926509043 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.164728559 seconds)
    (44/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.002524626 seconds)
    (45/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.779921537 seconds)
    (46/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.006719797 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.775874383 seconds)
    (48/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.601503049 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.950009303 seconds)
    (50/309) benchmarking ("sort", Float32, false)...
    done (took 5.473626988 seconds)
    (51/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.77897347 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 4.464353274 seconds)
    (53/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.893787984 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.793314856 seconds)
    (55/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.989218642 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 1.991534511 seconds)
    (57/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.777284045 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.81514822 seconds)
    (59/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.791374106 seconds)
    (60/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.965697587 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 5.495140146 seconds)
    (62/309) benchmarking ("sort", BigInt, false)...
    done (took 6.778591088 seconds)
    (63/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.139265755 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.031430399 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.778772476 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 3.489389617 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.796203803 seconds)
    (68/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.855646218 seconds)
    (69/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.258958802 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.553143371 seconds)
    (71/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.02245087 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.780560722 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.983455521 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.865915327 seconds)
    (75/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.150594217 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.779463326 seconds)
    (77/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.04070107 seconds)
    (78/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.793389984 seconds)
    (79/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.867266191 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.146118276 seconds)
    (81/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.780463812 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.363326469 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.817570912 seconds)
    (84/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.792664022 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.169026616 seconds)
    (86/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.779671183 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.329480604 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.791985392 seconds)
    (89/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.724403941 seconds)
    (90/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.802067673 seconds)
    (91/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.158312482 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.781358346 seconds)
    (93/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.860041857 seconds)
    (94/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.970425997 seconds)
    (95/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.673386483 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.099024891 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.780871117 seconds)
    (98/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.144624133 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.03523248 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.78056415 seconds)
    (101/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.060309004 seconds)
    (102/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.890041734 seconds)
    (103/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.784537561 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.776965189 seconds)
    (105/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.055566413 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.952503217 seconds)
    (107/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.939021046 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.782709669 seconds)
    (109/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.012107323 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.797584493 seconds)
    (111/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.147988413 seconds)
    (112/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.78384851 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.563848139 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.154060844 seconds)
    (115/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.842894525 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.44069354 seconds)
    (117/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.136354035 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.797673264 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.955446632 seconds)
    (120/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.914619704 seconds)
    (121/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.856342996 seconds)
    (122/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.980921675 seconds)
    (123/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.52858531 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.124810411 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.569224671 seconds)
    (126/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.78284698 seconds)
    (127/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.366207627 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.949905498 seconds)
    (129/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.974522048 seconds)
    (130/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.152792361 seconds)
    (131/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.806412678 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.778192934 seconds)
    (133/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.132303757 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.691649354 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.089767342 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.092683039 seconds)
    (137/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.970788771 seconds)
    (138/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.800790099 seconds)
    (139/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.80087092 seconds)
    (140/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.697859008 seconds)
    (141/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.952378233 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.778595237 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.980241023 seconds)
    (144/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.777611047 seconds)
    (145/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.254065374 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.364036137 seconds)
    (147/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.809017111 seconds)
    (148/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.215201235 seconds)
    (149/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.786167868 seconds)
    (150/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.125808012 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.782551122 seconds)
    (152/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.022186689 seconds)
    (153/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.159238893 seconds)
    (154/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.813929835 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.879832255 seconds)
    (156/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.036818542 seconds)
    (157/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.090200495 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.786405967 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.084609637 seconds)
    (160/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.7816281 seconds)
    (161/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.112794398 seconds)
    (162/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.032421842 seconds)
    (163/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.930096162 seconds)
    (164/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.934613801 seconds)
    (165/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.807849014 seconds)
    (166/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.795296729 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.076439504 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.680637619 seconds)
    (169/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.23575323 seconds)
    (170/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.787994733 seconds)
    (171/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.141498029 seconds)
    (172/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.784895416 seconds)
    (173/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.897105558 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.088531252 seconds)
    (175/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.863302729 seconds)
    (176/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.90987691 seconds)
    (177/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.08579019 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.181767616 seconds)
    (179/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.784017451 seconds)
    (180/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 3.336655858 seconds)
    (181/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.881742171 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.575743267 seconds)
    (183/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.938124622 seconds)
    (184/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.785182701 seconds)
    (185/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.725246369 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.713435206 seconds)
    (187/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.922570168 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.910918577 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.784321316 seconds)
    (190/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.880486341 seconds)
    (191/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.912482032 seconds)
    (192/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.786453475 seconds)
    (193/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.562204049 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.963180931 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.400315574 seconds)
    (196/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.787385138 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 3.506077483 seconds)
    (198/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.04945316 seconds)
    (199/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.893433946 seconds)
    (200/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.462038595 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.462219019 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.93478824 seconds)
    (203/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.784434487 seconds)
    (204/309) benchmarking ("sort", Float64, false)...
    done (took 5.514318421 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.787845649 seconds)
    (206/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.706169622 seconds)
    (207/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.892867146 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.024817982 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.899970356 seconds)
    (210/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.139413884 seconds)
    (211/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.847305162 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.84726107 seconds)
    (213/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.782688986 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.78774409 seconds)
    (215/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.89320338 seconds)
    (216/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.094894453 seconds)
    (217/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.265333966 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.871985177 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.019525434 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.785773623 seconds)
    (221/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.272949842 seconds)
    (222/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.870740435 seconds)
    (223/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.293341546 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.394962865 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.784941696 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.98777892 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.434498155 seconds)
    (228/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.861094619 seconds)
    (229/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.880518494 seconds)
    (230/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.889052632 seconds)
    (231/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.0081275 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.786778651 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.787714709 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.108130862 seconds)
    (235/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.793651528 seconds)
    (236/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.105264243 seconds)
    (237/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.122065707 seconds)
    (238/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.788170795 seconds)
    (239/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.022528421 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.787027616 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.280504093 seconds)
    (242/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.91573522 seconds)
    (243/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.78917797 seconds)
    (244/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.91242534 seconds)
    (245/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.966871249 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.809049551 seconds)
    (247/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.897211495 seconds)
    (248/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.865090395 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.098364334 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.921385483 seconds)
    (251/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.806747648 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.752627933 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.056080526 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.901430919 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.923554827 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.131884567 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.039097171 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.89000607 seconds)
    (259/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.008572201 seconds)
    (260/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.043078764 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.7911759 seconds)
    (262/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.887006317 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.789952775 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.211489431 seconds)
    (265/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.076705987 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.802754605 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.147588295 seconds)
    (268/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.824728153 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.928840152 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.795342219 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.048232254 seconds)
    (272/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.283608537 seconds)
    (273/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.802200969 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.166858027 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.134444968 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.760568141 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.82758626 seconds)
    (278/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.797036409 seconds)
    (279/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.002341595 seconds)
    (280/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.118807169 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.825978894 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.201244083 seconds)
    (283/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.926744716 seconds)
    (284/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.796433764 seconds)
    (285/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.874887273 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.547560276 seconds)
    (287/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.061155745 seconds)
    (288/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.886345853 seconds)
    (289/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.994462005 seconds)
    (290/309) benchmarking ("sort", Int8, false)...
    done (took 4.702770819 seconds)
    (291/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.676256928 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.804788812 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.645119664 seconds)
    (294/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.10915519 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.907467046 seconds)
    (296/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.797307098 seconds)
    (297/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.517667414 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.036253997 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.01207098 seconds)
    (300/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.190293788 seconds)
    (301/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.889594629 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.840440343 seconds)
    (303/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.807647161 seconds)
    (304/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.927409067 seconds)
    (305/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.585005238 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.011905824 seconds)
    (307/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.895072625 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.142514607 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.806511262 seconds)
  done (took 981.515624425 seconds)
done (took 983.289223177 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.827060614 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.818761476 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.801797703 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.823261112 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.914598111 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.84737986 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.815708545 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.80678656 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.851947967 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.851742239 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.8003827 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.84663678 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.802732417 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.802325386 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.801958545 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.818191052 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.113942245 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.839183338 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.822027956 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.814861877 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.819966042 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.800630968 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.853175044 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.847866451 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.807267387 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.808125923 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.806200554 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.822398963 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.915304037 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.806468108 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.809333068 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.815818171 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.115875799 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.834548378 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.80214134 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.822079363 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.815072245 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.814870616 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.806997534 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.837251867 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.207459142 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.846260598 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.80513258 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.804344222 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.804096146 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.811368908 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.804156661 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.813319384 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.81912304 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.819422808 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.200736806 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.867051775 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.806595658 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.804902397 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.817357906 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.804898531 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.8099773 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.820551502 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.823740894 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.820473103 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.100585519 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.84737994 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.808111706 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.823137472 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.813639132 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.236220517 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.848660991 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.811778492 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.206174709 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.859997803 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.237001683 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.860156286 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.808448473 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.820543901 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.838488323 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.117587343 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.838973583 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.80535657 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.814822492 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.80421317 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.818940907 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.820526663 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.811879945 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.805957339 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.822198781 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.852072514 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.819838751 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.805983966 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.816920343 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.825851651 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.815399298 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.818569057 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.81026328 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.804938585 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.81850235 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.810770571 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.809590046 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.80975832 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.811343009 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.820388859 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.20554626 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.869441674 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.803902894 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.80409265 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.806899361 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.821284704 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.204934293 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.852580812 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.829657198 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.857759677 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.808403705 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.101519325 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.84253517 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.823871471 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.81984451 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.809977627 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.805442734 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.101756491 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.239200014 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.869161656 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.808086219 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.804732517 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.824144993 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.809816669 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.805230442 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.119883837 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.846772713 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.823135838 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.931320305 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.821522111 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.840558964 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.806339888 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.811250757 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.858233729 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.824546208 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.841260372 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.811359202 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.823840697 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.826491042 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.805786474 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.820440054 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.822642783 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.808582387 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.816535433 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.806365722 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.858794639 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.822933602 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.822906939 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.829758412 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.931465447 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.806184445 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.103525978 seconds)
done (took 284.438018063 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.887932612 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.806277755 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.898439351 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.805872487 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.897078627 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.880646565 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.808821112 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.806444085 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.805423426 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.28914669 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.805706675 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.812754467 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.80572069 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.806565159 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.877866463 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.807008812 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.806179834 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.236521796 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.808263431 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.886536886 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.806482799 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.806522084 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.806969363 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.298880113 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.8084024 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.807354242 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.88699993 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.807246191 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.258729949 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.807011668 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.807768211 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.258855222 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.88689912 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.834764167 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.814472829 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.811550389 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.897755945 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.819018754 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.874295767 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.876020339 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.902868482 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.840838876 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.806035119 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.807044062 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.812256377 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.809529335 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.807481013 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.840305408 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.806373185 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.815768821 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.237791191 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.814473364 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.813849874 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.809629386 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.808762746 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.839181162 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.80983198 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.809819446 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.891124228 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.809861099 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.876870401 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.301206446 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.29218156 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.80871937 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.807772744 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.810658705 seconds)
  done (took 181.048205397 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.873952149 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.88624738 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.874377984 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.814962262 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.858122317 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.876662991 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.813800106 seconds)
  done (took 14.741716089 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.815646594 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.809330438 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.859302137 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.858988604 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.809315411 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.965794148 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.81007791 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.821414119 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.815086383 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.836550206 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.81051774 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.809991634 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.817075685 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.808154141 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.859455584 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.821313386 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.925240091 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.813625509 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.811384154 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.960417249 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.815008574 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.817460619 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.835723838 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.821570234 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.81071767 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.818655119 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.375885914 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.810471586 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.811859307 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.81059307 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.811554629 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.852406203 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.810270568 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.811945649 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.810976368 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.924985492 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.811613169 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.811440695 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.811821473 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.810923918 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.811273652 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.811559915 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.810347861 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.811289697 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.810951598 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.834571466 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.811884697 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.811435631 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.810773968 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.81192487 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.836963757 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.811460958 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.812769143 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.817261574 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.853859644 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.816410092 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.812277968 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.812210581 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.812058615 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.811895602 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.961156697 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.862542295 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.811892382 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.863522574 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.812329532 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.812672132 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.811942378 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.812120746 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.902964782 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.812812192 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.861703733 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.813931392 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.970785884 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.835423178 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.814490587 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.816998526 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.816418098 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.813494413 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.811627576 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.820267645 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.813091944 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.815395865 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.821132487 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.818157305 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.813044077 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.925896293 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.954728534 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.814604071 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.814680824 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.821245969 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.813332541 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.857086116 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.812988333 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.815036735 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.870168616 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.928880258 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.840861597 seconds)
  done (took 200.104562326 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.821812744 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.821948646 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.815684558 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.829433486 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.815029923 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.814719535 seconds)
  done (took 12.666577978 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.818555518 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.821115782 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.814944814 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.814487483 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.815629983 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.815139901 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.814941682 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.817227559 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.818453044 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.814195481 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.815881574 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.816148322 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.814835689 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.814908734 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.815020411 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.815654339 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.814180152 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.815219067 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.814414509 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.815182755 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.067195633 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.816462987 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.816591878 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.818927665 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.821586957 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.814686401 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.829390319 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.815363538 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.815862264 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.823825555 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.820559102 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.816804501 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.819135475 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.823049311 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.821017187 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.820788272 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.820859193 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.817910196 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.817617881 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.818765034 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.817683846 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.816769636 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.816862511 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.816241079 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.820259842 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.823544118 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.820360817 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.829466064 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.817595052 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.817100121 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.81699494 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.815867463 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.816550432 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.81711126 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.820836026 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.823215461 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.821479696 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.816152808 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.817113754 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.820660069 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.819875886 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.81763402 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.818962833 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.821471315 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.821789685 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.81902415 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.82133469 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.820979204 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.817615029 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.817245688 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.818817947 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.816945591 seconds)
  done (took 133.918813745 seconds)
done (took 544.239562485 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.071922387 seconds)
  done (took 8.82319117 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.023708371 seconds)
  done (took 8.836986959 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.407094126 seconds)
  done (took 10.164298211 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.828525278 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.854834896 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.831481713 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.825332758 seconds)
  done (took 29.119466145 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.01103631 seconds)
  done (took 8.762727699 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.840395848 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.818378816 seconds)
  done (took 15.478235612 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.966003548 seconds)
  done (took 8.718189482 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.147895187 seconds)
  done (took 8.907788323 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.835921434 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.835581803 seconds)
  done (took 15.445847347 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.820146307 seconds)
  done (took 8.572500678 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.954367582 seconds)
  done (took 9.80714209 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.84132952 seconds)
  done (took 8.663602839 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.832534115 seconds)
  done (took 8.584741448 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.930937734 seconds)
  done (took 8.68241055 seconds)
done (took 160.317885475 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.820314879 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.815063451 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.817418635 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.817637551 seconds)
  done (took 29.022209014 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.850440793 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.850869319 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.853837735 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.862605634 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.854459715 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.852569481 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.843891302 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.84495767 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.862737812 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.853565732 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.853047259 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.853910687 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.855287793 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.845020165 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.853821417 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.853376665 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.862257127 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.854009245 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.84587968 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.854683927 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.819494348 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.863299385 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.854467658 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.820998632 seconds)
  done (took 46.172602921 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.010193651 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.887951178 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.973054675 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.871795075 seconds)
  done (took 9.496474981 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.870292209 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.872180715 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.882110181 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.922372245 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.945361572 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.881461389 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.844909339 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.840690673 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.826660726 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.872674506 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.947027602 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.86794755 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.95580854 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.819361419 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.006944876 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.819711684 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.819490134 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.871658275 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.922417477 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.93547689 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.820583952 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.872423972 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.874918327 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.867951733 seconds)
  done (took 46.914564753 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.821688114 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.828908644 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.827754429 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.821783951 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.821990803 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.82222007 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.82875444 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.822880794 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.843540836 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.823874807 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.821235354 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.824153934 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.828717659 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.822229419 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.821978137 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.835143244 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.835622714 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.822581649 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.826075553 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.82923374 seconds)
  done (took 38.285685408 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.820589708 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.666380831 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.165080582 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.071656209 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.821174882 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.820144461 seconds)
  done (took 31.121180868 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.834780197 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.8279518 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.821678427 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.879288074 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.96456357 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.829806227 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.822764573 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.832930273 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.871833605 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.887581319 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.8448418 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.851575965 seconds)
  done (took 24.025406959 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.821694153 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.824048659 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.823425835 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.834805881 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.832691168 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.830142034 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.82985137 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.821368652 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.835184918 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.840848866 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.830195478 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.8337437 seconds)
  done (took 43.718299304 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899146193 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.69536501 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259882542 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280322596 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.345673876 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024834768 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.820610171 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.907282459 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.822720876 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092677369 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.159837322 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025846169 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.06639808 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.613639501 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.826858638 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.296633764 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111400622 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028560008 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849876701 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.489291799 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932517151 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367028737 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.450589648 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.93478805 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.027056389 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.946433206 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.085230185 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.772685185 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871299707 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82660464 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82693711 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.823386164 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094585108 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944108611 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893856266 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827957349 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.234241049 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.52673681 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.829409711 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.444249545 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.317107877 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.943220052 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82666573 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822927864 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.750315533 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370990494 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913446936 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.826155504 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.5235502 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.824846731 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.828514916 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900912528 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.82644367 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.631754146 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506810603 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.091271705 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.824331766 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826230174 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.373817343 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828247491 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.472475071 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.758427495 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.908655922 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.450330532 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281909174 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.980088609 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.825236891 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.825667205 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751904995 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.460502654 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939733824 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.961024626 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.841845575 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.464580788 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1146002 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.222214855 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.879257599 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091033734 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.641875719 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.757479354 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043297279 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.773705432 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752501714 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.678447537 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.751534733 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032271543 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857582789 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.423983819 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857180235 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.907842959 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.831350138 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840230203 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827947132 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.039459066 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.722323273 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825858075 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.115252814 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.085822573 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842513448 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.910796885 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.753189567 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.827504985 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070958345 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.029225556 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.093956923 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.301746316 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914944909 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793567884 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.840457618 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.779575407 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.83607824 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.094145626 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889185882 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837439996 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947748737 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.773746504 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065587706 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833782256 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.92709439 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.181154314 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066273726 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.157839131 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.07021393 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88903978 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.833100125 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.827638401 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.514722871 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.438300575 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.043820296 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.842632311 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355134009 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.835414226 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.827875653 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76387005 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.449541975 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.187101769 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.906738513 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.041867511 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.818204271 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10479911 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754561991 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.965750569 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.810647695 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.04297317 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.471146451 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.916869364 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077200036 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.106147554 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.093591165 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837224426 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842162424 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921309299 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846147116 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.292024883 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.074787912 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.830818277 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.830875093 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.521181566 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.887103051 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830679912 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.832187049 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.355599312 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102517142 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.857525955 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.835698165 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.705668181 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.841646881 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892914237 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836033913 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.833872423 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.347110256 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.335648381 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.837252556 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.474884025 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046672134 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.834652502 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.523458217 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01598643 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.843439608 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099482894 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899869688 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.761137158 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.531349959 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.532002984 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833459713 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.761451796 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.83281644 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83465879 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836990221 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.020192527 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.106071912 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891152811 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.464992735 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.944385303 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838421951 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.835831709 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833293478 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.348933101 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.852969373 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351401557 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.949322376 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96220747 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.844504921 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.761914369 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.835087363 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836019817 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.833726542 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.781476822 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882532602 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.470578813 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040772599 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083012997 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.239547216 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842862911 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.466119725 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.954979445 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.850905879 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.125778692 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376354368 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.936397063 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904989733 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.839467374 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.469542141 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.570537857 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.388359406 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134445336 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151881911 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189374813 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.234585677 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.158714931 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.919608207 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062030355 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.356224074 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.89139803 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.924676874 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77173683 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849472755 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.487394919 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190009741 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847310091 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052061379 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128672283 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.198996848 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970090106 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03837315 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865927052 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.645847053 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864160307 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.371662214 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852344523 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.238143773 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043620804 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922810251 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.161698913 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.919053684 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.835466611 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171262589 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873462577 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.538025201 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.187928515 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.252326081 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.310947105 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065067804 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.841626145 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.275577032 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187034974 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.036283068 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.958261477 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764189155 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.841458146 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.841349987 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.849147262 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.808103709 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.681517121 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.07975605 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843470585 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062263065 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.96919345 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202952816 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.747231749 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.839881102 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836392518 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078361311 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.595500913 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994836456 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.161593018 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.409692564 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843387631 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.763976758 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763919768 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.538866136 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.846807579 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.8056833 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043822219 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.937763238 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.517171706 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.231418358 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149700065 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.080852093 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.849236994 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.108199518 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115652913 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.327994009 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859869902 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.935119926 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.137432306 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.530497823 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.053392844 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.065342672 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.395137144 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.055721465 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.284515655 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.806398207 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.838711245 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045230527 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.053504852 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.203327812 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016725216 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.54922649 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.84923762 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20240213 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902197104 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.198429663 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.027299058 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.933929541 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846499264 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919299035 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845368952 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.847065307 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.847852238 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851583325 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.210223699 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.958624992 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.851314033 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915974307 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863681072 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.410406755 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.848720801 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110520473 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19821029 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174244883 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90570016 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.84084686 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84824952 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767784137 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969717047 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.279808726 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112246959 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.961006559 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.973375403 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86129312 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.140579493 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.095300124 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151598844 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112731895 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.723332105 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478738095 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.961791535 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.057758548 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846938691 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.044178482 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050996069 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142382801 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407694084 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.982163953 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.034663595 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113913748 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.201279247 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.842485475 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420917237 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.849557383 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.234111875 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.872253301 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.208434219 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101844624 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846967866 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964663148 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.845577008 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.041263843 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.293548217 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.480295417 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.192872572 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.689195747 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.846962193 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115978634 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.174538863 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150447354 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92058219 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848379699 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.541487263 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975773435 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.719091626 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.072083536 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.843850754 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046571091 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.554031348 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.846591042 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115380239 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151534583 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.843891729 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.751566902 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874263854 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.8462284 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.057197033 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05111357 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086986509 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847334726 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.851882065 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.650262063 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119965063 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908305116 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771396967 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.846605523 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890158519 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.072401019 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863052017 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.359679998 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.544055586 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124924111 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.746369156 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862598076 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.261167785 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.222168957 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1782986 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.368603577 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056304007 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.393120326 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.701572355 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222843381 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.846608552 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.25483273 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225038052 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.846260596 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.347359604 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957259974 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.11393215 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173538621 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.85592041 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.575309944 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.878648386 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060384767 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203638924 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777031815 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.850945533 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.894021922 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.847215218 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.856333186 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856512738 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.784864054 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29790381 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.686828889 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.4036866 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.849943139 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.856739721 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.183114565 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387355911 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954581924 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863251709 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848597703 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.547125652 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.134294075 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.089154449 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.353153467 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.940899844 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.848591822 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847656513 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.767285988 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.02842162 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.035539689 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127951809 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.203597509 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.957861411 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84920797 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.054544012 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050579335 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.238519032 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9830281 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.991374183 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962963995 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.787315804 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.552446047 seconds)
  done (took 1644.577352143 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.879677749 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.861712835 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.866809905 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.939867395 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.924931213 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.955315764 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.951106649 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.885111047 seconds)
  done (took 57.046238097 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.848233998 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.009321253 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.851224557 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.847854986 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.857473322 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.849430851 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.052695743 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.860838727 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.852224394 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.854378503 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.849214321 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.849070885 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.12543673 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.869357473 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.848869374 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.851114107 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.852399187 seconds)
  done (took 73.994181701 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.852758155 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.094281857 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.885203338 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.849903598 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.830045556 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.86939703 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.917078648 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.866070504 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.85149654 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.099769847 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.146666266 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.864001855 seconds)
  done (took 89.910302637 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.861631101 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.851839475 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.851779872 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.851410775 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.851678263 seconds)
  done (took 11.059129925 seconds)
done (took 2147.11462329 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.187080153 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.044618164 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.097418521 seconds)
  done (took 5.926635865 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.992063979 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.043483868 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.155988389 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.17593186 seconds)
  done (took 10.155597717 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.158277286 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.215465552 seconds)
  done (took 6.161111013 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.170605958 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.881931502 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.233148752 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.853236732 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.853303499 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.85374667 seconds)
  done (took 22.349027185 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.85175524 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.851518511 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.852399658 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.851417836 seconds)
  done (took 9.192080825 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.850370643 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.548159874 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.851935492 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.862285518 seconds)
  done (took 20.898000019 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.998444597 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.967747029 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.993678516 seconds)
  done (took 7.744483412 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.992882005 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.080050248 seconds)
  done (took 6.85850122 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.00815417 seconds)
  done (took 3.793517182 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.87935462 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.121200552 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.376015232 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.958901694 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.472984324 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.102812417 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.196278182 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.080849618 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.290252747 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.328219604 seconds)
  done (took 25.592430554 seconds)
done (took 133.927185477 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.432965162 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.881730903 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.060568333 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.224301017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.095234461 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.059635443 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.075460386 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.216000451 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.920186223 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.912722786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.257602268 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.093117678 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.02047155 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.873732425 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.028012454 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.874988199 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.087614609 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.258590769 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.010400435 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.169568035 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.089099152 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.86069722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.056604247 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.878620243 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.092837533 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.012301212 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.405610248 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.880206659 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.034955482 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.423306241 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.017278228 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.285746463 seconds)
  done (took 168.378908737 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.856996231 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.85700202 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.856903359 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.856570542 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.335237418 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.859179689 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.856339649 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.857013222 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.299807184 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.296873168 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.858157504 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.321375141 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.857765926 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.856714267 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.857361792 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.857308399 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.481115194 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.857565874 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.85795738 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.856920803 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.85679615 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.152064186 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.858249399 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.165462559 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.481483977 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.857891761 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.857630671 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.856970693 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.85762488 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.856241815 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.857758027 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.85668286 seconds)
  done (took 208.900193058 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.849827193 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.860074467 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.85769018 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.858366696 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.859526111 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.858418909 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.857720664 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.857872098 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.628690166 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.615418569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.85848264 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.860089396 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.859161368 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.858756189 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.85771241 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.857410554 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.858093257 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.848730536 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.859457009 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.86005993 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.86288337 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.47366861 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.863144155 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.483591928 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.863394079 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.863683105 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.862864507 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.863478041 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.862596516 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.863884877 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.863581837 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.863540182 seconds)
  done (took 220.062696192 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.102553272 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.862738653 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.864880626 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.852358502 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.863984279 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.863154148 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.838329521 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.113311265 seconds)
  done (took 19.159647264 seconds)
done (took 618.297461189 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.225061332 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.066410576 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.042228969 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.889133886 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.138993213 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.933963568 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.885694197 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.952387581 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.702553839 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.964612375 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.518000145 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.907534709 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.616723214 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.912755529 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.008048894 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.944356725 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.474371493 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.575555699 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.063945437 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.968860618 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.064694786 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.783313354 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.969133369 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.734453597 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.646562604 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.832905823 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.903684678 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.479890803 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.898734902 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.041698863 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.56267907 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.138925823 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.902371519 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.883068832 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.940924679 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.921462802 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.080673984 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.899404801 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.011049198 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.580610811 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.968533915 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.61969656 seconds)
  done (took 102.453359869 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.876365871 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.870636511 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.871185188 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.871017546 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.879951118 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.870643938 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.871440498 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.871254546 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.872011316 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.871723275 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.871396268 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.880764222 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.871703797 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.880700578 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.871618282 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.87146123 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.871921705 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.880837728 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.87159152 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.872427494 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.871847472 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.872041118 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.866650011 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.871922629 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.872209694 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.872488242 seconds)
  done (took 50.509915816 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.866107394 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.019558816 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.114704731 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.887134181 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.867852737 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.871042306 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.885965992 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.872624114 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.869867503 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.870136435 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.958174643 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.874411347 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.886598618 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.11594991 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.884317158 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.867559262 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.868011869 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.86946301 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.027718839 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.88447742 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.888329962 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.874910095 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.887210047 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.882211442 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.870440978 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.868515993 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.872201489 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.341499942 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.877896792 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.960686131 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.929201232 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.895793354 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.311221335 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.123205661 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.925244277 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.879294228 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.868098576 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.963525974 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.874626142 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.868846134 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.886619829 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.874225647 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.111445963 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.397691372 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.883448843 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.869160301 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.350071327 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.974463928 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.909851839 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.882078658 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.117058544 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.886550169 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.869862402 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.870032895 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.905473259 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.87827558 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.86876387 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.232330005 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.882520621 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.887854302 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.875277528 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.870938807 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.032257184 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.878418495 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.029061988 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.879561371 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.877015752 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.871726181 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.116102454 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.88685323 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.403131543 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.884612924 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.870221442 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.960987116 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.033405856 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.375262541 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.88284643 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.033568197 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.329847581 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.894465464 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.878303644 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.331415834 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.897715805 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.878124113 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.871804119 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.871560316 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.87055129 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.913493676 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.886742904 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.325606558 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.410016151 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.250389081 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.89827214 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.886267073 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.871912892 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.233495715 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.879533637 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.87150933 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.109354573 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.414494757 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.88642688 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.879056534 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.384138782 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.886487091 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.890700658 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.880126664 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.121875969 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.888803518 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.913869524 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.87210743 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.87818695 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.87528951 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.89105938 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.881314217 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.873622679 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.381063419 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.983349312 seconds)
  done (took 232.569615514 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.874460502 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.874964988 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.870670475 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.876364509 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.871161258 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.872307759 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.871606788 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.871376475 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.873044028 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.871204141 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.871030236 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.872967984 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.871895052 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.875375716 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.88061266 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.873742164 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.476462424 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.871685308 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.870506768 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.871091556 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.513018701 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.879884423 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.872682073 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.871328569 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.872516191 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.873390907 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.873280626 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.875273687 seconds)
  done (took 167.503411782 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.873369296 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.984612111 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.891334934 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.902864651 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.880750551 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.873804059 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.970745371 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.892684619 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.878438297 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.874002461 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.874586622 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.933858351 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.887391708 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.970913551 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.906340537 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.979588614 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.979513528 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.882175257 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.874934405 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.874003204 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.904644865 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.883641503 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.933990438 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.000875019 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.893956309 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.987134911 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.895078111 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.875039929 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.875042613 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.987171949 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.893243958 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.934725819 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.906015156 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.893057367 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.992643092 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.993172058 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.980403566 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.9800536 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.882187497 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.8755205 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.875096123 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.876549633 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.987071132 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.893264749 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.876929604 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.991548761 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.895349473 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.876561928 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.875054968 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.875810167 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.889583376 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.893402465 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.939624485 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.00552139 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.912032313 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.899570949 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.97346115 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.007450512 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.876815793 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.973752602 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.887393751 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.989709558 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.896478223 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.878232744 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.878170428 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.88010243 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.905504132 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.982782462 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.98306072 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.884800219 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.97434268 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.912550721 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.884691623 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.877936988 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.878145069 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.990167399 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.994015705 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.914182513 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.91267518 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.907481424 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.88699103 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.877033569 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.879422929 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.893978064 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.882430369 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.990950962 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.994703654 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.887000673 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.878039794 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.878100425 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.878673925 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.902377975 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.998094711 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.913686589 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.984051204 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.947084234 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.953482943 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.893576927 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.891893565 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.882668165 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.93972714 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.895444784 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.890227214 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.179401553 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.938229088 seconds)
  done (took 203.507792373 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.247330155 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.929090081 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.934195696 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.183606752 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.239539605 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.76819244 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.925191259 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.926348788 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.948712497 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.110270551 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.002128198 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.944657566 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.913969128 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.900008935 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.925842566 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.949154402 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.931883942 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.258718491 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.150823104 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.07939139 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.915784812 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.223984968 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.247318207 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.518477605 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.977886615 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.32493107 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.482309788 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.055787079 seconds)
  done (took 61.834195076 seconds)
done (took 820.174104154 seconds)
SAVING RESULT...
DONE!
