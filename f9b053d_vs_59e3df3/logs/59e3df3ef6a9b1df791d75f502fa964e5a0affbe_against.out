cset: moving following pidspec: 29896
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.315277823 seconds)
loading group "string"... done (took 0.595107882 seconds)
loading group "linalg"... done (took 7.232766859 seconds)
loading group "parallel"... done (took 0.168440867 seconds)
loading group "find"... done (took 1.141887395 seconds)
loading group "tuple"... done (took 2.014180275 seconds)
loading group "dates"... done (took 1.296115542 seconds)
loading group "micro"... done (took 0.240579204 seconds)
loading group "io"... done (took 0.979384892 seconds)
loading group "scalar"... done (took 39.134257033 seconds)
loading group "sparse"... done (took 12.537335346 seconds)
loading group "broadcast"... done (took 0.963861792 seconds)
loading group "union"... done (took 13.12853365 seconds)
loading group "simd"... done (took 4.408244105 seconds)
loading group "random"... done (took 8.978919025 seconds)
loading group "problem"... done (took 1.988925079 seconds)
loading group "array"... done (took 21.131516432 seconds)
loading group "misc"... done (took 1.915704678 seconds)
loading group "sort"... done (took 3.208474794 seconds)
loading group "collection"... done (took 17.93994493 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.543122276 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143771372 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119570899 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.142221805 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18695771 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134194091 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.147847076 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085878094 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.060578966 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.168987573 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141380376 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.48476874 seconds)
done (took 5.124741292 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203032657 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088838874 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097757649 seconds)
  done (took 0.893382025 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06713382 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128457783 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081405967 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069097157 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067662479 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082269485 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067646529 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067139624 seconds)
  done (took 1.279587272 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07523869 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069218153 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.0856489 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069525735 seconds)
  done (took 1.015501768 seconds)
done (took 4.186037969 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.909420374 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.23457264 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188453798 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46131431 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.14819144 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.186469811 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668063933 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.311432432 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209437043 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100595241 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103701473 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.376379823 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106207079 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666704079 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077571538 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.108109157 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160618485 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.409269299 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082421191 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084049284 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103390693 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141110847 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103329852 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080092138 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169930314 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068611379 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147114859 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094586967 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068250823 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.241392234 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188690586 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.673896772 seconds)
  done (took 10.428273676 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.1015028 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.119333473 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070058153 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141376589 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102042948 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085452684 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07083824 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08252912 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090602763 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.156867425 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112793044 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104963103 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081554106 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06897815 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100215701 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210855847 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105470733 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084959172 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085831951 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074867439 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12118632 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082155791 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093436925 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078005325 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.150466991 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.1939191 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11414026 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112422574 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070573445 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082341625 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132902924 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144322589 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068219239 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083687002 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.139910976 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112565091 seconds)
  done (took 4.559360756 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.047945627 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.164077056 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09282045 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151158692 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084078397 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109614213 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082042803 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100133313 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.250273468 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.164255115 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.113246068 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.477725899 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127395095 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101377364 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06945055 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067672663 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.084594059 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.514260046 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.144209962 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101382855 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102911224 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088628604 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069403088 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.357060015 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067063334 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065635975 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084148764 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058743231 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143825421 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067377539 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.21883929 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088504337 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086086427 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100755049 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192818992 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09510849 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121989264 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065551131 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080629687 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17029272 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06729569 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073611458 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084632687 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08849251 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121809142 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118548363 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068115682 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081826002 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.178383413 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066342772 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098067673 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.874697925 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165967613 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079353378 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066886254 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292565647 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084506547 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085768165 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064414717 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082831615 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.242292069 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.16523447 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068952767 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067732583 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084331876 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074180729 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.370036499 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08451822 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.620545164 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070562972 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079116332 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087238514 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068569438 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090361131 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074329084 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102384237 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068120161 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068517334 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08424063 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067233084 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084923166 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086228333 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204757535 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083456831 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06807762 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064559024 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103791628 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109869935 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071793115 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065970218 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117468009 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064618817 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085200059 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068212423 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118497717 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068194202 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.099794218 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08328095 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11389825 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083591269 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.120346244 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067765378 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110685931 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076243815 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113167419 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095063566 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067183413 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152427825 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065061351 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081308311 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066198009 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064197931 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084144712 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067809672 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097111582 seconds)
  done (took 20.86684386 seconds)
done (took 37.619006289 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.289911375 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.090642906 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.090061611 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.0741564 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090427142 seconds)
  done (took 1.428958975 seconds)
done (took 2.194225263 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119923452 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115747323 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062851614 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111808711 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062733636 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115854845 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114034205 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080468179 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117300774 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063762935 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112072063 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063539464 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062997006 seconds)
  done (took 1.995763975 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085696282 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085705312 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086585447 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081371516 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077636297 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08221339 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079405076 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103610148 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079224977 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086654943 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06271247 seconds)
  done (took 1.67033116 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08407201 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.0851849 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087288254 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081753099 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079542092 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082394102 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081001158 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105204655 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081346885 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090566971 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064875438 seconds)
  done (took 1.684640031 seconds)
done (took 6.105679055 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079484064 seconds)
  done (took 0.834240519 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.699523276 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.484560636 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082215039 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132553875 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.220604829 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.152088704 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.436513883 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.108020306 seconds)
  done (took 10.247304191 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.090243269 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08472959 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081456949 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084809271 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071223211 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084999323 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07088093 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06765871 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083542653 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06841821 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085547023 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070986405 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083603847 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071297674 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071446349 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085604089 seconds)
  done (took 2.082840971 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093239163 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091638718 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089808041 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07547035 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088532369 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072525982 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091339745 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074460635 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086036207 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071842983 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090148152 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073453487 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087844231 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065349823 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089339419 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076148786 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086102518 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074756249 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090299793 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075884161 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090226258 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064589012 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087404863 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074074064 seconds)
  done (took 2.827727218 seconds)
done (took 16.752764439 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131558667 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075398781 seconds)
  done (took 0.971044246 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082580083 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09692053 seconds)
  done (took 0.948413116 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082504382 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080175936 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089111325 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092165826 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065925252 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080560372 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101120455 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065787535 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080448566 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066178505 seconds)
  done (took 1.573000594 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070483985 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.091832302 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070106902 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096190388 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073236264 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079540695 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073178048 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082992193 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07808768 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078178823 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070500683 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097646698 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071022879 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099264802 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072966609 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082905783 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08595805 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068344803 seconds)
  done (took 2.214252428 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06677879 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067191195 seconds)
  done (took 0.90713708 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068456325 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063197038 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080921293 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06695965 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078596678 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063241778 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078507486 seconds)
  done (took 1.272692647 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400898741 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.107869428 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.241515781 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087296163 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102415794 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261365792 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082324835 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07099198 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.08722976 seconds)
  done (took 2.251937618 seconds)
done (took 10.908664097 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080442999 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085246994 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109400382 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415349084 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.104937942 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06585328 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131564031 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.217085274 seconds)
done (took 1.98403334 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125707067 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.604940763 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.39673067 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210490329 seconds)
  done (took 1.989651176 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.36922233 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091049021 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074382857 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06658965 seconds)
  done (took 1.381910629 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067266823 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070992527 seconds)
  done (took 0.917519557 seconds)
done (took 5.192176582 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068143368 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.102016643 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065731584 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06315687 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082931093 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062898507 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062984352 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082519803 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065851147 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065389249 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.080884265 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068326932 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082046442 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063234387 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063317081 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07848337 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065538469 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063474318 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078964813 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064987824 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063672288 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080629542 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063740609 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062875665 seconds)
  done (took 2.518630809 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085664579 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082087639 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071231235 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087342188 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069877339 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087407167 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071255181 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066480616 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086761857 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068100921 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0873166 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06978073 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.082718165 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070734573 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083466666 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070670342 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087014211 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066084629 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068204391 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085565573 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071180934 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081879934 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070848022 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087004063 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070320375 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085848843 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068851832 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082333096 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071294448 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085350565 seconds)
  done (took 3.1058761 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072493504 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064113982 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079687538 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069869056 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063010056 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080225677 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063426907 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080037163 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063821228 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063502328 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080335221 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063378218 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06333172 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079731104 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064381493 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082362502 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079591351 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064599133 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079210981 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064352459 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066003665 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078848282 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063592468 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079327254 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063482452 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063446118 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078926435 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062848803 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064298967 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079135639 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066705843 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066755892 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.078908111 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070123872 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082880389 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063520954 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067691126 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079156245 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064829197 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063078887 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078492686 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064073871 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063715926 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085726954 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064027474 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08144976 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063067407 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06440362 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079647956 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066466766 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079610423 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063166457 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065639776 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079995681 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067704478 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063167346 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079730079 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063324383 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080251762 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063851736 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063027098 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07884522 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065644259 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06442233 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.093890553 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069997266 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078654267 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065480435 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064268896 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081514065 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065706002 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076773762 seconds)
  done (took 5.892695511 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116522223 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090417956 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081676831 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065375886 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078105247 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06354621 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06809956 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079583714 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06596953 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085276537 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063694573 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064901251 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081314972 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076794013 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080523726 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065845959 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085874238 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062373158 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063883317 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083777248 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065212693 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083415883 seconds)
  done (took 2.460603389 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.187284637 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0866287 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110063641 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089753282 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084436573 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073433863 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069607114 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085979895 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069991385 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083569432 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068861927 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085531587 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068576913 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084575814 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068279314 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084125699 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0698249 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084609758 seconds)
  done (took 2.34091407 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.0787401 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065773138 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104908597 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065826269 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082722456 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068756371 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087148356 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074904601 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084217883 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066684687 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09037653 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068357787 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084453969 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066618574 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068688739 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081767416 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068884036 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08138932 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074338025 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086591258 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071058405 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089923645 seconds)
  done (took 2.50048959 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081695782 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067612253 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099651526 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085093882 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062337846 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065017291 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087803385 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066871985 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087543264 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068077672 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065828997 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080500721 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070675141 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081481335 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07051861 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082131699 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068135382 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066341191 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08358241 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062433605 seconds)
  done (took 2.294493791 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087319459 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083169669 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067013167 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09146549 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067936673 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083199623 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075953612 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083381365 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067476554 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107627589 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067482 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084965158 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07496746 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087273051 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0679859 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090512897 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075861243 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091293157 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067697288 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083646887 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.217099216 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067554758 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091263766 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068066243 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083477375 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067288553 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067567851 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088152047 seconds)
  done (took 3.151363766 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067711078 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066253112 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.07981215 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06362668 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063772464 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080101735 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063568077 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063930772 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082829261 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06388577 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065952509 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081647745 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065854357 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081467751 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066129367 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065759564 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081810952 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063812819 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063560244 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079773016 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066302314 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065864415 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081534619 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064172009 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078789769 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06602396 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06365845 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079813252 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06555445 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064056399 seconds)
  done (took 2.899004817 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077258298 seconds)
    (2/2) benchmarking "in"...
    done (took 0.08991495 seconds)
  done (took 0.962321576 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065659499 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080371627 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079912454 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070403952 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087004936 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066589658 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090863024 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070308468 seconds)
  done (took 1.40318351 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08441392 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079209274 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086118323 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078053122 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093095094 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083944182 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154890214 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083533243 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073188096 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081305167 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080161041 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065876591 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08832185 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066654001 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088587596 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07260421 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064166597 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087493802 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069870945 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080596624 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068003534 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090575741 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068745611 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062242825 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084389338 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.07574634 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09368257 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067408182 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086009985 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073996174 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071362197 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.076820412 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066748591 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083276492 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064470598 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092436293 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08072381 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085903374 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074877785 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067452196 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092477431 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062080268 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086952291 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072889513 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092220133 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066695497 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066414634 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078232144 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064332451 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084714974 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061871791 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066906595 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078075671 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073159957 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085577268 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077335693 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067702721 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084637632 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06957586 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086180283 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073341078 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084534802 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069006627 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066358741 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092123865 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071479386 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09131063 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062511222 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060562432 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081049287 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077252408 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104924723 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072531293 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083399932 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068108038 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081154724 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070325011 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067403273 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088001842 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072590376 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082954004 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072249737 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090084691 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066579122 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069126694 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091469939 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064791243 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084768868 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064580243 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098500086 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065438648 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080639394 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064304414 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075928505 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08595685 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066432952 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08023765 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072716456 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061196414 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083300535 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06794748 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083210662 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075843436 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087886796 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072690009 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09082254 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074304819 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066808842 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086104792 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063209947 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084273983 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065868055 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073684357 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076997857 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069367711 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083631871 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067193812 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07467479 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080727619 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066508043 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089972039 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071900851 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081174028 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063442939 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069570596 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083174798 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069921666 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091248935 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065715094 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061908873 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081009241 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071528529 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085197957 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071786936 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090075605 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070872198 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062511537 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083786641 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072696253 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094033069 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069527633 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068668193 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091997358 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068575828 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084323151 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07449784 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087173497 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067273697 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073740534 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085603063 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063373739 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088431839 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071121366 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066306936 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088709669 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071563144 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087384329 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069504828 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066122342 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089869602 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068469578 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083794836 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066510062 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082384457 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078241544 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068179202 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079420626 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064154813 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090084119 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064773824 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065695719 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083659755 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069014273 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084422849 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064945664 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066004826 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08572946 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076461498 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087403652 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06847599 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088006619 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077609788 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082766451 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069092327 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066040004 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084048948 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067260515 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091488467 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072387002 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088345865 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068825282 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063097988 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088649233 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073353379 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082036947 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064319929 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065226624 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086331338 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071921439 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086541086 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.0675391 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081723271 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067401634 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070597273 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085149252 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066756692 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082785627 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071368888 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081656581 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073494439 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067947785 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094003368 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069670072 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079337112 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070030503 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081092855 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072382102 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062152956 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080811787 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066600128 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.08462366 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066040082 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06967073 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077506125 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073338494 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089943936 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066880206 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065908956 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083405483 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073586364 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084747054 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070461933 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069696321 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089945884 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076483094 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083399776 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070274442 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094110688 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066378321 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060590411 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089393187 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065145279 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084031654 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065993801 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065686357 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088383008 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076005737 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091995802 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061069498 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087244411 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066628388 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067346749 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081094995 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072720464 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088434208 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068961479 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074712927 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08633092 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069658356 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089089666 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068589714 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069009027 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086424158 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071015382 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08595504 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070972788 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067248318 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089344852 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067817507 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084021615 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071021614 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067973392 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086011485 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074914407 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085240648 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068685736 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070703267 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087442669 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068998522 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086070514 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068645379 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088250442 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069837771 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069162389 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088055609 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063703098 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075017208 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086896038 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0759231 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086875316 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065876676 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090163494 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070805898 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073285859 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087029906 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069228844 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086809261 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068413393 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087546731 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075273591 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066420733 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09572844 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076973743 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08664824 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071084129 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06794078 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087602886 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067539423 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086505613 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069250067 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068189207 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085881673 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073426619 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088351807 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069134954 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07013143 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086874967 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068380048 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086591794 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063210675 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067360618 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085330834 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068228884 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095635252 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069339071 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085114775 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067519162 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0691114 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085295118 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065471429 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093107669 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077542128 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086740958 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075783128 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06665678 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087671841 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079288019 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080111009 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066172719 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065061414 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084441582 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07602285 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08610367 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07805096 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.0853564 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06799406 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065830116 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086589162 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067454537 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061908426 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083534525 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072814086 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085023439 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068152191 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068412283 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089073246 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069635748 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09560728 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06804188 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086810697 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068605338 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065116466 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085455747 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068411809 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088049941 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069638407 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065814318 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083775077 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068831796 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068952778 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086628717 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068088025 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087322812 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07510749 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067134616 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089419838 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071366847 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083497157 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07154561 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085178091 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06839152 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067391858 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089258295 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072111559 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087062843 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076954763 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066952143 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087063182 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06905066 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083878387 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068720401 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067368761 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085624975 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068021575 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087235538 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076143068 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065693346 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089442596 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068248182 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086469118 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074923298 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08633393 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071572243 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093034863 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068952938 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070187138 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094146135 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072529173 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088845756 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070078786 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069251043 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091969431 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067178239 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092636372 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069256369 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086355814 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070399648 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066461239 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085534444 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06815158 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066750529 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092218397 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068596827 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086160041 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068032332 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065726986 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087629502 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072151838 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093162343 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071308356 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088756461 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063993851 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065583756 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087678629 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06667999 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08723745 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071637597 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07420903 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087881493 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068685746 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085058232 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077666749 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073872599 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091196054 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066331835 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089482716 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069236961 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088054628 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069233998 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068300178 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087770977 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07266292 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087267185 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068111639 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075001421 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089895732 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070302855 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087622123 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069310602 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068620709 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080982231 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069477997 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088036667 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073933317 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070064522 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086292206 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0792638 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084345014 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069252053 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088673063 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068271477 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072753539 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081385351 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070347481 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086831672 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06928771 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063463326 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085275511 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066542535 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087878694 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067834719 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063734778 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095981623 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078732733 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089406829 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06797332 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066551779 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081975133 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064646737 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085349698 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07040685 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069944206 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.0982823 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067510456 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08584478 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064510354 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068698308 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089082784 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072014683 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084150887 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06408503 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06710662 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090202044 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074456789 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085373533 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068868497 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071211909 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087936995 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06656004 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090006873 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065335495 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07126448 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100121786 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068655381 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086895846 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074424793 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093696383 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070000107 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081393301 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069290516 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071466054 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086487172 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069749755 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087442194 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083134793 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089650049 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067760911 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067095842 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088621415 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067504076 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094516398 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070014708 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06848486 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090686851 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06989639 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094495199 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071419226 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093854716 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071376598 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089151993 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067454649 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068741558 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084730156 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067355049 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069344033 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087422101 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072460006 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093861289 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066481537 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094939526 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076178233 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085278227 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06404898 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06528704 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084020032 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062189745 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084635652 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064867866 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064179346 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08381225 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065672478 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067388195 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090921304 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066913418 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085344069 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067555814 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06019006 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08655073 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068924555 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085440549 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06370826 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067002639 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086408881 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071668115 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087740698 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064530165 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067815278 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086411354 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067987808 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079578765 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073044323 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06513398 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086952263 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066682972 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08475164 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067662597 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068956823 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089155907 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067125563 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086646949 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07557902 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086803381 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064784007 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06386115 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089070694 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065188797 seconds)
  done (took 46.560044661 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108775646 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08311534 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062987109 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080794927 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074321183 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08173941 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062539193 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063358313 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08191424 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0663266 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081876379 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063740617 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091472221 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088472827 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095141614 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067334041 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082506925 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064935717 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081943456 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065237438 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090753241 seconds)
  done (took 2.484114011 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076460864 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090960617 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075201544 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095699695 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069037762 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090324289 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072707341 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090240358 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095703555 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068465931 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094984 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071889892 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.08662735 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068837512 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086574664 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072559364 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096476946 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069445314 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091082298 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075855612 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091134029 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075751532 seconds)
  done (took 2.646359336 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069222521 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067499396 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088100079 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063734026 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067000404 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082316489 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072886951 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083874097 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071408165 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066681586 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085148451 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.076217731 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087827048 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063652954 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06786953 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084085409 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132770351 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072336219 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067450102 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088277089 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063304123 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08852985 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063898022 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063587898 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085560269 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071977564 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087687645 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066350811 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06719656 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085325015 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068511649 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083586914 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069236971 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067744406 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085020556 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067282218 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067181045 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085863467 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063999845 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083525117 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06857421 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063797771 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086289847 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069689641 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065181692 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084565789 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069992 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085253968 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063141173 seconds)
  done (took 4.545883724 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085894915 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128008501 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08665514 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089905674 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.100438778 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09105392 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070532271 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109498648 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064198183 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083711643 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08268937 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103343021 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084602508 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07120605 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09018413 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06636246 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065991439 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083305741 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069170829 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083968371 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070185366 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09033568 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099203506 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079161164 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087440426 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065589165 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083916224 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071079769 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096941668 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071609537 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.088506406 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071591457 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.099767441 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070374435 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084129342 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.0679359 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.101107585 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084235452 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068370997 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062904173 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086179461 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070913766 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090628695 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082837386 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08473144 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071183358 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084148667 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063674833 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097548716 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068474463 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092790476 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.098815306 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070457131 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08415648 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070714732 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.098498106 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066711887 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081861976 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069037799 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.095878215 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064017929 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087168598 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080199169 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085634042 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073385839 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098943898 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070971284 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089058594 seconds)
  done (took 6.574886206 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077708228 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092954733 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081840215 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100350585 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090761675 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072756412 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090984425 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074237636 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090314042 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077610242 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090842759 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111305646 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068654316 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092921032 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073226851 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091467862 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072328575 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091699836 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072390267 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091546832 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.091264495 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081402777 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091576566 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.099116091 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103804867 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087950008 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073269699 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092325202 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081662913 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093423633 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102056892 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073259408 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090879191 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099493604 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085079918 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090413492 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066620679 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090525338 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073072396 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090127252 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068253784 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098847926 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071968038 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.085288876 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072948553 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091110997 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09841603 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084101875 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094258431 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095355634 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073255112 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098465713 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072268222 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091538643 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098847648 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106261673 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098651871 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09870737 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073061083 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098599838 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09840553 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.106835786 seconds)
  done (took 6.292691402 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089378558 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094550058 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096447333 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062643723 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065905142 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090931881 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065045094 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083873491 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075636799 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092555878 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077149726 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088466623 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073637483 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095575523 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088091627 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074093879 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087871332 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070640361 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092369481 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070196123 seconds)
  done (took 2.488779648 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076553836 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104720281 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068083203 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072037113 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08829353 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071876253 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.086940699 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069889663 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085268247 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069230236 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094218439 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076290441 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085215591 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072187012 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094007378 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072641636 seconds)
  done (took 2.145341887 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080387067 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097074888 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081982957 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08672 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064602647 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082221658 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06578822 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062050437 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083044716 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080347928 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085750468 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069590778 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085214676 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064883491 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062451347 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087512526 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062558139 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082149966 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066576251 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.099672486 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077073179 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083663842 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067681787 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067525311 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086906127 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070819883 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085509971 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064148101 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084153868 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067078608 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086957188 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074283609 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083397751 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065953365 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065903638 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084439978 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.0676055 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086789959 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07101006 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067430903 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085730497 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068079233 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08731114 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069065467 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082959243 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068717927 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064144042 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092929183 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066738184 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087467244 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068467205 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088577532 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069886994 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078077935 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091690793 seconds)
  done (took 5.090890036 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082288596 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071536595 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084539904 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066741887 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090014615 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070114626 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070719144 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090490552 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069738293 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084864553 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070881713 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089493704 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070198486 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072112665 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089575252 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071210898 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083038109 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070398631 seconds)
  done (took 2.262319775 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074522321 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068156112 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095478346 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068692459 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087821481 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070949329 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063856712 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086615823 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06759976 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087546671 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06954706 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.07064107 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086495832 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071339907 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086915789 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069128262 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070403579 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086548613 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068312001 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083660074 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070934646 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066620001 seconds)
  done (took 2.538349069 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074433732 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094583882 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.165457283 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.10990795 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084189285 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100734348 seconds)
  done (took 1.495841352 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092633563 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100791649 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069280199 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109471991 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076642615 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089484719 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070833442 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08905876 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079500025 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102517282 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07026142 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098774652 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098017146 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079211145 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095601168 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076294633 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090312042 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069634023 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087912503 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107235699 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069850317 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097181861 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069359155 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08782163 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069382071 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094942376 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077030389 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100739573 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086972558 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077445615 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092439032 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06940692 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095200519 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100485869 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070559799 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096039208 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069245952 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105312162 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074159648 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095490956 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069251006 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093984926 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095850622 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073671437 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095234874 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068805915 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09313633 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067865631 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087844134 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111185434 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074424887 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095914444 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092655806 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077709264 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095248377 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111761285 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081747746 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095615018 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092819676 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081639376 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096172934 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072560627 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095934467 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099884796 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074365632 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095285656 seconds)
  done (took 6.610932487 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087431275 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107972008 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070965651 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103477538 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096413692 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069772748 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08712538 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068895758 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087149405 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068228791 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127628802 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068966839 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095597001 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094994594 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069849853 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08744433 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069305701 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094917309 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068681112 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112015987 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087592628 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076092525 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095552565 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094891293 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082464061 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093368187 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068395008 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087532797 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068424869 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086962691 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073428249 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088078121 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094707487 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068439023 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095533311 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069283758 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087312598 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074640347 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086731906 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075102869 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096011195 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104727637 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069358626 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088917396 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082628594 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087728718 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068352018 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087961429 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067986482 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086766032 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081583865 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101277043 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101221913 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095779829 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069642139 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087517485 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068876253 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087570131 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069010192 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092608067 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077063827 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08720091 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112003262 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068986049 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087298005 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077004724 seconds)
  done (took 6.464443388 seconds)
done (took 128.511137491 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208264414 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183235215 seconds)
  done (took 1.258849725 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071046307 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097525284 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099764682 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128901952 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086017654 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101072236 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11859632 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078939225 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066223874 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086217644 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067523056 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087104846 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131223083 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066825075 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085987888 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06906345 seconds)
  done (took 2.313147078 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105027021 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.195602046 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107756805 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066038092 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098612868 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078832582 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08530936 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076263733 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093247447 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066435677 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077621818 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095004053 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065160024 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094709566 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074673642 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097092808 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065263276 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097395221 seconds)
  done (took 2.517030353 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106409755 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141669397 seconds)
  done (took 1.123597259 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.198933017 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123749284 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200527168 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.408962072 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.203527832 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.276153079 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172035563 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.170241899 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156394127 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168089006 seconds)
  done (took 2.949437188 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101126002 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169405345 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308309192 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136496799 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.084981595 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114877188 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137220507 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089535933 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.100773216 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099027531 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080454599 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096283093 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098051476 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095542563 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074625532 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096565503 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120171801 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074182213 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095922664 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076006194 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117574211 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067238696 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074598895 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093410103 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077315252 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.09798913 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066139374 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085311887 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075724219 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093856744 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078340963 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113134882 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096604245 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.128814526 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081313627 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.129702262 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097250866 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071814197 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.093854774 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071985103 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097346235 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077048449 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102423736 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076062415 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085470385 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077181634 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084574332 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065943693 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098844295 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077010302 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097975697 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078538661 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129409914 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.096399539 seconds)
  done (took 6.178994038 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.745340934 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109289909 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092642608 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.803737762 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088831825 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104235842 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.705700044 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116306176 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209252514 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758735608 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088378768 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096879369 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.178741465 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.231986505 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.875914428 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.279620159 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.632847878 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104980028 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107413183 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131057891 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137731434 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174522429 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148499113 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.407215761 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074820019 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09163274 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135856784 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073686174 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158184897 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.083718843 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093021448 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154802737 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.222647973 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.153353088 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095497629 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069208228 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09034371 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.146727071 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215947609 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189147369 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157412092 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067619409 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090278473 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13879821 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130757219 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068523546 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138808364 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.171228671 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.148655159 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07395343 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094524317 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.140050152 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136823453 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.141661194 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099002803 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.262174355 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.28650293 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089654256 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099088873 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103361746 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210309829 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103417035 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.197904506 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138078939 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.165635395 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090097269 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.729407699 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.145655356 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090309314 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073729653 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118932259 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093790053 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138051386 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144392528 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.361464489 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.161293746 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073745853 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089696976 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.180888091 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081932846 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090715369 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140585334 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074174384 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120567935 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162397455 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142039007 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147174245 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.206927605 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139879598 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.155924857 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07466167 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122240502 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074999622 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.187815495 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192302855 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139836697 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.186420419 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.157974847 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.140485968 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.145535536 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075501401 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.168239432 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096618859 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099855807 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136529854 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.188220442 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122068831 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082089346 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093022815 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139952676 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124151443 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086328458 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137262132 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167819804 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.431222434 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145814667 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06636675 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106686621 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137870462 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.138849526 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096088872 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214377574 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121652451 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.145073255 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12022842 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088067821 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119198925 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.139330361 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077718599 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120742962 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135851999 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096377271 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.211813361 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.188832319 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076803891 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.192203602 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160284018 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094904007 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148128016 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118260106 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146030894 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07606088 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156669634 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075122155 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.743119677 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142008803 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120461201 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07356104 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165303427 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068714464 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10303502 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10195452 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068070795 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768036204 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085384421 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098866032 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082392444 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094262311 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119416728 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135911891 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073195435 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138051518 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201021346 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09476674 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096254764 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103525201 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.137369626 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094804306 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082539361 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103043742 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082156347 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121053302 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093456662 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082809895 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144695432 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.159452499 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.17075943 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569958134 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070619335 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102353226 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.178641252 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090882657 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.238458485 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.156254994 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.175082487 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139050401 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10065183 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289352969 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.141979708 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.164830808 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084589666 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149496465 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088000609 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136580441 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.141741257 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068951042 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095976142 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.1394167 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.142422382 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.161941888 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.914174107 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090419045 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203636171 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068688982 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.14872927 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095855534 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075796163 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.258940046 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069418618 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.165624487 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.141824898 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073703894 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103184462 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.815171383 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103125049 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139544515 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074261294 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.192241183 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141130944 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135429122 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135538196 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096648692 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138868142 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.186321117 seconds)
  done (took 40.104626314 seconds)
done (took 57.322320716 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.255426526 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176261486 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240234523 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.1426905 seconds)
  done (took 1.788332115 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.143503077 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103392908 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.115647319 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.08554735 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103827813 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085804476 seconds)
  done (took 1.538481455 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.405249235 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.263072117 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.228748965 seconds)
  done (took 1.798471156 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.259551258 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210112342 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.443854704 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.2946559 seconds)
  done (took 2.2378723 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.175337241 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112502329 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066751521 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104222193 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.156652433 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250394472 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125453626 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.185988921 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078388315 seconds)
  done (took 2.204366268 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195214015 seconds)
done (took 10.667159431 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.098468086 seconds)
    (2/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.097722153 seconds)
    (3/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.221412651 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.104026763 seconds)
    (5/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.210840747 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.200863239 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084149995 seconds)
    (8/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.190897561 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.19134751 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085288674 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099929489 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075924682 seconds)
    (13/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.214557481 seconds)
    (14/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.157292772 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.179201052 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.158245609 seconds)
    (17/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.083335901 seconds)
    (18/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076708535 seconds)
    (19/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.169794115 seconds)
    (20/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12499665 seconds)
    (21/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073845797 seconds)
    (22/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.224304366 seconds)
    (23/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.201002698 seconds)
    (24/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.182982833 seconds)
    (25/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051359099 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.13668299 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.167634437 seconds)
    (28/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.099103118 seconds)
    (29/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069074419 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071586185 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086294775 seconds)
    (32/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076061604 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.177399721 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.14699575 seconds)
    (35/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077496895 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.206007593 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.167657851 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.135797534 seconds)
    (39/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.111775064 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072429973 seconds)
    (41/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.124878393 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100412315 seconds)
    (43/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.17667939 seconds)
    (44/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.094572369 seconds)
    (45/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.179597346 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097526064 seconds)
    (47/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.195225061 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125452427 seconds)
    (49/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.234708108 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.112019085 seconds)
    (51/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.177534731 seconds)
    (52/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07854677 seconds)
    (53/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094442081 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.189413611 seconds)
    (55/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060772279 seconds)
    (56/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077024002 seconds)
    (57/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.167133958 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072464785 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.113245325 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051136714 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.095838473 seconds)
    (62/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.166667789 seconds)
    (63/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096079983 seconds)
    (64/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107762544 seconds)
    (65/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.075638132 seconds)
    (66/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06768318 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.117439757 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068395539 seconds)
    (69/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102502072 seconds)
    (70/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086174725 seconds)
    (71/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097059013 seconds)
    (72/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.133354427 seconds)
    (73/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092096235 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.162760251 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.182360933 seconds)
    (76/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.192790536 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.119948894 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.182184426 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089182798 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.161506381 seconds)
    (81/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.062912525 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110180826 seconds)
    (83/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.198786847 seconds)
    (84/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104151172 seconds)
    (85/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090533367 seconds)
    (86/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051296178 seconds)
    (87/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083043356 seconds)
    (88/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.096648906 seconds)
    (89/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076102602 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103177941 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.067106705 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051581997 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087512956 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076428067 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062524949 seconds)
    (96/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.075486167 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095561188 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.183284137 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07758395 seconds)
    (100/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094830295 seconds)
    (101/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.177817467 seconds)
    (102/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086767401 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09036773 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.072052591 seconds)
    (105/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073235063 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119507083 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097277014 seconds)
    (108/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.087498857 seconds)
    (109/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05239475 seconds)
    (110/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053300014 seconds)
    (111/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089683791 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070762782 seconds)
    (113/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.16550123 seconds)
    (114/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070914037 seconds)
    (115/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073034534 seconds)
    (116/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.132893128 seconds)
    (117/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065431083 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.074483588 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051178272 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.094071133 seconds)
    (121/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101129224 seconds)
    (122/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118603091 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.112535391 seconds)
    (124/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051791763 seconds)
    (125/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.09781327 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065501295 seconds)
    (127/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067414722 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.110455989 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.165442344 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.13442879 seconds)
    (131/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.116874632 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094440817 seconds)
    (133/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.185111365 seconds)
    (134/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.061902843 seconds)
    (135/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.074194543 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.157190661 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074143964 seconds)
    (138/309) benchmarking ("sort", BigInt, false)...
    done (took 0.207980828 seconds)
    (139/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071965103 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127144276 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072290822 seconds)
    (142/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.132704621 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071891427 seconds)
    (144/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093892068 seconds)
    (145/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100235017 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094476481 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146159163 seconds)
    (148/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.154702861 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065807532 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.072962841 seconds)
    (151/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07250145 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073211066 seconds)
    (153/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.072487558 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11402744 seconds)
    (155/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.188861883 seconds)
    (156/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080361387 seconds)
    (157/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.076577838 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.0532668 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.077035373 seconds)
    (160/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089629216 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097368272 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095759698 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073190846 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06553849 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094069053 seconds)
    (166/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.138251572 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.097517097 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.160682357 seconds)
    (169/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.191890844 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.138392886 seconds)
    (171/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072602462 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.09548565 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066676235 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.122435833 seconds)
    (175/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051589375 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066251332 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.110703753 seconds)
    (178/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062505199 seconds)
    (179/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051356723 seconds)
    (180/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088231998 seconds)
    (181/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051503869 seconds)
    (182/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072472731 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.107345231 seconds)
    (184/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054542655 seconds)
    (185/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065097795 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087936585 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088299012 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.192753296 seconds)
    (189/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.130897139 seconds)
    (190/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051622628 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094040913 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087452467 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073068296 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.200837787 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159837138 seconds)
    (196/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072004988 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067841675 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.090582726 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176600218 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.111254236 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07507685 seconds)
    (202/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.158378931 seconds)
    (203/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.316798802 seconds)
    (204/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088329202 seconds)
    (205/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079155375 seconds)
    (206/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091339535 seconds)
    (207/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089961177 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076935893 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066581694 seconds)
    (210/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051290135 seconds)
    (211/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050840898 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087009629 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053410978 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.109929737 seconds)
    (215/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051697611 seconds)
    (216/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06579836 seconds)
    (217/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.072096711 seconds)
    (218/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061367018 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075382404 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051450166 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094824656 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090530082 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115909631 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066775086 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087406516 seconds)
    (226/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066036136 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051973791 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.088256399 seconds)
    (229/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067468268 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097423972 seconds)
    (231/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068832025 seconds)
    (232/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06573995 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112765302 seconds)
    (234/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.147308806 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093418553 seconds)
    (236/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087991782 seconds)
    (237/309) benchmarking ("sort", Int8, false)...
    done (took 0.162060091 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.168337777 seconds)
    (239/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051655917 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086192195 seconds)
    (241/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090722308 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.073931013 seconds)
    (243/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052241806 seconds)
    (244/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06911226 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.161601295 seconds)
    (246/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106126598 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072780908 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065576094 seconds)
    (249/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078391755 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.098287773 seconds)
    (251/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053235544 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.199618886 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052667235 seconds)
    (254/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089375552 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090395003 seconds)
    (256/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111807907 seconds)
    (257/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052435242 seconds)
    (258/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052339512 seconds)
    (259/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051614837 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086779443 seconds)
    (261/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073470106 seconds)
    (262/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087636287 seconds)
    (263/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090051783 seconds)
    (264/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063357935 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095801229 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051705563 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100818641 seconds)
    (268/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050856757 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066549449 seconds)
    (270/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050893248 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.088110723 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068692779 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09615109 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073813197 seconds)
    (275/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062345043 seconds)
    (276/309) benchmarking ("sort", Float64, false)...
    done (took 0.147011856 seconds)
    (277/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053180091 seconds)
    (278/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.091820955 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098274874 seconds)
    (280/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052476209 seconds)
    (281/309) benchmarking ("sort", Float32, false)...
    done (took 0.151581365 seconds)
    (282/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07327168 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095321831 seconds)
    (284/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052627137 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065320599 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086032576 seconds)
    (287/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068786686 seconds)
    (288/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052330897 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087354753 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064777417 seconds)
    (291/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052649247 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094848223 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.187303254 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054277756 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08919563 seconds)
    (296/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090495557 seconds)
    (297/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068254903 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09295844 seconds)
    (299/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.097411134 seconds)
    (300/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061604144 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.072439721 seconds)
    (302/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061153028 seconds)
    (303/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068585493 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.149633173 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051391829 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.161683948 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065993554 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092065979 seconds)
    (309/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073870715 seconds)
  done (took 32.860708705 seconds)
done (took 33.773307268 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082822606 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115722436 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074687304 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.114071644 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081074325 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099419351 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072456416 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077635488 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102481376 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081800238 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.10110931 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054789035 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096237051 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075848256 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096399052 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092092451 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100612363 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072695313 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073420369 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086751828 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074158472 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086978531 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067266027 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054645068 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099459229 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072253217 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072472179 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.096752346 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065378684 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087669188 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068540554 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073043403 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086567461 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079202883 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092796181 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073447093 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075666708 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097925278 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067538785 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086931793 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074209897 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06589672 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093903728 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07350317 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070933187 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093185309 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07405929 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100188613 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092270644 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08931498 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074643353 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.0980168 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077232742 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071866572 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091814879 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074977087 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092109975 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091549554 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096277301 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068264733 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073247628 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095919422 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071634736 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095720552 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074283777 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075216367 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098489195 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071720256 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097203624 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071505337 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065495448 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095724383 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069546153 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087092668 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076591949 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076261108 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086181747 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071357718 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072079441 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093565589 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065393793 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089802575 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068138848 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072266265 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089337766 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055255274 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069468085 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093987707 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065744214 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074055127 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.093530445 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072753076 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088423872 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077111403 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064986405 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092412223 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06603027 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065350791 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089517712 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070026988 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.087304012 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068470017 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074686349 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088796812 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071386145 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.10170114 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065764641 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072095181 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086488249 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065094103 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103375212 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075589806 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066509558 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089771081 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065542687 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073004693 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086932192 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06659008 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065922753 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087965939 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071873159 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087178168 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067913798 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072925607 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101612272 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066131369 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069316079 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089506817 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065960821 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092940731 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066383144 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066022129 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.089468699 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062998474 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068351209 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088070468 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073694803 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06761295 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096449451 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068146065 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095764091 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070160971 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072182355 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092878264 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065384695 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058782526 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089673505 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068658581 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067446887 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087513635 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067751132 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087756037 seconds)
done (took 13.124972634 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068350168 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.168979805 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.125039964 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095951833 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109773584 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066310675 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.098710162 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102870579 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090637868 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12626005 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087457083 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.107061805 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114457865 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088015512 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066204599 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070229529 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.090036409 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089007584 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124379067 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085558079 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.138833987 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086967043 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119408543 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090648897 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111362566 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094444188 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088418822 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070013421 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068914798 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.124150332 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.10779115 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070090721 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067114119 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122158149 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.11633142 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085187188 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088315208 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084620396 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088249172 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066336302 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113502512 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099687145 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.103700362 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08215841 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094390842 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069357569 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089313273 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085789943 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.112540322 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080976484 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110436507 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133007235 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069133201 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104923746 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065582298 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109728149 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.082279372 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090811158 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067116681 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090062411 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066703575 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069905146 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110288253 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114315698 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070335138 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10460534 seconds)
  done (took 7.215570571 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086988156 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118190367 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083795487 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10606875 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066733773 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067829156 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.08870729 seconds)
  done (took 1.5863357 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069451013 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091181728 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113085015 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089742141 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108637415 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087719913 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099099225 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067156322 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106076682 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06812144 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11005974 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103933669 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090409762 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07360627 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091609002 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090211792 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090893673 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089106619 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070749731 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112600322 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070087172 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.110268441 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069441309 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067106437 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103925629 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067600383 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13735454 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071767399 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091211199 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070676427 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065271104 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.13883964 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103632687 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07809555 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06662489 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10499033 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081839322 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087456111 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084153316 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094731306 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081358436 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067671524 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090514188 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065975955 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071172743 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100801964 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068576975 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.09046829 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069933961 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086582981 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090324523 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081282321 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089651557 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071603045 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068134345 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095410347 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076949956 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090188409 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087848718 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068636232 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106728679 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083840365 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104113772 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083843649 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092147956 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081819607 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103753307 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070260484 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069541508 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092967554 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084399464 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08701925 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068565341 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078767803 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091604333 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090640499 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112964463 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069037592 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099671669 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067590278 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067883297 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.089854924 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090575244 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093109141 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067479135 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071929044 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093019983 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065689976 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066330635 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093084821 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066209391 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091185413 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070410946 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06844061 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092004014 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084559966 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.090323102 seconds)
  done (took 9.277031953 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070674776 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06913608 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091552343 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068182576 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068080466 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.09079727 seconds)
  done (took 1.44091878 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099803863 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091517465 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081620275 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095124251 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106053185 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104377093 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083235354 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105124576 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085132693 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102682533 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082695204 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104900028 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088168453 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.095634523 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082635755 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095151861 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082698358 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098980841 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07933246 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096313193 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088287763 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096136611 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074015373 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.10587378 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071170614 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072695938 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100396952 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080638806 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.101360766 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083474668 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09525321 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070835973 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09450319 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082941588 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.10448927 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072132347 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094960124 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071735388 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099552193 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070696015 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104966811 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07390987 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078117408 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094277537 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105647099 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072447654 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072014073 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099218766 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082178854 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093866655 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072407721 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094513869 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070597973 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094235353 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072596599 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105683727 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07146722 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105777339 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072954332 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07287041 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.092750433 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071088258 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105236603 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070466307 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103106048 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071758189 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093943259 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073930191 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095751256 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07296561 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071469399 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093109783 seconds)
  done (took 7.303160525 seconds)
done (took 27.788372548 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.648827123 seconds)
  done (took 1.630142251 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.759063662 seconds)
  done (took 1.741606836 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.519875337 seconds)
  done (took 15.509149707 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.611464336 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.756631659 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.809308708 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134205265 seconds)
  done (took 3.295435904 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.882329172 seconds)
  done (took 1.892772089 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235418341 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222923785 seconds)
  done (took 1.446631844 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.730712121 seconds)
  done (took 1.730069698 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.279517225 seconds)
  done (took 2.269932857 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.320565924 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180632266 seconds)
  done (took 1.498488558 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.519499407 seconds)
  done (took 1.516398807 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.816258537 seconds)
  done (took 7.817287925 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232048776 seconds)
  done (took 1.242282362 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.271455855 seconds)
  done (took 1.271106873 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.101853069 seconds)
  done (took 4.102032018 seconds)
done (took 47.95360251 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080588005 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082207442 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103670479 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078725547 seconds)
  done (took 1.340062892 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079835121 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073430567 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100000064 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073045004 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100654493 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074283909 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.097932948 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077910117 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072142322 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097366379 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073728529 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095617745 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075704815 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098444505 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070615331 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075641889 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099660755 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073213235 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099537418 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073958966 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071154038 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097636238 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076629053 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094679111 seconds)
  done (took 3.031106496 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079281674 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07350105 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097529615 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07260315 seconds)
  done (took 1.324642741 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078359252 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115122023 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088926183 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076600411 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.115930817 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109829159 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06925335 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06913095 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094480396 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077585581 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091046741 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098996595 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.110469251 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07733598 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102167622 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066588746 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069415687 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110142226 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07792671 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100724984 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070675931 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079312197 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091527228 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090947082 seconds)
  done (took 3.14338236 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077929696 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127556873 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078615474 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.113395172 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092508164 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065411312 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.10018629 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.114855592 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12463657 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089317069 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070198384 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066024864 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096052665 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065452685 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07576319 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.131652272 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.135572201 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068414841 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120048051 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065875382 seconds)
  done (took 2.893034094 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075574253 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070116639 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088464619 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068887516 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076982359 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.095975866 seconds)
  done (took 1.491768999 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069274283 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067455314 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090486589 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066688189 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072172733 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.089862409 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065749036 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067029499 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090709538 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067600933 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066741735 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.088554182 seconds)
  done (took 1.911588054 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.381932044 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.091736827 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069198522 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.087147882 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071038681 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089826689 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08049985 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067887064 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114584446 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06680334 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090371055 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068380807 seconds)
  done (took 2.293534519 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26204827 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077588749 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321799455 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167506712 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139259399 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154845426 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10515891 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139159967 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196394694 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13741978 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200000718 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223549935 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133482642 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168110468 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115409174 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132937833 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185988516 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220921255 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105732756 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22276621 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205178655 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155434274 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179422194 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127509749 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133424789 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150203366 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071734859 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10471873 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231144057 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160068968 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199871968 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13715246 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097007795 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229458341 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224346599 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19389992 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162334626 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084591677 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156429676 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164798375 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255780153 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114578867 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192927041 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133100688 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105221609 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171919733 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145318814 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.14666501 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135899047 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114855166 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173485569 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238895537 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.164977629 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111647211 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136931851 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140195138 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142419223 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103761689 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266697397 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19382649 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158773246 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095069143 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09888993 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208121826 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158544091 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141017787 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153406 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11858878 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165925798 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209815566 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145369698 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172795813 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179086312 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08889305 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14491994 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193190386 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156046828 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226020446 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153709039 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072757105 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150573062 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129108246 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10674228 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143277189 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101053836 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207449717 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123889362 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138133486 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138981839 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133699882 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136519484 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192923339 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201226771 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128973383 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066173639 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129838373 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148824471 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174633751 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113163602 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134331628 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146905236 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079589117 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189524019 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076157516 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152615824 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.103490637 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151177692 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162409821 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075806236 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178817561 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102335218 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127166109 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162268733 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218956172 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114955112 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082961115 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225687653 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154262552 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131884742 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174411721 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214151386 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102550661 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129147247 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203796256 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241397079 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090558707 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221533532 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134024702 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084214345 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.112630349 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154055337 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138230908 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148387894 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107499736 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.15332831 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2231227 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075314983 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120321662 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164701495 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082396525 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106766571 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139448839 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127477993 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096161971 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.125991863 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133174267 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169142549 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178538156 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108460681 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177115441 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098971812 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223339863 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114322441 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130862224 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104941127 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095457757 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.163854072 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215600516 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07979969 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225008033 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.153236905 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131093515 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147551246 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083261476 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194123388 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079182266 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07173936 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198285782 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137972329 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136667396 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.182962958 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130681578 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155042866 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151055323 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161662094 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185839026 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.160991847 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132466162 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088236715 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140073 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15173422 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099418088 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119710364 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083681319 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130481039 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122074616 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084254465 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197543702 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155296444 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12602802 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113509337 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122642404 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204192879 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077925936 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158005832 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146496645 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12068276 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.212333298 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18674639 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163523724 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125120802 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200326186 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071385542 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074202356 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.116252846 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155232237 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109086407 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084377098 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169912985 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179276799 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15667655 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165449051 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137213573 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149017533 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212605402 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072054368 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143311911 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179305932 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152479448 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153839223 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113050766 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100295904 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199724924 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109948828 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269052735 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143417293 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151689184 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180524189 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129924344 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080105616 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131387416 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191459262 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132349923 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181431409 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126614596 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114276043 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111459539 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.106956477 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131349195 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155542297 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147393298 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188968343 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.142772284 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159305768 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077556343 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143848018 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173172006 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149458052 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06504032 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147675022 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21805127 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120401051 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145403526 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190139824 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104601953 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12706072 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234782884 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198961903 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109116669 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111130383 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147498465 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180894465 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146509172 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168794693 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137273509 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163694792 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137826474 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085247404 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113719484 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124668104 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133716041 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095937536 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138311213 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.143575201 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.119852471 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159368315 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138363784 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13754171 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145334458 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124528585 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091694091 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123834388 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232844689 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149778354 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231668652 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102003257 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.204753596 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223819088 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075468031 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10507693 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080968454 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16847311 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109791338 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162183785 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123933461 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131821473 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154834918 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172412838 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122315475 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068809864 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137311497 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163306617 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138354431 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123867832 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132294296 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221064914 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103581809 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106254274 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152844356 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105545414 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128792529 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232384252 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06153135 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124268644 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101235404 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081944962 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156855651 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214219635 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.10871828 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.12905491 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144877758 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147302333 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157263136 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127994714 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126235834 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141550932 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17956139 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181954094 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091042596 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139951456 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156639381 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212772352 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133643802 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.121326765 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203767584 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211615093 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.220755644 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090569162 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142860455 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142306597 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136359169 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19494323 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084463345 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224910836 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108117365 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16642674 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131385025 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118792453 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157535205 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.12425411 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089342154 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204911899 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147612913 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082518253 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123693083 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1462111 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151192788 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133646341 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075435728 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193630499 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072814853 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165548125 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227195611 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108106915 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131720379 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096819179 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108300599 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133961227 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129903721 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088433666 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.142552371 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229612802 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091441387 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206884933 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169597457 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139980076 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192143697 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127427704 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663080987 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079725661 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211731053 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147467119 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235533895 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099366151 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146347423 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136792033 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151080882 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198275416 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132777438 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.2027051 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162156011 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.149154293 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079692518 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12887746 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136913796 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118410934 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133466822 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142364203 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143171826 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.126856116 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.148893759 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156015654 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.10615981 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096462173 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21572497 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145364864 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171996651 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169390655 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111787632 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146891423 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194305259 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081271854 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.149771254 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213733645 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135045223 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124355909 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082579995 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133238399 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230793866 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073860124 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220084414 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152114063 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137836319 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141969548 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146773982 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161430154 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135458922 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178213612 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096711577 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.139583118 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143668417 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111113554 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077839571 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132825058 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139376956 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126578639 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129043159 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.12151001 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205329278 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071653876 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12292207 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130097691 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173517498 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237442219 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.114869021 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083657509 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14659698 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140635048 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.143788265 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153954054 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.10702024 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108991586 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083533074 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.135967728 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113049122 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142097268 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131182382 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137503971 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22540006 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08451009 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249763904 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122246029 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133224511 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070605399 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105559596 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097184916 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124099015 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135931248 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126790038 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204967707 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.122917833 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116450747 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119899136 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074074869 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083636001 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183853032 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138391737 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150071211 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098584734 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.089446113 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136645102 seconds)
  done (took 70.91668762 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.134619451 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.102925455 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.116858955 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.172005547 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14459097 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236730043 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.181031718 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.221882911 seconds)
  done (took 2.404073405 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071280409 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116234746 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102311632 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.114890462 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.088823092 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068385498 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.29333936 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109149708 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067453234 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.113624055 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.117389762 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091011692 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.46801232 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065401239 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093589571 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084095294 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067694403 seconds)
  done (took 3.215523617 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.430331384 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.630002569 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.448156367 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.0727386 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.883457621 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.106358798 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.368091272 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.161665915 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090087982 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.43001096 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.722666027 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149572144 seconds)
  done (took 17.586468048 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077527082 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071108536 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110823806 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083989957 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099384608 seconds)
  done (took 1.53661215 seconds)
done (took 114.085485147 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082198936 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.345987001 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053072734 seconds)
  done (took 1.529150668 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086124804 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087407081 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111632946 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083021492 seconds)
  done (took 1.470341175 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077220552 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078450068 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111557231 seconds)
  done (took 1.367645753 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.276873531 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164178183 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087281996 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084364447 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079709768 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10532647 seconds)
  done (took 1.372130606 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074282569 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076630922 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099112925 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076689669 seconds)
  done (took 1.422314774 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078665999 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05361555 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057040074 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083458893 seconds)
  done (took 1.375912441 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090617348 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105245377 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079977056 seconds)
  done (took 1.374984479 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108203093 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.111885839 seconds)
  done (took 1.32266731 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082972783 seconds)
  done (took 1.179388033 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095445608 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.138311009 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.154607631 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136649215 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164519262 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136093814 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.113504085 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087947163 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.103673576 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.115130321 seconds)
  done (took 2.346249976 seconds)
done (took 16.462300491 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07972426 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.481521188 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.3602819 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115905491 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668563521 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356001947 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.000765393 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118681256 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120362331 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094271927 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083452529 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674519879 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.005033157 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.439474989 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.99130031 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320127989 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675576588 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067720432 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092743882 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068380277 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.961780977 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093615891 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067281411 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067742667 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674702189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370552751 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093577583 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320170976 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067318144 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094932507 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354412576 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094071716 seconds)
  done (took 16.166680811 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071228633 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143100046 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073322909 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083043437 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.095955175 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069490587 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097978531 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068533132 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152393924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066809206 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111024496 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066863054 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097290412 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068449701 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086638834 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094009355 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068605874 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067828512 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093548281 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068572752 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111880337 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067625596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067773709 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094142572 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067696302 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105908471 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068143115 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067832767 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094193001 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06995082 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096718811 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068274603 seconds)
  done (took 3.827466343 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115904238 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151502307 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073848818 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128383025 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112962193 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096001057 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.169259438 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092461349 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154242434 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068113003 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110334189 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067858449 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126744415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068675985 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113410381 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067800869 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06915759 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094322462 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068406699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094889891 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086766996 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093252875 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068505842 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068461918 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094129439 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081073438 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094027695 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068277399 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068290889 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096267422 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071805824 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09406819 seconds)
  done (took 4.139303405 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073470321 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074886406 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108291283 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082958652 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095631908 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071810788 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072887065 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09594818 seconds)
  done (took 1.78138332 seconds)
done (took 27.014042845 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079486786 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069782424 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098980405 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081558097 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098931775 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078478504 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067346928 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10078193 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076618686 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073146791 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101791558 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06687345 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.096992888 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067270103 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07447195 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093874046 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080393975 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098030504 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079263701 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079531842 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096685559 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077134583 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10041429 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078914545 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105981188 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079544933 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082921321 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099939171 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.0692443 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096787632 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07673723 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109761256 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068794905 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079763091 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094341944 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068114611 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067384058 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094635873 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080081761 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100053882 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070423345 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100295542 seconds)
  done (took 4.663951836 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089508768 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092742992 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11107147 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06514657 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096650227 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065401415 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.114818511 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063538306 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059944198 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114753046 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055841374 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058943849 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089374284 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053987879 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058997004 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056677697 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088230935 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056516796 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059119231 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085965166 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.05767641 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053979582 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08673609 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062516936 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056368545 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087923749 seconds)
  done (took 3.054781581 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076455931 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083946354 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114192726 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128009755 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.131945775 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076859254 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.104783852 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087140818 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112129511 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067149898 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071939631 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.12193178 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087323852 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100833603 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067518641 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113886025 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082119125 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069159342 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100553977 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090656816 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111214969 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077799018 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119579466 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081080194 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068089162 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096663316 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071478101 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108015932 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072347618 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076848312 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099016485 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072045698 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096562384 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078893928 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071875791 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095840198 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089457794 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10449757 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077599918 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068851683 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098847144 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069179653 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11477156 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112195279 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.094028128 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074315996 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075642847 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.10346577 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067818554 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112081118 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076831494 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067813926 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.096593063 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066605452 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094030369 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080866658 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06954059 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096589106 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076951643 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097305067 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079737212 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071017634 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109700918 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06695072 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101593531 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06687408 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068417446 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093265372 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090455914 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068723131 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135116201 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068460323 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095425822 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076390886 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101394805 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073647901 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068068171 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10915538 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077544081 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097211018 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076360537 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070387415 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097331962 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087699767 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096290184 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068824828 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06840975 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100497934 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070110334 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094920594 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08123925 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067924352 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097173564 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084505216 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094077907 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068725117 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074038169 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.098893884 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067022739 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10613269 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072619082 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068521941 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103213973 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068269679 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097493405 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078074361 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072291785 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092805803 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072343144 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101078165 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069232853 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068955157 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.09685964 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069892098 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103645233 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074037007 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072154082 seconds)
  done (took 11.256077287 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.20408465 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.183562281 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070180323 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.177157506 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075917923 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.106556815 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.178015687 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095670382 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.095538584 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068517563 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068719081 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.129559 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.123945265 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105651116 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105898057 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067271948 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113006464 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104496714 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.179505427 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.174487334 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114748684 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076346223 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06969394 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.096635536 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069629169 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.104578667 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084384441 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102311434 seconds)
  done (took 4.277529907 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084126285 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.13015558 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073689592 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088632318 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118336914 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06831848 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.100520617 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069090148 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107864471 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08010914 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094594179 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073182519 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07414693 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.104967144 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068587917 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105380467 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078016319 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068755292 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.097970332 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07276101 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104278709 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080425978 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071964529 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.093850992 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07360537 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.093707806 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064717002 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.112448209 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067986711 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116562284 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066113848 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.0733377 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108391355 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068501735 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094136874 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070520484 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07097086 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098140122 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06922712 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06709593 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093697611 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057970214 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066689268 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106981115 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073618741 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.086564386 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073525269 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072370193 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099270828 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065215435 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09763884 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070251662 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071594547 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103506795 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072822033 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072807366 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099360345 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065992806 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102666708 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071661642 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064254219 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093725105 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072359712 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067308489 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102970294 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072626224 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094029019 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071460237 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072699372 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102372702 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071433524 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07020362 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092455035 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070265278 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09977232 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072248642 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072192146 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094258735 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067643823 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067636045 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082428986 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068365284 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053728306 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098108372 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066337062 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066259335 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.098100745 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073778064 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.107773901 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069180143 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.100545354 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068621498 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067127891 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09846793 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063332791 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070456686 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.110157043 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110508922 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06806626 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066070509 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10941867 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072810973 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066575465 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.083769808 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074903196 seconds)
  done (took 9.78330125 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097389899 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093098914 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096919864 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082424565 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122120873 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092442603 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102548277 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074448354 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069756062 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111623635 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067795163 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103571699 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067774447 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076634445 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12385427 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075572256 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097124568 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077065729 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07186322 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134154685 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08303912 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.109058959 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080573197 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095920758 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072939615 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079797476 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.123788615 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079374024 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.105319893 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084633236 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079166893 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.12176243 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085169627 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098986541 seconds)
  done (took 4.277562282 seconds)
done (took 38.42055251 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.188896781 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.419328284 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.184868518 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.085271159 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.191651509 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.211446173 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.218758507 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.196600567 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.394807407 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.188725903 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.428001845 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.788163992 seconds)
done (took 58.630587389 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.29436533 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.325075759 seconds)
    (2/2) benchmarking "String"...
    done (took 1.453916327 seconds)
  done (took 3.907753048 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.579987708 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.061459082 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.438768694 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.188398492 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.197935977 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.491537838 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.776558166 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.029154637 seconds)
  done (took 27.312767494 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.193608457 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.54241938 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.497327016 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.499357768 seconds)
  done (took 17.86335521 seconds)
done (took 59.088715385 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.216491765 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.205321646 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.223486817 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.181905459 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.290841266 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.211982211 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.403557673 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.417233616 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.185749347 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.198357374 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.195781346 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.190709104 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.202003191 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.452546266 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.188453885 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.18737797 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.253701004 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.645551174 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.564823748 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.190936009 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.203717087 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.250864309 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.190056904 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.200955382 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.230063937 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.197669314 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.195215575 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.199672245 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.373415362 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.188730851 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.277042869 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.661591035 seconds)
  done (took 190.906323429 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.189784193 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.144541111 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.26597765 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.218069303 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.62452159 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.385212376 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.32673108 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.787245697 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.201266147 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.189806264 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.435503972 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.187081477 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.508798513 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.155181298 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.198497958 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.295403015 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.368251763 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.479912521 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.201649215 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.441146747 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.20212805 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.433510697 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.365973181 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.370227603 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.228429638 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.210560479 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.216060045 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.205706113 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.380251739 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.301023221 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.200659379 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.226097787 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.750970799 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.048611781 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.205635109 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.228033446 seconds)
  done (took 149.310839455 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.449032045 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.191308102 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.188517696 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19073112 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.220780413 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.190761805 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.71669318 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.719344371 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.693335291 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.575735368 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.190806628 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.250788789 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.387059946 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.188678238 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281857295 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.201303498 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.191702175 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.207177106 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.2171484 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.188517821 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191097177 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.720034784 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.203654083 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.209568578 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196022461 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.192081317 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221115251 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.585335005 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.189748427 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222519766 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.507330484 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.233116791 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190599552 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.488592199 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.072341845 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298106058 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.191693326 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22416246 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.19135355 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.45993978 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.191330432 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194826382 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.193722772 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.195485488 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.762030933 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.193470583 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.720904979 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193711031 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.063005592 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190661944 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192354548 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.510667418 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.648881961 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.193212976 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.193564038 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.194392741 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.194468972 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190758986 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.193563779 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.222241893 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.504096064 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.289767309 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.195039583 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.194759765 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221343403 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.192679372 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.363016929 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194250353 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.237531402 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.250557069 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.413389476 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.722657234 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193570611 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286065441 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311277643 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.191641458 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.194800245 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.193937768 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.192668854 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.299954626 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.191797502 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.582435105 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19914885 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.196488525 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.253737477 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.286435717 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.192162424 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.482275773 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.19452434 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.195446425 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.888128486 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.191956027 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2852142 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.192705957 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.193941654 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.193725239 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.584458869 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.723113829 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.358754497 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.195399579 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.513192031 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.196165276 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.596879589 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.699688453 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.774047945 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.195792374 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302216804 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198690127 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.196395782 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.195761615 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.22511968 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.196068886 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.254902811 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.195150429 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.592615597 seconds)
  done (took 343.11131476 seconds)
done (took 685.907504935 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.86561463 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.84934094 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.959469982 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.844154127 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.827649473 seconds)
  done (took 10.483240449 seconds)
done (took 11.621821217 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.374929678 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.373267339 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.252218144 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.377211537 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.221733993 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.393283516 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.355551273 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.215134906 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.297553977 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.2664294 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.294096401 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.240136196 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222986309 seconds)
  done (took 18.021917545 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.501589519 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.492382222 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258397003 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.497472904 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237052167 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.503794443 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.387014828 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.394135352 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385773474 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21383276 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.211958207 seconds)
  done (took 16.223376493 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.511352881 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.495159508 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263940355 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.508433611 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236848043 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.512079784 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.387962038 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395074512 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.383553088 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.210678735 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.211743109 seconds)
  done (took 16.255953547 seconds)
done (took 51.639895428 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.20807989 seconds)
  done (took 2.34655337 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.238875266 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.400366964 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.22111936 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.215741291 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.210145172 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.210002602 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.214692372 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.208216311 seconds)
  done (took 11.05994591 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.205320102 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.205015856 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.206898329 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.204501651 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.206492205 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.204332061 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.207353222 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.204969578 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.20435578 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.205345137 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.207660862 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.207297933 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.204617289 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.207540381 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.208748912 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.208354845 seconds)
  done (took 20.440276014 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.20732257 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.205847635 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.206115706 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.207186809 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.204342672 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.206186159 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.206846462 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.204912791 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.204442602 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.205218062 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.206430846 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.205090863 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.208042581 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.206137336 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.206684727 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.206939235 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.205494153 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.206840063 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.209063414 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.20697674 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.205903793 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.205894482 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.207866114 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.207768847 seconds)
  done (took 30.096613337 seconds)
done (took 65.081324749 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.242958438 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.834692018 seconds)
  done (took 9.220407554 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.209046173 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.210282245 seconds)
  done (took 3.563587988 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.20867513 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.208526788 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.209111062 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.20783021 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.209861999 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.209769318 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.207564539 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.208520783 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.210591131 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.209811628 seconds)
  done (took 13.232666036 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.20903269 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.209619008 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.206930831 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.207425028 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.208627858 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.206703592 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.210075182 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.212099886 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.211669093 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.208058671 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.211586149 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.207952367 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.210322856 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.209077013 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.210305874 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.209007943 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.208738449 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.207424718 seconds)
  done (took 22.907990494 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.210524591 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.210455094 seconds)
  done (took 3.564073752 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.208233956 seconds)
    (2/7) benchmarking "second"...
    done (took 1.208283243 seconds)
    (3/7) benchmarking "month"...
    done (took 1.207947389 seconds)
    (4/7) benchmarking "year"...
    done (took 1.209155393 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.207957266 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.207231916 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.20771737 seconds)
  done (took 9.599892075 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.211744595 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.38330692 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.462900851 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.81656463 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.211845257 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.213737388 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.050003562 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.214708904 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.218192097 seconds)
  done (took 13.927081716 seconds)
done (took 77.159285898 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.1943461 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.200267255 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.03773302 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.220829417 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.219340507 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.501815261 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.211299024 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.326351023 seconds)
done (took 37.057168591 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.212414332 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.923750826 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.930594842 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.204961322 seconds)
  done (took 11.205280302 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.193765545 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.107618225 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.19867075 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.205803993 seconds)
  done (took 17.852977749 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.803034481 seconds)
    (2/2) benchmarking "read"...
    done (took 1.533600148 seconds)
  done (took 4.485175708 seconds)
done (took 40.900855213 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215539145 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.212602625 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.212155083 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.211050158 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.212249739 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.211110752 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.211954622 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.213413526 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.212187609 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.213278084 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.211811412 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.214237257 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212309143 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211658248 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211712224 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.212878441 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214275462 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.211229798 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21066997 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.211702376 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211907131 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213337231 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.211861464 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.213146927 seconds)
  done (took 30.245292209 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.215017413 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.209028703 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.211770286 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.210892858 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.207973064 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.211610783 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.211578204 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.209824716 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.214456159 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.211168766 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209655264 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.211280446 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.211765066 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.211878875 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213024968 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.21155662 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.21274299 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210241786 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214444785 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.21183764 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.214371638 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213127659 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.210414573 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213890629 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.208985743 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210283595 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.213430021 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.211598512 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21339181 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.211131129 seconds)
  done (took 37.500434157 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.21903235 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.222473951 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.215806186 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.215775825 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.215125372 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.214383786 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213910295 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.213679692 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.213907912 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.213662516 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.214150274 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.213690963 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.214208694 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.216552247 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.213400328 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.214570326 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.213664964 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.215875878 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.215776506 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.215150807 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.216875826 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.217253098 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.214243913 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.21425066 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.216833204 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.214806874 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.216270259 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.217294805 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.216319376 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.217918357 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.215993793 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.216615682 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.215609416 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.216474445 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.216634517 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.216723139 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.221573844 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.22489061 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.216591735 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.218171291 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.215134169 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.21786842 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.21706099 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.216444564 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.217563141 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.216728008 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.217429528 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.21720066 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.216114132 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.216821823 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.217110479 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.217892728 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.218078133 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.217932848 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.220110422 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.216499066 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.215930835 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.216616244 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.216561769 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.216803839 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.216862117 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.217915968 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.216905408 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.217632764 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.220264511 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.218623237 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.216275583 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.216970441 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.218436402 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.219035991 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.217709331 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.218707361 seconds)
  done (took 88.752264421 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.216933482 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.217180176 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.214520478 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215043173 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216804198 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.217477773 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.21530661 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218079923 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214157479 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.217852454 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217422841 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.21494142 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217591591 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.219555582 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218305554 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.217049807 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.218514034 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214243838 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.218834747 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219470334 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219029235 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.216397071 seconds)
  done (took 27.925240722 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219254311 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220488702 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.218977746 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221672434 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217169962 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218479833 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22157381 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220108114 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218395542 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216755905 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215004113 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219044599 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216976463 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216328878 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216445917 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217560864 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22151012 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216279509 seconds)
  done (took 23.084393732 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.217147974 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.215582198 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.219879451 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216228969 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.216989826 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.222312263 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216787925 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.221492474 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.221451809 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.217434223 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.219544328 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221440033 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.219757741 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21894112 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220734609 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.219774696 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.22166818 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217520566 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221368842 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21903983 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217379743 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22237824 seconds)
  done (took 27.977108677 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222829926 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220563573 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.216585841 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.217725584 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.220511556 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.221326574 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.223161763 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.218811263 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.221063514 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.221124606 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21911597 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.22085899 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.220494182 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221015812 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.218182395 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220509571 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.22201151 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221426926 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222175043 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.219168835 seconds)
  done (took 25.562540633 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222913832 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22329551 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.22478298 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223293913 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222707442 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.224019959 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223671008 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.223311901 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223923502 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.223262012 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224544921 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222692336 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222707067 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.22285734 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221184091 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223972529 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224202691 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224419966 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.224722366 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223802241 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.225978378 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224983638 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224587545 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.226012426 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.224477929 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222288136 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.226509738 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2249728 seconds)
  done (took 35.426320777 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224044123 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222854092 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.220754435 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.223725265 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.222273174 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.224070048 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.224396352 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.222888424 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224072196 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222066739 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.224085933 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224284806 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.2240793 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.224514788 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225246493 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.22375987 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226164398 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.22155298 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221930469 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222276823 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.224822904 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22641016 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.228768274 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223829411 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223609536 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.22739523 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22529633 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224154384 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227003124 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223727475 seconds)
  done (took 37.880430797 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.245250209 seconds)
    (2/2) benchmarking "in"...
    done (took 1.246355256 seconds)
  done (took 3.650542976 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.224946256 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225666302 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.22612785 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223651687 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.225790735 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225848789 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226476815 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224484303 seconds)
  done (took 10.961875824 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.226920943 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.226195609 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.226013139 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.227904601 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.228339253 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.228096704 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233071638 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.243373199 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.230567742 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.229723821 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.232411516 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.233295044 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.232502618 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.226308913 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.227544176 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.229710171 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.228762471 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.229120723 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.227692515 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.227205777 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230671231 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230123162 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.230621231 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.226433083 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.229661807 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.24283762 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.233059506 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.22740261 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233314061 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.233599478 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.229504546 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.225339549 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.230051977 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.228304084 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.231429981 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.231102904 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242709822 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243036508 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.237089825 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.228956258 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229684551 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.226004134 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.231446444 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.230490885 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231560377 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.230015109 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.230647983 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.227202717 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.231255451 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.230398205 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.234916395 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227539173 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.228374261 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236767462 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.231050148 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239597698 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.246336034 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.232525394 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.238490128 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.242363149 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.244803278 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.23809417 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.231772394 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.230926617 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239866651 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.254574499 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237358546 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.245287093 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.230097738 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.230724916 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.238391625 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247537125 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.240843383 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.231748477 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232269604 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.229152058 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228853882 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230546416 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241959293 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.250695591 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.232599372 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23165397 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240120701 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252409993 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.231067613 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.230673591 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.229479928 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.231179007 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.231313812 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244126124 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.24664388 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.232067016 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.23244336 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.233070869 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.235058583 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.232721771 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.227447244 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233955102 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.22495048 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.231602287 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232401265 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233008912 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.242406077 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.231828734 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.231722753 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.24263812 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.232340189 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23148746 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.239382991 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.233356385 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232820768 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.232898461 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.240582712 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.229490462 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236446101 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.241783246 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.234716683 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.23628317 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.234557623 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.234239527 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241598559 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.259143326 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.233691622 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.233797485 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.237916666 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.244522672 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231381743 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.235544937 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.234910724 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.231974083 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.231803771 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.236269921 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.234570225 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.237971598 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234141918 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235664434 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.232905446 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.234353068 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.233799866 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.235962955 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.236594015 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.236069495 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.234588608 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.235909746 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.232912148 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.236536895 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.244573284 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.236911457 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.235668626 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.236915084 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.232611385 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236935526 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.238193857 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.237489536 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.236790167 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235429718 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.233705846 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.232344891 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234853602 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.236069563 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235391684 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.237173554 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240703648 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.236471982 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.240750151 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.234266147 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.234051235 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.236113968 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.234785074 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.234133702 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.235754057 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.233799859 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.237618273 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.242943388 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.236186449 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.235835869 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.240625419 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235554146 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236358382 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238437938 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.238489621 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.244264044 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.236687715 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.2445954 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.236327244 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235933046 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.235518972 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.237455949 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.233517622 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.236372147 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.236396638 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.241899279 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250935252 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245481801 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.238116214 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.241041163 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.237359543 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.239044838 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.24412501 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.238619761 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.23764513 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238429861 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237094615 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237440487 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.240664368 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.238903799 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.235478272 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.238004891 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.237571304 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.238416813 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238895136 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.240182816 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240951822 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.237085789 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.23831974 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239183129 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.23795411 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.23547156 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.237172079 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.236551595 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.240485922 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.237666879 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.248474524 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.236944331 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239697239 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238064836 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.236694666 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.23757301 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.235486584 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242460041 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.2412247 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247417184 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.254173016 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.240642385 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244391495 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.253701555 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.238428816 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.244204639 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.235401354 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.233163724 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.242312918 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.245327942 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.239249324 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.239107982 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.239331467 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238831391 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239240562 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.249458653 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.237529789 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.239667401 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.238291027 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.242442129 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.236200397 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.24097606 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.242708784 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.242047486 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242940987 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239800336 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.239779977 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244291277 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.240171966 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.241051322 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.23832467 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242011668 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.246051693 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.245013546 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.241705833 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.242667708 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.242792666 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.244718772 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.242088499 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.239945897 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.23912499 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25603103 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.246710512 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.249574697 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.244440361 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.24229503 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250097191 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.237382294 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.245836601 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240642597 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243198657 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.242685169 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.239680515 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.238169472 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244731106 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.242899268 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244574149 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.242502244 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.244605051 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.24313823 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.240177562 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.23951327 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.241919071 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.240748721 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.24178683 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.241110767 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.246191286 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24148727 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.240086866 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.241245487 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252600529 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256623923 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.245245072 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.242825161 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.243993072 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.243786008 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.244539675 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.242773907 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.243957138 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.250339134 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.246268251 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.253439107 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.244266399 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254510807 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.243496051 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.24347507 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.251562127 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.23973461 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.239441038 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.242199977 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.239955479 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251550572 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.256280101 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.243276373 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.243902478 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244419361 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.243163668 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.243809559 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.242782486 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242775685 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.243211784 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253439893 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.258487239 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.249234687 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245318471 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.238829864 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.244681945 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.242256605 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.243243138 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250594444 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.243060772 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.246626476 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.245124467 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.24325601 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.24161138 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.24528285 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.243909852 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.244596244 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.245948354 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256116813 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.260517173 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249458027 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.245102272 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.256985833 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243173329 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256034417 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.259578082 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.24920752 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.245875235 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.2457479 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.249072191 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.244321142 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.247837301 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.242776935 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.244053858 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.249249245 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.247574538 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.249292512 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.246164974 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.244908089 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.244036065 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255733341 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266729038 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.249811229 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249814963 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.245255983 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.248059175 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.251715608 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.247925509 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.245537929 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.251006505 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257595016 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253725548 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.247825236 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.245195367 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244949465 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247702482 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.248349012 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.248827444 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.245175108 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.246702547 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.249408722 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.247906798 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253251104 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.248009221 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.249631606 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247617742 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.249520966 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.260395119 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.248045267 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.248161323 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248907186 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.24769205 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.246580464 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.248543392 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.248932867 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248722286 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251106018 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.251736363 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254831186 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.254610106 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.251619704 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.246279494 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.25170286 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.251196766 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.248622786 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248518469 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.247733569 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249545571 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.25008366 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.248986444 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.250530483 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.247164152 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.248412693 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.24902387 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248562233 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253683627 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.254605946 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249423283 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.249435579 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.250650253 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250794342 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.248208159 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.251908432 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.261604644 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25280774 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.261436548 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.257619793 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.253201882 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.249530639 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251822673 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.255585914 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.248832922 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.251847832 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.250433479 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.256100047 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.251907872 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.254731142 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249434247 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.257742276 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.251330745 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.250453106 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261349529 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.26684286 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251950784 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.25102137 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.253305928 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.251855543 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.248894001 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.249913928 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.250532305 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261381498 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.268008189 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250774406 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255670173 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.249731874 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.25304385 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255258305 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250630311 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.254680771 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.247969327 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.252837321 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252127089 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250082721 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.2498024 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.253325729 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.250366119 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.254322573 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.257966431 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.248193486 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254659797 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.252696857 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.252683807 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252814557 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252160192 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.251398792 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.250475666 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.253655016 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253727297 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.251899392 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.253920723 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.253518495 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.255107476 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.253193028 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253962295 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255945484 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.261797743 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.259269024 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.250849602 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.252627515 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.25430365 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.256563231 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252921172 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.250901838 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253056357 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.25307571 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.254072194 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255242775 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.250025419 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.256687705 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272392365 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.26722471 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2539749 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.252931952 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259377354 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.252047376 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.25026484 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.253222017 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.256894309 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.257865698 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.260398891 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.254526945 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260120756 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267816858 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.254949095 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.258442631 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.25475292 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.261654229 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.258866681 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25387 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.253923961 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.259748729 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.272482694 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254864867 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264391099 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287486937 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.270458104 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.25609718 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.256231739 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255059656 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.256796598 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.258406361 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.255484638 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.256353888 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253861436 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.25516181 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.255373779 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261392078 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.256638962 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.254261471 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.256285165 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.257496622 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.25883138 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.253523015 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.256031997 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.253557393 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.256428282 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.255203927 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.256365573 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.256372189 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272275525 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.268514254 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.25747843 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.256507504 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.253336966 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.262644193 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.259865478 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266725007 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.26616164 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.256244946 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.257253968 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.25926503 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257506794 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.25432147 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.257992128 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.256789478 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256868957 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.254820387 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.272423869 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265524033 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.262690709 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.258461255 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258181346 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.255211692 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259367354 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25828791 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256349689 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.259558564 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.26186318 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261316936 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.261313202 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.255745235 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.261100289 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.260826241 seconds)
  done (took 743.120446289 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254303159 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25613786 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.257104054 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.257071093 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254787263 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255842022 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254947108 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256664555 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.255900288 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.254653239 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.255865051 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254322715 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.25749484 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.257193085 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255945217 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.256999553 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257292838 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.257397852 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257738108 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25668922 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.257410816 seconds)
  done (took 27.57350607 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.257516524 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.256583782 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.258453882 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.25932683 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.255511832 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.259700821 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.256078699 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260464418 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.260213436 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257294611 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.260296493 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265100803 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.260826225 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.263937758 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260258307 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265657406 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.260567389 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259075548 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.261470299 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.258270537 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263493337 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.258934622 seconds)
  done (took 28.910472499 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.260360197 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.261381329 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.260769759 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.255182907 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.261471877 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.259189598 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.260378208 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.260304153 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.25895714 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.263379966 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.260675759 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.262769053 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.268647325 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.264998315 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.265189508 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.262921994 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.406499848 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.262671994 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.261216503 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.260584245 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.259580326 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.269716587 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.259256694 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.25767609 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.259391575 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.260603236 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.26261865 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.265272281 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.263350243 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.263616198 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.26570779 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.263471268 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.261556785 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.262118335 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.262632848 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.264072964 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.265397949 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.263502843 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.258138348 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.2634793 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.273846241 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.283398417 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.264721842 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.271288458 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.263667468 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.260523532 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.263897659 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.270483341 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.260800025 seconds)
  done (took 63.236405552 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.263547471 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.262627887 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.259905715 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.264076963 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.264897679 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.263106169 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.260552655 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.261400064 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.262735228 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.262087462 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.264076416 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.262987169 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.264371759 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.265506551 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.265202893 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.263156595 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.264041531 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.26361479 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.262580958 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.262455814 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.264138977 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.267004887 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.265648593 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.262755719 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.264902818 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.263382153 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262927085 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.264910953 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.262890829 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.263504151 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.265341054 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.265967027 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.267487441 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.264012529 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.262544828 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.266181334 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.26449825 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.262949826 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267202304 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.263360478 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.267199477 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267594722 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.265523869 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.266993554 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.260633018 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.263307899 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.263596258 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.262862591 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.263059394 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.266033092 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.267605377 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.264493778 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.266859187 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.262780835 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.26678118 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.265804882 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.262762479 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.264114008 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.267906584 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.265720528 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.265819541 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.266448201 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.262502578 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.268735117 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.267362666 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.264941761 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.264715204 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.267322751 seconds)
  done (took 87.18015994 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266856619 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.265924752 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266220872 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268079158 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266797511 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.267321525 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268784829 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.266957943 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.268887992 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268687594 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.268685649 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.26870644 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.267252565 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.2684127 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.269340371 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.268645038 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.268578975 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267468899 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269284726 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267509058 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.267698349 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.267841861 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.26880405 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.268197715 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27017924 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.267531751 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265325327 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.268708961 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267051189 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.268616557 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269188356 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.26820589 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.268613032 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.267702729 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.269191262 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.269322835 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.266546695 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267903634 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.269754559 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.267632108 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.2699419 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268626503 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.268193609 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.268669032 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269985375 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.268535004 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.268151679 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.269225572 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.268631896 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.267968928 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.270143561 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268226832 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268343497 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.268541957 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.268072683 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.268779758 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271005079 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267925054 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268351574 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.267984904 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268766192 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.269494333 seconds)
  done (took 79.836079279 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270947995 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.271767085 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.266477268 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.26768772 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.269978451 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.267364436 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.270226799 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.271308707 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.271367023 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.270677306 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270345962 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267709863 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267364164 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270677182 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2677775 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267178358 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266439215 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.267550263 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268717229 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.269809375 seconds)
  done (took 26.580555775 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.267891108 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.273112526 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.267555052 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.270852321 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.268711579 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.269026326 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.269732025 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271886273 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269206465 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272245922 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.270847744 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.269905133 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268316743 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.26916367 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.272484828 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.267350146 seconds)
  done (took 21.51837097 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.267040091 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.272379519 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.270857745 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.272024548 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.268078393 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.271122639 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.270438728 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.26716547 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.268265531 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.269731285 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.269731479 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.268380131 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.271009615 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.271917937 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.268334655 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.270447224 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.268535831 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.266713199 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.270862974 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.270881905 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.270135157 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.272446614 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.270419531 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.270225563 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.269531647 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.269374937 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.269879646 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.269261918 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.269058015 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.272163442 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.268598627 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.270676952 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.269489292 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.271166729 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.272250461 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.268584827 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.272839278 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.272417517 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.273634149 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.273566374 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.272093428 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.26919034 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.272394885 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.271694018 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.270048833 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.271168588 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.271602262 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.26969061 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.27090045 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.270399692 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.27348795 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.274604759 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.271728459 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.273236959 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.27246557 seconds)
  done (took 71.087095978 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273045668 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.273168503 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.268936656 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.273084018 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.272618966 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.270037046 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.272502622 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.271063945 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271243843 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.272905883 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.272442174 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.273216346 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271751523 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.272028262 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.271689318 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272784268 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.269836928 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.270422589 seconds)
  done (took 24.098047639 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.271972622 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271681308 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.27407997 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.273270821 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.272389409 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.274024689 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272573982 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.274226385 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274416097 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.27337969 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271797136 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.274969731 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273504211 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.275458688 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272460748 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272048878 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.275636431 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274663042 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.272085083 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270819563 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.274429906 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274500557 seconds)
  done (took 29.220268231 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.27379611 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.273608477 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.293537396 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.320612064 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.307202941 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.275108353 seconds)
  done (took 8.948919681 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272872389 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276109601 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272636934 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275467532 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274857895 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272924007 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273077776 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274717742 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276297971 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275192359 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272247068 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276232435 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275979504 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274750552 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276639362 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275387271 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273254939 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273813434 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274051791 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276063545 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273177991 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277201591 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272234254 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272811627 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273290068 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27392059 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276409331 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27455408 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274714147 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275848363 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275971432 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275037873 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27602605 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276457997 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278164375 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277458468 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272317444 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275485988 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277572768 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276523017 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278595393 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278925465 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279440248 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275191992 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277818766 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276894944 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274027788 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273110931 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274205359 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279928946 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278055575 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276804095 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277405504 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278561051 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278205323 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278103464 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275991291 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276610826 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277420647 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275830543 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276917752 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277315092 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276107418 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277096642 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277523076 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27611369 seconds)
  done (took 85.40707885 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27678398 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276462512 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276146602 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277223753 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275891796 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276068948 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276609431 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277495042 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278018955 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277579173 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27986129 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277069465 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276144942 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276827327 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276722762 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275226268 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275019755 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275882548 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275946596 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27927507 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274842913 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276089183 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279208281 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276700342 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278133762 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281156479 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277825039 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278050464 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279901665 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281884409 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276517612 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280412663 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278302363 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277050125 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279066244 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280673934 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280618208 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283392531 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279288361 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281514857 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279615686 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281773532 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280362616 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279305406 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280343831 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280515335 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280846236 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282136451 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279951048 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278364492 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281941707 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280451848 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280552487 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279217285 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279347448 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28001014 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280219518 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279948433 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280533982 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283459904 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281835953 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281068514 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282604269 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280041979 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281033598 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279833215 seconds)
  done (took 85.623392013 seconds)
done (took 1732.453628102 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.283743559 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.318104459 seconds)
  done (took 13.813428265 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.443967382 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.396569544 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.28121816 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.310525463 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.281130094 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.283747006 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.290292564 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.280629303 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.280704767 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.281287573 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.278089254 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.469391757 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.276683635 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.281397588 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.280746155 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.37410327 seconds)
  done (took 42.31156475 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.307900308 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.287591931 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.397291427 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.300583837 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.310268752 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.469334796 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.341970748 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.284671467 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.452921927 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.322748328 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.826218844 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.310568486 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.288318916 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.378226436 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.303495729 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.469005329 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.526000597 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.828423233 seconds)
  done (took 29.617559473 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.730965429 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.319152354 seconds)
  done (took 9.265311755 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.312954441 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.320325899 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.301232936 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.311948088 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.310198952 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.331491477 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.341367236 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.336822963 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.306893984 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.328814976 seconds)
  done (took 64.425923687 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.303725074 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.288077931 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.287809354 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.28529297 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.279203304 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.27792972 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.285780728 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.281021907 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.895156195 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.409712644 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.300569151 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.294574452 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.287950235 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.288221702 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.283800748 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.326674554 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.438480961 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.284367306 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.283267303 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.293234494 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.286799931 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.372863478 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.32632458 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.284059836 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.410429651 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.886094931 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.293399718 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.294893568 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.423623273 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.284759322 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.286673918 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.287218033 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.28829673 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.865961053 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.736318697 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.294719441 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.323880308 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.296516828 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.284556925 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.407559995 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.288281168 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.295960901 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.282892843 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.72315899 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.446730664 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.397186566 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.501905054 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.285281265 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.28965093 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.350178859 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.287084341 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.290945485 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.320299607 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.04019829 seconds)
  done (took 108.631071849 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.313821739 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.769511179 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.450673534 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.302641149 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.0636591 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.957905946 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.281762245 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.566395274 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.305354488 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.282226824 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.614325926 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.778198722 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.284239085 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.316347082 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.960921459 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.337971681 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.279666145 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.090045424 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.284407936 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.287390125 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.707105895 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.29892688 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.311988162 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.446709561 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.321097642 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.761074437 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.747506139 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.737730036 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.286380001 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.283627957 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.743727931 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.292535975 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.289436111 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.28232206 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.558146593 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.639313226 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.630409911 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.284917622 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.295482166 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.284989956 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.280447328 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.754981528 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.640756058 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.285490337 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.2981239 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.759074553 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.284418604 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.287450983 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.287008024 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.483950941 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.01048316 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.284926163 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.748379338 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.28452169 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.547006015 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.296335158 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.359972603 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.77492827 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.283063748 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.369752373 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.294058741 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.281312504 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.29004266 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.286133766 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.288751246 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.628059423 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.38627727 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.28448608 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.632492298 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.74625804 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.285005784 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.805384822 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.206537925 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.310928841 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.354854078 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.283561147 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.870451591 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.773322635 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.290327306 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.284145746 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.618308392 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.284277303 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.606282996 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.301705053 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.282975504 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.721657621 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.306022669 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.292351524 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.28624505 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.29787091 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.91358961 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.289435415 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.55324813 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.317886837 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.284225853 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.287646362 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.329836055 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287554843 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.284310861 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.290139722 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.80771601 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.294712152 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.597843126 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307064226 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.287842393 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.285475162 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.290187384 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.286771849 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.503431276 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.817182143 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.292399471 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.289347972 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.297842664 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.292131416 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.4321949 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.290656194 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.592456469 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.287991069 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301501211 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.293365036 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.020745638 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.295630574 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.287625969 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.293293597 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.122982697 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.504564391 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.308729929 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.290115215 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.29262649 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.302384778 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.643940092 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.286758103 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.302913897 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.291726893 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.992101288 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.32510661 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.291309266 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.672150367 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.297878812 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.290173524 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.288214732 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.288809702 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.594728132 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.565323971 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.319723968 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.291956725 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.302966482 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.976969902 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.304789647 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.431045947 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.309873686 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.296678151 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.488583264 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.690227732 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.289515049 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.846727959 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.289201886 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.500469107 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.2908739 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.621630502 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.779309551 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.288704948 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.295125175 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.996386894 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.968531993 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.95835073 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.291354805 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.622255027 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.2839532 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.746267224 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.290249676 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.288319231 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.72245094 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.292854033 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.294040578 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.291442209 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.291016017 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.440507494 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.467765041 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.119278253 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.300112671 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.75008355 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.314481442 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294030803 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.294304938 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.292536277 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.646695379 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.36899602 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.292800815 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.325366703 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.291738593 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.291931208 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.758723903 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.241439915 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.291674667 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.447526112 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.919321375 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.293134381 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.292674568 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.946573078 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.582387054 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.796024765 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.319180274 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.599149624 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.299299244 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.331864194 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.009322981 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329318699 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.801622631 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.294406403 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.289922919 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.8829458 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.292180408 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.635952289 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.293762041 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.303936008 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.817102244 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.29178293 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.300363886 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.657034402 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.290665943 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.539744889 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.292640337 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.304151439 seconds)
  done (took 1101.585439489 seconds)
done (took 1370.864739338 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.29422781 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.293386951 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.283559854 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.296060698 seconds)
  done (took 26.398316841 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.304815306 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.302037132 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.301552501 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.300316482 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.30202854 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.302472549 seconds)
  done (took 9.047362741 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.452886232 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.29526819 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.295663166 seconds)
  done (took 19.277350888 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.523997544 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.554524795 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.670318486 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.455448815 seconds)
  done (took 10.438753482 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.302686741 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.302507939 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.301509506 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.302053569 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.304970214 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.305582741 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.303858895 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.306278233 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.308091133 seconds)
  done (took 12.969307583 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.271384513 seconds)
done (took 84.633719675 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.330274435 seconds)
    (2/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.400913152 seconds)
    (3/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.589151964 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.790117186 seconds)
    (5/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.630767812 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.168992397 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.557224423 seconds)
    (8/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.653829724 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.839394325 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.131768925 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.333775492 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.324564474 seconds)
    (13/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.671939456 seconds)
    (14/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.613565791 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.703057007 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.306826273 seconds)
    (17/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.875882556 seconds)
    (18/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.321664169 seconds)
    (19/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.095607432 seconds)
    (20/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.693879827 seconds)
    (21/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.323585838 seconds)
    (22/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.49579536 seconds)
    (23/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.776959819 seconds)
    (24/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.121356284 seconds)
    (25/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.238206048 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.383419964 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.422253999 seconds)
    (28/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.307889653 seconds)
    (29/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.231237016 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.07074067 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.102386254 seconds)
    (32/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.330923799 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.299920168 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.281813941 seconds)
    (35/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.382956372 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.724431467 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.297083764 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.553312758 seconds)
    (39/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.306545048 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.402898847 seconds)
    (41/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.300195389 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.347629092 seconds)
    (43/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.489512331 seconds)
    (44/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.704672514 seconds)
    (45/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.283743463 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.324306194 seconds)
    (47/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.300538773 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.281754315 seconds)
    (49/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.321082391 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.669102674 seconds)
    (51/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.439623693 seconds)
    (52/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.419465469 seconds)
    (53/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.325667043 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.385027018 seconds)
    (55/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.68871412 seconds)
    (56/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.3077333 seconds)
    (57/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.656109778 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.40781793 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.56161522 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.727674388 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.314164184 seconds)
    (62/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.193288582 seconds)
    (63/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.33065741 seconds)
    (64/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.737821187 seconds)
    (65/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.300490829 seconds)
    (66/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.351956489 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.217929063 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.356133397 seconds)
    (69/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.767393606 seconds)
    (70/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.740440024 seconds)
    (71/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.358876145 seconds)
    (72/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.600818546 seconds)
    (73/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.319502508 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.298801201 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.671384763 seconds)
    (76/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.899194354 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.298394172 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.805166476 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.699245248 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.931276046 seconds)
    (81/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.54375151 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.317504041 seconds)
    (83/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.886426159 seconds)
    (84/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.4897126 seconds)
    (85/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.379071771 seconds)
    (86/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.456139163 seconds)
    (87/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.432021936 seconds)
    (88/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.361623411 seconds)
    (89/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.360052857 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.032804634 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.551592782 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.782267862 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.30002968 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.430096531 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.285669439 seconds)
    (96/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.304390937 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.379616656 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.678077248 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.309976894 seconds)
    (100/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.328318202 seconds)
    (101/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.287898891 seconds)
    (102/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.707751528 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.351962568 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.291763167 seconds)
    (105/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.427407165 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.295069847 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.437906141 seconds)
    (108/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.888462512 seconds)
    (109/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.928375257 seconds)
    (110/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.297524109 seconds)
    (111/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.365004672 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.562541048 seconds)
    (113/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.511684288 seconds)
    (114/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.402301564 seconds)
    (115/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.328633939 seconds)
    (116/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.290246541 seconds)
    (117/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.421539607 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.289121211 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.624183713 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.264775177 seconds)
    (121/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.459053128 seconds)
    (122/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.302653519 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.507820665 seconds)
    (124/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.493652798 seconds)
    (125/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.327677176 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.206120662 seconds)
    (127/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.426477865 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.469701548 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.316328263 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.32780278 seconds)
    (131/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.495302661 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.154560359 seconds)
    (133/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.901905556 seconds)
    (134/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.767720879 seconds)
    (135/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.938414434 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 1.82031679 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.32569641 seconds)
    (138/309) benchmarking ("sort", BigInt, false)...
    done (took 6.302670356 seconds)
    (139/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.424411172 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.377830877 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.581853191 seconds)
    (142/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.672256553 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.075085591 seconds)
    (144/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.319250098 seconds)
    (145/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.920802673 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.563878648 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.415982012 seconds)
    (148/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.223776181 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.67180652 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.984026992 seconds)
    (151/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.330682499 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.408483865 seconds)
    (153/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.692056191 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.383258833 seconds)
    (155/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.315553534 seconds)
    (156/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.060070317 seconds)
    (157/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.292543248 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.2080823 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.953595148 seconds)
    (160/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.358090287 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.977208436 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.327901968 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.131231572 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.101032829 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.330126219 seconds)
    (166/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.896354604 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.413348764 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.713866703 seconds)
    (169/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.304152124 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.407678429 seconds)
    (171/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.331608805 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.329556289 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.997895682 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.30088552 seconds)
    (175/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.080708533 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.725281994 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.821002379 seconds)
    (178/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.64334509 seconds)
    (179/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.474376263 seconds)
    (180/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.392655672 seconds)
    (181/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.180235373 seconds)
    (182/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.396742291 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.71729137 seconds)
    (184/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.554065942 seconds)
    (185/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.526560903 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.341031419 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.805071558 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.308255654 seconds)
    (189/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.062294489 seconds)
    (190/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.6239089 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.680293591 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.235227891 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.331827089 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.292871447 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.316162448 seconds)
    (196/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.330118871 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.319018431 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.389946274 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.317270318 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.84803894 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.347809038 seconds)
    (202/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.611762488 seconds)
    (203/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.9423408 seconds)
    (204/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.129317335 seconds)
    (205/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.581323622 seconds)
    (206/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.326833098 seconds)
    (207/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.336812032 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.292527238 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.286953179 seconds)
    (210/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.922864899 seconds)
    (211/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.914632939 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.364710912 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.199549966 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.807771035 seconds)
    (215/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.631283534 seconds)
    (216/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.390014791 seconds)
    (217/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.909271223 seconds)
    (218/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.694375155 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.85221734 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.161962076 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.511435929 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.983094033 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.804713104 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.334852549 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.916110609 seconds)
    (226/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.311439769 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.153293936 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.318594085 seconds)
    (229/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.307995868 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.720240966 seconds)
    (231/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.445854343 seconds)
    (232/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.060456499 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.352630961 seconds)
    (234/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.869443759 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.332050286 seconds)
    (236/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.324799595 seconds)
    (237/309) benchmarking ("sort", Int8, false)...
    done (took 4.401189099 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.309390042 seconds)
    (239/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.145766449 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.363220091 seconds)
    (241/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.322788132 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.362619086 seconds)
    (243/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.952273763 seconds)
    (244/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.374355667 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.309070963 seconds)
    (246/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.702733681 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.595485919 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.912006608 seconds)
    (249/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.395833325 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.31856509 seconds)
    (251/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.373540598 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.308598899 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.321494963 seconds)
    (254/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.447487729 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.161165514 seconds)
    (256/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.404367224 seconds)
    (257/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.690660987 seconds)
    (258/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.525099015 seconds)
    (259/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.691824204 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.524050254 seconds)
    (261/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.446349785 seconds)
    (262/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.324205034 seconds)
    (263/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.320294921 seconds)
    (264/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.310548743 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.36148794 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.985684981 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.598543034 seconds)
    (268/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.100924025 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.180641939 seconds)
    (270/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.55013571 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.671713989 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.322175066 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.690904574 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.33990672 seconds)
    (275/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.628950019 seconds)
    (276/309) benchmarking ("sort", Float64, false)...
    done (took 5.6356729 seconds)
    (277/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.937313893 seconds)
    (278/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.397773988 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.359811566 seconds)
    (280/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.167575534 seconds)
    (281/309) benchmarking ("sort", Float32, false)...
    done (took 5.339706383 seconds)
    (282/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.319825889 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.394909565 seconds)
    (284/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.158257372 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.766579708 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.394373683 seconds)
    (287/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.378123806 seconds)
    (288/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.917449492 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.738797958 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.441021055 seconds)
    (291/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.629102802 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.498546014 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.312280297 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.31207885 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.336386686 seconds)
    (296/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.375884037 seconds)
    (297/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.417608861 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.357448291 seconds)
    (299/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.937324413 seconds)
    (300/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.617633422 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.693921767 seconds)
    (302/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.775767361 seconds)
    (303/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.438870751 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.433849387 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.717029418 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.334029406 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.955638588 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.335815394 seconds)
    (309/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.324364663 seconds)
  done (took 919.467051566 seconds)
done (took 920.701258677 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.347493365 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339635428 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.323364069 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.345928841 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.436035095 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.352414928 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.33475048 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.326488252 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.37176625 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.375062555 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.325161056 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.352200512 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.327292494 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.324552982 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.324290926 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.339860841 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.33599853 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.324775329 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.342463244 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.335678327 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.343035887 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.325531469 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.377511431 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.352911021 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.33192037 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.330393624 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.3288531 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.345696074 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.438791585 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.330872841 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.329520218 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.336928191 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.338502316 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.323511798 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.321515999 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.347121879 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.337605329 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.335089963 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.329399469 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.360317502 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.803168516 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.328341909 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.329685935 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.327226702 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.328584254 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.33264422 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.330252101 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.334276103 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.341408048 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340270237 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.741109123 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.34155666 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.330732319 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.329218275 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.339471401 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.328261609 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.333240413 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344566432 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.346911155 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344671134 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.333280128 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.330486743 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.331500567 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.346211653 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.336271131 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.789498275 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.325442144 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.335067222 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.757765488 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.334053857 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.782490344 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.334794276 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.330604984 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.343933623 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.360974119 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.342495661 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.32332942 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.32920089 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.337577098 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.328780297 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.340117836 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341085158 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.334399094 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.33178828 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343927832 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.358160731 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.341195542 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.330532956 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.340174842 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.350339585 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.336734783 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.34109203 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.333080724 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.326197064 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.340253434 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.333939846 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.333769653 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.331888636 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.335296399 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.342834378 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.753853557 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.345490366 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.328572988 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.326523901 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.329868534 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.344216873 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.753835998 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.329706949 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.351361676 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.378323921 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.333679751 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.339104912 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.333889568 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345700013 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.338653008 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.334321802 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.326349611 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.341049359 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.748077276 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.344417239 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.333267894 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.329794101 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347052306 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.332284852 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.327745972 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.348908135 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.330282747 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345702948 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.451731987 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.342832159 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.363329337 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.330410432 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.334140963 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.35965748 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3475708 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.362608995 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.334714246 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347596382 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.347731932 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.329273297 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.342770769 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.342350074 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.333718267 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.339275335 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.326257691 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.361028757 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346779568 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.344574477 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.353414801 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.453245563 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.33050976 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.34421745 seconds)
done (took 224.576962823 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.392071461 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.328666364 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.42175301 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.329988921 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.432042785 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.427642373 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.328287061 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.330400804 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.327535315 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.7110361 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.327668465 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.329229491 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.326974967 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.327604724 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.414376208 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.32958037 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.328235343 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.671561942 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.331257766 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.401814981 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.327009421 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.328232891 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.330697873 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.711439271 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.331655732 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.329607063 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.400954582 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.331564309 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.677391384 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.33067886 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.329504595 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.677219647 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.421039889 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.348477844 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.342564959 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.339306839 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.431320243 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.34645969 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.413247478 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.411807251 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.424743057 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.37146449 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.332452173 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.326560926 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.334098075 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.333778706 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.32838976 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.358941661 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.324309505 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.339462249 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.676961889 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.332493466 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.340106777 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.33049536 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.330420421 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.359328256 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.329256357 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.333440642 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.422321016 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.332164454 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.395121127 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.713956043 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.71129428 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.330971846 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.330556751 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.330940654 seconds)
  done (took 148.313729231 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.400386343 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.40500496 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.446250721 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.330832529 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.382814617 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.452956458 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.333939069 seconds)
  done (took 11.01415374 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.338248342 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.334916144 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.384376648 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.38222207 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.33386301 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.479912339 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.333380265 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.345133268 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.331943553 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.387381911 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.335850436 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.335908196 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.340324543 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.331849475 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.383478747 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.345635666 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.448764127 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.333284411 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.334708371 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.490594873 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.333428675 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.342775771 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.387815755 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.34597793 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.335773978 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.341369105 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.905919011 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.334444514 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.333009077 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.335058504 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.332772225 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.3745006 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.335267504 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.329399434 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332763018 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.453600854 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.336747308 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332576242 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.337310143 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.334678272 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.334941509 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.335935913 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.336844749 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.333784881 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.336020403 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.359102791 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.335403245 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.336204163 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.334496429 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.335912577 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.386152638 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.335582386 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.334920143 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.334155107 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.392924022 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.343597341 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.336689327 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.335123735 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.338054337 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.334779298 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.495526352 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.384778828 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.336134998 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.385809133 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.338222683 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.338038844 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.337568711 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.337057044 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.391294109 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.33716013 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.385896781 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.335476353 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.494524585 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.361275035 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.337466685 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.341791301 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.338738407 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.337667241 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.33783365 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.343853172 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.335890761 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.339638562 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.343635427 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.336352011 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.336374238 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.441651108 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.447578763 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.335392164 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.352316134 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.346507493 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.335259759 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.3921595 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.339192407 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.336989112 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392611881 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.453682277 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.391998733 seconds)
  done (took 153.498122595 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.342840136 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.347399054 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.341977843 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.356038589 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.340300872 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.340349272 seconds)
  done (took 9.338467453 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.340349241 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.341492736 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.34005198 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.341392317 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.341635351 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.338502888 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.341460459 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.342058567 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.345041241 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.339806271 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.340901485 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.341686306 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.341981985 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.342124516 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.340591027 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.338554688 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.341224049 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.338314285 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.340579497 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.341504548 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.446501408 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.341968735 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.340959524 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.340664599 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.344086629 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.340751594 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.349664611 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.339718917 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.342320297 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.350031046 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.343374751 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.342018277 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.343146688 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.347304744 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.345560163 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.344570037 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343763516 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.342498641 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.338678852 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.34195882 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.342633576 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34250045 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.340393737 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.343901814 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.342782906 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.347024734 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.34795172 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.349194016 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.342810609 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.343032779 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.342690555 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.342427771 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.344850971 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.344290258 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.347530518 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347932494 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.348275469 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.343797093 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.342658461 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.344601699 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.344417631 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.343976809 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.344964619 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.347121313 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.340768952 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.344214273 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.345702979 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.347868481 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344298618 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.342238423 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.346007285 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.341607699 seconds)
  done (took 99.085814064 seconds)
done (took 422.511288433 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.832389003 seconds)
  done (took 8.106448985 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.445506472 seconds)
  done (took 7.720651846 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.29362091 seconds)
  done (took 21.576557631 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.425158329 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.356112054 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.357067456 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.336345251 seconds)
  done (took 26.750442069 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.851926967 seconds)
  done (took 8.126001368 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.349438329 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.335690932 seconds)
  done (took 13.962119938 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.394352195 seconds)
  done (took 7.667673516 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.939749474 seconds)
  done (took 8.222204316 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.360540984 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.34484005 seconds)
  done (took 14.249021353 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.321880238 seconds)
  done (took 7.597445244 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.767205754 seconds)
  done (took 9.040315525 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.330827602 seconds)
  done (took 7.604981326 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.402629852 seconds)
  done (took 7.675417647 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.309113633 seconds)
  done (took 9.580830303 seconds)
done (took 159.153894711 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.333526232 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.33487631 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.339383901 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.334947318 seconds)
  done (took 26.613126175 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.378209196 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.373678286 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.379234138 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.387338693 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.379952317 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.376238855 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.367096053 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.368341147 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.388041403 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.379635926 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.378446681 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.377212739 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.375274427 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.369466241 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.378768896 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.377603433 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.388040034 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.37882967 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.370942877 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.380027599 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.345186911 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.388099273 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.379214989 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.344345218 seconds)
  done (took 34.283697263 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.538898458 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.415026215 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.496511808 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.396824971 seconds)
  done (took 7.123466132 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.394587427 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.398325697 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.409468505 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.448352235 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.491388255 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.40817092 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.371813675 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.363667464 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.351518562 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.398065044 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.472145197 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.415875774 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.483208552 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.343845783 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.529991925 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.346107727 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.344768836 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.397220652 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.449138923 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.466737373 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.345747686 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.396499132 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.403080414 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.415526419 seconds)
  done (took 35.119636446 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.342343626 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.351190866 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.350952739 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.344958762 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.343644193 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.346397263 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.349394367 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.345547959 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.365264426 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.346226987 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.345024148 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.342441437 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.344105293 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.343185317 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.343187888 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.356983926 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.357178303 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.345622521 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.347607079 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.351293569 seconds)
  done (took 28.23859513 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.338888066 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.238467724 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.690004912 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.594593946 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.33621139 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.339074658 seconds)
  done (took 28.813132208 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.416765599 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.553355536 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.346339198 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.721889006 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.804774859 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.34789549 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.347356653 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.583492763 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.899207747 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.915634402 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.401618395 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.411601789 seconds)
  done (took 20.029384859 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.353754764 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.338840205 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.338807224 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.355623325 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.402469362 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.349553055 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.352815355 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.339533569 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.404365233 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.408018211 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.350934263 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.404326791 seconds)
  done (took 37.67800129 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428128991 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393572886 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.417253373 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.175792863 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.725737611 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552157614 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.218322336 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.787532253 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.347517079 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614577283 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349730044 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43009058 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599054887 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355390214 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.342072293 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.379858881 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570367613 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848407566 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342706713 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.387956246 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364407856 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.356048303 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.580447412 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.369925608 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554453751 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.474590363 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.728522291 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.342254977 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634509745 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.352828794 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352170215 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343491815 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617704683 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039615062 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437253398 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353878313 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.207400012 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.058909444 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.328143947 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.466061711 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345986115 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.34261743 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355278344 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343479592 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.278541286 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340341869 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797777917 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.350237826 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.05510223 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.344734974 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356312256 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439975574 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.346207216 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.164894568 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.442482015 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344685773 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.342390031 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349343113 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912539802 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.842324398 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351272245 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.279968099 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.513271177 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.471164643 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976923731 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.447038088 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.349383499 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347936566 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279269534 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.471792533 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364116268 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484017749 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.362977519 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.008311954 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075431793 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.347658356 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.274489977 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913989372 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349331046 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.279930456 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.574706165 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34498609 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287058723 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.294124595 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.280869504 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07717109 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353124862 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.782025791 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351977056 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.791484968 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.358814249 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367446745 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36881127 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.570221122 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.231410151 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346255272 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.35657035 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465590277 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366976205 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.79436591 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284570476 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.34831861 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605637535 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.559299004 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345387051 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.386693472 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558721913 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364224546 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.362899292 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.34651878 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.356674601 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.945194793 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360952987 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.941923367 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364322134 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348482804 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118230427 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363043877 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.450040585 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.349396754 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60300042 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.140702206 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348714284 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42927505 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352311343 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349880989 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.52813802 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.867971499 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.348695944 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.351277053 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357786778 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.358783464 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.349178629 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304480512 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.346231192 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348000398 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.348561389 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.57634772 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348444088 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624537251 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282826754 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48883588 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.416424897 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.57106698 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.576435682 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.347813915 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608256029 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357428777 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.353363853 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361114142 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366804824 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447572119 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371261244 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.360875678 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.60815394 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.352252032 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.354162108 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.514967946 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.816271933 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358336321 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.354169531 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.237236051 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949652316 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324767783 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.356858749 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245830598 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.362759616 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415892322 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.354595928 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.358625676 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.244230501 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.316532767 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.35535383 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.351467949 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573996592 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.360812435 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.521883687 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431298677 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.557891729 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.95545048 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364260802 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.284894352 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.064147703 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.042007894 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350097135 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.286764124 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351162121 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356647919 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.361786526 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.6755735 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.955854595 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35542129 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.427779922 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.357558838 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364309304 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.356578209 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351913079 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.210650805 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.886357687 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36766462 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.364625219 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496966161 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.365407915 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.287571512 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.3565439 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359431946 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354016139 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.355044825 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383693559 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.436212217 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844523467 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610011375 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.226355511 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364101803 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.614771811 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.381404955 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.354076125 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352712406 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368652846 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.366646547 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374169148 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.36289881 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.495793027 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.022323109 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91909972 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093387289 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904468262 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366615242 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.364906879 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353285255 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.804426163 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28916073 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.912522294 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552349878 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.807241697 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30984711 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55942864 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.576146148 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151251899 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363402205 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583289346 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366337202 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.36272284 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367636372 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567620285 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388335402 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.355313109 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.287525271 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.642134761 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591818315 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354630029 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432466988 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80575918 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366082087 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.355406254 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.35172367 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.755993216 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533378588 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.069238999 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.533063853 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357665004 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356896277 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841222949 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.36253663 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.587047317 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989792214 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.355573072 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.567236861 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29786367 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.367688596 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.365188654 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.358894622 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.745248987 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.356785027 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.609914687 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364804983 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288873072 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358439354 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90357764 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.212423876 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.363458829 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353553068 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121898713 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355089745 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662725816 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.358379068 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.245188745 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362291401 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288829186 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290389036 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.04820503 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.364708848 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32582566 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865610091 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.465810198 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.443763517 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378283856 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203774624 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.611083905 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.370030937 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.959427698 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583481944 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.289349694 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379134615 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.457388839 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371403481 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.343080778 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.354908693 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594434855 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.234423832 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.58291015 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.438725314 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.257428865 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.354588891 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570736885 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.357333183 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374280791 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613081964 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.069619825 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.382100917 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085634912 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38131336 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373084829 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277220417 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.523502847 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364735789 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437315423 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368135461 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.366316468 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.369592976 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539806802 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36033156 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360824815 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.371527937 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452019706 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.989439262 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.208045138 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.360515577 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963245121 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113242021 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.967489519 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372716529 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.357810758 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364068289 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29347957 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505547976 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.589993785 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63320004 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476773625 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.573507621 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382373204 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376179601 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370311199 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57445778 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633358076 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.260651781 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370708746 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.375121001 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.35810992 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371429946 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.572856233 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881796623 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937418263 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483344556 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.364506529 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.808785849 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635570624 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361394129 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36059942 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.957723682 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.37840482 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.794972845 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.367568466 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375392145 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506559964 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371449707 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06178224 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.371112527 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.521060888 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.134104503 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.557674542 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.618180718 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.892754793 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.373322894 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981686039 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.09338702 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627569581 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429935404 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37473497 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.478268145 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508312277 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.371944677 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363317666 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361569649 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21124503 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.073183012 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.373945755 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976469303 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628593497 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.358800873 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.364594352 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385357826 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.373155735 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.58885075 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10135482 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58778268 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372238896 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371604609 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.180577295 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9758895 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378774565 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297700961 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.366065466 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618190831 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.601347811 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387299093 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.817290172 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.073775982 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937789777 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.339656873 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384602102 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377751372 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.099244109 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970037114 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.249807199 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882940105 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.932974313 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366398096 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639976592 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.369249739 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369952163 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639164332 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.367319587 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.378378317 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375120508 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.963443454 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17144955 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.367176089 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.485172014 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.302379831 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708452369 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056077096 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302475819 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373882564 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.556521516 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367937906 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483365279 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376222756 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.362418224 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376003395 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.122653429 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679802685 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.370016462 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.355594078 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.362126005 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.378051929 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374428465 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606378297 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372381362 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.03862483 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.717797908 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626053403 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.363845682 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.350089617 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.370516716 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364616673 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.363456372 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.572449971 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.687886363 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950460301 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.369062085 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.379144077 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371737648 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.584846799 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577731571 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364182525 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382472879 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367565576 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389019594 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.277069007 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.876801676 seconds)
  done (took 1609.000654561 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.410835339 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.396333716 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.407865166 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.435971912 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.42754232 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.478214064 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.418929182 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.491870961 seconds)
  done (took 52.771117485 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.36510371 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.593651347 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.400417846 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.382512812 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.374192939 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.375588051 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.83804739 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.368051631 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.374017771 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.377108039 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.366731752 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.373135179 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.023385777 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.378663974 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.381034853 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.355789959 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.376247253 seconds)
  done (took 66.013207881 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.366129139 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.568017294 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.394811342 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.372306225 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.585106069 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.366934217 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.481379757 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.368989297 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.365895527 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.506085742 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.0386345 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.379322497 seconds)
  done (took 80.09962152 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.376010979 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.375456761 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.375112508 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.375377489 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.372505118 seconds)
  done (took 8.180113929 seconds)
done (took 2035.238672191 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.755553592 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.100425269 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.071701322 seconds)
  done (took 5.47810264 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.518818176 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.563109366 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.731665645 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.712911096 seconds)
  done (took 7.830060433 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.641803962 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.748860666 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.554251668 seconds)
  done (took 6.24641526 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.834719411 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.395937915 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.44481368 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.363496048 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.365560289 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.371067822 seconds)
  done (took 20.406092761 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.373651628 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.376990159 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.370862458 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.374330976 seconds)
  done (took 6.799681734 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.352450424 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.125796068 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.354421057 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.368159938 seconds)
  done (took 18.503571107 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.117760021 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.131455368 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.116433669 seconds)
  done (took 7.668553798 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.367505132 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.227002348 seconds)
  done (took 9.895729077 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.697164081 seconds)
  done (took 2.999305898 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.502576479 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.637750757 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.433894766 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.366902038 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.452581255 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.433975186 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.115117669 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.667667028 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.355116705 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.681468566 seconds)
  done (took 28.950692957 seconds)
done (took 128.515428829 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.309290307 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.77204355 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.570498479 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.277500468 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.601077313 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.571311212 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.638561603 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.249250187 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.789247104 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.776538213 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.324627243 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.600363055 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.809811333 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.772963523 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.808851472 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.390360697 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.598587335 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.353343984 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.972350846 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.203069049 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.635765464 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.916816371 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.152227891 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.935687653 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.601476337 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.521105525 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.495051887 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.390287461 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.146482461 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.516453104 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.521974404 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.371779118 seconds)
  done (took 193.899903271 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.371092159 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.369928064 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.371178539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.368405201 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.404505639 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.36792668 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.370818801 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.369313432 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.38136547 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.384471068 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.369188821 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.369873868 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.37046369 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.384500029 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.370949954 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.370535193 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.384956519 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.370725882 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.368684775 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.368975583 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.384085756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.372352443 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.371684856 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.369145425 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.379876361 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.370713015 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.370716232 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.38203554 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.370800098 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.381608237 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.36997256 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.371529434 seconds)
  done (took 205.292755428 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.380178217 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.370158787 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.371716759 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.394484 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.371256919 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.372391488 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.390948727 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.372924168 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.376782339 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.370739488 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.371575552 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.371911725 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.385549853 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.370896766 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.372272008 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.380829127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.381974598 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.379584508 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.371391973 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.384466322 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.375347266 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.371283013 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.370617844 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.372811964 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.373962507 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.38480262 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.371026687 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.402263883 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.382235659 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.369817779 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.386502161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.374062464 seconds)
  done (took 205.387785591 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.577788801 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.380244416 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.38062629 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.332007792 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.383121459 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.382637205 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.375504669 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.57836744 seconds)
  done (took 14.701580638 seconds)
done (took 620.587141941 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.769258358 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.476929908 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.588284389 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.400844683 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.208653839 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.405397115 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.399309883 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.579270238 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.338090175 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.581905046 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.726136204 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.399695493 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.875376945 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.400525369 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.666226058 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.50348569 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.316212562 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.433428871 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.733108437 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.982136733 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.675827328 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.924745254 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.585163652 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.33856031 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.830794969 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.917871157 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.141556347 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.286831961 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.402887383 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.730000636 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.077304656 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.403663499 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.467690678 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.449084414 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.506742879 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.48631562 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.348317157 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.444603353 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.598396089 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.628879993 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.97619929 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.135327994 seconds)
  done (took 94.451034263 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.374106675 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.371507019 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.373137264 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.373593244 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.373870346 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.372745142 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.373277381 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.372410867 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.374733432 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.36960649 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.375601237 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.373922091 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.373904955 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.374938335 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.371263439 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.373129808 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.3733022 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.376293396 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.372472226 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.371472971 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.375520652 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.370327636 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.372791013 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.373301771 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.373358301 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.372341309 seconds)
  done (took 37.021460206 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.388265167 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.637676795 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.827350882 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.393540771 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.389564179 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.393588191 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.467735383 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.389176397 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.392721293 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.390530202 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.55520694 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.391497448 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.425743484 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.826242099 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.390629324 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.389563944 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.387730276 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.388997968 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.639743266 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.396171406 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.472383495 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.388779045 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.469283274 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.395816833 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.39377206 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.388989724 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.391989516 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.88831995 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.391103111 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.548856071 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.19568594 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.470764751 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.840512674 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.842336916 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.197941595 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.391248391 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.39122966 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.557995545 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.390613053 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.387588053 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.470288479 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.390356456 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.850245663 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.050621589 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.406367207 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.387793744 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.914585746 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.555176511 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.643486318 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.395547713 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.865347191 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.394029246 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.392330704 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.389977982 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.647641183 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.396036026 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.38976602 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.95053496 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.396364743 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.470183725 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.393047966 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.388898663 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.649942896 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.389964256 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.64093686 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.391661237 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.397720887 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.392421291 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.854074202 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.39296327 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.054641001 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.40889492 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.389257185 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.554054349 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.639070179 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.963258214 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.394399457 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.65654366 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.865384031 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.472346878 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.395533757 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.878311428 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.476983344 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.394208031 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.394314649 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.394439669 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.393217483 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.436407532 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.471386307 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.990909228 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.064898495 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.960367001 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.476804676 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.405685189 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.393323744 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.946012029 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.409453586 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.391451698 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.844518356 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.051513921 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.408297605 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.401469929 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.044695634 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.412866069 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.474463404 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.399395653 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.855373847 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.400854769 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.438572205 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.393192653 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.402262898 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.398556723 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.47912552 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.397101252 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.39404257 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.03837822 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.578508159 seconds)
  done (took 182.911253178 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.405221326 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.384546902 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.389254228 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.3832445 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.387444912 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.39421836 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.384835353 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.385777725 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.391735396 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.38676091 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.387870486 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.38741303 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.390012032 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.385483266 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.396474243 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.395129621 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.001393542 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.388632844 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.390557074 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.386221749 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.191941005 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.392657522 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.389518406 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.38567947 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.38849903 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.388471453 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.390922266 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.388536955 seconds)
  done (took 153.644006437 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.397030439 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.007810781 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.400265327 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.532468472 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.416868017 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.391310556 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.5338941 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.45345586 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.39747204 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.391175951 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.394680685 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.722927264 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.396003794 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.927839125 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.592101072 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.534505272 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.951083267 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.398877014 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.392410821 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.393767102 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.533857067 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.403546633 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.727929936 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.010946404 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.3978662 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.010991493 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.38627808 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.39511694 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.395003811 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.013287736 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.395909506 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.724481163 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.478377214 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.459477221 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.011344777 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.953820628 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.959878112 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.549697737 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.396335876 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.396790141 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.394971644 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.386085668 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.012426785 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.399346608 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.396315642 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.005387733 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.411667248 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.397767393 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.405641009 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.393332042 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.455980932 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.459872061 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.72769044 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.018861838 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.478304684 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.421895704 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.534695442 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.783644648 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.397406149 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.932471827 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.38414634 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.015798992 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.402638441 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.385219519 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.396599598 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.402411643 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.556533063 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.537879005 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.933148748 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.398970261 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.961307995 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.557995928 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.396358394 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.396282501 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.398096201 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.014759995 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.963564513 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.558891188 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.536502945 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.602627837 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.386687349 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.398422918 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.387731747 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.479256364 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.397517263 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.01864344 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.939342572 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.399098628 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.397806637 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.397702297 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.398099916 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.583831444 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.019410409 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.483394601 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.955293972 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.744669884 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.734531363 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.400242154 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.459997851 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.396254317 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.734448123 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.401548436 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.458190898 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.845985423 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.729913768 seconds)
  done (took 167.32026912 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.649481664 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.664765226 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.492158727 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.514272012 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.955675763 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.967808616 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.634174881 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.529993116 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.509250616 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.645200078 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.645616911 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.487531844 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.588740198 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.479622929 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.128975621 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.470345273 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.494151528 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.522628106 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.516185671 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.454823205 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.056455388 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.693510912 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.57364733 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.62835807 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.496398763 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.172625417 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.950486228 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.915001167 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.580263694 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.732893758 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.926500066 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.55695665 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.405558943 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.107153351 seconds)
  done (took 67.47815651 seconds)
done (took 704.134646769 seconds)
SAVING RESULT...
DONE!
