cset: moving following pidspec: 8741
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.300503334 seconds)
loading group "string"... done (took 0.586684634 seconds)
loading group "linalg"... done (took 7.242577736 seconds)
loading group "parallel"... done (took 0.168249775 seconds)
loading group "find"... done (took 1.1479405 seconds)
loading group "tuple"... done (took 2.022628369 seconds)
loading group "dates"... done (took 1.293632238 seconds)
loading group "micro"... done (took 0.240400768 seconds)
loading group "io"... done (took 0.973682621 seconds)
loading group "scalar"... done (took 39.364858326 seconds)
loading group "sparse"... done (took 12.648061116 seconds)
loading group "broadcast"... done (took 1.005421962 seconds)
loading group "union"... done (took 13.75536133 seconds)
loading group "simd"... done (took 4.460164743 seconds)
loading group "random"... done (took 9.106433226 seconds)
loading group "problem"... done (took 1.978258165 seconds)
loading group "array"... done (took 21.169695897 seconds)
loading group "misc"... done (took 1.916246162 seconds)
loading group "sort"... done (took 3.209867515 seconds)
loading group "collection"... done (took 18.380761544 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.539156827 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141898522 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118725001 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.141623659 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187534469 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133326419 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.147608476 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086542261 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.023030646 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159966265 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13846024 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.474064141 seconds)
done (took 5.060848926 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.205861627 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088890403 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098313791 seconds)
  done (took 0.896462032 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067438149 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129036335 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082195848 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06959888 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067750351 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082312161 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067881418 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066652403 seconds)
  done (took 1.283763445 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075043964 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069650678 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086043743 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068728769 seconds)
  done (took 1.018627179 seconds)
done (took 4.201020832 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.89812682 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.237897473 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189186883 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.451067775 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.151567707 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.191984185 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664657205 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314695621 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208167407 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100695897 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104184305 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.378641571 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106646992 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.657482529 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077340869 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107968706 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160150599 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.425674708 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081828004 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083977619 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105913244 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144357125 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103193108 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079173681 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.172872086 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068891951 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146540997 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095375183 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067334974 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.240257325 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189757623 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685731567 seconds)
  done (took 10.450318449 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101420483 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118940665 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070489502 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141955721 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103079921 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.088019896 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072536646 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084723581 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093769392 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.16152689 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116079805 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.1075212 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08377313 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07063233 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.10254542 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.21427803 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10899331 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086261589 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088408742 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076755607 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124638264 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084510161 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.096821397 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079881371 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15427016 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196895717 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112523963 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11284092 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070975402 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083150128 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133726267 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144624165 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067867965 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083041287 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141080767 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112849643 seconds)
  done (took 4.623572015 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.027888757 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.087982392 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.16062069 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.108964968 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151984749 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066835306 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.126094051 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.079354995 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099349926 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.230977636 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.164146809 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.476291566 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127711217 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.086435015 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06662781 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086161225 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066650081 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.53147752 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.111080118 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135422064 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085134016 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092813603 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071438481 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362639234 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081934873 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066859681 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067493439 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.075105918 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143879626 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068538219 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.208334328 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089687774 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066904807 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120893317 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190875125 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097108461 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.1254136 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066058544 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08129512 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169244242 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074389698 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065546224 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104636036 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1180207 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.10421211 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083736688 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067470345 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180275138 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066477641 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099163804 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.895833431 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166481141 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079265376 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067226663 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288473539 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084325709 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083573669 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063820237 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.275482269 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.153542118 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067337251 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082605537 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066278584 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063127336 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08961121 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365966808 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067402514 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.995978279 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068922746 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077233164 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084703138 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067733086 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089334593 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073159542 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100799695 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066686892 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.06702757 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083534554 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065153281 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083098001 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084400281 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.201334262 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083061173 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091531913 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082039495 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065299431 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084978122 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112658807 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083996693 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06641001 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112904686 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068716522 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066512233 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118613507 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066375797 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101270094 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084052205 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113571925 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082397946 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.141588001 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067742598 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.11366395 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071617109 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117660265 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09472747 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067708322 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15341112 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064406384 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080999586 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064738603 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063833736 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083157131 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067534004 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082236477 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081412578 seconds)
  done (took 21.208538988 seconds)
done (took 38.028385061 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.299061789 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093963031 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092720813 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074656188 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090862128 seconds)
  done (took 1.449779227 seconds)
done (took 2.217420085 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122959238 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118698637 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06410445 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11485114 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064425818 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11897072 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116674855 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082767359 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120083094 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065660266 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114173877 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065238444 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065373471 seconds)
  done (took 2.033934874 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084255799 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086089638 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087253908 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082940245 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080153915 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083823311 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081015913 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106906521 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082048194 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088815068 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064908751 seconds)
  done (took 1.693329283 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083811156 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084325085 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086994016 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081932015 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080237438 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08300786 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081465373 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104119579 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08158397 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090916488 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065009992 seconds)
  done (took 1.689176157 seconds)
done (took 6.170569003 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079176296 seconds)
  done (took 0.839703459 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.689993858 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.654506068 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082500917 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133020256 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.220750535 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153913907 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.436528372 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.108074639 seconds)
  done (took 10.415544027 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10444239 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090178446 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069998787 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088203201 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069154765 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086763861 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071927863 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070492222 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088742942 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072593902 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088006247 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072368202 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084678425 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073129607 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071251536 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086636023 seconds)
  done (took 2.118967044 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095214351 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093749304 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092631604 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076605985 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091854691 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07408536 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094216772 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076451905 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088381306 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074256788 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093011716 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075453092 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089018333 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06700663 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091908966 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077465674 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088674051 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076235007 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092639042 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076802819 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092772409 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066226157 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089301174 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076296176 seconds)
  done (took 2.886170318 seconds)
done (took 17.025845452 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.132348727 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077278515 seconds)
  done (took 0.977285908 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083396938 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09919788 seconds)
  done (took 0.956067478 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08453993 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082685074 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090601622 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095163774 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06809921 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083403733 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.105580011 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068206421 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082404316 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068178667 seconds)
  done (took 1.602062923 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070358482 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094350721 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072624297 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098631564 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075297497 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082243188 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074439047 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086481269 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079162521 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07977074 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07211478 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099989872 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072629799 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101813056 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074171698 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085097112 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087969049 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069301048 seconds)
  done (took 2.251124501 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066825476 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068291985 seconds)
  done (took 0.911295055 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068457496 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064346627 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083250716 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068044211 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080497476 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063540301 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080080017 seconds)
  done (took 1.285119158 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.406396387 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11080839 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.248668967 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.089661899 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10510123 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26737008 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084778691 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072280479 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090175041 seconds)
  done (took 2.292001115 seconds)
done (took 11.048011201 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081201502 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086601684 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112341881 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.420009916 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105060206 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066063529 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132842154 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.223033438 seconds)
done (took 2.004968898 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127025426 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.606119078 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.395852314 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210631548 seconds)
  done (took 1.995053759 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.374610642 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09250597 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075046819 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06882088 seconds)
  done (took 1.394237993 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067481157 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070650478 seconds)
  done (took 0.923061661 seconds)
done (took 5.221847351 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068016831 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.104624381 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067195623 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064719553 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085070997 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.06445234 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064627546 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085069413 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066968925 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066900657 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.084137731 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.070183693 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083197443 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0647712 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064689242 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082820654 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065279082 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064802782 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081106274 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065544469 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065506759 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082824597 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065117723 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064841018 seconds)
  done (took 2.562847582 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087251416 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084383806 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07344589 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089105809 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072167562 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089427529 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072990091 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067976253 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089337986 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069279667 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087445562 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075199615 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085437188 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071992633 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085943836 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072368705 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08861885 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06819065 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069189696 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087864171 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072354841 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084077435 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071498771 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088702283 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07228707 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087744044 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070094522 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084192944 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072648908 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086730919 seconds)
  done (took 3.165136614 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072781062 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064175658 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081679587 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071939714 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064366432 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083440749 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064798102 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08120063 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065964541 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064507634 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.0831889 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065495291 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064522924 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08281975 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066139809 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084085353 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082344739 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065735672 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081488995 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065768616 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067862185 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081541497 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065158603 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081309958 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065207197 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064903474 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08162877 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06477918 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065956127 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081517911 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067924584 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06793434 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.082487941 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071732686 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084632205 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064891781 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06929693 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080776698 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065427487 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064715951 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081146344 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065270058 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064754468 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088791366 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065069419 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083444502 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065032433 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065728122 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082521111 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068074539 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08052946 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065215517 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066545812 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083058162 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068799307 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064877046 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082283522 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064863441 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081761435 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064972146 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06502941 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080674813 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067360308 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065855091 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097059942 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071965257 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080743909 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067641462 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066798501 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083937666 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066847544 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078517475 seconds)
  done (took 6.02876225 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118729268 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092578842 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083976109 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066745032 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080527341 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066175902 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069336531 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081910706 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067861966 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088036432 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066063205 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066282394 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083742032 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078527504 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082210227 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066956234 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087904745 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063149694 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065727319 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08532507 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065838993 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085329519 seconds)
  done (took 2.508184959 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.187620335 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089528368 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111588891 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092605352 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086522328 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074978712 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070641444 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088530416 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07146314 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08663232 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069399062 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087848905 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069834534 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086096441 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069830084 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08688467 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071640445 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086303769 seconds)
  done (took 2.380498588 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078895717 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.0673654 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107713565 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067885624 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085524746 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070251922 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090474205 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075789753 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086843779 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067982265 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092605768 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069768402 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086272549 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067433811 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069454237 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083685785 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070847813 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08365495 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076534178 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088591395 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072449485 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092303806 seconds)
  done (took 2.54669836 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082428228 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06904588 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101968042 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086539198 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064198736 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066100148 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090615452 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067268244 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090536221 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069885615 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067583622 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082867 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072532493 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084959564 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07251474 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084357223 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069473482 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067699281 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086662048 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06343135 seconds)
  done (took 2.337853944 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089395746 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084882834 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06912873 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093970908 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068623399 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085705841 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077458644 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085433294 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069049457 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109154808 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069709077 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08816455 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077110683 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09111357 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068965461 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093880667 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076844184 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094056792 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068791928 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086595849 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110003218 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.181735935 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093655978 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069647045 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085803778 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069149788 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069117024 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090817437 seconds)
  done (took 3.218653867 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067904883 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067567323 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082031787 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065121848 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064928922 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081805078 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065328345 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065353917 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084692055 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065288492 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067147405 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084434763 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067516092 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083400086 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067793755 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06696684 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083395293 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065412103 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065307736 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081919401 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067431359 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06702955 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084228012 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064876749 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081218871 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068176555 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065104514 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081960077 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068031621 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06540483 seconds)
  done (took 2.95695953 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077847949 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091916122 seconds)
  done (took 0.972865709 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066174288 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082145543 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082916677 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071985765 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089638936 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06911564 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092640967 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072034071 seconds)
  done (took 1.428280496 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083868082 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079183025 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086549616 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07981028 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096813811 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084393554 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155836541 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086918485 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074840981 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08341513 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08166431 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067075086 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091905649 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06868923 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09042757 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07508641 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065586128 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090554009 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07039229 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083730462 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069103912 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092850457 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070476698 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064868789 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086784281 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077061577 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.0966443 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068622154 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087411271 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075165916 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073165734 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079284685 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067582144 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08545162 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065825652 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094877491 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083306757 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08746951 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077121391 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068813181 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095662027 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063758967 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089864266 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074878058 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094896627 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068813653 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067966996 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.08097665 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066047981 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086649965 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063172 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067943545 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079833946 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075110445 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088509369 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078993688 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06971413 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087045677 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070820755 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089289499 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075164967 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087324435 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071044802 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067551095 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095249819 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072600995 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094793871 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063324352 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061555113 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083159789 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078766848 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108176822 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074541376 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086515783 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068845802 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082819746 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072015194 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069199231 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091006543 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074461647 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085518501 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074069567 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092208137 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068267388 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070062773 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092721985 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066479372 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088347793 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066371458 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101552354 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067338124 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082390477 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065852544 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07868511 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088272375 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067980996 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082164203 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074937104 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062808466 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085634441 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069033013 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085802611 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078990315 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089852959 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074086592 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093706369 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075834779 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067740995 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089742827 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064748188 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085952791 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067037966 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075347585 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079709106 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070511922 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085598078 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06927425 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07636723 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083936499 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068892319 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092479702 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073700469 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083670535 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064962211 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071020598 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085223956 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071203723 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093913672 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066561098 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062953295 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080455939 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071359579 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08496225 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071494766 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089798701 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071525021 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063122513 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082897533 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072710372 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094140955 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068953039 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068741984 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091991711 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068971506 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084486176 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074719416 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087489094 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067524043 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073828587 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085680147 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063861634 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088339048 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07071387 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067084278 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089041306 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071191646 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087502023 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068852989 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066648155 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090616239 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068938107 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084397041 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068093187 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083351939 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078793983 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069725254 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080564831 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065719444 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092322037 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066764693 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067844603 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084310354 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070835992 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085879263 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065988197 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06702827 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086966559 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078526467 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090208817 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069224571 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090653746 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079540887 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08469027 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070913953 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067443305 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086752873 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069095348 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094185681 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073665732 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089868398 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070625938 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064249931 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091483159 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074609448 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085217854 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066435542 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066710706 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089756999 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073549461 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088520389 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068630241 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083551272 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069103106 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070516695 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088137965 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067778731 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084563264 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072953793 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083694031 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075448563 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068912733 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095339683 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070990155 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081361691 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071021199 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083776362 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074302305 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063312491 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08372783 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068212387 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.08572483 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.0680007 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07098909 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079537673 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075227576 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092907893 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068866264 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067384707 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085237653 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074928363 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086596584 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072838327 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071310048 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092477255 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078517228 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085081422 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071321398 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09555381 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068662995 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062298794 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091156382 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066544954 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084637259 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067385477 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065660286 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088581932 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077149391 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092581388 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06245718 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087452053 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066757113 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067297722 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080963347 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07258137 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087784872 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069333608 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074378617 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086984214 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069231199 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08927528 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068633753 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069089287 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087461553 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071224528 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086566096 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070822244 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067242699 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089472046 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067352295 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083407288 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070662401 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067129699 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085386033 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074020574 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085821905 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06916451 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069776905 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087163768 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069071518 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086003882 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067412692 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088487263 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06995354 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068352952 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088503875 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063524481 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074418497 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086307435 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074850372 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086212673 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065295562 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090757769 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070513945 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072767956 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086650512 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069096281 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086836369 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06828499 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086872765 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075357959 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066177245 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096316545 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075897111 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087007827 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070770498 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067347012 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087978669 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067217192 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087346358 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069663326 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068069854 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08600946 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072866797 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088734041 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068410853 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069099753 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087285075 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068864892 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086554618 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06284514 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067707666 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085199933 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069333121 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095740129 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068958044 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085558822 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067204421 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068658523 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085553494 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064895137 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094003672 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077761163 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086597111 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076596879 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067190339 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088330503 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079037163 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080187807 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066863307 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065480368 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085131808 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075674509 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086949259 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078276701 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085007208 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067885456 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065279244 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086364553 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066692568 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.0625061 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08304103 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072014927 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085194832 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06726376 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067651547 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089156256 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068866846 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095790807 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067881635 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086600159 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068691318 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064850632 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085591901 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067471718 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087794408 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070112556 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066632643 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083555168 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068360278 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06837424 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087369663 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068260176 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087272005 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075129325 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067410215 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089298932 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071167941 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.084636959 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071655207 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085628853 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068509304 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06693132 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089323079 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071605796 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087006597 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077080833 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066799149 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088317609 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068986628 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084321754 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068266585 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067711071 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086393828 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067720953 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087513093 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076566616 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065023581 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089610828 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068185298 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086388837 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074794919 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086608344 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072081534 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092439491 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069331415 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069863645 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094184892 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072331439 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089085871 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070323206 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068594234 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092156136 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067695088 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092402628 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069215103 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086017847 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070345496 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066569168 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086925852 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068363495 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06721215 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092480618 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069295378 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085794199 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068137914 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066181379 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087871619 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071306895 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093572518 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070692459 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088752911 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064049537 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065362798 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086920687 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066608758 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086717797 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072529628 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073061056 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088998515 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.0686348 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08482501 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077796854 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073322021 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09064024 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066730867 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.08951004 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069137042 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08784704 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069213178 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068251037 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088130813 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072489986 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087119968 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068209384 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075186461 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089588086 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070584194 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087581523 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069480887 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06756527 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081305748 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069020352 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087762869 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073399097 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06992301 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085816328 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078455845 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084341021 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069238486 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088975166 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068570952 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072772888 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081727498 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070252855 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08669777 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069654262 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063188806 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086124255 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067083514 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087740296 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067930065 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063984426 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097151332 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077970207 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089644134 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067730832 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067007709 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081830597 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063593724 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085462817 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069749244 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067951895 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097267359 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067873296 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085860815 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064606277 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068039104 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090430558 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072194204 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084050422 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064536176 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066569995 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089778637 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074063959 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084913741 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068760547 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070468324 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088794714 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066457162 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089791735 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065351726 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071669184 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099997854 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068388402 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08751227 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074084519 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093940558 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069153724 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081241363 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069136822 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070615603 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08708749 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069853445 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087795111 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083289866 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08997325 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068018303 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067783706 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08967964 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068216808 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094362923 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069679991 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068996567 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090592164 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070247183 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094540593 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071887644 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093972408 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071194499 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08932763 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067997754 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068378715 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085078059 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067123826 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06904012 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08827809 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072297289 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095576293 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067333513 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09799713 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077165958 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088352616 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065886973 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066941135 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086247686 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.0640325 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087012371 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067168734 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066353055 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084821801 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067829682 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068628959 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092977547 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069562013 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087613789 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069290468 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062406607 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.0895921 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071273208 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087651381 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065474055 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068250452 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087894625 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072649963 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09055346 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066922942 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070043993 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089044577 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069470011 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081634004 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075493883 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06629387 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089926578 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068346247 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086807837 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070608732 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070714279 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093337123 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068886233 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08871849 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077537421 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089168429 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06634207 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06494549 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092388558 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066286003 seconds)
  done (took 47.059760784 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110102958 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084133126 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063786649 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08229889 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077286997 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083569157 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064531994 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064731946 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083221707 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067819203 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081765796 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063850649 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090946072 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087352606 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094356732 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067859309 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083189574 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064979578 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082286326 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065626346 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091861379 seconds)
  done (took 2.505475917 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077236798 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091322813 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075353736 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096994933 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069432308 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091678997 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074594089 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091080656 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096075151 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06998747 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096605207 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07291322 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087485401 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069153241 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087027778 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073238768 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096056026 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06941816 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090801836 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0745626 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090916441 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074402483 seconds)
  done (took 2.661495307 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06862897 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066882272 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088210072 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063337945 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066803642 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081425593 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072006153 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084026678 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071926066 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066449666 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085567226 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.075603037 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087960259 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063769866 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067498669 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083684708 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132830068 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072036168 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066892536 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088653993 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062734007 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088860617 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064026535 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063794609 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085631223 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071520369 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086847375 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065837801 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066582594 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085826831 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068247026 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083058056 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069230244 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067525507 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085071067 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067235113 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067075154 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086848237 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063464943 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083926336 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068795899 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063060176 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087372107 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069152587 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064656753 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084706336 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07043628 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085520044 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063459376 seconds)
  done (took 4.545825597 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086319776 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131785357 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089915588 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091455977 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.103955709 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095212006 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07188583 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113716553 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065412406 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087158957 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084302917 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106298362 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087396541 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07341417 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093080947 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068421068 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06872348 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086574579 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071519436 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087267426 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071219832 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093971959 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101976366 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081711367 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090380435 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067691333 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085729387 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072495645 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099816133 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073405044 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091009689 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073261674 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.101682338 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072723366 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087611699 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069343755 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103381612 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086401391 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070693591 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06596933 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089956571 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073043646 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092951415 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083768014 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088210825 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071911166 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087888489 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064247974 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099976417 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069173607 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095516137 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100722023 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072420853 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087453553 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072573845 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101864726 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067883868 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084918026 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070954469 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099364074 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065557462 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089663076 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081872586 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088217781 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074663285 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101700896 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072586854 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092029795 seconds)
  done (took 6.746133415 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078749872 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093486472 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082270987 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10209721 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093339933 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07496862 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092942935 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074914355 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093069387 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079910092 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09378642 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114919128 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070554353 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096295101 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074668569 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095111963 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074392567 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09437392 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074864924 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094375557 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09303128 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083377081 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093918686 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10168194 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10539342 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08939085 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074659765 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092948422 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082163932 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094586257 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105146184 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074908953 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093369708 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101572741 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086337619 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09259934 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067475398 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093229894 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075513502 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09406928 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07034897 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102179522 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073450712 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088778026 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07445486 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093093968 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101348342 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085620911 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096012446 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098169629 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075156611 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101559552 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074109576 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094069761 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101347537 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.109026998 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101959423 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101409879 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074987751 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101502399 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101604322 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108894621 seconds)
  done (took 6.431779731 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089584209 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096543349 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097755722 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063482085 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065734864 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092485406 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065998052 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085078974 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077636739 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096297881 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079317399 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090647177 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07517959 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098733699 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090179923 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074809246 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090897291 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071593422 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096046457 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071582067 seconds)
  done (took 2.528824876 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077423358 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104837971 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068815888 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073248099 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091672161 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073045274 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090144803 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070635727 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087867787 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07092664 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097369088 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078810106 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088375463 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074215143 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097380088 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073650525 seconds)
  done (took 2.181823728 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081008227 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097753539 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082446765 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087764819 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066457478 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084535854 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068685293 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063413889 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084847646 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082487096 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088870397 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071085812 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088160331 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066710434 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064382382 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090649601 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06457634 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085195606 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068192737 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101841409 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079689927 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085803176 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069271657 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069070566 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089118202 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072831483 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088494364 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065832626 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086055313 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068516579 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087856433 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076144998 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083940002 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067299635 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065947866 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084760247 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068332047 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087575576 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071520558 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067631645 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086049105 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067784704 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086743034 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069061498 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083671302 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06852002 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064340644 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093508157 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066584112 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087751448 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067794299 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08935963 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069947641 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077792869 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092802555 seconds)
  done (took 5.162393387 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082215008 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070591287 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083873527 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066474037 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090433247 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070625449 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070667121 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09013926 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070199815 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085578925 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070541221 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090259764 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070272313 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071906626 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089976642 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072528427 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083594813 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070964221 seconds)
  done (took 2.269449749 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074280258 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068487372 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095066388 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068586708 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087719577 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071096842 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064120154 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087912932 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06739051 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08761713 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069363438 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070612573 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087066711 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070728135 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087454788 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068549339 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070179848 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086762991 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068340407 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083233359 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071654635 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066120493 seconds)
  done (took 2.542220621 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07406717 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094306666 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.164613343 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110061664 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083990391 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101743861 seconds)
  done (took 1.500066249 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094400288 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101147432 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068940723 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108820161 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077322276 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089634208 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070796977 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089358884 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079354446 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103179617 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069856423 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098836708 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098116579 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07870194 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095517215 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076122449 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089836515 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069670331 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088704006 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107563791 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071752871 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097883662 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071064209 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089782462 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070655372 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098105267 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07944598 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104154559 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088714027 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079290849 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095601717 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069845718 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098871183 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102599898 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072248533 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098430277 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070826901 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107895629 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075759368 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09806671 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070361974 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098125158 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097583892 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075924972 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098190647 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07093302 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096174479 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069612731 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090335656 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113777217 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076050102 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098639642 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095060516 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079117475 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098780027 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114607543 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08434438 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098735091 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094463366 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083449176 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099211932 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07540976 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099358179 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103117866 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076316077 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099253172 seconds)
  done (took 6.725984125 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088210802 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10844107 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071856298 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104336717 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098678613 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071399101 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088831852 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070377822 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089741071 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070740174 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131149958 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070746613 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098551129 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098085467 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071283813 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089307718 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070680284 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097886354 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06995215 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115358791 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089554633 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079102043 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098287225 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097762256 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083594845 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096108413 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069627711 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090625227 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070331899 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089973293 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075016475 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090495083 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098043705 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070176702 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098464405 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070863353 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089964345 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075418531 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090281268 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076537317 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098543334 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107363257 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070880633 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089517835 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08412257 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091157315 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069560743 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090224796 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070069694 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090149465 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083671594 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103687568 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10397068 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098301976 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071408077 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090431802 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07118501 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090136086 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071763192 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095363544 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079125561 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089472469 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115019907 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070723479 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090033011 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078635348 seconds)
  done (took 6.615750085 seconds)
done (took 130.366797925 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203923352 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184187213 seconds)
  done (took 1.258752634 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070946127 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097590574 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101360075 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130095472 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086207074 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100210783 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118235909 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079789753 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066306408 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08746395 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068036017 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088692016 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133921792 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06693646 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087240577 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06955376 seconds)
  done (took 2.329240867 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105259039 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202459122 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111585421 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067316638 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101716798 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081137106 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087591818 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079491243 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097013929 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067628057 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078972783 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098905068 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066783039 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097786073 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07680489 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.100847342 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067055079 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100688276 seconds)
  done (took 2.571269536 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106635587 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144845849 seconds)
  done (took 1.131192033 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.204859111 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.127033613 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201874325 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.412774638 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.204881327 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.280574848 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.178183715 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.17647915 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165293915 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169914607 seconds)
  done (took 2.996673895 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101882734 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175171188 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314609284 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.140303595 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.088040334 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118646125 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.142198089 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.091158554 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.103548642 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102757143 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082922391 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100445426 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100261604 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.098792871 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076169483 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09978159 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124146302 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076865538 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099300214 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078519137 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.12087239 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069215809 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076219215 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097496973 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079283099 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.101257105 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067568973 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.089013205 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078014577 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097471376 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081113221 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117049426 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099764967 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.133451954 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083881869 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.133888532 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.101193363 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074019846 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097813148 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074856112 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.100600089 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079051248 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106104891 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078857663 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089194547 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079330578 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088752868 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.0690072 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101871543 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.079996535 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.102788662 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080736589 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.133032004 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.100042355 seconds)
  done (took 6.357868825 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.761152395 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112588976 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097109285 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.818326573 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091181348 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108727988 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.717143458 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12003098 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.217276279 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.77131675 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089707667 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099474915 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.183947108 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.239531351 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.917538244 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.285490802 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.631043503 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106482965 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109484851 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.135390939 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141510801 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.179017895 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153417304 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.434613824 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074433798 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094616416 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.1379583 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074228147 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16330655 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086310544 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095006712 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.159044374 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.233234974 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.155582342 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096054432 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068736984 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091113245 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147631388 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.222494334 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191870381 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157617948 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067454145 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091895503 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.143133802 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133666868 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069947471 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141494722 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174089551 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.151802629 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07537513 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098194072 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146062021 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142532067 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.145364012 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103370896 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.269135012 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289273679 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089281042 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098124035 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104618704 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217828388 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103444662 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.198592776 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138927668 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.170071737 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093692221 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784905318 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.150216938 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093693474 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07579136 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122459044 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096652095 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.141344041 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.148426128 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.349139887 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.166310397 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075058105 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092675421 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.211285749 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085282027 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094345674 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145010413 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076510457 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123532825 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166796058 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.145610767 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.152910838 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.212395463 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144742855 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.159796479 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076481664 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12569032 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.075303405 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.196583555 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.197636937 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.142846124 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.191820789 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.158229426 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.142358878 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.150605656 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07536469 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174863813 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099752172 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102379026 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140090355 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192306595 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.124676115 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084129966 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096038282 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142880308 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.128130534 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087417571 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.142017036 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.172502664 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.457846118 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.151109274 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068074442 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109873212 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13732097 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.139960342 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097493494 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218612651 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121032371 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.145012877 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119610143 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088934846 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12095788 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.142086257 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077555392 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122211785 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139837953 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0999887 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.220408061 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.194818184 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079322828 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.196289809 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161842982 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097140636 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.15164313 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120772978 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145699313 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07589304 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.157808076 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074875665 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814622107 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143620745 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11974313 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072678518 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.175478093 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068987426 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103088558 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102494101 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068065118 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801470776 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085921529 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099440114 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083377543 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093957883 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120708791 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136154164 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072275726 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1374266 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203135236 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094920359 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096671845 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104165897 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.138851645 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095654214 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.083442256 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104104947 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082154166 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121444091 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095158716 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083740941 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146406186 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16451479 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.172137243 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.570523451 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070484769 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102639081 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.178283063 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091223492 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.243632964 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.156659583 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.176163777 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141056747 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101192957 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.295063312 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142276031 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.17183103 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085266515 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.14994165 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089002023 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137114572 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.144595031 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069377076 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097593624 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.143576155 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.145629448 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.165641351 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.935352623 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090616192 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210757613 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070431126 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.151444235 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098866807 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077133402 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.26927565 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069611135 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.166503933 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.146659761 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075745545 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.1074376 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.684200209 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103254821 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137791793 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07334329 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.193936065 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141300453 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135027064 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135026197 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096101458 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.137754479 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.189724273 seconds)
  done (took 40.844160249 seconds)
done (took 58.368798589 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.261864122 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176448129 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240300158 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142654078 seconds)
  done (took 1.800601043 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.147345889 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.107237472 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119742007 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087348022 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104921435 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088540628 seconds)
  done (took 1.554449765 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.411062172 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267879174 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231052936 seconds)
  done (took 1.815486243 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.263822167 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213065388 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.446604392 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.295764877 seconds)
  done (took 2.256207567 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.178390249 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116693258 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068670252 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.108633913 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.161933928 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.257433808 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.131831047 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.190606202 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080658821 seconds)
  done (took 2.24596958 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.200959613 seconds)
done (took 10.779272042 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.220120985 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109035696 seconds)
    (3/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.127759078 seconds)
    (4/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.212652077 seconds)
    (5/309) benchmarking ("sort", Float64, false)...
    done (took 0.151707145 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.212618126 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.137816448 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.176628777 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072129803 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.199486077 seconds)
    (11/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081977747 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100927929 seconds)
    (13/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081459197 seconds)
    (14/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.16899857 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097231182 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.112179934 seconds)
    (17/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.219378091 seconds)
    (18/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.080909846 seconds)
    (19/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.231177975 seconds)
    (20/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.196999152 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.129846513 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067801681 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089297036 seconds)
    (24/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.076569733 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079338559 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.133237185 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.120729532 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.227933827 seconds)
    (29/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.210829505 seconds)
    (30/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075993876 seconds)
    (31/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09851595 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086057591 seconds)
    (33/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.196086566 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.08800193 seconds)
    (35/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079294273 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07294533 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088306532 seconds)
    (38/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13167559 seconds)
    (39/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.156027304 seconds)
    (40/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.122032836 seconds)
    (41/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.177727181 seconds)
    (42/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.155553228 seconds)
    (43/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.169882512 seconds)
    (44/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077817843 seconds)
    (45/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094718896 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080397252 seconds)
    (47/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093110247 seconds)
    (48/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077423249 seconds)
    (49/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.123231511 seconds)
    (50/309) benchmarking ("sort", Float32, false)...
    done (took 0.127277718 seconds)
    (51/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.198259304 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.171957261 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100013331 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.116756671 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096593122 seconds)
    (56/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073297339 seconds)
    (57/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.07934975 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073665702 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096883983 seconds)
    (60/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.13846498 seconds)
    (61/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099389425 seconds)
    (62/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069402786 seconds)
    (63/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.180131212 seconds)
    (64/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.11575553 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069533181 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.199145384 seconds)
    (67/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052952422 seconds)
    (68/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.073039977 seconds)
    (69/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.190913996 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.157986287 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.090021841 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201573848 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098050291 seconds)
    (74/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073548747 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.170857758 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074104164 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.116991068 seconds)
    (78/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104969348 seconds)
    (79/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.200495606 seconds)
    (80/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124627906 seconds)
    (81/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079231761 seconds)
    (82/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095966891 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.161913898 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.091473294 seconds)
    (85/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056190299 seconds)
    (86/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073915681 seconds)
    (87/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.098579504 seconds)
    (88/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.075361221 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.067831105 seconds)
    (90/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.122940758 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.203080796 seconds)
    (92/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.138534076 seconds)
    (93/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.179150163 seconds)
    (94/309) benchmarking ("sort", Int8, false)...
    done (took 0.163317666 seconds)
    (95/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.19881796 seconds)
    (96/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072821404 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.171812544 seconds)
    (98/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168400707 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066193787 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.158035996 seconds)
    (101/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074811121 seconds)
    (102/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075137752 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.135195185 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.159977137 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.135507333 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05203036 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066655598 seconds)
    (108/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.121519327 seconds)
    (109/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069672866 seconds)
    (110/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.169150957 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051065004 seconds)
    (112/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071846507 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092824446 seconds)
    (114/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.16958376 seconds)
    (115/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066769303 seconds)
    (116/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053560526 seconds)
    (117/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095016588 seconds)
    (118/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122339486 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.138938727 seconds)
    (120/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06571116 seconds)
    (121/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052944002 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.114623702 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076259563 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.158403774 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164086132 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145900519 seconds)
    (127/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075019235 seconds)
    (128/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064371075 seconds)
    (129/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196449943 seconds)
    (130/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070652461 seconds)
    (131/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.200436941 seconds)
    (132/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.172583685 seconds)
    (133/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.102233664 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089272832 seconds)
    (135/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.129025918 seconds)
    (136/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078722174 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.121203208 seconds)
    (138/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07829937 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 0.161395102 seconds)
    (140/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053997635 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098562706 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075564383 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066637637 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.16887643 seconds)
    (145/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075046913 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096271799 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075499239 seconds)
    (148/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.122281754 seconds)
    (149/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055939555 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053424701 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098356054 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.144654134 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075140943 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052813084 seconds)
    (155/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08238654 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.172875139 seconds)
    (157/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.073630789 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.099012567 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067391098 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13932885 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066604204 seconds)
    (162/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.098385859 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075713175 seconds)
    (164/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.17495007 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067958662 seconds)
    (166/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113290741 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05361515 seconds)
    (168/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.053409563 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116880433 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068021574 seconds)
    (171/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.091263087 seconds)
    (172/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075666119 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.079338408 seconds)
    (174/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.132466319 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091855843 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.09843614 seconds)
    (177/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173032361 seconds)
    (178/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.092381619 seconds)
    (179/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072298181 seconds)
    (180/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104863934 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068732493 seconds)
    (182/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.161955307 seconds)
    (183/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062787416 seconds)
    (184/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.056814847 seconds)
    (185/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051976579 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.131211847 seconds)
    (187/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.15601498 seconds)
    (188/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053564684 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067435796 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.10949441 seconds)
    (191/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06313125 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067248521 seconds)
    (193/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.171236376 seconds)
    (194/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05290311 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.090425188 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051600499 seconds)
    (197/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.089933129 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148482291 seconds)
    (199/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052827641 seconds)
    (200/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096106171 seconds)
    (201/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099647811 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.111727317 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.270665555 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.191388397 seconds)
    (205/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079866762 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115758675 seconds)
    (207/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054192816 seconds)
    (208/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097879671 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068634942 seconds)
    (210/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054119857 seconds)
    (211/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092189626 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.16564329 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088974719 seconds)
    (214/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091400499 seconds)
    (215/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116628984 seconds)
    (216/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068480263 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067033464 seconds)
    (218/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.075504375 seconds)
    (219/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052053255 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051434236 seconds)
    (221/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113112837 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074886326 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094305432 seconds)
    (224/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069677814 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086704817 seconds)
    (226/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.082585046 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089861691 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.138052435 seconds)
    (229/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062332119 seconds)
    (230/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070742409 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103667945 seconds)
    (232/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073952039 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087515868 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166424381 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.117291824 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.112359007 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071504642 seconds)
    (238/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.108931516 seconds)
    (239/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.085286045 seconds)
    (240/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073791846 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053466301 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086934003 seconds)
    (243/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071716773 seconds)
    (244/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076331179 seconds)
    (245/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.085733409 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140134522 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.094423975 seconds)
    (248/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052904954 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112543028 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.110994798 seconds)
    (251/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.090940421 seconds)
    (252/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053111034 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051169856 seconds)
    (254/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.073235061 seconds)
    (255/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08013572 seconds)
    (256/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07307909 seconds)
    (257/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.086532506 seconds)
    (258/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052638851 seconds)
    (259/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066067711 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088026944 seconds)
    (261/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072538875 seconds)
    (262/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070929088 seconds)
    (263/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.088231453 seconds)
    (264/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070047752 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.10882671 seconds)
    (266/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05106605 seconds)
    (267/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064869272 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.074361249 seconds)
    (269/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210901966 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.149204615 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071738127 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06730791 seconds)
    (273/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.089986853 seconds)
    (274/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051947999 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073641622 seconds)
    (276/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.088127086 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087418429 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.156525971 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051182471 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071840096 seconds)
    (281/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.073805811 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065409016 seconds)
    (283/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064915333 seconds)
    (284/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.0747748 seconds)
    (285/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053254073 seconds)
    (286/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.0706722 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094963055 seconds)
    (288/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065540038 seconds)
    (289/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090204515 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065029093 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064520833 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115688122 seconds)
    (293/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070670995 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.111697301 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073861237 seconds)
    (296/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06651318 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.073130785 seconds)
    (298/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079427538 seconds)
    (299/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062546623 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091993941 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054357511 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05221618 seconds)
    (303/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.074404708 seconds)
    (304/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050986304 seconds)
    (305/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067843943 seconds)
    (306/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.072645917 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070898693 seconds)
    (308/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054266588 seconds)
    (309/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.083713446 seconds)
  done (took 33.253392194 seconds)
done (took 34.171355381 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083397087 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118174131 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076795489 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117469079 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083180651 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102556764 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075142259 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080102466 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104877814 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082049249 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.101474562 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054912357 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09810112 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075681292 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097383253 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0924077 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.101132088 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073522136 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073289593 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.0882252 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073686035 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087358586 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068569092 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055022249 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099933919 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072709047 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071578101 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.097167086 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065430465 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087312511 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068796784 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072289749 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.0873683 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078243072 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093058537 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073747248 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074615282 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097700158 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067537494 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087206536 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074066811 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065800382 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093900099 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073481342 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070865527 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092331873 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073332752 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101071099 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090931458 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089728839 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073773927 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098718429 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076706601 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072043376 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092144035 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073568207 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091741414 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091734396 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095876182 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067839765 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073232522 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095931873 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071329505 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095095314 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073718486 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075384616 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098340502 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070924385 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097084491 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070879926 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065226679 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095329581 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069689342 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064743195 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098421277 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075808464 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086168968 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071438305 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072033136 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093720507 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065286027 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089056497 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067373079 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072115658 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089409837 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055225907 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069154595 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093380506 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065172175 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073950703 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.093963173 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072823582 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088465223 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076808016 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06540541 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092347674 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066978125 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065855953 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089113444 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069541733 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065017742 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090193598 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074935565 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089030311 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072000126 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079629078 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087695328 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072591464 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087100413 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065160129 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081304457 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097713847 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06578086 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090029868 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065332876 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072645309 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086954008 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06594435 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065565495 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089808719 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072548858 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066504349 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091723246 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073113043 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.100447766 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06579765 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069754216 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089809398 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065911666 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070871933 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088533397 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066114526 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066564875 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.086267415 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06773581 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087472689 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072812973 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068227909 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095630995 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068372492 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096084455 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.0703322 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071267054 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.09259695 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065798171 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05859047 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089954795 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067892499 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067199488 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088211769 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06775561 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064878569 seconds)
done (took 13.115704649 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068200957 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.172022297 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.125457617 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095440276 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109935977 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066614362 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099063511 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102168586 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090105822 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126181971 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087506051 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.106594539 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114455848 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088279853 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06698701 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070370101 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092457487 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089582062 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123907032 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085621103 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.138371355 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08798466 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.118194544 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090429563 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.110983403 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102821324 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088703706 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06990201 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068767697 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.11597062 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107552679 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069684527 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067249351 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.121721557 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115784268 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085500407 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087821226 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084223013 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087927871 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066179549 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113560591 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100129485 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104031216 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081700395 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09518301 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069314932 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08930248 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085502038 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.112467691 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080706689 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110083264 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131998872 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069096366 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104945967 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065253306 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109816298 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080734265 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091096351 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066622589 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09040805 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066315293 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070168925 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111248242 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.113686023 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070330008 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10401492 seconds)
  done (took 7.218712365 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088309018 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118740799 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085517601 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10714884 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066592561 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066767943 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091710905 seconds)
  done (took 1.595196118 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069513221 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091829625 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11552318 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091982812 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.112327 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089658722 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102534948 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068939734 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108616036 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069435764 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08931091 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128661894 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068073216 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097199015 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090245052 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089644774 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090256241 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089053286 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069705555 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112960735 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06945082 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.085870127 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092478257 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066519383 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103987718 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067078117 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138229346 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072863576 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09103391 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071976205 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065424436 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.138591366 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103462885 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077760717 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066754655 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104668801 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081514162 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088103082 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08402759 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094830986 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082174887 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067675925 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091249354 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065688647 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071383089 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100716488 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068436968 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089902723 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070153033 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086307495 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090444137 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080950335 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089595718 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071439593 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068882796 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095506997 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077219736 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090256645 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088658516 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068530331 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107176022 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083528512 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105337507 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083131685 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092235431 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08194976 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103901321 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070308086 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068827557 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.0932586 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084299171 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087846965 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068708814 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078310744 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092195515 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090777093 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113456563 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06890736 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099955229 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067624869 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067541922 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.09022515 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091556759 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094162228 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066971517 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071274016 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093526228 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065905658 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065865821 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094163206 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065525984 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068383984 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093051706 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06801749 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09206417 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084661168 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067643436 seconds)
  done (took 9.284587184 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071043252 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069876699 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095276153 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070088271 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070393055 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093780753 seconds)
  done (took 1.459005213 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100486054 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093117922 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081093168 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.094615719 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105964738 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105141229 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083270706 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105344993 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085100222 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102507003 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082058567 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105310425 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087416597 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.096180379 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082076265 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094785404 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082483095 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099249328 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078888228 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096322186 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088092414 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.095814455 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073746205 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.10537254 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070985893 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072916913 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100017047 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079328522 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102025701 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082506277 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095771187 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071244092 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094755862 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083300373 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.10475298 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072404504 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095176226 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072468129 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099377739 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070920479 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105285425 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073709306 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077362118 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095044303 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105028782 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07183457 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071397704 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100048582 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081711647 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094316088 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071528804 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09516515 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070856208 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094486514 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072251176 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104874206 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071353382 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.104873359 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073362861 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071929313 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093714915 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070769159 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105327339 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07063239 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103388288 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07164783 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09505155 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074239842 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096999799 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072953785 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071513618 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093482499 seconds)
  done (took 7.303482011 seconds)
done (took 27.829708408 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.655172503 seconds)
  done (took 1.637985847 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.762006978 seconds)
  done (took 1.747196662 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.723244431 seconds)
  done (took 15.713361249 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.613457736 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.759409196 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.80686671 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133571285 seconds)
  done (took 3.299702105 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.884931791 seconds)
  done (took 1.893538652 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236587902 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222340367 seconds)
  done (took 1.451407394 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.734622859 seconds)
  done (took 1.734674607 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.273693376 seconds)
  done (took 2.265055356 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.319600928 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179709357 seconds)
  done (took 1.499592543 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.528184465 seconds)
  done (took 1.526681498 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.558697354 seconds)
  done (took 7.563924012 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230642852 seconds)
  done (took 1.244054532 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.273100473 seconds)
  done (took 1.271903536 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.134266666 seconds)
  done (took 4.134614755 seconds)
done (took 47.974904463 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080569853 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083844512 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104243848 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078735821 seconds)
  done (took 1.345211614 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08031127 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074995052 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100349484 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073004222 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100791151 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072876832 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098294879 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077264501 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07227232 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097383579 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073292661 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095221579 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075688587 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.097841781 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071023646 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075795139 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.09926369 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072701776 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.098753126 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073399748 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071138694 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097654134 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076206204 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094565596 seconds)
  done (took 3.030706546 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080420758 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074728787 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099735885 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072468877 seconds)
  done (took 1.331231873 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080323202 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.11764815 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089893859 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077721022 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.115923456 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109464303 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069609295 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068955124 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094743376 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07716011 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091074392 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098123442 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111476231 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077341703 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101452558 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066581952 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068215136 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110449428 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077757214 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101600895 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070329811 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080352014 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091194049 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090974755 seconds)
  done (took 3.152803129 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079795143 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129988682 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.079268171 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.113424359 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091192373 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06601037 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.099304871 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.113939221 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124813691 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089328001 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070394686 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065917025 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096265351 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066043291 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076159058 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132173048 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.135399157 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069596849 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120382428 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066040268 seconds)
  done (took 2.902614943 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077708972 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071635541 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091397688 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068955305 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076808087 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096787646 seconds)
  done (took 1.500769082 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070593454 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069114511 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090593597 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06720627 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072041794 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090814337 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066636336 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067481996 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090259167 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067859563 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066600272 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089353795 seconds)
  done (took 1.919446676 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.382823177 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092539443 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068939286 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.087897549 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07130635 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09030087 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08098695 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067808763 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11445599 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066798944 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090081235 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06873395 seconds)
  done (took 2.300216804 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262560917 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076611018 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32299535 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167678993 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139506888 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154629386 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105118669 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138924718 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196933322 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137647694 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198978513 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221514034 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133068383 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167025885 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114310036 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132562777 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185097011 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22119587 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104976048 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222316525 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205506076 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155534947 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178959003 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127996676 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133100167 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149287812 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071962861 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104930932 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232090028 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160596778 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201996834 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137882372 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097273544 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229725362 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225204183 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194749192 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162147882 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08544109 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157652078 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163295421 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254473976 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114596071 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193442095 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133411901 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105424299 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171771138 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14501823 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.145819555 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136100018 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114760197 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173415077 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238495536 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.164083539 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112210412 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136936576 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140335346 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142401904 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1034719 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266404186 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194312578 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15743444 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095161193 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099101501 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209584853 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157671123 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14106977 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.151977848 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118362051 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165464247 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209566464 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145347519 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171844724 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179555159 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088509256 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145705604 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193421343 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154788331 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22783971 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153716309 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072739414 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150716001 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129309232 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106113498 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143415795 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101084153 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205848371 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123965075 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138954815 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139580287 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134475526 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135348977 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193210007 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201467596 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129528475 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066220456 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130340971 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148824721 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174685852 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113123383 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133249273 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146299643 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079355222 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191350185 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075679879 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152459127 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.103395134 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15089902 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161375469 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075789294 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179468589 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10261934 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127718939 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16326316 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218885847 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115249678 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083169608 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225682191 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155246119 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131711466 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174944754 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213462243 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101411384 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129842936 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203811229 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241734243 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090553628 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22257178 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135154972 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083743404 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.112999508 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153993148 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139274545 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148387044 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108354547 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153535787 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226605582 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07551597 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121260862 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165575293 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081553786 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106960771 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139260117 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126734491 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095493679 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126297947 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132729848 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194400372 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153926457 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108486061 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177049983 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099149336 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224770685 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115055099 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131124235 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103785179 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096003619 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.164348785 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217802909 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079903726 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225375772 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.153459144 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131189167 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148413035 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083113837 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193797691 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0797415 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070481534 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198798754 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1381193 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136625514 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.183808618 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130411274 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.153849678 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150922627 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161111352 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185545775 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.160981736 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133237277 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088029474 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139748882 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151556941 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.098599623 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119466365 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083116773 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130936441 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122804931 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08447434 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196666845 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154245682 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126318595 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113559675 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122145946 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204395865 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077594741 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157110531 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146255988 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120243121 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211048542 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186135818 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163236277 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125285056 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201236833 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070959177 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074251152 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115780812 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153886088 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108971529 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083116157 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168784936 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179103952 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156444372 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165882008 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137419794 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148190245 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211008761 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072391728 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142270022 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179022064 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153641046 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153946739 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112059118 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098929118 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199751006 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135514068 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246159401 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143034295 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152048771 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180717776 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129679062 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104893893 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105741644 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191704614 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132674476 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179045812 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126058868 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113788138 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136110801 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081600715 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130591736 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155556481 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146752809 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18771047 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143568491 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160217467 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077339975 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143589427 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173800884 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149037183 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065173434 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14739667 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219521087 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121244238 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14588309 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190089329 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104914379 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152753009 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233890584 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173858188 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109644268 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136502981 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147815108 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156342305 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146060631 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169920173 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137876023 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164204226 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137887145 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085261962 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113173678 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12444593 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13391167 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095497911 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.13800056 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.14396981 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.119429752 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160124357 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137182968 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137385379 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145930194 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125350284 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091054933 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123460868 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234091941 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149898883 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232804543 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101297788 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.203405267 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225139789 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075292302 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10526925 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081306499 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19282182 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085317974 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161040247 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124198823 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132072286 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154698001 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172108426 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121682647 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06898085 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136872919 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162178183 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138379522 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124488368 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133200025 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221319843 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103550771 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105823381 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152889925 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105147529 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128677409 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232889041 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.086785375 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098376767 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101567599 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082214789 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156746647 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214269512 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108452093 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.130013038 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14380531 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147902215 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18064346 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103876946 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125624568 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140909558 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178222277 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180403735 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090764445 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140650538 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156460505 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21224848 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133031811 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.121154627 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203158425 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211681318 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.219818828 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089337995 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142425469 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143026662 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13598285 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195421449 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084107991 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225684551 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107816868 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165652822 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130693083 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119634215 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158802004 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.124422412 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089040639 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204573911 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148196479 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082854397 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123845192 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146018772 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149007175 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134537741 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075655832 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192185456 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073585077 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191431033 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203160066 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107900304 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131724049 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097087748 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10857376 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135246214 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130299277 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0873638 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.143044262 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22779489 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.09159588 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205968767 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170079437 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140033185 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19130367 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125975432 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662494782 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078457375 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212068033 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147895072 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236572712 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123766317 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146270308 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111268738 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150952517 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200775702 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131648298 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203793768 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161991685 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.149294459 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079122094 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129098385 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13687078 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.11745329 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133215927 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142926008 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142865603 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.12716965 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.148877366 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155295601 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106934319 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09666785 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214379348 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144388356 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170709842 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168605844 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11097473 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146455119 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193726658 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08123492 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.149065473 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214133469 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134724915 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124063103 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08255546 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133307747 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230532377 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07381033 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219675928 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151916949 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137446721 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140935411 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145369374 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185642337 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109669949 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178064871 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097011146 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.139265706 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142163545 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110736746 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103509767 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106996372 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13983569 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126338004 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129820811 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.121515544 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206279421 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071807949 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122440919 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130029162 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173165094 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237539811 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115423727 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083321579 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146445613 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140289254 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.143800585 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151960102 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.107259551 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109103219 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083770527 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.137275915 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111553767 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141834421 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129361912 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138138419 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22564295 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084475863 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249608301 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12209127 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132011814 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070423195 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105459708 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096260137 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124192856 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136099231 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126849101 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204876796 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.123370796 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116505008 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118792433 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074515753 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084231518 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183852948 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138477786 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149586755 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098856516 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.089093876 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137062707 seconds)
  done (took 70.888709072 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.134417155 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104287547 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.116924359 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.172282386 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144746965 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237084574 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.179760577 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222038363 seconds)
  done (took 2.407568109 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071610757 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.11629512 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102013616 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115797521 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.088796327 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068748666 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.292432999 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109747511 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06637647 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115401295 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.118548536 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091326316 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468720504 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065711497 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094161851 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083979447 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067850854 seconds)
  done (took 3.222163084 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.43005967 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.639587261 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.448608256 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073196286 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.894354682 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.105964399 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.405943693 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.161507582 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090111012 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.430059006 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.729923819 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.147061605 seconds)
  done (took 17.650021521 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077335131 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070525901 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108692789 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083204381 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09888561 seconds)
  done (took 1.536077929 seconds)
done (took 114.185564398 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081921377 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.3436932 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053056818 seconds)
  done (took 1.527993455 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087059405 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085001884 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110357197 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082305549 seconds)
  done (took 1.467951938 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076874584 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078227186 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110145016 seconds)
  done (took 1.368255642 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.277374904 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164818085 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087327892 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084633362 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077451657 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103452957 seconds)
  done (took 1.370774748 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074183361 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075129199 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098706114 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076612904 seconds)
  done (took 1.420309348 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078042527 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.0541006 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056737228 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082350844 seconds)
  done (took 1.377355318 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092367836 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107469933 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080893587 seconds)
  done (took 1.382308519 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109893762 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112599848 seconds)
  done (took 1.327757477 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084660215 seconds)
  done (took 1.180284951 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097157681 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.138954986 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.155106727 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136855063 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164670014 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.135405469 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.11303167 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087536519 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.103933794 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.114645892 seconds)
  done (took 2.355340935 seconds)
done (took 16.481153787 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080864829 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.394278065 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359965531 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115780779 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668157923 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355224548 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.041608876 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118765701 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120136016 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093474897 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082913338 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674650345 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.965560405 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.34975918 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.953070589 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.31936014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676169915 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068259377 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092917642 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067767103 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.001442216 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093265618 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067826957 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067697401 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674971539 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369983684 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094146172 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318180598 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067568569 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095338123 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.3540201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094149323 seconds)
  done (took 15.992547601 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072663202 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144903344 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07301802 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083073362 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096501572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068776574 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.09786168 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.0693387 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151497224 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068040289 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110384409 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067909138 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097151399 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068624614 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086685294 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094250725 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068796694 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068192278 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094226799 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068545988 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111974548 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067859772 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068537385 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094948813 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067419223 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105520033 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068040198 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067799124 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093547861 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069909719 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096579983 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068316458 seconds)
  done (took 3.835660101 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116729963 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152171432 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073328415 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127442814 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11261617 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096641858 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170163792 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092955803 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15473382 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067771821 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110584011 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067125765 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127251812 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068449124 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11407738 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068776455 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068761033 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094793255 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068317723 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094733426 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086418673 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093346171 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068766572 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068261667 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094119796 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081239948 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093595734 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068590052 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068235838 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096053175 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071850778 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094181969 seconds)
  done (took 4.145550362 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073887235 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075855498 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108676897 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084011668 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.0954581 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072357235 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072596226 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095790269 seconds)
  done (took 1.785806143 seconds)
done (took 26.855084473 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080992539 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07147408 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100487829 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08033665 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.099063919 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.0785116 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067002795 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101507228 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076261808 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073290374 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102419589 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067236775 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.096831661 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067285542 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073630052 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09418915 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079039082 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098161556 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078679449 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078324521 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096252633 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076286732 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100016031 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079020416 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105662044 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079067431 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081443057 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098671053 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069314668 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096027716 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076411145 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083342607 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.095350348 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078945376 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094225308 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067684716 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067069766 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094343907 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078401875 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100555126 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070630896 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099820331 seconds)
  done (took 4.656327238 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090163096 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091972602 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111022877 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064510456 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096528176 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064994921 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.113843149 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062859656 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059058077 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113918575 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055430235 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058762093 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.088919617 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054450188 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058522099 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056106548 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088159529 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056027585 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058862377 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085727988 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057440892 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053659044 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086770632 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062933678 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056362524 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087263119 seconds)
  done (took 3.045708579 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077724534 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08467099 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114357671 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127043627 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.131605333 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077028004 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105180142 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087314618 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112588506 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067551486 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071202625 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122526859 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087428231 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101217173 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066909005 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112990819 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081814177 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068779394 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100992739 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090795842 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111053206 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078175052 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119249515 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08108863 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067198552 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096462043 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071450107 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108263243 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072917337 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07646875 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098615364 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071134557 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096759403 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079770186 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071250561 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095681831 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089427211 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104062037 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076606888 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067860516 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097545455 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068063176 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114726351 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111537703 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093648831 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074322685 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074815362 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103982216 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067053545 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112219805 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076880002 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067261068 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097007948 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06638827 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094340896 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081242509 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068901832 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096240574 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.0768826 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097462326 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079334711 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070503394 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109561124 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066808254 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10181211 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067221807 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068052626 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093097656 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091116783 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.067937104 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135812428 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068099033 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.09552706 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076229479 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102132235 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073628942 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068145173 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109476174 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077147629 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097635709 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076417154 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071152482 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097031964 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087845892 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096795328 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070043815 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068718674 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100931877 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070901838 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095645088 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081456722 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068534809 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098098693 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084750163 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094569396 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069127014 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073202457 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099163508 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067389554 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106985851 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072758261 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068213194 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103324607 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067638234 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097207836 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077141436 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07206703 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092869793 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071908886 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100054615 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06873617 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069249359 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096947841 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068878784 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103012229 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073383026 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072252204 seconds)
  done (took 11.256939808 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.193356053 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.191475015 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070018528 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.176840509 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074989864 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.10681208 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.176949641 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095369791 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096127122 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068381141 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068597152 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.129149036 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.123314046 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105285232 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106169865 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.0676755 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112768125 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104619235 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.179549693 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.174400132 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.1141698 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075765577 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070062105 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.097045744 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069486 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.105007004 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083951617 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102003481 seconds)
  done (took 4.271907953 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083244365 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.12979781 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073760581 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089286608 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.11817956 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067597242 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.100490451 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069731039 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107574376 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079959384 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09507416 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073791903 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07437805 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.104850813 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068716453 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105114106 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077577062 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06931708 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098274689 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073113495 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104207442 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079560568 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071937949 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.09466475 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073922543 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094246497 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064798967 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.112190556 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067246214 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116960908 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065866057 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073497563 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108941118 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068720793 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094954607 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071260201 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07067537 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098421106 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069665434 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066372909 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093724644 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057633956 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066857867 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107732722 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074464542 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.086656721 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073302861 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072476147 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09910274 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065810884 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097648329 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070856875 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070726424 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103499906 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072842204 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072801641 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099396937 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066160161 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102301893 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071434136 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063927469 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093266879 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072851491 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065917376 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102856037 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07173012 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093699209 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07106655 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073326929 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101387889 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071604503 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069953233 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093287637 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069724463 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099487138 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07228065 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071149244 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093492885 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067438704 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067997782 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082650444 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067835201 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053429994 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098178414 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066399071 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065787855 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.098238629 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073006518 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108151733 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068875952 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.101043414 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069169585 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066578758 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098962057 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063273493 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07079957 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.110239475 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110858763 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067739636 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066286941 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109237549 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072342922 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067168328 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.083830832 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075116486 seconds)
  done (took 9.786584044 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098963803 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091870885 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097295268 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083235346 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123668605 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092995639 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102332965 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074891539 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06964144 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112889195 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067356771 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103670795 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067994999 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075805391 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123444498 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075919535 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.09699527 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077385362 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071894007 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.13438182 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082233876 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.109152604 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080453264 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095676613 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073102054 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080186277 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.123241877 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079454788 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.105618204 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.08469785 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079932143 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.122672991 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085547021 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098881161 seconds)
  done (took 4.290673337 seconds)
done (took 38.414203576 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.208852774 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.403990584 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.188935393 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.102150192 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.196596926 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.211813119 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.198925159 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.1939732 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.377524975 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.191040931 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.458410385 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.863402067 seconds)
done (took 58.73101658 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.282567077 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.329924482 seconds)
    (2/2) benchmarking "String"...
    done (took 1.462842846 seconds)
  done (took 3.923530655 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.528297793 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.080332125 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.446876571 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.190849886 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.190702518 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.502563079 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.801312553 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.031503791 seconds)
  done (took 27.375299925 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.199657923 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.546795812 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.508118232 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.505958473 seconds)
  done (took 17.894092327 seconds)
done (took 59.137486877 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.184048848 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.261416503 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.232902631 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.172993145 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.294392284 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.218368431 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.422558177 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.384191632 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.192855528 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.177292543 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.192758476 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.200898083 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.206591718 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.465624777 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.188764349 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.191271491 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.275979096 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.636041568 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.578900908 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.200852261 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.196541124 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.246678193 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.201241883 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.19376537 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.263397446 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.189280045 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.208370939 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.199576058 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.41734651 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.196839394 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.284962421 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.620478014 seconds)
  done (took 191.02868828 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.191486986 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.255121113 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.362470462 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.235286501 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.680128279 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.391794379 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.334671803 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.758671176 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.2080653 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.217282071 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.521421119 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.191103158 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.557558775 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.158963735 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.201232031 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.302262344 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.512604101 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.557469965 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.209256819 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.45337139 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.208604241 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.442170451 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.350874778 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.499633786 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.234648345 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.225821272 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.202215455 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.198286001 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.382859369 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.451104057 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.204507247 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.240028592 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.758115474 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051601149 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.19423654 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.213566423 seconds)
  done (took 150.292822648 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.459016143 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.194833308 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.193315948 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.193108359 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194588037 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.223737232 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194854732 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.725011979 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.723095195 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.697303923 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.690341718 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.253418799 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.430273437 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.196930384 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28987456 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.205911753 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.194017064 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.210420793 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.221035102 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196880533 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195427781 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.724970743 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.20878957 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.277161227 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197537564 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.19564855 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225311298 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.591667429 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192105041 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225381594 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.512770503 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.23790138 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.193257087 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.484706063 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.286896857 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305423595 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.196967063 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225376231 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.195801617 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.469889592 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197055039 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.197069777 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.200011923 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.770008853 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.197735105 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.728191928 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197310507 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.095039093 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.197409969 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196205067 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.623470726 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.658351118 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.196761055 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.197119292 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.199876142 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.197742409 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196679725 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.227505367 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.506582031 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.295326335 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.198517255 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.201557473 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227974305 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.197304089 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.197520785 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.276161191 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198309139 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.296582008 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.25001277 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.424147294 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.727788365 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198355518 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291761006 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317614209 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197019436 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198006842 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199115279 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.198314077 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.30550233 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.195095165 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.591063159 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201158511 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.200176265 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.19830039 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.258061766 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.293534071 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.197977174 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.506772227 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.199186856 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.198061071 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.933026943 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293047302 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199382027 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198993474 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198324213 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.591749163 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.726870163 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.356562598 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.199434201 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.643743062 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.200322185 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.606634682 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.706589389 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.797184405 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.200149749 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308531244 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204522983 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.201436188 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.201040428 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.199556362 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.200848225 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.228230884 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.199548773 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.257673764 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.597022594 seconds)
  done (took 344.380895189 seconds)
done (took 688.294938206 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.87089864 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.850108595 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.960963605 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.849957913 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.829686783 seconds)
  done (took 10.501167169 seconds)
done (took 11.6424314 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.382513799 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.381817996 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257915265 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.382996106 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228889589 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.397696166 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.358415753 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.221361138 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.298706634 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.273635109 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.298450904 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248223162 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226830159 seconds)
  done (took 18.09779668 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.504975257 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.507150664 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264533755 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.50288179 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239545168 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.505527847 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389528598 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.401483556 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.386579497 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.216670061 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21477863 seconds)
  done (took 16.275975472 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.516135132 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.504747508 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26586554 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.509176677 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239135475 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.505516584 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.388361184 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.40280017 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385336176 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.216395338 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215550592 seconds)
  done (took 16.29162838 seconds)
done (took 51.807005172 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.210360297 seconds)
  done (took 2.352077444 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.243177267 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.407126392 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.223264357 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.215063961 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.211126431 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.211287411 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215901462 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.209978736 seconds)
  done (took 11.079803886 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.209955058 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.211482823 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208556941 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.208681369 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.20906244 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.209444421 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211274145 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.209239956 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.212348464 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.210773147 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211531419 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.210924115 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.209328851 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.211493308 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.210930747 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209090754 seconds)
  done (took 20.508891022 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.210737862 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209148792 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.209059578 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209938947 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.209608754 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.209421978 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.211334174 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.209079048 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.209686104 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.209777415 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.208706873 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.209756951 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.210479865 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209693386 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.209736306 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.210322285 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.20981913 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.210177242 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215556624 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.210065325 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.210510434 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.210587117 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.210906499 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210774993 seconds)
  done (took 30.191980904 seconds)
done (took 65.275098727 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.310925875 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.875763866 seconds)
  done (took 9.330682716 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.211877137 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.212538686 seconds)
  done (took 3.57284974 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.212726731 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.212875426 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.213028395 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.213474134 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.21201126 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.212636768 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.214114688 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.212994079 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213394371 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.212803089 seconds)
  done (took 13.276051485 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.212241268 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.213180759 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.210567902 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.212655374 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.213421811 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.211995977 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.212528624 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.213259049 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.212902204 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.210223047 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.214847222 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.211004935 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.2132029 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.212114579 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.213737901 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.211416368 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.211757301 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.211118951 seconds)
  done (took 22.96828168 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.213657245 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.214867598 seconds)
  done (took 3.574242226 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.211978402 seconds)
    (2/7) benchmarking "second"...
    done (took 1.211205042 seconds)
    (3/7) benchmarking "month"...
    done (took 1.212042384 seconds)
    (4/7) benchmarking "year"...
    done (took 1.211986195 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.212214293 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.211888326 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.210923939 seconds)
  done (took 9.628857384 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.215553295 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.393882315 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.472988692 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.810580948 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.216654666 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.219392092 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.023219446 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.218555313 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.221012471 seconds)
  done (took 13.939108438 seconds)
done (took 77.434326124 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.201388389 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.207301521 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.027875307 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.21968613 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.223611846 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.506928221 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.220950058 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.332779206 seconds)
done (took 37.08914288 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.214389632 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.912006164 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.950738293 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.209195961 seconds)
  done (took 11.21897947 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.19237022 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.120235469 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.198353179 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.209971696 seconds)
  done (took 17.870254723 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.820214641 seconds)
    (2/2) benchmarking "read"...
    done (took 1.540013306 seconds)
  done (took 4.509933523 seconds)
done (took 40.961726378 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215475492 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.21586289 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.215868406 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.21278562 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.215569855 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.213910209 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.213720349 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.215323946 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.215295155 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.216318616 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.216556949 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.216091773 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21639508 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214646934 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213935938 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216685764 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.213686979 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214285578 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.213682149 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214672598 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.215339955 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217385096 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.21442034 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.214657542 seconds)
  done (took 30.3124013 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.21704767 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.216119433 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.217172612 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.217075664 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.215060343 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.217220557 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.217836715 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.214161392 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.218381974 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.217545679 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214010893 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.215804646 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.217282887 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.215160777 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21705373 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.214997242 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.218673332 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215691985 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217281436 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.215757821 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.218763631 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216758962 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.215912393 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218136862 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.216989053 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216172157 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.218469021 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.217206408 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218742187 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.215748439 seconds)
  done (took 37.653135705 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.22324341 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.227326433 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.219236223 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.218338471 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.218775082 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.219680169 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.218325216 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.218577493 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.220238886 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.21912552 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.219735317 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.219364008 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.220602382 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.218951473 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.219106065 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.218745829 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.21993289 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.22039314 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.219510906 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.219878062 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.219902067 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.219923676 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.221022619 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.22052727 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.221140776 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.22041874 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.220053248 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.220673927 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.220445728 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.219978116 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.220027667 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.220344558 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.221931341 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.220696566 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.220395107 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.222022194 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.2247596 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.229201029 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.220445584 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.22146201 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.221312952 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.220479274 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.220662227 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.220606806 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.220875387 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.223062705 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.220837744 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.221429439 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.220602312 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.22067781 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.221348501 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.221683093 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.22041194 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.220614169 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.222160574 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.220865772 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.221556591 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.222106033 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.220767405 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.221516478 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.22248904 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.220882662 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.222370854 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.222271191 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.222337747 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.222240176 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.221547471 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.223077756 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.223591619 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.222114485 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.222455393 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.223621534 seconds)
  done (took 89.070580248 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.22214294 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.219729811 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.220017281 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.219543993 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219820332 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.221700358 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.219544612 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222352185 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220240062 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22276778 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22293917 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.221229281 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221204973 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.22262783 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222613851 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.219820891 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.222997108 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220637996 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.223325984 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.223952804 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223223291 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.221092061 seconds)
  done (took 28.029060069 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223518217 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.223998364 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.219973581 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224001409 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2212883 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.22384651 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.223776509 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.223147441 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223956458 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220415807 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221139418 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224577706 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221280009 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221201377 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220837437 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221523273 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224391888 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.221368418 seconds)
  done (took 23.160393921 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.221067419 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.221567317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.224284573 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221370112 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.222807457 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224849097 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22138145 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224601178 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.225282448 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.222492616 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.225182711 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224057035 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.225698434 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221831615 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224628898 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223495216 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.225358664 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222850129 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225618353 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223471271 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.221979002 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225603565 seconds)
  done (took 28.077789228 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22575622 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.225564776 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.223072354 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.223085193 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.223471626 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.225875614 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.225226989 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.223428092 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.225413365 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.225655241 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222273793 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.226177945 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.223160139 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.223356815 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.222960759 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223820274 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.225261025 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.224498994 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226381605 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.222288163 seconds)
  done (took 25.644176871 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227059127 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.227451305 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.22648629 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225837172 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227509327 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.226557572 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227021229 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.227218472 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225986641 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.228008562 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.227137878 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.229036751 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.227426302 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.227786213 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228135291 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227121628 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22732851 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.228027912 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.22845106 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.227003994 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.228069374 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230208505 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.227435692 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.227329748 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.227291443 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.228309039 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227370821 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.227554592 seconds)
  done (took 35.529721347 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229387851 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225410952 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.224520238 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.224535449 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.224513837 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.225248774 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.225089651 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.224848611 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226343048 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224730394 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.226283094 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.225879906 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.225408474 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.225756761 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225540078 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.226229628 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225604263 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.224602387 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224097016 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223990396 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.22629489 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225859517 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.22760747 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223307886 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223543276 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.228261542 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22285486 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.222828076 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227586939 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22320373 seconds)
  done (took 37.919670975 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.244563667 seconds)
    (2/2) benchmarking "in"...
    done (took 1.243275292 seconds)
  done (took 3.644781002 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.222965264 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22587632 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.225957898 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223895793 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223489587 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.226638323 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.225504532 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225748097 seconds)
  done (took 10.960026506 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.225463906 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.226546097 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.224863894 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.224776975 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.225831946 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.22615558 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236351135 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.24149707 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.228171367 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.225943354 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.231930459 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.234884648 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.231563494 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.225828828 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.225656033 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228843977 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.224494771 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.225654076 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.224657059 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.225488656 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224777534 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229625324 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228162505 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.222466583 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.226399411 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.240026544 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.233730458 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.226292673 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226363474 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.232721753 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.227281559 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.223327436 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.22676582 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.226454016 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.226273722 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.226955644 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.238352495 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242176308 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.23690707 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.224158091 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226728436 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.22445142 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.23087846 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.230688071 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228332021 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.22700827 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.228803886 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.225041019 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.226672364 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.230103464 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.234120902 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227664231 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.225161229 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233656236 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.230434169 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237013881 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.24349988 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.230547823 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.236937364 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.240999558 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.24417179 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.237157547 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230366227 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.226693319 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23726531 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.251736718 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237227426 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.238038264 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.224859591 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.229052072 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.238676474 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244453159 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.240822221 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.228829449 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229015569 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.228834748 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229227037 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229296842 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238858894 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.243930964 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.225430704 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229253846 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23936814 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252809711 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.228802232 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.229207775 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.228104801 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.229454967 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.232535038 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241813558 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.243891697 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.230584688 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.228680996 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.227852162 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.2328534 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.226564567 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.230731556 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22904521 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.225445721 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.227917904 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227937303 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234122782 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.240952819 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230092236 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.229865175 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.240023747 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.231114643 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230007733 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.241900304 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.230602903 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230965381 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.231334892 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.240757039 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.228394807 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.233318453 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.240279121 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.231284129 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.233412951 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.230592612 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.231089856 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242716168 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.26045905 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.232033818 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.231668979 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.236693562 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.243408871 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230862705 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.235284844 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.23324601 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.228853255 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.22876142 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.234497015 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.229897819 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.233815563 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231389923 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232258423 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.228299863 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.231189338 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.230625242 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.233610355 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.234540649 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.23259624 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.235030735 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.23488778 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.232234026 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.235044567 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.240103873 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.233131711 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.229654755 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.234842158 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.230249569 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228475067 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.23365656 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.23028316 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.22854333 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229450736 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.229244532 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.231153175 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.228240306 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.233559378 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.227358085 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.233849209 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235667362 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.230816584 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.23922287 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.22851698 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.227460309 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.23032182 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.229869047 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.232171846 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.229998279 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.225568905 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.229978576 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.233125198 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.228044453 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.228275944 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.234725232 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225849367 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.225339066 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22778601 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.229441215 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.236858019 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.22582556 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.239666928 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.228764043 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227155856 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.227349788 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.233459407 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.23177931 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232520294 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.235616551 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.24038414 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248523857 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241980824 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.227163578 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.230554216 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.233565337 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.232317065 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.238696499 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.228110098 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.228541526 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.231784444 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233664656 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.233306829 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.231477693 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.233330806 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.233576058 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.228054651 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.230352621 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.233923902 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228887252 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.234837683 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.235911365 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.23074438 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.235880039 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233346197 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.230351224 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.227022876 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.234701528 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.232442721 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.233403925 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.234348303 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.240088623 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.230068827 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235442816 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234558908 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.234675842 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.233236485 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.229407405 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231855584 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.23366244 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240834815 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.248252758 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.235257987 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244480126 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.246790423 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.234136566 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.236939635 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.234243695 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.230485257 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.237635063 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.243317062 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.235730602 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.235071638 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.228084975 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236130033 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236664222 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.245188145 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.233737695 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.234855646 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.233708226 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.239399008 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.232402759 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.238112838 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.236774246 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.237517548 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233177715 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234219829 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.231071033 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233749688 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.235074863 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.230690826 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.235095419 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238256229 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.239414661 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.242721685 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.238555402 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.237303108 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.231829127 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.236161291 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.234560578 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.229590885 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.23277308 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248229535 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.24231439 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238531383 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.233337402 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.229372394 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23832499 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.233543381 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.234874368 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229952715 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234750186 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.231302788 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.229274998 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.227402153 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.233588521 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.233727243 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234601239 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.235309669 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.234432139 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.230551521 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.229249648 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.231898465 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.22940623 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.231341333 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.233613746 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.230016245 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.234004087 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231580152 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.231135493 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.228446068 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238869445 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246885847 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.232699809 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.2323487 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.229164097 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.23265601 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.234190917 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.230972232 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.232729669 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.235654907 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.2346799 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.242355599 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.231334501 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24381859 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.228850162 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.232443177 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.237706386 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.229366005 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.231219251 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.229997394 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.230643148 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240152789 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.24542854 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.232829713 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.232108262 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230516328 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.231661215 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.229913684 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.231906892 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23019579 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.228368165 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244092015 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.249240213 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.23762492 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236009434 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.22568512 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.228546668 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.232422401 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.228004476 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.235730722 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.232237764 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.234349082 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.229510726 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.232636803 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.230619464 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.229984065 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.229557005 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.228148346 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.233122535 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239862895 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.245806586 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.234862777 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.229773338 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.24746803 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.228982813 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242046007 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.245357528 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.234132013 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.232357566 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.232646564 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.235903617 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.23053323 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.234714063 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.230673823 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.233645661 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.237062093 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.230519333 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.234927376 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.231119722 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.230745608 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.233549211 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241829319 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255052505 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.233746279 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236701526 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.231322052 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.23364907 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.234837588 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.233615671 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.229829469 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.235618311 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241308802 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240660245 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.232950374 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.232555379 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232479345 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232003269 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.230513126 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.234778219 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.231122122 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.233113934 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.234414718 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.231413174 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.238008211 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.23301006 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.236688736 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234096541 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.236281308 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.247288689 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.233015399 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.232859447 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232413183 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.234692286 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.235553847 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.232633559 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.23411533 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.235513318 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231462146 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.233808089 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.239080894 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.242311937 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.236524871 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.235340985 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.231155921 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.234458264 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.23435121 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.231470593 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.234590795 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.234001199 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.234575032 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.232434073 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.234563737 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.230020824 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.231348111 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.235641499 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232389656 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238410151 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.237668773 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235263845 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.230180305 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.23753188 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.232046049 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.233581711 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.23661033 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.248876659 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.238082406 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.244673122 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.241147428 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.237576516 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.235330901 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237942853 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.240489317 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.234048571 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.234865143 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.2343645 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.235607536 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.233459307 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.239143008 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.234557374 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.242222945 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.233833794 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.23449964 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247508961 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.250839753 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235729338 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.237191106 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.23639194 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.235930812 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.231814309 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.235334198 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.232333806 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245084392 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.250920869 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236589186 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.235300825 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.233053135 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.237134006 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237997485 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233968651 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.235320679 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.231601582 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.233193165 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.233699709 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234929878 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.229070064 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.236402604 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.235183653 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.237059675 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.242574449 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.234444317 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241041076 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.237509836 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.237742132 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238137413 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236969586 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.232970799 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.232166327 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.234674952 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234586272 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.234861431 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.238993661 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.234889802 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.232452209 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.235435919 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231246619 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238216729 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.239203866 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.240311013 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.233466182 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.232209496 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.23574874 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.239712638 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233401328 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.23592203 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236841595 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.235811797 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.235759588 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231751271 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.234456089 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.235441341 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251660276 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.251106509 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234451179 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.23682052 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239697283 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.233798989 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.232900745 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.23617483 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.24141135 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.240260149 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.240554958 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.236645604 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245397732 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251341923 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.237547221 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.238589864 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.2353311 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.241208901 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.240562224 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237045418 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.234804616 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.243700991 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.251850016 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238672727 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241628126 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26699675 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.253467878 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.240522873 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.23233055 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236123368 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.233386332 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.23593283 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.232391468 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.233336857 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237348783 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.236476397 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.23774414 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243520262 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.236363168 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.238650611 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.234129523 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.234995071 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.240293135 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.232283528 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.233873778 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.234861874 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.234710472 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.233191415 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.235627551 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.238450408 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254939943 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.248165666 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.237067957 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.235261685 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.232499893 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.241769249 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.238881804 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246271972 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.241677051 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.235695261 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.232663009 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.238728536 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238175462 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.236933093 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.240245593 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.238878333 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.235707039 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.236733126 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.250403664 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245374094 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.248365093 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.241891449 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238006852 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.235699447 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237184573 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.23703746 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233897104 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.240817699 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.238535069 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.239006537 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.238015708 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.237483001 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.239339428 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.239945846 seconds)
  done (took 737.012048721 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.237523544 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236785391 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.234297518 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.234341543 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236616866 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233618678 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234974267 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234372066 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.235074068 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.239966645 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.235026028 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239128523 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.235281495 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.236169307 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23392049 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.237228244 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235439836 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.236224984 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236450949 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236508098 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.232924498 seconds)
  done (took 27.123707152 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.239664095 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.236818486 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.235209578 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.240713383 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238193651 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.239349078 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.23552872 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239520681 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.239470361 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238409585 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.236877295 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237686048 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.237309414 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.236108522 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240488855 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241200626 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.240315456 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23969448 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.237217276 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.234441436 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236497258 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.235224904 seconds)
  done (took 28.409251648 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.240016476 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.235733699 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.239980232 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.237306634 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.240555289 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.234694763 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.239340762 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.239953509 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.237544386 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.244094238 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.23575033 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.237817206 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.242698901 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.241651802 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.243412475 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.238231946 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.383674573 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.237865058 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.239620317 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.236387501 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.239236386 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.248648971 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.237728734 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.236256507 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.241775809 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.236085171 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.24199872 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.240630939 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.239695946 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.240569093 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.243624983 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.24013143 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.243462176 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.241789631 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.242944434 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.242531513 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.240391662 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.242532975 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.238230542 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.238253588 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.252033431 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.259849374 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.237903723 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.252830981 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.239048771 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.242952545 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.245158398 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.24696049 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.239039498 seconds)
  done (took 62.133994443 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.241127188 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.243680073 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.239189021 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.242671934 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.242540744 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.238371161 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.240079646 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.24373063 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.239959891 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.235403788 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.240363351 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.239165423 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.241324302 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.240224546 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.243549129 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.2407679 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.240610786 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.2417877 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.238500431 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.242585729 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.24065905 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.243376555 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.242865507 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.236839212 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.244271867 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.240907515 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.241118025 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.243882089 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.236914468 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.241090427 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.244962619 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.242686677 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.2446926 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.240881786 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.24239713 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.240380706 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.24427808 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.242256128 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.243678249 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.241126431 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.242946934 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.243724927 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.24561989 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.244777123 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.242057666 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.242246818 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.24168303 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.243546012 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.241908678 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.244764715 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.243568585 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.243873619 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.244349428 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.241239881 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.243664156 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.247090165 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.241577951 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.242395672 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.245408454 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.242979316 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.242463851 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.245006142 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.242024784 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.245007562 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.245107073 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.243058343 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.242836884 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.24516004 seconds)
  done (took 85.65386755 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.246062002 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.244770701 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244429232 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244861348 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244231905 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.24465126 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.244726562 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.246437807 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.245199397 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.244271453 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244887102 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.246437291 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.24439756 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.245897972 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.248026127 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.246186583 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.245619099 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246164926 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.246936399 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245136554 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.246997407 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.248507987 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.245575636 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.24754858 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.246832553 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.244722995 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247177157 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.246321014 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247034053 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.245819201 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246337243 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.245834013 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.246210515 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.244964594 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.248157094 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.246364627 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.246333218 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246545506 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.245769011 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.24625626 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.245226706 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.247525303 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.246671984 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.246423558 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.247367276 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.247412895 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.247070477 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.247384909 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.247491521 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24757666 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.24975542 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.247329543 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247599071 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247416796 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.247523829 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.244123975 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249675082 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.246984823 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247142764 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.246992648 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.247145318 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.248478745 seconds)
  done (took 78.457695557 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243890695 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249755312 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.247253484 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.246840198 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248288683 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.246294519 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249941482 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.248556135 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246034252 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.250696017 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248650127 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246504258 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246537795 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248701089 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.246576918 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248512506 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248419388 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246693609 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248577444 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.245776735 seconds)
  done (took 26.135642166 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.248715923 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.249562794 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.246959149 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.247523957 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.250180317 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.247752337 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.251400595 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249068144 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247584004 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249146857 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.250789426 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250747873 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246969555 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.248150203 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.249188235 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.248487327 seconds)
  done (took 21.165306491 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.248589471 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.249694239 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.249901425 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.249284046 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.246958176 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.247770034 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.251223144 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.247540133 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.247803592 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.251101377 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.251067134 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.251572422 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.251049493 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.250306983 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.249199888 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.250552127 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.248255017 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.247625098 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.251269589 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.251278061 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.249534624 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.248987177 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.251003407 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.251685093 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.248802789 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.24917073 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.248655778 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.248321643 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.249403358 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.25103054 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.249613366 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.249734313 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.248880923 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.24993495 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.25155273 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.248916254 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.252048809 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.252342013 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.251178272 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.251005993 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.252619809 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.250131851 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.252058218 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.25356351 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.249259635 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.253502823 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.249835149 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.250475783 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.250262697 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.249630993 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.252588583 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.252413499 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.251664615 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.252610058 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.25325364 seconds)
  done (took 69.955406317 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254444342 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.254901368 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.249115735 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.252123102 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.252910869 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.250387608 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.252993645 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.250648967 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253939612 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.254627104 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.252132587 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.254527452 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251556816 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.25438051 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.253397831 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256362147 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.250431449 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.251259906 seconds)
  done (took 23.732758169 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.254764237 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.254787821 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.255534129 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.252383587 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.25158589 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.254111748 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252593416 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.254379367 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257325342 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.252932259 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251377641 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.254671664 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255401594 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.256342393 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254181187 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251637394 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.255105326 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254473894 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.252507058 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253373337 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.253856629 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256481376 seconds)
  done (took 28.778882907 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.254087557 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.255213874 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.271791616 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.295688084 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.28098403 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.254584188 seconds)
  done (took 8.803977049 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255568482 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256777171 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255002421 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257168034 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25569803 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253579195 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252470885 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257237044 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261081492 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249812011 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255807096 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257685231 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254125804 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250294082 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258289701 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256365513 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256706056 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25536456 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254293082 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258962586 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254806652 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258594633 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250369335 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254407726 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255070483 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254637975 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25377342 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257185921 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254278207 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257848091 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252709926 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255204513 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258751135 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257090975 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260831151 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259205779 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255594272 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260344603 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255699085 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257962397 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.257291296 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259459428 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256245683 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257593587 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258897158 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251778774 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257377707 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254827969 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255377225 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259244477 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254947535 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257882451 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260424504 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256463904 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259699893 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260011631 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257847273 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256042083 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259840512 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257850187 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254071659 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259929742 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257336861 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258171105 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260558466 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259367218 seconds)
  done (took 84.12130954 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258070069 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255709646 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253036311 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258130744 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254688088 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256733155 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254434847 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257825936 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257050224 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254028486 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260516861 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253775123 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257442676 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256359913 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258313741 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255817343 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256746285 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25755986 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255220341 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261277385 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258921934 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256080787 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256564564 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257022904 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255388351 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258182711 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256968362 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257903761 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257160292 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254769277 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25818711 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259654264 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255956924 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.254752971 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257452557 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257789116 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258112717 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253502172 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260865206 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2608143 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257485658 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261434253 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258803968 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259640098 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258670083 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260445421 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261177937 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26016631 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25700795 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258118027 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258170415 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259984856 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259417421 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258781431 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258489511 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25877831 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259311382 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258493891 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257349093 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262426309 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260125081 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260359224 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263205582 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262017787 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257080168 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263179769 seconds)
  done (took 84.224235808 seconds)
done (took 1716.85886988 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.277146768 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.285220625 seconds)
  done (took 13.756313774 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.425480278 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.377551438 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.262540751 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.268251334 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.25977117 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.257301832 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.276607539 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.26058164 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.261870205 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.262714425 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.262159002 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.45100103 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.315845198 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.261598621 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.263763057 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.356011754 seconds)
  done (took 42.020054474 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.289097863 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.271781704 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.365078467 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.283926831 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.289121114 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.425406848 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.314570563 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.268972013 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.411083195 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.30313082 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.628923009 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.289444379 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.269499096 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.236117196 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.283964267 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.42643111 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.479008851 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.634929586 seconds)
  done (took 28.666703524 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.640704923 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.285118673 seconds)
  done (took 9.123636893 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.294937696 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.300169608 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.288346032 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.263870091 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.259372239 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.311529332 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.279130313 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.274223951 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.297801628 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.32612858 seconds)
  done (took 64.092121987 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.285431594 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.27052504 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.269653964 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.267654694 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.258495507 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.268182909 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.266835198 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.260452984 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.305566577 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.373021804 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.281117186 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.277260146 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.269444546 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.268589214 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.266011299 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.301146192 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.413392391 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.266445602 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.265927533 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.275388238 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.268672547 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.353943358 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.304031079 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.26720642 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.375590646 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.321713755 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.271747017 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.275869842 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.391195393 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.267080851 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.267522885 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.269155248 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.270918319 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.815126864 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.777353216 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.273951756 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.28838303 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.279437081 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.266858879 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.412607587 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.271317003 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.275558486 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.262108623 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.757050122 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.415355272 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.369445759 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.378239111 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.271334865 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.271582564 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.328111629 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.270914408 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.271951364 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.296891767 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.990087885 seconds)
  done (took 106.358934471 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.321911833 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.760571461 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.430970891 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.277998002 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.932261885 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.961384676 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.264382395 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.50554406 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.297870847 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.264099134 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.534995488 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.719814362 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.266352921 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.337757387 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.525249404 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.302277027 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.262993774 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.04738469 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.265067503 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.263602135 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.670429317 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.27915353 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.26234037 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.528761441 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.300336627 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.687845598 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.512546347 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.726176992 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.269151463 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.263355712 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.687256555 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.275411373 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.277327227 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.263719672 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.517053967 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.579031634 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.555395066 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.27187077 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.289148375 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.255709589 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.274466067 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.663090341 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.542860364 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.241939134 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.241044882 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.657181347 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.237527756 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.24708699 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.234977521 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.434807657 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.226591122 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.232964781 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.502860111 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.231639019 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.490462915 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.305743684 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.261989025 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.677712129 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.227561025 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.316539502 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.241533141 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.231087204 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.227708897 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.227728143 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.225962215 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.524378209 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.294717387 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.224738914 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.529984177 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.636843041 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.217787858 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.694373418 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.028820512 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.23117211 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.268002732 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.219332807 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.795968793 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.659826128 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.247062576 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.210155139 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.507471238 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.214439763 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.471628328 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.224851415 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.212343926 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.631872929 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.23180358 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.252746867 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.227569092 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.218374568 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.902761693 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.2214055 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.457272834 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.25583081 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.21866648 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.21902712 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.25838432 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.213954985 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.212102228 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.213182141 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.694635944 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.222534755 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.326079472 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.22702973 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.218141503 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.219447041 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.214999372 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.213643433 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.432311274 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.696177765 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.224558527 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.221068637 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.212471485 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.220057649 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.465477147 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.215915538 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.477900067 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.215796715 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.214122638 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.218104852 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.954044051 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.223563798 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.205442477 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.218879049 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.04467149 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.424883303 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.223175734 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.203642251 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.20857629 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.21730032 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.418926098 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.208319288 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.230442542 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.211923002 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871201268 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.207916042 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.210759325 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.862572237 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.208218076 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.061391351 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.23159769 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.207802203 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.508750976 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.46428329 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.219343479 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.206901628 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.219594547 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.859524249 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.211818284 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.356758971 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.226097054 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.194673553 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.406092736 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.236205543 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.209435012 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.759482523 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.211023055 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.420131081 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.221118964 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.522499191 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.655057869 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.206558501 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.213350237 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.865904255 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.84425931 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.252336944 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.211898881 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.463116775 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.195782007 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.660777276 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.209172102 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.21011058 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.676306801 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.211579553 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.214191516 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.210057943 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.210549135 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.350291504 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.382619701 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.39165015 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.212412108 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.628274334 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.212782834 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.207047555 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.210773512 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.214826025 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.56497523 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.267551475 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.209540575 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.223701264 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.210324798 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.2163273 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.640262445 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.049553207 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.21218952 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.363352142 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.797311735 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.208005582 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.211981174 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.892068649 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.650919356 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.712961286 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.276543473 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.479164374 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.214064319 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.248145519 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.821994959 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.25756456 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.637442225 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.208595905 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.206922511 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.7700264 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.20784794 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.318528835 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.211586337 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.21342133 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.693755444 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.209212959 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.214621729 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.400771931 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.207999603 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467884714 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.210807543 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.214663127 seconds)
  done (took 1083.67967294 seconds)
done (took 1348.892416339 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.212549978 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.211965531 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.200926967 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.214480122 seconds)
  done (took 25.992585591 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.22410119 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.220466673 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.221565506 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.220215546 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.223305643 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.219595409 seconds)
  done (took 8.484405967 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.305290646 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.214180746 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.213583283 seconds)
  done (took 18.888300175 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.41015764 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.355004953 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.541490307 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.139064437 seconds)
  done (took 9.600737733 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.221894608 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.221768884 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.222330065 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.224763458 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.225820485 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.226490519 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.223707988 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.224583788 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.226437134 seconds)
  done (took 12.172350273 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.726470068 seconds)
done (took 81.017055136 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.2165101 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.645148367 seconds)
    (3/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.222893219 seconds)
    (4/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.403618875 seconds)
    (5/309) benchmarking ("sort", Float64, false)...
    done (took 5.439594761 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.263893863 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.441852715 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.214075363 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.441913958 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.223841404 seconds)
    (11/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.357877935 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.25821274 seconds)
    (13/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.47086183 seconds)
    (14/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.366186963 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.238555509 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.217140157 seconds)
    (17/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.872656025 seconds)
    (18/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.211079989 seconds)
    (19/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.502243471 seconds)
    (20/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.212198564 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.056869819 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.2125973 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.628299176 seconds)
    (24/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.851846457 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.222170949 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.213524164 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.555014219 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.52766389 seconds)
    (29/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.036231805 seconds)
    (30/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.295672042 seconds)
    (31/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.245042539 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.446873067 seconds)
    (33/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.958182379 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.21231855 seconds)
    (35/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.244212868 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.323962715 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.054257123 seconds)
    (38/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.229127276 seconds)
    (39/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.563751548 seconds)
    (40/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.785558394 seconds)
    (41/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.946833373 seconds)
    (42/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.438162247 seconds)
    (43/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.334377891 seconds)
    (44/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.234430744 seconds)
    (45/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.245126562 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.327138598 seconds)
    (47/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.234672777 seconds)
    (48/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.2679003 seconds)
    (49/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.209529015 seconds)
    (50/309) benchmarking ("sort", Float32, false)...
    done (took 5.20891324 seconds)
    (51/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.244559808 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.443393706 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.276253235 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.057947595 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.634823072 seconds)
    (56/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.702762532 seconds)
    (57/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.651830143 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.323128633 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.476508402 seconds)
    (60/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.899457417 seconds)
    (61/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.299587898 seconds)
    (62/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.340820035 seconds)
    (63/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.39754413 seconds)
    (64/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.216785169 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.275918295 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.205710972 seconds)
    (67/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.715138713 seconds)
    (68/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.515330069 seconds)
    (69/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.443560324 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.370479991 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.322477333 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.218950539 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.299967094 seconds)
    (74/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.302472672 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.206035828 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.280390956 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.329240881 seconds)
    (78/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.568891027 seconds)
    (79/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.204145056 seconds)
    (80/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.908807509 seconds)
    (81/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.229153239 seconds)
    (82/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.339527358 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.439382553 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.606298187 seconds)
    (85/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.214631102 seconds)
    (86/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.375373219 seconds)
    (87/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.418937842 seconds)
    (88/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.210631416 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.32418618 seconds)
    (90/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.751186207 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.211737798 seconds)
    (92/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.723170631 seconds)
    (93/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.183279798 seconds)
    (94/309) benchmarking ("sort", Int8, false)...
    done (took 4.231636283 seconds)
    (95/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.200346865 seconds)
    (96/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.356681982 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.006511198 seconds)
    (98/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.47888957 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.986946705 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.713274757 seconds)
    (101/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.237969957 seconds)
    (102/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.222070691 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.258048744 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.247228755 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.20977926 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.984565089 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.722957009 seconds)
    (108/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.756824586 seconds)
    (109/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.63086503 seconds)
    (110/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.708851925 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.351063035 seconds)
    (112/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.24067535 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.892193125 seconds)
    (114/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.200848269 seconds)
    (115/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.241126946 seconds)
    (116/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.221570752 seconds)
    (117/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.289942769 seconds)
    (118/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.226346712 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.288142016 seconds)
    (120/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.327976093 seconds)
    (121/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.652459064 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.430050794 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.233577487 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.226206791 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.214677127 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.215635781 seconds)
    (127/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.41508198 seconds)
    (128/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.368763391 seconds)
    (129/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.217610567 seconds)
    (130/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.302084291 seconds)
    (131/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.617788837 seconds)
    (132/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.966769855 seconds)
    (133/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.300477852 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.525393261 seconds)
    (135/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.214441302 seconds)
    (136/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.240009973 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.273647526 seconds)
    (138/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.283770431 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 1.727094667 seconds)
    (140/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.518195836 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.238104841 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.502095656 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.41471644 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.251868026 seconds)
    (145/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.228308867 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.891461102 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.4764749 seconds)
    (148/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.421417776 seconds)
    (149/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.205730263 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.476472166 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.318517851 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.314131927 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.712267987 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.678140873 seconds)
    (155/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.387173233 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.320798791 seconds)
    (157/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.345862136 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.588854484 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.050460353 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.292381181 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.892716081 seconds)
    (162/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.26247817 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.245701385 seconds)
    (164/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.729178616 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.882758593 seconds)
    (166/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.230812276 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.609383909 seconds)
    (168/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.395021722 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.333842187 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.713369134 seconds)
    (171/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.217316371 seconds)
    (172/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.248899925 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.757938508 seconds)
    (174/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.510379898 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.220407575 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.260037611 seconds)
    (177/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.002251713 seconds)
    (178/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.358644704 seconds)
    (179/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.290265828 seconds)
    (180/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.233094743 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.816556184 seconds)
    (182/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.317026193 seconds)
    (183/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.548410213 seconds)
    (184/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.673704125 seconds)
    (185/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.729606647 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.300697622 seconds)
    (187/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.929992839 seconds)
    (188/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.590177571 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.004092047 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.409638378 seconds)
    (191/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.360635188 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.622575449 seconds)
    (193/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.432326782 seconds)
    (194/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.647366065 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.22280955 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.372421602 seconds)
    (197/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.227763181 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.238873536 seconds)
    (199/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.98641328 seconds)
    (200/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.25245876 seconds)
    (201/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.764190054 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.939702856 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.516774701 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.224975165 seconds)
    (205/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.234176164 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.273058026 seconds)
    (207/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.803157986 seconds)
    (208/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.2678409 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.570315129 seconds)
    (210/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.571817709 seconds)
    (211/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.291203429 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.809226977 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.285682901 seconds)
    (214/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.227863844 seconds)
    (215/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.269109515 seconds)
    (216/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.278207639 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.228472445 seconds)
    (218/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.215412562 seconds)
    (219/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.619830794 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.823775618 seconds)
    (221/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.310629343 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.758854949 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.429542013 seconds)
    (224/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.765530075 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.585507977 seconds)
    (226/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.583180567 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.931226306 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.327700977 seconds)
    (229/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.38026914 seconds)
    (230/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.65880232 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.478615032 seconds)
    (232/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.253178247 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.631910857 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.225261856 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.892706801 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.048344796 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.258399936 seconds)
    (238/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.947159027 seconds)
    (239/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.237883617 seconds)
    (240/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.33227029 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.780475914 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.276925123 seconds)
    (243/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.247633795 seconds)
    (244/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.235781687 seconds)
    (245/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.588612698 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.231013985 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.986266585 seconds)
    (248/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.21336576 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.481359163 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.216881009 seconds)
    (251/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.362818727 seconds)
    (252/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.773874015 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.534303238 seconds)
    (254/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.628209763 seconds)
    (255/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.930016612 seconds)
    (256/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.251925306 seconds)
    (257/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.327925129 seconds)
    (258/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.185893163 seconds)
    (259/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.217810161 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.843097372 seconds)
    (261/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.246527137 seconds)
    (262/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.350695683 seconds)
    (263/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.229382539 seconds)
    (264/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.31920383 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.548008924 seconds)
    (266/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.458288838 seconds)
    (267/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.423915588 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.248919691 seconds)
    (269/309) benchmarking ("sort", BigInt, false)...
    done (took 6.237531251 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.323936581 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.246920688 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.219361208 seconds)
    (273/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.321288778 seconds)
    (274/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.219825459 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.612066972 seconds)
    (276/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.22183726 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.477813547 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.229997797 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.521609309 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.906622969 seconds)
    (281/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.896288959 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.915319271 seconds)
    (283/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.496879536 seconds)
    (284/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.563986146 seconds)
    (285/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.756814777 seconds)
    (286/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.251506735 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.302100804 seconds)
    (288/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.969203621 seconds)
    (289/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.22270664 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.381791856 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.340023229 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.469242687 seconds)
    (293/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.246331293 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.043306527 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.391225344 seconds)
    (296/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.340312299 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.44529915 seconds)
    (298/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.744155739 seconds)
    (299/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.431220579 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.280712116 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.207676319 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.215871613 seconds)
    (303/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.508442701 seconds)
    (304/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.202183458 seconds)
    (305/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.298427418 seconds)
    (306/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.38036717 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.254190911 seconds)
    (308/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.2186209 seconds)
    (309/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.348864162 seconds)
  done (took 874.09532762 seconds)
done (took 875.252233056 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.26144911 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.257617118 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.24108512 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.262541278 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.353010358 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.270128994 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.251040151 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.245308354 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.286759091 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.291414049 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.240165331 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.269331743 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.2427193 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.242695245 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.240425455 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.256238318 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.150990198 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.238713658 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.257961345 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.248621983 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.259889059 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.240712998 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.291280126 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.26838033 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.24465646 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.240801595 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.241058461 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.259634124 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.350207042 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.243258189 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.238613004 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.252467112 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.141922313 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.232545602 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.232106506 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.263018967 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.253969393 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.247685582 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.246595347 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.275237605 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.493889245 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.236065904 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.239850958 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.237357095 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.239057753 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.242231824 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.240197409 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.247261952 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.253687478 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.25240803 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.480564492 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.250044908 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.242255599 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.237209259 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.249182835 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.240138389 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.240313743 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.25606236 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.258534301 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.254014659 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.144895181 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.243809475 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.242071107 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.25822337 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.247854842 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.518248466 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.23187005 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.24834731 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.496901446 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.242285213 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.524146349 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.245738545 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.243446493 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.260170091 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.271581882 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.154572207 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.237560727 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.241142467 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.247994225 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.239168537 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.251280906 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.255472291 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.245317455 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.241660208 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.254109803 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.270937103 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.249142616 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.239771552 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.24676816 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.262391028 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.245975373 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.250986297 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.24231466 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.23537321 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.250588863 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.243931637 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.245923317 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.244287961 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.245703113 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.252369673 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.49421564 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.253232169 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.236702665 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.237581029 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.239338917 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.25681741 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.497030223 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.23911352 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.262882074 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.289785513 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.24062657 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.15156735 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.242773592 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.256711817 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.249751426 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.242137871 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.235565457 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.155296911 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.49696044 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.256020644 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.243919266 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.241772816 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.261983697 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.245617496 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.238936058 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.158423103 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.247877858 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.260888173 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.366941958 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.252149743 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.274965472 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.243645285 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.242552755 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.272014234 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.261096319 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.276992123 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.247175592 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.25978854 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.255410291 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.23998893 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.256242057 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.254932102 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.239294785 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.24953286 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.238125392 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.271303852 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.254726645 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.256948593 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.266504894 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.366736058 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.2383556 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.152920639 seconds)
done (took 208.887033494 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.304378446 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.23639261 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.321467572 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.237245101 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.336782128 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.339688604 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.23929129 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.237334248 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.234261101 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.614802239 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.235362056 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.236704323 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.237812644 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.238585186 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.319862277 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.236413998 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.237075687 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.578567091 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.243721222 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.310942421 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.23571263 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.239421258 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.24091183 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.622070995 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.233853871 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.235923084 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.312532404 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.240174468 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.589516947 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.239281142 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.233563812 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.584359264 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.330797355 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.256592722 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.247165088 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.246677935 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.337382576 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.258925674 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.324262525 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.322997509 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.324356191 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.278186993 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.23721534 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.237261916 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.243007398 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.241805797 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.237900029 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.265563324 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.236184536 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.239090201 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.580199637 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.250350746 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.239636642 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.238209151 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.241101945 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.269699823 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.2363044 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.242275689 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.329939696 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.24104643 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.300230748 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.651478585 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.617773468 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.241589848 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.240999066 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.237781203 seconds)
  done (took 142.188440626 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.30912131 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.311624653 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.346410822 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.24007015 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.294413457 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.352633233 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.239604725 seconds)
  done (took 10.274859675 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.2497772 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.24065338 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.288700125 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.289260932 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.242383015 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.387246647 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.242620757 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.253263508 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.240447038 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.292085979 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.242424212 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.239542231 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.248371215 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.244234788 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.293477359 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.251542031 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.356324051 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.243676385 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.246210441 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.394245071 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.241786467 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.249395537 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.294793334 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.255193629 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.245031464 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.247802634 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.809133663 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.243198933 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.244116393 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.246818573 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.242695702 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.286022849 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.249075557 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.24509369 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.248758135 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.369005921 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.246408197 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.245199325 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.252156496 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.246251681 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.24804398 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.24563381 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.243152174 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.23866296 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.244031922 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.271373553 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.24437295 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.243476213 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.247244623 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.24554366 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.295485474 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.247854974 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.245119329 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.243722941 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.304938511 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.256765565 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.252846074 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.243303115 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.24309582 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.241697808 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.397621582 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.291173553 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.243840643 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.291279656 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.244326129 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.246010881 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.248427261 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.245132588 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.299976389 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.244068199 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.295860135 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.242207819 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.396378136 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.269402497 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.246030142 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.247408625 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.246071214 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.245444652 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.239722812 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.250094844 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.242999536 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.24735712 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.25294138 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.243895673 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.242444032 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.347340046 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354694807 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.244483908 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.26033963 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.253952388 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.243904991 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.300745281 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.243958954 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.244050115 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.29668182 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.359224621 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.298707456 seconds)
  done (took 144.533559229 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.250477163 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.254198921 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.246140134 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.261290765 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.247349457 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.244909904 seconds)
  done (took 8.690084648 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.249818037 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.246171364 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.24635877 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.2452673 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.24447374 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.248027348 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.248499596 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.247704834 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.250926908 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.246030642 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.248965997 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.250682694 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.249670698 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.248129107 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.246076629 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.245165844 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.246684537 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.243476167 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.244423787 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.243879858 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.349845006 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.246284362 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.244210762 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.246681014 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.253383544 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.24761974 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.25321566 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.245746874 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.247081128 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.254706627 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.249546903 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.247740879 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.247851796 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.252201131 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.248658137 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.248675771 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.250825978 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.249648631 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.242588271 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.247669238 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.249629264 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.247760199 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.24600227 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.250363944 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.247730665 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.250260496 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.250860722 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.254643178 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.247644823 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.247281043 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.24752427 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.246857463 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.248132868 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.248053184 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.250877538 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.251198947 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.252081921 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.249997248 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.248815811 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.249485846 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.251858064 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.24924737 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.248164025 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.253035162 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.246313158 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.250113155 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.248652029 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.251173714 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.247251971 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.249262273 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.250001587 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.246410905 seconds)
  done (took 92.180891855 seconds)
done (took 399.046120713 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.396326498 seconds)
  done (took 7.587516493 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.43822385 seconds)
  done (took 7.626826059 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.002092435 seconds)
  done (took 19.193523574 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.242253216 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.319400294 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.256391501 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.248167425 seconds)
  done (took 26.251172115 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.340364424 seconds)
  done (took 7.531772462 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.242177257 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.258431746 seconds)
  done (took 13.694051732 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.580880841 seconds)
  done (took 7.767298455 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.048250913 seconds)
  done (took 8.239377084 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.263167497 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.27481768 seconds)
  done (took 13.737657668 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.231853239 seconds)
  done (took 7.421418036 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.882623682 seconds)
  done (took 8.075886791 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.247064052 seconds)
  done (took 7.439577896 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.316503983 seconds)
  done (took 7.507240318 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.343138667 seconds)
  done (took 8.534235623 seconds)
done (took 151.798206889 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.254488393 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.252750427 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.256672273 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.254960866 seconds)
  done (took 26.212712517 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.289069842 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.284712575 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.288157996 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.297536854 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.292352839 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.286451484 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.282553778 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.277015565 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.296856933 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.289918414 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.289234122 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.292228249 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.28721712 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.280039489 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.289423947 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.290780498 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.298455679 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.288520727 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.279974369 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.290982803 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.256409092 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.29854468 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.290478689 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.257406748 seconds)
  done (took 32.070674174 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.456480615 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.32456562 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.409818187 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.307148748 seconds)
  done (took 6.695251228 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.308794869 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.306496786 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.318988634 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.357042542 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.385674441 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.319426027 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.278261046 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.277138239 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.265264826 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.307520898 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.382670071 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.323982312 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.391289053 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.255512474 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.438814052 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.258230848 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.257618755 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.309811784 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.361210285 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.375132508 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.257508116 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.311435691 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.314729956 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.330035669 seconds)
  done (took 32.889328558 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.257377662 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.265438214 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.263026667 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.256837642 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.260086374 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.259462439 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.263887087 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.257738035 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.280249087 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.262041697 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.258246488 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.265080079 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.25815832 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.256435719 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.25817298 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.267596181 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.269601972 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.260637292 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.26405183 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.26818849 seconds)
  done (took 26.450506665 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.257992424 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.114434672 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.609223375 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.510232304 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.255394055 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.260342514 seconds)
  done (took 27.206192867 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.324871832 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.436239327 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.259086148 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.583395722 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.661091087 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.266981824 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.268566321 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.476170633 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.736014112 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.73835468 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.310762238 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.321814407 seconds)
  done (took 18.5822793 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.257889559 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.260297926 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.272490913 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.276445631 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.314745635 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.26452205 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.266960502 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.255417857 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.314794246 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.312872879 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.264414411 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.312417098 seconds)
  done (took 36.572296127 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344121901 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336375567 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.162529663 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.970705081 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.634879053 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.467451839 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.983714251 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.671982471 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.267232388 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532665834 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.903975847 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36191762 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.509561409 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26725536 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.258696693 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.185747267 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488887712 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710454384 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265270447 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.919219993 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290369575 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.261326662 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.008455853 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.288380301 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.470973448 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.388291832 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.524974374 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.257931819 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517292462 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.267607115 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26959896 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.260115927 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535502432 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894801839 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352258786 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273248668 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.933737274 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.978769915 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.261211739 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.926804329 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.672880504 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.265247113 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269653576 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260078281 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.193093133 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.261737127 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680758737 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.270021159 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.972760789 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.264687067 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.270399276 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35899194 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.267338411 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.078911522 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254971185 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.258827134 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.256746836 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.268450181 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834119415 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.381303123 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.273064046 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.198293236 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37053065 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.926330784 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834466606 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.357656216 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.263689911 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.262604007 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193969751 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.983879823 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.279912209 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407909761 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.280028626 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912253924 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900577921 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.922158843 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.204912629 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.776460282 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.265606108 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.195565887 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.48821066 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258901069 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.195843724 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.217851772 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.197244754 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919535477 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274722899 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.599648262 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.270581132 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.675756024 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.278158933 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276257926 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281726459 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.483715405 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.142805443 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257885703 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.683342892 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417702429 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281437661 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.676104611 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199839672 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.263842232 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.514952071 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.47242778 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27287739 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.200418013 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448573852 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263322168 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.277334906 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.269093806 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.270436208 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.781816713 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.27515229 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.393810184 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279009868 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.262368192 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95794366 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267550365 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.363775188 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.929937231 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.503468634 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.000483612 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267482527 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343937967 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.270195292 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.262514461 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.024950049 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.777399432 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.261777019 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.264077952 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.260857967 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.27875213 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.263309797 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210414825 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.25949889 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.967761173 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.270836237 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.485403416 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267949393 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.539350303 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197024088 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414673219 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.354878147 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.4809689 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.358914184 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.259413194 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520325086 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266525876 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.265939952 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.280582234 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284009722 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363804296 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285664474 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.265217748 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.533612356 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.269941902 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.267487047 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.033359105 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.273008877 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.688204105 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.270040394 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.084485594 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79297907 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241819408 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.266695803 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.152854681 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.279817694 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.328160908 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.265161154 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.273353186 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.907697998 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.045283163 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.272630281 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.271049151 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485626283 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.273238527 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.023462947 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352350786 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.447348209 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.802116928 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.276188265 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.199995406 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.977575392 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.95638296 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264017718 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.198821717 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.264111698 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272263259 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.274969846 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.489579802 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.796551066 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264256411 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.945511354 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.270721535 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.275389444 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.270045595 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262742447 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.900882488 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.403087083 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281804257 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.281879229 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408000316 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.278379304 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.196289893 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.267347241 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.270343834 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.267533166 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.265375028 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298888783 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.953240654 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.747706878 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.521239362 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.972145235 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.284647956 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.118572537 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.298997409 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.272413795 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.727857777 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294001759 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.284608369 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274967291 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.276161718 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.024624331 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.925579444 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835582533 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929171535 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748281931 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151857936 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.282410564 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.267685045 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.687353345 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203289603 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.82674336 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.438546111 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.68709966 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211940019 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.447355867 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.371596831 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958650627 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.275611084 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.495244843 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152023868 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.732205278 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.29566991 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.481582367 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301426208 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.265013107 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.202811007 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.788558791 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.481496508 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.73362826 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353065623 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688518642 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.736889246 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.28288958 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.267895882 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.552849718 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426756416 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.981793966 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.436333056 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.277885634 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.981245268 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.742753247 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.273656097 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.495577604 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842914721 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.275428512 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.452790229 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205558568 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.27818041 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.281919247 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.26999829 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.402714014 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.265891033 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.521718337 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.28034475 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204549088 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.26793986 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750628414 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.18907264 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.272138396 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266774421 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966807146 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.272661291 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527789636 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.278457936 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.889258169 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272841304 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.204751438 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203130264 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.963564565 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277150778 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250309797 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724969885 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.359177275 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.246664122 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290587399 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11687772 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.526742593 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.284832736 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.798764694 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499972319 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.035790919 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296156074 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.373332221 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.780594748 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.274163048 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.272413377 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.506353569 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.09128431 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.496295072 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.172998061 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.180950615 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.272371258 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.487495106 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.271105877 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.99326474 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511441015 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.983309027 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.278567008 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941592064 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303792096 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.989142995 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.203935054 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379764143 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.280829139 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352801144 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286921949 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.284738388 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.284039286 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433024749 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.011697221 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290260363 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.291054951 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373211028 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.450142641 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.881691938 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.282729625 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810475462 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965331204 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.813640516 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284615913 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.275665854 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275889607 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208960938 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421563961 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.501081186 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552267761 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404940758 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.414187491 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296725365 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.79613991 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.291894395 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489105971 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547090454 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.171452729 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274887335 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288733801 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.276674738 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.287710203 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.485699361 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.733848088 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802698831 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39502007 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.284447253 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.698681405 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553682546 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277051186 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.27740026 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.866489001 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.278682032 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.562213763 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.282216267 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.053105762 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425068369 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.284620171 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91758947 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.2843279 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.430958871 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.049951844 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.976204608 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.52936012 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.678705705 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.283367819 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.812683901 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.911712962 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.5408711 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343731045 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.286133493 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.387771608 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426559641 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.279435125 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.278690669 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.27458198 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119840986 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.985270543 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.287419915 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818567902 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540226873 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.273958775 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.280736877 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301081119 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.288440012 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.501750935 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947564868 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.504331759 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288808174 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.284039713 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.093246791 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.820119447 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.288378492 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213277433 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.278948994 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501330693 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.514888065 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300057575 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.730267255 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.990524432 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803421691 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.251334955 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298617927 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.289772272 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.922391536 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82496139 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.902849086 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.733029797 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.848947387 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.287765366 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555076997 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.284423112 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.280007357 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556716272 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.283724846 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.295949961 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.290824418 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.814891447 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.986266078 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.281184999 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.993625292 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.21547654 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.620048937 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.889823419 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218976384 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.286097516 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.452267535 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.278860048 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408040796 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.289701863 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.283865875 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280257376 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.03438876 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557283103 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.283741978 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.280876536 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.837938846 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.286774891 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288898225 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.502066001 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281761768 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.956500651 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.627796316 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.534553794 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.277844044 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.270974096 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.286234554 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282922466 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.2686707 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.47439985 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502373592 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810359547 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.285608625 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.295824067 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.28707222 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.498208454 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.492066738 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.038710567 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.306725293 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283078196 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294785905 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.185789686 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.785105926 seconds)
  done (took 1544.55090063 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.316805091 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.308757279 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.308998272 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.340986672 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.291444584 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.340415498 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.317835866 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.367614198 seconds)
  done (took 51.816394621 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.296195629 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.495886057 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.309920546 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.285417277 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.293976048 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.286151974 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.685763846 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.284065453 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.289494744 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.292910925 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.286250627 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.2816347 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.866801317 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.293404397 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.283712344 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.279620917 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.288614453 seconds)
  done (took 64.331151206 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.282383351 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.506829114 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.359632746 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.283666694 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.997148637 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.287079443 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.506986576 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.330638277 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.278350306 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.327515949 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.934648334 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.326096313 seconds)
  done (took 82.648023367 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.290942659 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.289562583 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.287812251 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.28768856 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.289560981 seconds)
  done (took 7.671400931 seconds)
done (took 1958.894028678 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.72515292 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.914402561 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.897737834 seconds)
  done (took 5.039261181 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.428901223 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.474995913 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.598844084 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.601734387 seconds)
  done (took 7.331759223 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.553525355 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.646065382 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.462129049 seconds)
  done (took 5.890036524 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.556605912 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.291702688 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.353685416 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.278388028 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.282122699 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.281027903 seconds)
  done (took 20.067839664 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.286130205 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.288465582 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.285306034 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.286213392 seconds)
  done (took 6.374574848 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.267026874 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.996634088 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.269712267 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.283058542 seconds)
  done (took 18.042103567 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.031579856 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.04246472 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.028186847 seconds)
  done (took 7.3286194 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.280983904 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.142811787 seconds)
  done (took 9.65099454 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.5974731 seconds)
  done (took 2.825616723 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.419293099 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.548524138 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.240153303 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.175421924 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.259080391 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.713452111 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.743922902 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.372581796 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.164266861 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.219387292 seconds)
  done (took 26.08629729 seconds)
done (took 121.790896606 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.801557009 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.524073007 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.483995042 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.765740416 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.512763578 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.481630064 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.709218911 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.74301089 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.276382023 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.267587535 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.769276949 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.512273505 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.439370819 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.522809445 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.441265664 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.530130748 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.513311985 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.842894323 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.486015687 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.646425497 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.710282139 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.40624429 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.603055793 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.423152638 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.50944586 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.436838735 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.005522129 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.529312628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.660246885 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.014018519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.434310225 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.827791053 seconds)
  done (took 188.059537022 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.286880197 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.288377211 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.282625917 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.303514366 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.282952551 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.285058385 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.299187672 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.296220374 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.283048931 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.29407349 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.283347889 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.301018621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.289439641 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.291852073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.286704749 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.297767232 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.294100095 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.283743306 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.283472224 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.298482221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.28547058 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.290998256 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.28446358 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.297305449 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.2967736 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.282731165 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.284321236 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.288244496 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.286263815 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.283038866 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.284612242 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.283430059 seconds)
  done (took 202.487646707 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.284830147 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.283696948 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.28650773 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.297713882 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.295484558 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.282292495 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.30287873 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.296120055 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.292744505 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.282728339 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.289225454 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.285611944 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.286629361 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.289912449 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.284775834 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.286077643 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.286204405 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.286338406 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.29602247 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.284692104 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.30322871 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.2965283 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.286288165 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.284734506 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.284601985 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.287689374 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.286746479 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.299004632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.288403184 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.286172337 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.302461152 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.292777285 seconds)
  done (took 202.508748795 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.487378251 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.294480319 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.2959984 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.245824084 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.293818274 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.296483647 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.288451888 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.484160684 seconds)
  done (took 13.915748683 seconds)
done (took 608.201358194 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.454216339 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.186687415 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.484052484 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.319697381 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.959108297 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.314604683 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.316366389 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.470850494 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.197280362 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.476441999 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.506436035 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.312880366 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.628833487 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.313268424 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.557100833 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.406847938 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.152117938 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.256646095 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.607425039 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.737015964 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.561651603 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.717313865 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.469366334 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.191101797 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.631357903 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.707246334 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.935522553 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.148221762 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.313838483 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.609636142 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.792577054 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.184788699 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.367508145 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.353491728 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.40978556 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.386096704 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.161397424 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.347720647 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.485526446 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.478018887 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.74022992 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.001751139 seconds)
  done (took 87.886882013 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.286374091 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.28357123 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.282883047 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.282267062 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.284814261 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.285184836 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.28334512 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.285135319 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.28491392 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.284551897 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.283982126 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.284600761 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.282282864 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.286913377 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.28528772 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.283777129 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.28559958 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.286731659 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.283255346 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.283916483 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.283927109 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.282494248 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.285617002 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.284269141 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.282690845 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.285096588 seconds)
  done (took 34.625492084 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.301546446 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.526446183 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.683980541 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.305760609 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.297515524 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.298771891 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.366661933 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.298975832 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.298252341 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.300913865 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.442968011 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.299490722 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.332058103 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.693014172 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.30315674 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.295880613 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.296089834 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.29618395 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.532199532 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.306949656 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.368821209 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.299660466 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.368470206 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.308999062 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.300477453 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.298763143 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.302464751 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.784007731 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.307942781 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.445499505 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.991824836 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.369297004 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.748326021 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.701746325 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.997096845 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.301941579 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.298359519 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.448195405 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.301075103 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.301331666 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.370013503 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.30006945 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.699438042 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.919599995 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.321745029 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.306434114 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.808297027 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.449931752 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.519553318 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.309168576 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.718846618 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.309861469 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.302877957 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.30054556 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.519850586 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.307299058 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.299098245 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.816623303 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.305747598 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.368415787 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.303128769 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.301269255 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.53738213 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.300520276 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.522648195 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.303200358 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.311517983 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.300309425 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.695222004 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.306438755 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.92836531 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.32111862 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.301420976 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.442334738 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.522177264 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.839202924 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.311276856 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.541821237 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.75517027 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.369027423 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.307002382 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.780957654 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.376009643 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.3071866 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.30410891 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.302907789 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.301037537 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.343664495 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.36724041 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.863138017 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.916262611 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.826282075 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.371475579 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.313299491 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.301000132 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.810077715 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.318177236 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.30059173 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.694041538 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.928876106 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.317188741 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.309030174 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.909496659 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.321858881 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.3708295 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.308109613 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.699643534 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.306065341 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.347828419 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.300908158 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.311766313 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.305351874 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.374171643 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.309409122 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.304034805 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.911251544 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.475011743 seconds)
  done (took 170.644253195 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.299514826 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.300011696 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.298550383 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.295916465 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.294531704 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.299500942 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.293828586 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.297117819 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.305085324 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.297140525 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.297555492 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.29661048 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.299288262 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.297140767 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.30425789 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.303735705 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.908994469 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.296897176 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.295769415 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.314200638 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.073425827 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.302989276 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.296398783 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.315708305 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.298248882 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.299561471 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.307057725 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.301649579 seconds)
  done (took 151.03491738 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.305367657 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.818295264 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.310330515 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.422939321 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.327847347 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.30299745 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.421030548 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.360623132 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.307103712 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.307370184 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.307195409 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.574070096 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.304553539 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.765088674 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.476132634 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.420512989 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.765082852 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.303508213 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.304409776 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.306006773 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.424258737 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.313544573 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.580467456 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.819422272 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.305016427 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.815529556 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.296555886 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.30760135 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.304904737 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.813234849 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.303339393 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.579892412 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.372165026 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.359884968 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.813540574 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.767700516 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.769761039 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.437014343 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.305576674 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.301522749 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.302905273 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.29238482 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.817401857 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.30881053 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.30661062 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.81061514 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.323714056 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.30663769 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.314826293 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.303859712 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.35911353 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.359433924 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.585123317 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.828270689 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.376270925 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.326064159 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.421599378 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.650668717 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.307950218 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.767741076 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.295062129 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.81880797 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.31000094 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.295738827 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.30505454 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.309994623 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.437937036 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.42569 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.770860306 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.309305291 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.77001028 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.438246386 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.306448612 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.30572873 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.308173128 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.824125775 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.772858102 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.437296652 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.428319689 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.477866361 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.298575755 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.305423085 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.294902533 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.375298023 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.3071284 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.824656371 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.773678936 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.308043255 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.308222389 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.307126732 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.307761395 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.464801698 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.830921206 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.379011496 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.769164768 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.598533906 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.587463656 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.312264301 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.359096925 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.308039562 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.58859456 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.311130037 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.359812598 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.709229348 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.587646716 seconds)
  done (took 154.644037068 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.526688012 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.422164334 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.389440618 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.410652567 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.809365452 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.854203687 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.373942938 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.426184576 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.410693276 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.532829915 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.385554878 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.399536388 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.475546713 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.377221321 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.948973802 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.36804661 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.392405127 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.422193587 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.408811345 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.329839406 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.893724913 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.574685204 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.464692928 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.360516214 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.394781405 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.025658029 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.830685358 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.800180676 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.467288208 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.490462339 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.784992557 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.368685621 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.183945596 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.924134339 seconds)
  done (took 62.477109006 seconds)
done (took 662.547292243 seconds)
SAVING RESULT...
DONE!
