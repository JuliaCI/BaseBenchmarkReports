cset: moving following pidspec: 18329
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.537298196 seconds)
loading group "shootout"... done (took 1.182352274 seconds)
loading group "string"... done (took 0.399432686 seconds)
loading group "linalg"... done (took 7.52317469 seconds)
loading group "parallel"... done (took 0.144458452 seconds)
loading group "find"... done (took 1.254527067 seconds)
loading group "tuple"... done (took 1.818187519 seconds)
loading group "union"... done (took 11.887697223 seconds)
loading group "dates"... done (took 1.252314764 seconds)
loading group "micro"... done (took 0.191347262 seconds)
loading group "simd"... done (took 4.158652574 seconds)
loading group "io"... done (took 0.990808938 seconds)
loading group "random"... done (took 8.250439465 seconds)
loading group "problem"... done (took 1.518341904 seconds)
loading group "array"... done (took 18.292642627 seconds)
loading group "misc"... done (took 1.403947806 seconds)
loading group "scalar"... done (took 37.808266545 seconds)
loading group "sort"... done (took 2.872199393 seconds)
loading group "sparse"... done (took 11.227974358 seconds)
loading group "collection"... done (took 15.861541275 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.503406046 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126585898 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131289273 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11867832 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.143213128 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.121568303 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127164908 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086165576 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.90510817 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144900567 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113291376 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431890181 seconds)
done (took 5.440981297 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.165154527 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086984481 seconds)
    (2/2) benchmarking "String"...
    done (took 0.076723902 seconds)
  done (took 1.434700226 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.062903593 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130508971 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063811073 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064583278 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.064532808 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064289649 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063596755 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063697864 seconds)
  done (took 1.787439269 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070604437 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065516906 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063345388 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064846407 seconds)
  done (took 1.538570678 seconds)
done (took 6.277462561 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.234522257 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.098967186 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.281808022 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.39041424 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.451184711 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.087470847 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.071125455 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066279777 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.123960509 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324633748 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101035606 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.178221445 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.086842205 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.170187862 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.959573268 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.115834988 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081680681 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.118989626 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089282924 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128656008 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.407879568 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074631443 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.070623015 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.066894971 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.064071357 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.635709647 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.656561708 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.126072117 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079276754 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.098850955 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113046757 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.638072599 seconds)
  done (took 10.496825928 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09004495 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.087480873 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.064166143 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.120326729 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.088638413 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.065465443 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070479595 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06308502 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086344983 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.11975987 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.085834772 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.095294619 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.061804106 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.064655956 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.071908422 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.192329288 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07532074 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.075932827 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.063555851 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075614585 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10203095 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.073644306 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07449706 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.074390061 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.123921068 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.164833733 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09223876 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093541764 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.062050551 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.075729426 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11034211 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12152622 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.062501729 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.061734762 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.115608854 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.090439556 seconds)
  done (took 4.53826785 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.922025973 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08570481 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086164396 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.097574784 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.608644519 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061385315 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.145580764 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.232531149 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067782971 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.363453618 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063124303 seconds)
    (11/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.137517002 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.10755437 seconds)
    (13/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.138881849 seconds)
    (14/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.109265818 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064500844 seconds)
    (16/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.207230218 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.110013208 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.369835048 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066021393 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.064090299 seconds)
    (21/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.061166917 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065042519 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06394822 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059721466 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066237433 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.088211655 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.082952256 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.169376131 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.913942121 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.240514993 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.062787946 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.155010395 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.080568007 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.352910358 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.06462934 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078377713 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.392813799 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.11747526 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.061501365 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161392663 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.114857908 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.060061781 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.11152747 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073444913 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.064347792 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.064420503 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.06655247 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06742386 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073753917 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096776077 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.062935632 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.060574579 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.156851911 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.060820031 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062125968 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.063401683 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.144692811 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.060255555 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.135833646 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.060010705 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06389248 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.094111725 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.063814479 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.085927869 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.09709915 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.328644685 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.028185727 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063460045 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.957346228 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075075939 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063310116 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068481786 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063982155 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.064807858 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062983083 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.069766125 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065379591 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064292372 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103539609 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062362304 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065121032 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06200445 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06745922 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.093588365 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063799325 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.459934201 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09308377 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06169921 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.072449984 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100162367 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062546634 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.068128283 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.062631984 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062448364 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061206189 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.062433544 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065272546 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.190334067 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.060025343 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.088239662 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.064829776 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.108543426 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.028983435 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064178661 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062480311 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067316265 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065057486 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.064684908 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062433928 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065165987 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.063502494 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.060619976 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.107097077 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.062704464 seconds)
  done (took 21.066095928 seconds)
done (took 38.29470356 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.243598059 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07769668 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077595507 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077528827 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077730267 seconds)
  done (took 1.915451503 seconds)
done (took 3.270169065 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.102151848 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.059646404 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.094959187 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.094475683 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.062701381 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.059702803 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.092181337 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.059771861 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.092070662 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.094455643 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.096251099 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.095565539 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.05955072 seconds)
  done (took 2.423130924 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065492728 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076542917 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.078044992 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058184564 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.067851487 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077341923 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058030464 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076432807 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082446944 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076802842 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.07629607 seconds)
  done (took 2.140575312 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064930037 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076380921 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.078748706 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058126707 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071073708 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.076661766 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.057874207 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076481046 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.079678887 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076923553 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076497029 seconds)
  done (took 2.132388295 seconds)
done (took 8.037056744 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.064573638 seconds)
  done (took 1.388881795 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.519520271 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.575370735 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066046906 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.085374372 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.179566199 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.09617566 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.227876877 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.071001956 seconds)
  done (took 8.320636662 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095671988 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064011595 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.065047536 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.063412516 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.063907373 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.064309361 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.064398021 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.064413594 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06492242 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.064416359 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065014705 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.065837123 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.065384884 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066375716 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.065226773 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.065588404 seconds)
  done (took 2.486861215 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092945817 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090518413 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069653659 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.070524058 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068359598 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.067206458 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.069813495 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.069163282 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066391087 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068091358 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.070531532 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.068278012 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.067953391 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.059627855 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069639407 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07120197 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.066101572 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.069495818 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.070104939 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071244829 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070174678 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.059614193 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.0680454 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.069116271 seconds)
  done (took 3.127597713 seconds)
done (took 16.663793994 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109184382 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072326347 seconds)
  done (took 1.513987443 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066932365 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067948617 seconds)
  done (took 1.481033397 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.072943434 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058344148 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.080073182 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.069223872 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058488095 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.057879633 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.077842129 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058392349 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058334425 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058494076 seconds)
  done (took 1.997046885 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060715216 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067856375 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.065926717 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.066783858 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.065333154 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.059597365 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.062329738 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.059635701 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.067338256 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058500158 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.063983511 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.078528504 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.062972527 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.079814785 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.062925614 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.063747405 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066103908 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06313097 seconds)
  done (took 2.527375497 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.058195227 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.05908391 seconds)
  done (took 1.47540271 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063011478 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059425886 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062111219 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062263463 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059072971 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058337862 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.058876011 seconds)
  done (took 1.774758616 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.402570786 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114596712 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33118384 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.065308543 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.074682232 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.240100807 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.059575452 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.064683253 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.06475785 seconds)
  done (took 2.810905352 seconds)
done (took 14.93873996 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075911926 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.079640711 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.085473508 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41386973 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.088145567 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.063207065 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109102529 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.173514465 seconds)
done (took 2.462308388 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209305061 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.399947515 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.945251286 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.062513064 seconds)
  done (took 3.767390714 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.319063503 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.07976364 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072902997 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.062883072 seconds)
  done (took 1.905291127 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060823561 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067502306 seconds)
  done (took 1.49556387 seconds)
done (took 8.747603693 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060713133 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08596812 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.059542165 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.060176074 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.059367987 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.059895894 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.059901269 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060117273 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.059729845 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.059836149 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.059973406 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.059513619 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.059495941 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059806498 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059804938 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060022454 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059730136 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060195948 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.059722982 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060063901 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060080408 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059492054 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060210569 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.059880943 seconds)
  done (took 2.856744078 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077174522 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06215082 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.06388845 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063506364 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06420101 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.063882656 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.063644997 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062602863 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.063618857 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.061928252 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06425663 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.063912337 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.061919953 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.063940175 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061635868 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.063842652 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.063471381 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062073483 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062092001 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06388336 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.063572754 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061873843 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.063847275 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063695898 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064131095 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064141307 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062268669 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.062676615 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063945815 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.063911377 seconds)
  done (took 3.289526703 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060621345 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056993308 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057433774 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.065205369 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057039013 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057877549 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057264702 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056472857 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057092387 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058303076 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.057353281 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.056771185 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.057512596 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.05654376 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.056471207 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057452673 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.060514754 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.073882465 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057204084 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.056465179 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.060336232 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.056873612 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.056662716 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.056965591 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057532626 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.056809787 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.05638118 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057014274 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057385736 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.05769304 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.056540646 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.060123388 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061056276 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.056872236 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.065292864 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061142292 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.05678452 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.060317812 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.058087476 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.056471126 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.056423979 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.056546232 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.056521844 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.056792695 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.065755641 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.056975748 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058267794 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.05743229 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.056917683 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056639646 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.056574434 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.058834688 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06163108 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058353833 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.056302405 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058011888 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.056804887 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.057510695 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.056777446 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.056480637 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.056814629 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.059534874 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.058599184 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.057951745 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074206352 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.058346569 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.065352436 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.056524797 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060573381 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.059826162 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.05734395 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.071940249 seconds)
  done (took 5.612673173 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082679572 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083885318 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061859492 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061245928 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057717959 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.057339021 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.064839077 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057309481 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061496043 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076297455 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057274375 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061361811 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061378896 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06107754 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057380906 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061427466 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.065554358 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057652269 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057449788 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.060708532 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057304641 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06511589 seconds)
  done (took 2.783628241 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.135664605 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063168998 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.099351941 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073703245 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065761907 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073751295 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062705211 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063016898 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062922451 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063393761 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063492643 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062988785 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065573919 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063031651 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06318045 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063291039 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063106087 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063517351 seconds)
  done (took 2.659603502 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074162171 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062362679 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08370303 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062586126 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062257552 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062020456 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066317424 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067451561 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.061992888 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.062440372 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.067386236 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061921427 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062650839 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062375388 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062382378 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062498696 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062026779 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062632247 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067083472 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066318313 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066379386 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067366694 seconds)
  done (took 2.824311246 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071592041 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0615381 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074616729 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063340021 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057170403 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057262957 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.062300357 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.061327168 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.062386152 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061508476 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061209534 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057359737 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.063784945 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.061528747 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.063564424 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06173623 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061259095 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.061857346 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061263708 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057139999 seconds)
  done (took 2.631462302 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082923099 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060014968 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06001232 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079054599 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060210907 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060399228 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078447075 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060068661 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060591241 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081079941 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060195099 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.059941706 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079687968 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077859249 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060042363 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078183383 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078422933 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078503938 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06031915 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060388679 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081276637 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.060276716 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078566859 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060448239 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060202489 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.060238454 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060576001 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078368002 seconds)
  done (took 3.306014479 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070352621 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059816345 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06057795 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060295807 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.059657931 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061130389 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060754598 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060078851 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059816956 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061147744 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.059957168 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.059797796 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059786815 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.059661158 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.059701892 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.059572121 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059723949 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060036716 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059885569 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06032884 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.059629847 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059612696 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.059930273 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060145745 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060054003 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.05992938 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059918519 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060300348 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.05953982 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.059966283 seconds)
  done (took 3.205422409 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.070761654 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069022399 seconds)
  done (took 1.534161293 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059437417 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072854334 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056941089 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066947118 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065942031 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.060381505 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066824084 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066158759 seconds)
  done (took 1.905276286 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.06578167 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.085708673 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059537898 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.059785913 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063096458 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11387256 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.072794681 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.067933491 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072831161 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060307146 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059623524 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.070081867 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.05833771 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070059426 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060421406 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066224142 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064128013 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068732 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.069073745 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057166231 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068297393 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059989062 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.057697922 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060233045 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.058912921 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064098709 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.072129554 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.068573431 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065646877 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056176428 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075577116 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.057680953 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059025132 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.065619014 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.062567673 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.05728801 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091325234 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.057864643 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.063548149 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057430625 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.068432322 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075480243 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.069681 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.073585656 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059416377 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.059878657 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057260744 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.059929297 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06019345 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.065099774 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.057485105 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063706057 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.056745664 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059281004 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.066630719 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058103388 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064065596 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.065763641 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06907799 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.066208894 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.064661784 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07078633 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.065294605 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.066804433 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.058518473 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074340053 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.059778041 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.068418805 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069769304 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.05849724 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07013118 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057430943 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056226055 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057894609 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086792436 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.059538843 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.058633536 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.057205974 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.057686452 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.058879336 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065492086 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063727666 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063317702 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061502788 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071393842 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.065520056 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057117284 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.065546341 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.07367855 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.059900558 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.057382912 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.071965263 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.059587443 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.057152697 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.073138165 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06496464 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.059422112 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.058637544 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.059388932 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.069892386 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.058746089 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056071955 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064027221 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059044164 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.060409218 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.062558293 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063456978 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057070944 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.065650046 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.063320697 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059306552 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056565758 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.060809544 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.058711331 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056156465 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065372449 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.057680222 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071334282 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062928958 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.069428578 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.06982334 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.066330034 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071620969 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057195907 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056050566 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.073835839 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.194085492 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059703623 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073573681 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057517161 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.066352796 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.057810707 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.059620369 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.065835117 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.056466815 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059654844 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058275137 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064163438 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059142447 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060298104 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.060596592 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.064915256 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.068977233 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059240217 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065725736 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058412834 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071700733 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067123125 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.061335156 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062325739 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.058435059 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.068568079 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063130451 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.065242033 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.057427113 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058996842 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.05734428 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.066873291 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066486278 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.059846479 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067043548 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061418779 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058158608 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.057711619 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059107289 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06023469 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061435245 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058387536 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064044003 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.065923608 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.070613878 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069205314 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065033479 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.056282345 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.056891985 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.059531361 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057145319 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.061053578 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.065559972 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070438913 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068314328 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.075812761 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.057574857 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.065344334 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.059326485 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.072761953 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.068532457 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.058631688 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063666196 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.056357402 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059404807 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.065254544 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06783584 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.07054916 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070418717 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061482517 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061457702 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057242011 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070321688 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.05774915 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064345748 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.065419924 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063178681 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.057648233 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.059185039 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.065461834 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06093475 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.057663208 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.070933348 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.064956064 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057308698 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069495717 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.057846254 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.067754295 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.05731937 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.059735973 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061161818 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.059875721 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065143278 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071071574 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05639596 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.057932769 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071815098 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.059809359 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059626063 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064318884 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.070375086 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061059788 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.063916627 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066856145 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.065734423 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.060904082 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.065626038 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.058517467 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.065346877 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061294574 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.067895472 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057226124 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.072973985 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056090211 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.070383643 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.057932855 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.067240594 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.057718109 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065440823 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.058569173 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.07296213 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.05920988 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058590096 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.067955576 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.055877748 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.0651114 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057099048 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.060947367 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.062615541 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.065682755 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059528397 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.197835312 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.060271804 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065378422 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.061341293 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.064926041 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.065911414 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061622116 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.057203888 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.064333777 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067538727 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.064295924 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.059389799 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.059347912 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.058214256 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.066206065 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060012273 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059310196 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064589073 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.061940983 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.062682577 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059661434 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060304056 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.059456991 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064813315 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0657588 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074500349 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064196365 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.063345757 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.065938462 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.057332307 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070961312 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.057732069 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.063538656 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.056555119 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.065659374 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06527812 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.057751571 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075254101 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.059612915 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.063734094 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069473982 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064677014 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.059979891 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.073544767 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.061481716 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064943059 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.063427369 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.060467368 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.062622842 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060105259 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064172148 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.065604478 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.066754442 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.058555275 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.063640832 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064659057 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059848515 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.066977396 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.059573173 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.063825618 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.059940945 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057007254 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06131474 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.068025175 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06124784 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06178186 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.057870815 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056433351 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060721922 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.065685835 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.061369073 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064742841 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071336823 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.05655403 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.058727071 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.05754387 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062433566 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.073756179 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.065896315 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.063880068 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.061282846 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.056730589 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.05953697 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.059903374 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.05825748 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.06174979 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.056949097 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057540533 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066935238 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059646793 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061335366 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057988719 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.058947034 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.065687345 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.063134122 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058185181 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06320036 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057418428 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.061303017 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057160718 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059721987 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.061132908 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057016581 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.059884533 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.06643108 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.071673543 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.063037871 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065175692 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.058698889 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.064234155 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071288516 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066302766 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058802991 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.065833155 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.056564385 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073573866 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.065311899 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064419952 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065577694 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.058596729 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.072378686 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.060701376 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066242339 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070722194 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058430902 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.06576999 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057422366 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071151633 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.060449555 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.057132187 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.064201196 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063470799 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.198825831 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.068925961 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.059292243 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.064623818 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064041834 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.060603951 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060362456 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059346466 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.064735277 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07198221 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.058356521 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.063145807 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.064473342 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064665403 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.061191743 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068790381 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.064298076 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059286404 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.059956052 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.060203894 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.058585894 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068778903 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058433251 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.061480591 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.061620222 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058113802 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.063443721 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071794315 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.066101105 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06601849 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058107931 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.056955312 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.073172441 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060750084 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.061694703 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06440986 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065740481 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068363777 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065788332 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.072499977 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.058680215 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.0629388 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069299753 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.058668154 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.057163248 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.059684854 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.059624418 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065613436 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066469426 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064140226 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059430519 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06298585 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069253313 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.058890106 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.061102837 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.063448369 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.058461022 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066380764 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.063865047 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064440748 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.058976673 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057207507 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060090725 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064741339 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063342209 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.064889808 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058797448 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065509514 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.069961151 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06348745 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061516848 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057732036 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061376143 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064765446 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063329383 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057387248 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.061437955 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060162772 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.066000507 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066109644 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.061098973 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057384118 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072713996 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.064515761 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.065528687 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.059478204 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.059694163 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058057589 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.057377288 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067653339 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057625351 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059608488 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061610401 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.062291524 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.073138122 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.064259231 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071306312 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058789434 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.060983489 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057168037 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065919319 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.060811246 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.057640318 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066198068 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.056748365 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07120587 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.068649769 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066436933 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.057325585 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061916273 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06471917 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070100756 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066093886 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06553266 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.061805198 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066082317 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.059831714 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.067046156 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.057388408 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.056562004 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.066097287 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064270981 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.068431311 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057136261 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.065930501 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.059597496 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.063956258 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06436382 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.05951239 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059812919 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059156248 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.200563623 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.061645552 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.065973412 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.061919326 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072759717 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059237427 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.067664913 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065732251 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.067968122 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068754122 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068914327 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.065010128 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.058228082 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063634831 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.065087951 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.059406189 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.061446227 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062658157 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077797663 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.059738937 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.0596204 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071280887 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.066018956 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.058203873 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.066111937 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.061596605 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.066696776 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.058480914 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.066779927 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.06279169 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.058743094 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06181541 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06158277 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.056940354 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.057531733 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.057498129 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066123916 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.061205167 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.057914642 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075419452 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.059568435 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064356586 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067708203 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.062905609 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.059222104 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.056315135 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.058822081 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068369857 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070988443 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.059809186 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064446606 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059377133 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065416088 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.056293549 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.064752956 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064313023 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064678942 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057427963 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.057915879 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070021919 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070711371 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.061029965 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066009276 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065273669 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059391886 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077671104 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.064369789 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058896331 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067574219 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060659181 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057219425 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.056869242 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059551204 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.06795055 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058085134 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.060787754 seconds)
  done (took 39.641022873 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097205502 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059267604 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057352377 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.057592435 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069191745 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058487032 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.057654387 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.058545268 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.058929231 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060660966 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.057423641 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057804185 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.06957444 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072354697 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068742386 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061993586 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057597724 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059181421 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058686727 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059208366 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068048997 seconds)
  done (took 2.807759841 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065792293 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.073382143 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070089143 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07432226 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066093149 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062626479 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06978597 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062376583 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070266808 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067912323 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070410816 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062814074 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067431649 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067882681 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068024506 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06304549 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070139547 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066544975 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.062428909 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069635745 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063237609 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06977968 seconds)
  done (took 2.9437048 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.05922563 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058289193 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065393326 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057078944 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.056972912 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060874172 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.056916017 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.060349616 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.060072117 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.060436336 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.064673306 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.057919963 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057214491 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.0617715 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.05715389 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.057952606 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.099608538 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.05812824 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.058106108 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057063571 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.06323844 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.064920701 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057122817 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.0571532 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.060624969 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061022913 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.056955294 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.060551839 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.057990294 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061007796 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058146219 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057026108 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.064440084 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.063851947 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.060650527 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.060593751 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.059257052 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.058091179 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057226392 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057431605 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064067823 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059066635 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.057529236 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.058756507 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065004755 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.056975991 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.056662136 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.064731994 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.056902318 seconds)
  done (took 4.425667297 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.069941089 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106434219 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063104609 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086421736 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.071796262 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.064805093 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.062816316 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087955279 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.058388801 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059374355 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.072680015 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.072946855 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062382944 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.062523098 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064562658 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060730254 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061750524 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059920813 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.063973944 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.059980193 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.064550637 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064514405 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07107226 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071984334 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061927344 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059692363 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060346842 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062400185 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.071387651 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.064879068 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062673588 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06326028 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.071898629 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.063077095 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060036189 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.060515925 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.073103296 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.060909103 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06086767 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.058641021 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.060174891 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062361354 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.064422584 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.073379549 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061248381 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.065205364 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061059032 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058426315 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.072026406 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.060765023 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.065456406 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.073088722 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061995806 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06151012 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062523361 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.072510701 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.060964408 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.059093496 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.061227588 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071722564 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.058746803 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061810635 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072764759 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.060097604 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.064549593 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.072819099 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.065117772 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061709508 seconds)
  done (took 6.065478717 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068099694 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.088390882 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069643722 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069623484 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068171047 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068755898 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068628012 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068513427 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068484469 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0691972 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068809357 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106776864 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.063776559 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073712389 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068400973 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068199602 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.068508252 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068909046 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068526466 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068062006 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.068237351 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068925121 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06871089 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069435329 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071154128 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064228271 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068277822 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068244093 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068992656 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068196653 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.071563893 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.068719885 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068519725 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069186512 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.071868139 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.068164471 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.058305093 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06814487 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.068376665 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068216179 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063998953 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068960342 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068144434 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.063871651 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06843926 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.06847453 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.06903824 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.071787588 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077301012 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069131575 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068824694 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069319679 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068359825 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06850762 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069524845 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.077000965 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069627997 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069227584 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068875196 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069357962 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069229804 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.077449191 seconds)
  done (took 5.825231696 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074408455 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066212589 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076936099 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060155598 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.057366923 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067129989 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.057105235 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.057339044 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065743065 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.065559659 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068049621 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067093805 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069881207 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067786726 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066916678 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069800519 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067425795 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06696757 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065657088 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067260687 seconds)
  done (took 2.816818352 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.06943677 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074849863 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063325752 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067378141 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.062735315 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067008126 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.061702628 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063468368 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063560829 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063048265 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068688237 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068647771 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063446126 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067213266 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068805409 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067125372 seconds)
  done (took 2.537714552 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064464887 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066628428 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.065687539 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.059521666 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062530651 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.057852747 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.058511776 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.057273168 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.057974908 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.071502315 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.058852744 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069570192 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.058449429 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.057841855 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.057982284 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.063654778 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.057624582 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.058560681 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.058473931 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063979217 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.064693223 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.059592008 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062389243 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.058863636 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063436358 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.066025208 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.060343171 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.061825961 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.058653391 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.059298749 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.063980112 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065159647 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.05836359 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059435994 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.057623493 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059130969 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.058485974 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.059148008 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064077349 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.058734997 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.056942509 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06328509 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.058807446 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06054009 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.057780103 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.059459937 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.057609065 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064189795 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.058964706 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.063965276 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.058484849 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061127608 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.05918228 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.065898348 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.061351023 seconds)
  done (took 4.829760164 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072696397 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062562193 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057205083 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057160862 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.062412895 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.062495555 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062476362 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.062888474 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062974388 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.05724574 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063178969 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.062376445 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062585257 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062231299 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062579185 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062131112 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.056763073 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.062344741 seconds)
  done (took 2.604186772 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068744354 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061832952 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.066567253 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061926013 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.061964653 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061854369 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.05756941 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.057363142 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057518733 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061612213 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061676225 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.061250912 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057692596 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.061631533 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062265263 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061917704 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.061369525 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057482838 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062277794 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057482559 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061284523 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057746139 seconds)
  done (took 2.820108844 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.083835318 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.078738523 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.117396101 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.074653537 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082212703 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.066878987 seconds)
  done (took 1.983724361 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085849953 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099204193 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061979587 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062983693 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072745126 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065660166 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065566796 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065766643 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072659847 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07035088 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065549567 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0729266 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072716171 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067945218 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072822694 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075755735 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0664385 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065939441 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062995247 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076076257 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066018593 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075974041 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065933525 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06547225 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06560659 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084390427 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075734409 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071179837 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067667139 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07281762 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075693373 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065568812 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072506006 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070372971 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.062047257 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072637917 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065965191 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075846084 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073062724 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06826936 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061948347 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07296472 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072664434 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068157913 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075849785 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065845088 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068433308 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065750839 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066378379 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0783536 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07333241 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068214163 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072795485 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076072286 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076302783 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078803236 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07085758 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068191944 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073243199 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070730661 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068173976 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073055924 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068150719 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070562014 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07619738 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068111339 seconds)
  done (took 6.170476879 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093758304 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063102426 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066389085 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070594907 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068014291 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065774092 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066128876 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065794344 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065642532 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.062554984 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099520661 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065934128 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068299257 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067968588 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065975873 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066013422 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066152103 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067864197 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063169806 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078531287 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066005036 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068038043 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067883192 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06817679 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070711811 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076200261 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066111909 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065839205 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066237509 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065967831 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068113823 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065977463 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067717671 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062665059 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067960612 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065767821 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065897879 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067690209 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066243313 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072637102 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068148042 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075606835 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065720248 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065986953 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070994024 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065471313 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065696115 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.062347853 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066112196 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.062414385 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07078074 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070875968 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07092682 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068413656 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066124287 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066470805 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066211442 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06661844 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066339138 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07632341 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06809762 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066091296 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078643243 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066303259 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066351896 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06851122 seconds)
  done (took 6.025989313 seconds)
done (took 125.474138749 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204053398 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.179991712 seconds)
  done (took 1.853831221 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069295969 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.091757871 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07002186 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12789121 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067111974 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100357633 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099999783 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.071052166 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065999593 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066080566 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065626343 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069068875 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131121991 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065918036 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06585363 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069429474 seconds)
  done (took 2.784617302 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100331051 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.174910897 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103227348 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064321243 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099849492 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071448872 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064233233 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074598598 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.067999937 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067155835 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072141466 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069802941 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066613873 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069605831 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.067745968 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071273407 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066767166 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071169562 seconds)
  done (took 2.935738743 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.088821292 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.081884571 seconds)
  done (took 1.666074151 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.147946916 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.099732181 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.138365187 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.313268012 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.13084988 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.27109757 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125779497 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124611078 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.106592499 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12030814 seconds)
  done (took 3.067357047 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096373155 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159365284 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.29380156 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.112790056 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.070238936 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.081701501 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114861977 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076149336 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.075037748 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07522453 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07505105 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074307688 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.091976442 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.071451902 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.071216391 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.071538688 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.095237955 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.070305856 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.0709964 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.070935637 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.094906927 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064832585 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.071281568 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.070990089 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.072792118 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.072778494 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065788309 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064612228 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.070969767 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.070316525 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.074245962 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.07868741 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07268929 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.098782937 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069150684 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.099570208 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.069959919 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069070484 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070794809 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069090625 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.072321501 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.072408673 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072940374 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.072191858 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065881619 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.069676083 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066029122 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064538612 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074583467 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066404409 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074514523 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.073493464 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.09905392 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065955163 seconds)
  done (took 5.934223653 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102760817 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101261764 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066889239 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108380716 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099090797 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064930117 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100655992 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093724397 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102165768 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064379864 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064022384 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064942 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07306662 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.075791181 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11044544 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102512018 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06667856 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064805003 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10215556 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102220404 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063504722 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095595778 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09205294 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101917914 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06313741 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065402481 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063535279 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.063664563 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070552534 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.071732702 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.063729441 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072564143 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.07712051 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071882688 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063069524 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063457097 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063358044 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.071830883 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.0728764 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072693915 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07092197 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.062914052 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063723109 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.063878483 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064715243 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.062668484 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071518639 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.072460972 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.071228311 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06352211 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06435038 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.063431787 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06416395 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072503593 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.070618162 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07295802 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072575451 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063403648 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064389235 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065635934 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072920142 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073141833 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072263915 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064926766 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073200955 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063350164 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073432537 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077001117 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063238828 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.063612012 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063440779 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063275952 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064152593 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071001625 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.071157138 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064290087 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.063395537 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063246512 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.073153076 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071137212 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063131331 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.070410326 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.062846667 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063511425 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064473363 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063903916 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.070897873 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.072560169 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064263395 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063314381 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.0635383 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063887186 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.062901449 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.070347808 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071876569 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.072589053 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.071401464 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063873399 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07142182 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.071178591 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064071436 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.071147809 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063681028 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064060227 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064030162 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071635433 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.071302772 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.072996738 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063488739 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063254937 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.071452205 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.202272848 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063749358 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.071228529 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07375362 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.071569105 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.063782995 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077117534 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063586082 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.072968239 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064493361 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073964562 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064008557 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071218562 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063873728 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.062964198 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064297188 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.072251217 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064883482 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063352711 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064809227 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063914572 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.072043175 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074979141 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064750974 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071213865 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.071612294 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064193071 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071720603 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063525754 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.071948409 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064296312 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064248028 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062814511 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073878081 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064164055 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063397645 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.063458945 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.073719451 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063894677 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07321988 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070580051 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063280677 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074979761 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073693302 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.070654721 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.073751287 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06456278 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063948704 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063304281 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.063639422 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070592424 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071796784 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064073103 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063529557 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.070500281 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.073127461 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.062950917 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.071037188 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071041785 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.071315491 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.063871503 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063681369 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.074266286 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07380326 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.071225227 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.071697269 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072040182 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063737412 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071369831 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071764615 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063499547 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077115607 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06379375 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.075686182 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072144249 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.070784028 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072589926 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.073209806 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.073738985 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.073689161 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.07544919 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063157225 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063547647 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.071851683 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063455412 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063790549 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.071813834 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064048199 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064319114 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076050141 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063856622 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.073448203 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063507281 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.072317662 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06289718 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064317971 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075842055 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063847163 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063986552 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.071466209 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.063973671 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.071088639 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073707415 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.071359287 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063289838 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064313736 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072315184 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.072193043 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063526419 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063244333 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063831293 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.070863222 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07053008 seconds)
  done (took 17.356525292 seconds)
done (took 37.107156739 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.199481463 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151699907 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.185162441 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.112795348 seconds)
  done (took 2.232135284 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.093492866 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.093348806 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.074884195 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.060251426 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.080248279 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.060661329 seconds)
  done (took 1.993714992 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273485952 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.192823836 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170355672 seconds)
  done (took 2.163555334 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207242902 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188098552 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.447806329 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.28189976 seconds)
  done (took 2.747340718 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.127315248 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.07681669 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.059722074 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.070197372 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.109366612 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.141578288 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.086726474 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.110746887 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.071039615 seconds)
  done (took 2.438115218 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.129547432 seconds)
done (took 13.249658537 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.217039801 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092064641 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.14860463 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.063420396 seconds)
    (5/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.202064135 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.082374406 seconds)
    (7/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069812618 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071017727 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072134337 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.08610713 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130450013 seconds)
    (12/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069766595 seconds)
    (13/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.073008525 seconds)
    (14/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069926824 seconds)
    (15/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071286946 seconds)
    (16/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.189919155 seconds)
    (17/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071726121 seconds)
    (18/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.209124724 seconds)
    (19/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.377435726 seconds)
    (20/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.072066524 seconds)
    (21/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071897085 seconds)
    (22/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.156832632 seconds)
    (23/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.169728769 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070468798 seconds)
    (25/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.213104667 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069242334 seconds)
    (27/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.176234378 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.221730076 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115747341 seconds)
    (30/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.131492125 seconds)
    (31/309) benchmarking ("sort", Int8, false)...
    done (took 0.170662174 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067684908 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.212847852 seconds)
    (34/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104181533 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076373715 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069361537 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113893795 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.061669524 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.121925978 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070636292 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.059830934 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.061510352 seconds)
    (43/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.194981347 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.080225328 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.114819658 seconds)
    (46/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.062572 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.117668409 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.060962 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.179571881 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.074185433 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.142981851 seconds)
    (52/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.133177513 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 0.062078067 seconds)
    (54/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.242869837 seconds)
    (55/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.06968043 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071169959 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.167629507 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.086913246 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.060135196 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070149127 seconds)
    (61/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187923266 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082268833 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.059805721 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.18871714 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.086806441 seconds)
    (66/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.152475913 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.060601498 seconds)
    (68/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.072662677 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.071558685 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.197767739 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067483841 seconds)
    (72/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.168757292 seconds)
    (73/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.061513593 seconds)
    (74/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.133207752 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.076370727 seconds)
    (76/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.197814402 seconds)
    (77/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.070951624 seconds)
    (78/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.060372586 seconds)
    (79/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.0613433 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.07546891 seconds)
    (81/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.060759404 seconds)
    (82/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.155253449 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.159999335 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.060631724 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.060302529 seconds)
    (86/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.064538391 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.175776466 seconds)
    (88/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.131376568 seconds)
    (89/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.073241889 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.07968809 seconds)
    (91/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111792312 seconds)
    (92/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.072235069 seconds)
    (93/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069902297 seconds)
    (94/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.061017185 seconds)
    (95/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.138794613 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.158669156 seconds)
    (97/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066185917 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.066377262 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.111517434 seconds)
    (100/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.147236867 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.135178872 seconds)
    (102/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.13178573 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067889437 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.059761631 seconds)
    (105/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.195202154 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.060258845 seconds)
    (107/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.062700743 seconds)
    (108/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.068363283 seconds)
    (109/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067651435 seconds)
    (110/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.18377034 seconds)
    (111/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.129861604 seconds)
    (112/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.147059349 seconds)
    (113/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.067783006 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114821341 seconds)
    (115/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.068494802 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.070631704 seconds)
    (117/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.064543173 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.068371198 seconds)
    (119/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.072386324 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.079070487 seconds)
    (121/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085227267 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.163503974 seconds)
    (123/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.068893348 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.084998808 seconds)
    (125/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.06751944 seconds)
    (126/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06006253 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.093361254 seconds)
    (128/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068463208 seconds)
    (129/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.061669871 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069232304 seconds)
    (131/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.195426473 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070651012 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.081139218 seconds)
    (134/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.059985997 seconds)
    (135/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.0665733 seconds)
    (136/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.075556971 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07132735 seconds)
    (138/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.062114761 seconds)
    (139/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.068040217 seconds)
    (140/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.06014973 seconds)
    (141/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.086825603 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.192112684 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.068537795 seconds)
    (144/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.060712608 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.073162129 seconds)
    (146/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.19856293 seconds)
    (147/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.207285994 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.082432428 seconds)
    (149/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.059973491 seconds)
    (150/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.058844516 seconds)
    (151/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.059802823 seconds)
    (152/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.128792503 seconds)
    (153/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.069591829 seconds)
    (154/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.063441196 seconds)
    (155/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060065292 seconds)
    (156/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.146995252 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.059655129 seconds)
    (158/309) benchmarking ("sort", Float64, false)...
    done (took 0.124052013 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.061404927 seconds)
    (160/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.059145596 seconds)
    (161/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.068436258 seconds)
    (162/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.059196695 seconds)
    (163/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.059018475 seconds)
    (164/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.152796904 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137357148 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.058590239 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.19498466 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.071591059 seconds)
    (169/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060031618 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.154003293 seconds)
    (171/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.058562841 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.059171746 seconds)
    (173/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.060376933 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.084458666 seconds)
    (175/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.066405676 seconds)
    (176/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.059849965 seconds)
    (177/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.155235527 seconds)
    (178/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.060415342 seconds)
    (179/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.062947436 seconds)
    (180/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.060431285 seconds)
    (181/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068550293 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109484327 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066077664 seconds)
    (184/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.073327163 seconds)
    (185/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08585745 seconds)
    (186/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.12843594 seconds)
    (187/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.149714371 seconds)
    (188/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.060295952 seconds)
    (189/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070188201 seconds)
    (190/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.330948964 seconds)
    (191/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065328039 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063240979 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.132894587 seconds)
    (194/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066539656 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13156595 seconds)
    (196/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.063553973 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.062782103 seconds)
    (198/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.061701077 seconds)
    (199/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.070015573 seconds)
    (200/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067611608 seconds)
    (201/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.062993021 seconds)
    (202/309) benchmarking ("sort", BigInt, false)...
    done (took 0.238922526 seconds)
    (203/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.065273379 seconds)
    (204/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.063503693 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070783967 seconds)
    (206/309) benchmarking ("sort", Float32, false)...
    done (took 0.131445764 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144984093 seconds)
    (208/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.070105407 seconds)
    (209/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.066378319 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.061885869 seconds)
    (211/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.063362769 seconds)
    (212/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.20113183 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068792302 seconds)
    (214/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065376689 seconds)
    (215/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.061953263 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.062502598 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.062526578 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.082801391 seconds)
    (219/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.062553394 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.061106782 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.114873134 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072685031 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07243921 seconds)
    (224/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065044761 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13516876 seconds)
    (226/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.115594954 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.108989703 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.083835074 seconds)
    (229/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.162663231 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.069828554 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.061265032 seconds)
    (232/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.060376777 seconds)
    (233/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069066609 seconds)
    (234/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.060690998 seconds)
    (235/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.061849168 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.119646836 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.060308537 seconds)
    (238/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.060576639 seconds)
    (239/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.061640843 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.063502657 seconds)
    (241/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068186354 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.061625744 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.061374869 seconds)
    (244/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069568228 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.060957666 seconds)
    (246/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085782137 seconds)
    (247/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.061898218 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.061673369 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.06063904 seconds)
    (250/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.121224432 seconds)
    (251/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.060796394 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087113228 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.060278641 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061771265 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.084654589 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068331708 seconds)
    (257/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.060656578 seconds)
    (258/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.060335533 seconds)
    (259/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.060660466 seconds)
    (260/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.060879174 seconds)
    (261/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.06105912 seconds)
    (262/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062640931 seconds)
    (263/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.061910699 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.125125238 seconds)
    (265/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061666357 seconds)
    (266/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.061001184 seconds)
    (267/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.060568407 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134662433 seconds)
    (269/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.060747274 seconds)
    (270/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.073534006 seconds)
    (271/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.075489288 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.067675674 seconds)
    (273/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061916982 seconds)
    (274/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.060512757 seconds)
    (275/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.061514706 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.157653794 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.128242468 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.085720999 seconds)
    (279/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.061008113 seconds)
    (280/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.060690604 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.060635329 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.082581623 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.060785476 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.060531216 seconds)
    (285/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.075146705 seconds)
    (286/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.061859223 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06146137 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141642603 seconds)
    (289/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.060418479 seconds)
    (290/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.0677797 seconds)
    (291/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.089455404 seconds)
    (292/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062584734 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.061095788 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.083478027 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.167177676 seconds)
    (296/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.065800797 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.103689711 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072014257 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.131335456 seconds)
    (300/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06196519 seconds)
    (301/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.060393524 seconds)
    (302/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.060404665 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.062095146 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.068318074 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.068803244 seconds)
    (306/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.061542742 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.060844796 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.060843315 seconds)
    (309/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.062062897 seconds)
  done (took 31.004868727 seconds)
done (took 32.549442625 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08122002 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086450789 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.070159892 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.082428237 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.077500506 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092329374 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070135846 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.074658833 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.077119693 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.076418699 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.075475612 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.067756835 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070806623 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071166291 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.068779263 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084264835 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.075482821 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.069857963 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.069724879 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.060837353 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.069714984 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.061130571 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.060298938 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.067392586 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.072133169 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.067896901 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.070371493 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.070182353 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.061353414 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.061570967 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.065869097 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.069766627 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.063251432 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.074174947 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.06999175 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.069333651 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.070860991 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.073829733 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.060307743 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.061164758 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.071224181 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.061176839 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.069160412 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.067406477 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.066031096 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.067975324 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069940456 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073737524 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.083976858 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064934689 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.071363085 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.071761735 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.072617558 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.066802717 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.066443514 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069402988 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067300051 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083974577 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070181152 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065709148 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.070853027 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070139967 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.067971158 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.06954822 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.069195062 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.071521626 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073566092 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.067469003 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.071521322 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.068158379 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.060526573 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.069456944 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06534598 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.061152438 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.072290085 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.073438919 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.060057631 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.06512125 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.069190153 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069228787 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.061043182 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064495479 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.060545008 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.065335468 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064516642 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.066755463 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.066004105 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068211943 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.060141368 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.069881404 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068543448 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.068620881 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.060392413 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073777818 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06122289 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.067247173 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.061181983 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.061209928 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.060581666 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.066300562 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.060825776 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064632111 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.069634344 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.060447941 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.065936903 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.074059691 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.061012044 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.068711458 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060438739 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.060735439 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.072082745 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.071359628 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.060782521 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064637148 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.060496873 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.06641516 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.060661637 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.060639716 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06045515 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.060916334 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.065550369 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061153076 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064783153 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.066355158 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07398089 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06097349 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.065649855 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064899425 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061142299 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.067441549 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.0609296 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061102955 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.060543108 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.074110841 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065110541 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061402575 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.06659608 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064965444 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.069252539 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06002485 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.06953672 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.066878189 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.199978155 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067647014 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.060980865 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.072445197 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065238606 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064860538 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.060484534 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.061252467 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.060042228 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.061104748 seconds)
done (took 12.106127743 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.061868206 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.090019458 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.069947783 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.078026267 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.073655214 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.061885752 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.065980041 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.07966583 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064714413 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.080691377 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.082237863 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.080858431 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.08822869 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.060435233 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.061308774 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.062273634 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.060642581 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.067614705 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.077054781 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.082025211 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.089676924 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061372015 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.07035177 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.076338126 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.071631081 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.077528336 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.062096096 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.062366348 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.063992691 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.07895021 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.083937805 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.060853096 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.062111217 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.0754849 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.0748187 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.068934759 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062077242 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066053908 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062101022 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.061400294 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06291896 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.076320861 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.065069815 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.067954121 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.061936264 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.062521968 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.062493033 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.065242405 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.074700833 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.065443807 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.069133272 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.073930213 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.063812435 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.061603629 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060105715 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.065800146 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.061574712 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06212228 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.061423504 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.061708934 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.061426174 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.063486753 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.062016936 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.062281741 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.064849119 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.064984211 seconds)
  done (took 6.153779269 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079061869 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089581683 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078534239 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.07770314 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.060888575 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.061648054 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.061579658 seconds)
  done (took 2.180034914 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.062160189 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074922869 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077696472 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078048165 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.070913997 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079265915 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.061807782 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.090982806 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.060964684 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073947614 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.106601766 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079238918 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.064735623 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072688387 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.062127467 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.069653829 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.062009281 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069637754 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070408347 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078164441 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065787501 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087741735 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075004086 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.062026851 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.082590633 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.066937715 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.061486585 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.061827581 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063405599 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.063190723 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062993011 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.100077026 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.066578674 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075658739 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062891047 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.0619608 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.068078047 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065376279 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.0655025 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.067834636 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.067744293 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063158184 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.060848246 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063321634 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.064408574 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.065943198 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.060512799 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.063199662 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.063483055 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.074360635 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.060891204 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.066370969 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.065100259 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.066790067 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067540564 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06651255 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.069711636 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.063172489 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073766592 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.069620194 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063284593 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.070982407 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.07038511 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.067653382 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07396505 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.065777276 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.066621077 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.067793608 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.063561171 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.063997677 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.063756318 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.070408702 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.061811865 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.063745163 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065577488 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.063922893 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.065906916 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.078076367 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.078103975 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074379238 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.063493488 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063214533 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066216598 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.078098836 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066671881 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063120199 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065678617 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06107618 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.066464991 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063589137 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067847846 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.063199259 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.070258316 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.064244542 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.065559779 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070951281 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.061740948 seconds)
  done (took 8.309681043 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.064196766 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.063522086 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.063628571 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.062744968 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.063011908 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.063217485 seconds)
  done (took 2.089458694 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.086424459 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.062925645 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.076175458 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.063521456 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.096483616 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.07031328 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.070433678 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071454608 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.075245282 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.074817689 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.070709374 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.072851986 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.069632284 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.064511852 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.06977183 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.064108512 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.0700546 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066508376 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.074134282 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06487998 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.075642456 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.064622104 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064868 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.07400248 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.065840287 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.063725942 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.063155425 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07406857 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.073939907 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.074309293 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.064159026 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.065598945 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070046026 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07148017 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.070139257 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069986899 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.062878084 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.068914178 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065018296 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.065604045 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.072346074 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064813035 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.0652462 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.068085134 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.070763522 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069882697 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.068135071 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066277031 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.069756626 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.068307649 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.067996236 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.063335954 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065729531 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.068762605 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070216705 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071148796 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068257001 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.069646214 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.0645634 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070133529 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.062843844 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.065691574 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070954118 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065477945 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.067239322 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068351637 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070409257 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064324471 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064582246 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.062970727 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.068282767 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.063232849 seconds)
  done (took 6.634647288 seconds)
done (took 27.026735259 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.984917274 seconds)
  done (took 2.642457071 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.554998129 seconds)
  done (took 2.249078265 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.210298681 seconds)
  done (took 8.902229355 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.282576637 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.329246163 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.696807992 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128161715 seconds)
  done (took 3.157076322 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.6948469 seconds)
  done (took 2.397952884 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.225763129 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.215249146 seconds)
  done (took 2.143738151 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.342036657 seconds)
  done (took 2.037471178 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.069502315 seconds)
  done (took 2.759190015 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.226180367 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.154285689 seconds)
  done (took 2.079691819 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.439813885 seconds)
  done (took 2.132594757 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.255918546 seconds)
  done (took 5.95469318 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230224047 seconds)
  done (took 1.964436644 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.228242691 seconds)
  done (took 1.92875913 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.715039633 seconds)
  done (took 3.407655913 seconds)
done (took 45.45929965 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078188551 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080647108 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079716961 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.075784063 seconds)
  done (took 1.985542825 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.069574789 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.065729611 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.069465094 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.069376479 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.06688091 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.068057302 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.068545194 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.06520787 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.066396964 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.065414943 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.064015579 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.065326294 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.068080832 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.064926677 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.068078036 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.069340439 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.065051319 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.065177062 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.068342472 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.065326178 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.068292133 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.06521916 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.06346236 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.06440499 seconds)
  done (took 3.294143374 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073261868 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.06811403 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.070474787 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.066683679 seconds)
  done (took 1.979591047 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.071857923 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.08181467 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083304228 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.088665503 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.071451247 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.071899818 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.079211222 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.080302444 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.060968011 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.083548026 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.062909952 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.061748637 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.06164429 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.081532617 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.079377939 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.059012897 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.060286023 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.072321957 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.071259074 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.07340711 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.063083636 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.06088711 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.071401267 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.071652088 seconds)
  done (took 3.425472932 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075269213 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061205972 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07469498 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087633521 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088800553 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061078034 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075573251 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088647101 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.134916492 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.060936648 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06628864 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06065865 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100973636 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061050574 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076768942 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106368788 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108990753 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.064655961 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.093781346 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.060648423 seconds)
  done (took 3.325093821 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071926578 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.064386325 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065282215 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.060378543 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.071791622 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.06782256 seconds)
  done (took 2.118867334 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064259948 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.062794515 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.063111536 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.062447129 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.067628606 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.062027074 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.061371762 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.062677141 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.062452556 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.062196454 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.062245612 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.061169649 seconds)
  done (took 2.464424133 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.156164488 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.064348313 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06518645 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063400959 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.066632044 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.061855057 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07636431 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.063543924 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08005383 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062036562 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.0616941 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.063692116 seconds)
  done (took 2.596771489 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096367969 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126472182 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092773467 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068980821 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165643759 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090268407 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.085818832 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.117946587 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090015319 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.06556373 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08921427 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131010647 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091609104 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.094911121 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078355792 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1204599 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106351181 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083761257 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109323656 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078058235 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.066862979 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128986716 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.066212207 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089467532 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097970798 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.094224739 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10563802 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129461448 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080454499 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086549682 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079427831 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070812845 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102116805 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.080868757 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.093700683 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090312751 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094932908 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081813204 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.083230692 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11579122 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149980289 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096475552 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096224529 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129667493 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074966182 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.103995588 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077897448 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095323055 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100345517 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090166684 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071990737 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088009655 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.102723288 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098377905 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.078349982 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077975265 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1134005 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.095407706 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092634557 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07657636 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103203525 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.08390197 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104700065 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257996111 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137230024 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098124013 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132233406 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119181017 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092173424 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.085486249 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.087692509 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072378499 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106332763 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094635924 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13248692 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105902984 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09702444 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.092309117 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079078648 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103997458 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111235775 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090447141 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090102876 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141053985 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104937125 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086923512 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08753713 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.138422021 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070091065 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143170772 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085535329 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117221824 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093735698 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134284558 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088104157 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.079974475 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102319154 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100541728 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086729236 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099341061 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080834503 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110185146 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089194171 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097644843 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.078194677 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087097793 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083404895 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.094314103 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.072227985 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100737092 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112422772 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111128356 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.071292007 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105061839 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082685643 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.073558378 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08907116 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135224888 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08003375 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.071869607 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14627647 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.09008976 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.114068592 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108255152 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.080870146 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.259464459 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132730978 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089616878 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086309718 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073138512 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149522434 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072658245 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115276865 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078148647 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098954931 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101963265 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129555232 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134863295 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093068674 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074704878 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087702582 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.103146788 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083506509 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082543419 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07434563 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.105713503 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121558941 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.096094738 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077961689 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.089399189 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.065950039 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110297143 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073046219 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081278015 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092480315 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.08421847 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.086264925 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139227574 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.08196883 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104843747 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094225259 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.064115559 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08862494 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149336167 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079531121 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.106967252 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113074977 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080265456 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065171038 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.093050938 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.069904901 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105684468 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.089217644 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103434557 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075508326 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104123803 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.066177589 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071123716 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126237387 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098549056 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086402783 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.130295217 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101510899 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.086120643 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.101858536 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.094766309 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093102805 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099680862 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.25405088 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103918642 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.071715323 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126078486 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088249881 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.074671001 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084760836 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076316498 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.074947244 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096374781 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111162823 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085765002 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096964447 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099297885 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08773606 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.10610947 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086688736 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076222987 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128533357 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07369668 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.071699235 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084611608 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.102161143 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084961454 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.131046979 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.076570005 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133228848 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088474711 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078132965 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112118899 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.065786161 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.066936903 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078245326 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08881779 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11253317 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076282091 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074723933 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114988338 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128608123 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094572286 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099824618 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06552643 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087748034 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132069387 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.11121025 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07847001 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106949439 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08171113 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126277997 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093576044 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117245207 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102984489 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107741813 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.088304753 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.077968369 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070596038 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084766934 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108225032 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08293342 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07886954 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064608502 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071408816 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089116782 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088157321 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109591816 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084688925 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132059176 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070067152 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099542499 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.252476939 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104048842 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087654629 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091673218 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.089259367 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089101767 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088318903 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089123439 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070623709 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122942564 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099716533 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075082138 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085872272 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092025852 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103045218 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1053252 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106600843 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090154934 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103602895 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120066882 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095690107 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079349863 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081174775 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.091233642 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.08185943 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077619566 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.101134665 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109380636 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095284401 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105503989 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.0917746 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.089294268 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104993323 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090004145 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085515777 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.115157919 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150889173 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.09894349 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101861033 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08263219 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104084516 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102820383 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110124393 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.107833253 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106138369 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068455715 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.072864893 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.067829836 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103853413 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076644105 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114841506 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073237617 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104050188 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094035126 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077024119 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.063978139 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098430845 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090332399 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.078948356 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119782024 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110052837 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.069976758 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087823811 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10370435 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080095068 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121150834 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.098956011 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097882474 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.06928582 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088129995 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.071049838 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253853377 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098469004 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.074700803 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.073152985 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067496583 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104602402 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080726007 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105835902 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086009389 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097259312 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116187556 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130061015 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083957326 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093190127 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114081007 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109968961 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.078837516 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110218217 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132247842 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.116397708 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.07813944 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.081423736 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103477913 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103196526 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098683154 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073185898 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075817101 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105660808 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110564839 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065457653 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081771369 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068004625 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.081307489 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109291679 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092070615 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079342271 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114417993 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072209942 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104712002 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092584762 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120408668 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119429958 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141426337 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09415161 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08213131 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07413302 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121293468 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.068387397 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114379987 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10941842 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085035183 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.066064341 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081069259 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.092742906 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.624132871 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105760615 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073375314 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132218098 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084457401 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111850563 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082176633 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.114860794 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087090763 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100190911 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089169657 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27492212 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.081312876 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106745174 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.173617589 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107278082 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.1041207 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071540974 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.083013303 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.070433837 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.075677751 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.078348823 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084388198 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105470154 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082036561 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101952207 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.077078768 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.103827573 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087410201 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086225952 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.09509465 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077356661 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135026579 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08469566 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119462968 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104325524 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075691342 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071372826 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.083469977 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098050224 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079281794 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091695526 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.075883425 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.07333323 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148686802 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099369538 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082312963 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09953058 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.088238801 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.084180656 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089312318 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11431703 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107418901 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070259049 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.084600358 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100652315 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076363781 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072328192 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093728037 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.066769113 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086646282 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095751144 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093398655 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087441635 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.100273852 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075275038 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084373874 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1067742 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082622689 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074495805 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074059269 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.073915679 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.073311855 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100559038 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104861739 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111345536 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106157345 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087899439 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091656506 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.075934954 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.217843663 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.225413478 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09462369 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.102189421 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.072699173 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.127431369 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085901633 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086500972 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093119393 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097751365 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148962192 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071082352 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106375006 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090396678 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106801221 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083826251 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103833407 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09335837 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089080523 seconds)
  done (took 49.132861459 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.089418021 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.144200161 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151003777 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.076862192 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.090944219 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115411463 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204437981 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187743552 seconds)
  done (took 2.886939708 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.063759148 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077053389 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099256687 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.078303167 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.061609121 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.063775009 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.198909367 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.076843291 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.061466931 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09854333 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.071748377 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.063473153 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.4084327 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.061514641 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.062193133 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07054295 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062013976 seconds)
  done (took 3.490017271 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.357037961 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602439828 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.33873128 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070828884 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.932725808 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085686626 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.165156019 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.133067958 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076021824 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545717682 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367708613 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126821519 seconds)
  done (took 18.624815303 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07072744 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.06953963 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.074039336 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.07380212 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.068890669 seconds)
  done (took 2.171633576 seconds)
done (took 99.208532928 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.075662742 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.160709488 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063512635 seconds)
  done (took 2.07418953 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.078621623 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.077163825 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.076526391 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.074362607 seconds)
  done (took 2.13296421 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.06941971 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.071282127 seconds)
  done (took 1.958644738 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240365697 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.157316162 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087517562 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078659414 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076121463 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076712693 seconds)
  done (took 2.056147107 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.067312651 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.067608446 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.067791632 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.068556298 seconds)
  done (took 2.084193503 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.063188602 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.061627482 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.063857477 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067061748 seconds)
  done (took 2.070173865 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.078744109 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079106924 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.073494352 seconds)
  done (took 2.045550232 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.090448665 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092028676 seconds)
  done (took 1.995834863 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.07581925 seconds)
  done (took 1.890897024 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.084782459 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094393507 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.147821743 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107872976 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.146640056 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.131576507 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.073531057 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075115179 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.069364905 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.068047798 seconds)
  done (took 2.813392141 seconds)
done (took 23.498036312 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073898082 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362851651 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.35532834 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080696511 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.665236908 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.351386073 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.963464575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086000245 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.093864084 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063672649 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079338849 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64356563 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.955748283 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.316999526 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.940653172 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.31894064 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64614905 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.063315412 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.062513127 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.063667468 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.948524487 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.062660888 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06340015 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.063186484 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67705142 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368189519 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064232871 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.315551309 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063516211 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066137944 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.352472516 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06496791 seconds)
  done (took 16.090719874 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.06543633 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115810425 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.067694543 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.078095458 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.065366102 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.064683631 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.066387499 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.063945543 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.103581318 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063947385 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079706096 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.063677449 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.067427453 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.064804813 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083206016 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.063963535 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065477824 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064392792 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063904008 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067275399 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081644993 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063850285 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06476583 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064597565 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064393858 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077271091 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065177249 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.063812075 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064061749 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066487478 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067591001 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065849671 seconds)
  done (took 4.082883041 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115108336 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120890545 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068610878 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101734491 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114604763 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065671141 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143173891 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08666757 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107646048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064031752 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079994171 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.063411676 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.096980113 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065707154 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083835872 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064504881 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065813946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064418198 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063822866 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064979262 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082337161 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064022342 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064786826 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064693158 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065044695 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078757157 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065627794 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064258954 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064333497 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066475336 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067905846 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06562927 seconds)
  done (took 4.350230936 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.065501541 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068300309 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.075879443 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.076471027 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063199548 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.064776829 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066255116 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.063033442 seconds)
  done (took 2.385442389 seconds)
done (took 28.743677214 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.073657526 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063564708 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.066652157 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08282359 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.068912387 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.065912119 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.060763687 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.069687198 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.066935552 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.066933753 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.068020672 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.062365959 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.065413845 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.060457622 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.067708082 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.062834669 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.068624938 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.06654 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.067157886 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.067735526 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.064864205 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.067788068 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070056321 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067342395 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.067277542 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067068531 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071231955 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068313962 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.062705673 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.065449862 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.064441077 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.07263266 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069060291 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.068898739 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.062229284 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06235093 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066761801 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064685696 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.068502022 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071936303 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.063875856 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071475493 seconds)
  done (took 4.630156499 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.079116207 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.084479247 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.077265609 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.07717965 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.093926539 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.077485346 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.081942693 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073301745 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.072068134 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.081043832 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.068238469 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.075123323 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072909909 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067371356 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07164225 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.068989646 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.073858521 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.068624359 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.072433537 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.072582818 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.082336952 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067473771 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.074819704 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07377514 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.068678463 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.074916285 seconds)
  done (took 3.797883603 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.068948097 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.079715451 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086823778 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142371457 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106726037 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.074873437 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07552153 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088672299 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.092116942 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.063319381 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.066830038 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.087782475 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08742004 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.068936785 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.102542606 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.0788033 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.077761787 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.064994788 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.069920834 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091159581 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083385989 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080194785 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.088786979 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.078924679 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.062120693 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06506864 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.068801377 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.07598433 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069988291 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.074056147 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.067336397 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.066308057 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06344031 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.073937204 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.067381332 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.062420701 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.085895586 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074078111 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.075395664 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104259943 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071642095 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.064170491 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090147009 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12287364 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.062517976 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.06609319 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.065835638 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.074347865 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.063737056 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090481915 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076557242 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.062181358 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.063394824 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.063804495 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.063975026 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077262374 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.064130471 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.064195993 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.073307759 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.068532523 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084148043 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.067630698 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081118017 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.062502952 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.072699451 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.063943048 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.063830347 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.061655218 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092707543 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068934189 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.10915061 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.063687878 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.061404578 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.073848718 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.072740153 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.068517854 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06254705 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079254505 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073101144 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.066261647 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.073406342 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.065565781 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.065646496 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09334741 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063037248 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062220182 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.061366216 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.065735424 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.065434459 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.063523848 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076149305 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.062004138 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.065834636 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.076630048 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.062344714 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.063075986 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.065683138 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.064463337 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.062047046 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075280886 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.066339191 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.064184957 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.073864051 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.063414137 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.065608239 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.075899199 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.06987815 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.062038209 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.064650513 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065942516 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06430951 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.066417351 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.065894217 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.065027947 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069526854 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.069773529 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068305414 seconds)
  done (took 10.404569304 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.155506181 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.145880715 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.064410449 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14041487 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.070955996 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.068299901 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.140212802 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.082562154 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064082333 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.064613287 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.063158289 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.092026133 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.088083655 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.097543552 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.067900685 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.063480393 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086516915 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.095150542 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.143083961 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.138975512 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086378959 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.069886505 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.065272633 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.064537802 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.064661234 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.071502198 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.078563629 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.071629444 seconds)
  done (took 4.381138358 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.072846488 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.087153894 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.067805788 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.074852707 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.082584665 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.063681515 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.065495933 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.064732749 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.077449962 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.072278008 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.063818247 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.068020626 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.067007508 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.066169838 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.064169624 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.069931905 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.069647968 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06284347 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.067268869 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.068270102 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07317454 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.087839708 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.067633358 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.062792843 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.065897984 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.062768461 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.072031305 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.075677404 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.063300973 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.077999765 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.060930326 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.067477241 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.077240208 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06395694 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.062762812 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.063480781 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.063424216 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.063171766 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.063886847 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.061808181 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.061869514 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.067549982 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.062244776 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.071333185 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07716529 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.069800998 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.065344014 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.065583706 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.065995327 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.060884252 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.065852749 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.066163769 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.065825967 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.070291217 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.066530638 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.065899513 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.066484495 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.088311958 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069337176 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06281561 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.062442313 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062083368 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065319634 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073340635 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079374452 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.065542046 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.061969469 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.063614645 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069096264 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076798055 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.062634803 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.067697812 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062159185 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.063860779 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.065884424 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06549724 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.064203353 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.061762351 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.062826668 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.063171236 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.063678707 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06289778 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.062902445 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.065423393 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.061543692 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062027025 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.063405009 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.064965424 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.072430243 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.062333434 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.066691458 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.064258096 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.061979364 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.065643676 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068313958 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.065392354 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.07599692 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.074278753 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.063776182 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.061854186 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.076532049 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.065546911 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.062572365 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069009775 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.067170262 seconds)
  done (took 8.957388352 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.084708512 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.065319378 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.079344072 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.085632643 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.073588157 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.068352507 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07362609 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.063850229 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.078856469 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.062504146 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.071532581 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.062078253 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.073878427 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.072977429 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.064843989 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073239719 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.065484673 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.0796907 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.077333764 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.062693752 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072071027 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.075510688 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.075317494 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.077458814 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.076567475 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.077909004 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.074890601 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.066093586 seconds)
  done (took 3.925842625 seconds)
done (took 37.931508904 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.922968765 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.085311397 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.907564612 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.10609667 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.949034095 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.926421236 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.116257944 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.906849392 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.054067836 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.954825998 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.218439354 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.389353846 seconds)
done (took 67.437425807 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.933683892 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.071736831 seconds)
    (2/2) benchmarking "String"...
    done (took 2.164446911 seconds)
  done (took 6.077672436 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.182469411 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.722055294 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.174692631 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.905129065 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.911228784 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.354093265 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.686238218 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.358517481 seconds)
  done (took 31.955896458 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.085247046 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.138497871 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.603376188 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.63638252 seconds)
  done (took 16.349231199 seconds)
done (took 66.433057109 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.92073822 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.908339098 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.980732595 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.935059105 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.910729803 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.911211639 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.912449355 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.911450173 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.927042833 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.956970689 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.908890036 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.921255096 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.911418555 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.925012717 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.420513016 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.956895438 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.917165987 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.9109539 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.927809364 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.914736041 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.912335242 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.911032725 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.379899811 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.065357404 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.52686895 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.175463845 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.464019425 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.27104879 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.921725341 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 7.075021085 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.988203716 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.34983755 seconds)
  done (took 208.874198649 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.907638666 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.721893345 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.821146511 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.913459302 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.216865937 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.084818165 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.011800651 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.307067494 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.910249534 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.922947695 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.0315012 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.908367491 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.070663478 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.850700961 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.945551307 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.998078076 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.050591395 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.092425463 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.947579505 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.060944629 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.929908353 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.917172002 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.85993813 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.037879994 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.94812413 seconds)
    (26/36) benchmarking "herk"...
    done (took 7.00938649 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.937687149 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.931951564 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.09693743 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.018262432 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.919473231 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.930347075 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.094828232 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.781153376 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.918314742 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.93316581 seconds)
  done (took 173.884504818 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.101277468 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.910548847 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.915511292 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.910674285 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.965776316 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.038581061 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.909576298 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.579677896 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.920454294 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.391297226 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.915184115 seconds)
    (11/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.913696682 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.909707877 seconds)
    (13/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.910303628 seconds)
    (14/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.912974105 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.924066284 seconds)
    (16/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 4.006977485 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.914165361 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.92497459 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.912918472 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.937157429 seconds)
    (21/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.910629942 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.911346232 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.910801485 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.911268432 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.911718282 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.910717798 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.911478922 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.187958829 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.159839693 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.917159689 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.915190408 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.469019402 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.928033314 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.299174332 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.918219752 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.007272321 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.970057746 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.040886796 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.918035668 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.133530162 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 4.001890066 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.917316191 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.914928283 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.978953675 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.927998021 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.918091809 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.918580704 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.920806919 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.980938688 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.162723797 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.916898103 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.043936474 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.399418395 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.915507595 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.916212415 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.916168016 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.508059986 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.91618437 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.917051959 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.922168209 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.92301947 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.9165525 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.917505274 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.303582777 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.987891001 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.05764646 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.233215078 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.918251514 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.230419431 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.04013308 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.915924825 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.916102882 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.916906941 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.918079363 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.916993675 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.919618655 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.038456003 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.925247427 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.037078843 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.997906046 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.037518982 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.919640744 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.926781272 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.751343788 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.989190164 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.953176015 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.740891979 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.920593281 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.290812431 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.68493221 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.918773799 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.917756912 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.930610402 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.917534448 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.918516533 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.918968153 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.997717626 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.921026616 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.918619023 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.918367436 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.040089063 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.655728887 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.166982867 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.92123814 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.918195685 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.925259906 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.999893879 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.041026366 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.921192724 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.984768916 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.92487448 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.92018818 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 4.010829193 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.919709566 seconds)
  done (took 416.720798554 seconds)
done (took 803.485412699 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.491795813 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.467078371 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.559765299 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.484005006 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.457771135 seconds)
  done (took 14.315667932 seconds)
done (took 16.172573455 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.936151532 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.924754168 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.980369006 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.002944202 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.935431776 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.939156731 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.000587616 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.94067956 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.970649997 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.973708134 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.006991413 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.003567079 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.945559878 seconds)
  done (took 27.416113828 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.933768494 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.082379349 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.149794207 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.967315309 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.935564137 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.158514638 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.991061807 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.073182371 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.087621026 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.174484469 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.19087441 seconds)
  done (took 24.603027265 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.934417692 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.089960413 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.160025276 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.970346604 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.936157576 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.158277716 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.999112201 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.092285202 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.091566403 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.17043914 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.17508953 seconds)
  done (took 24.643472282 seconds)
done (took 78.52177773 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.923724905 seconds)
  done (took 3.781230748 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.949029767 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.089469277 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.922938126 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.922758953 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.924370422 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.925566181 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.923614876 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.92456032 seconds)
  done (took 17.440492265 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.923708257 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.92392081 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.926290929 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.924113055 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.925080093 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.925403993 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.924421236 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.924728444 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.924959275 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.924872107 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.924365407 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.924364946 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.926956261 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.924952303 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.925018317 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.925587518 seconds)
  done (took 32.657974938 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.927223922 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.925131025 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.925409481 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.924633984 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.92517413 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.924802375 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.926670758 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.925627617 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.925611785 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.925203404 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.925317999 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.925157494 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.925382211 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.92572692 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.925775207 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.926666621 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.926068925 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.925408517 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.929701011 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.925269944 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.924857035 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.926461043 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.925852192 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.926131162 seconds)
  done (took 48.079327519 seconds)
done (took 103.827869472 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.664065158 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.690620444 seconds)
  done (took 10.214144501 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.926411156 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.92726379 seconds)
  done (took 5.718022997 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.926602979 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.92722465 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.927085504 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.927390846 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.92727416 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.926856317 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.928215249 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.927801431 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.928642129 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.927759937 seconds)
  done (took 21.135603479 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.928590277 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.927960867 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.929246148 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.927172503 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.928135337 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.927556273 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.927106563 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.928134499 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.927880596 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.928016876 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.92720981 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.927299969 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.92747083 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.928418109 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.928521976 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.928360129 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.926821738 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.92890469 seconds)
  done (took 36.564880538 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.928117114 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.928190522 seconds)
  done (took 5.71908464 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.927600699 seconds)
    (2/7) benchmarking "second"...
    done (took 1.927953587 seconds)
    (3/7) benchmarking "month"...
    done (took 1.928042903 seconds)
    (4/7) benchmarking "year"...
    done (took 1.928635701 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.927881417 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.928732126 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.928373196 seconds)
  done (took 15.358807829 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.9284584 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.087496294 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.146472567 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.796536711 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.929645975 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.931828605 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.309150343 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.932694744 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.933013374 seconds)
  done (took 21.857526514 seconds)
done (took 118.430175499 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.729733854 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.926841722 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.196242077 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.987626967 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.961384427 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.222741647 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.957710508 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.570874995 seconds)
done (took 43.417897673 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.943026266 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.932284799 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.961254097 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.962406356 seconds)
  done (took 22.718144002 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.930801278 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.257044145 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.954655989 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.826094478 seconds)
  done (took 22.848090609 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.319111782 seconds)
    (2/2) benchmarking "read"...
    done (took 2.274728929 seconds)
  done (took 6.46244586 seconds)
done (took 60.838722923 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.930104488 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.930088115 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.930181057 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.930581189 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.92945169 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.928922492 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.930634993 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.930093467 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.930077552 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.93001722 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.932171883 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.930933379 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.93033891 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.930342766 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.929899058 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.934226409 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.931808095 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.93076647 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.929806522 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.930501201 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.932885694 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.93148039 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.931899848 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.931700633 seconds)
  done (took 48.203781305 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.931611773 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.932869094 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.932081035 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.932422664 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.932840462 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.933488763 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.932658625 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.932284971 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.933211541 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.932569194 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.932240893 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.935921003 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.932816795 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.932551671 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.932220691 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.933137172 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.933624672 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.933156464 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.933824707 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.933105727 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.93343597 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.934974711 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.933611002 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.934050039 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.93413812 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.933777066 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.935074563 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.93392494 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.934644751 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.934718339 seconds)
  done (took 59.867795342 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.935187715 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.935491124 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.935408557 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.934456918 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.934409219 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.934773325 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.936885946 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.934836388 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.93577722 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.934140263 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.935821925 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.935792457 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.934745543 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.934357222 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.935200958 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.935312963 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.935641024 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.934182529 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.934671668 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.932670281 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.932596268 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.934547327 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.93406243 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.933460079 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.933901179 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.934169284 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.936093516 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.934875949 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.934129423 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.933495426 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.934007668 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.935850598 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.936266334 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.93683423 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.936573998 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.93630992 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.935844787 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.936383869 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.936789165 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.937274279 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.936334438 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.936865709 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.938027496 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.936705715 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.936291277 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.937420023 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.937447843 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.937552159 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.937206648 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.936990062 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.937615585 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.937324066 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.937187366 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.937650138 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.938780926 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.937914567 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.93687424 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.938346186 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.937823209 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.937975833 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.937033803 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.936760901 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.939154235 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.937643084 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.937538982 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.938641675 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.937277103 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.938405977 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.938575252 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.938026951 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.938257266 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.938720145 seconds)
  done (took 141.278039526 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.938731749 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.93889662 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.937605465 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.937787643 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.938534519 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.939935619 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.938224362 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.938832052 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.937834859 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.938926445 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.938502629 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.938824122 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.938827111 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.939745711 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.938650056 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.940130548 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.939310292 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.939760606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.939479598 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.939404353 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.943061304 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.940070567 seconds)
  done (took 44.533774239 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.939368948 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.940199009 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.940062536 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.940343432 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.939364326 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.940679488 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.939500498 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.940003287 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.94192306 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.939873346 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.940302741 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.940827126 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.939655085 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.941468489 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.940451442 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.940251388 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.940293433 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.939815423 seconds)
  done (took 36.797991119 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.940616551 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.941221938 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.940834112 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.939472039 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.942245297 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.940170445 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.940656581 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.940305202 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.939914231 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.941224906 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.940524446 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.941015487 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.940829599 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.940177326 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.940524317 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.94377257 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.941132188 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.941048443 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.940752598 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.939876852 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.941326064 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.941125087 seconds)
  done (took 44.575161727 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.940204624 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.940646941 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.941501995 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.940675418 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.94072248 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.941624407 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.941491559 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.941245053 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.942714843 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.942307479 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.941299759 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.941581362 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.94124755 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.941620985 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.941773667 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.941117405 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.942069739 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.942131992 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.944367702 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.941563145 seconds)
  done (took 40.707251576 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.944088846 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.943439604 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.944322662 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.943917044 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.94347295 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.944050848 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.944063918 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.943991992 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.943947951 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.944056159 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.943985193 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.944442596 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.944644422 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.944468563 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.944410354 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.9444212 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.944604541 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.944513999 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.944312399 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.944603364 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.944372524 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.944328645 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.944075676 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.944836454 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.945296806 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.945310725 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.945492953 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.944604554 seconds)
  done (took 56.318229483 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.943739476 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.943934209 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.942690728 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.943746566 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.944243702 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.943303675 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.943827066 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.944247603 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.944440742 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.945448497 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.945524542 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.943856115 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.944479076 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.943869391 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.943917042 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.944710649 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.944692267 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.944398909 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.943457149 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.945227095 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.945479765 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.944753388 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.945495255 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.944283614 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.944777478 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.945673404 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.94496912 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.94556071 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.944907282 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.94430682 seconds)
  done (took 60.2117803 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.965437838 seconds)
    (2/2) benchmarking "in"...
    done (took 1.965963407 seconds)
  done (took 5.810527968 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.946379054 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.944653211 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.944997096 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.945292466 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.945075197 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.945310444 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.945066099 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.944666938 seconds)
  done (took 17.440330223 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.94647659 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.95008036 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.94674202 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.946628882 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.946921353 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.954985818 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.947625861 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.949077188 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.949611065 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.948239003 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.950323416 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.950882146 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.954201936 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.951256982 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.947342783 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.948577524 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.949456138 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.950906421 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.950212715 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.949369975 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.951350666 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.947195722 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.948515298 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.948308821 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.949259993 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.950637931 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.956474472 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.951052477 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.950496963 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.947979489 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.956554791 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.948146163 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.948393752 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.950782667 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.94873621 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.948871082 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.954772402 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.948136581 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.94882256 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.949754047 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.951926864 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.951955597 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.95166144 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.956033366 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.949649253 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.948984057 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.94952237 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.949759941 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.949931996 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.953787465 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.957550654 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.95191432 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.949857524 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.950750805 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.954180516 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.950381644 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.949238455 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.952986312 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.95955365 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.956148308 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.954015599 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.969113451 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.958033665 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.949131606 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.949992296 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.95993557 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.971553361 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.952972997 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.95261843 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.95059781 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.957138773 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.951127743 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.951717592 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.951198053 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.963291287 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.958116932 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.950497327 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.951760107 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.951521667 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.951427362 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.953937618 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.951388967 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.953162189 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.951756563 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.96151968 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.974486672 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.952127682 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.952032041 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.95436348 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.953595953 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.955500988 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.95517182 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.951829564 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.951571217 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.953460115 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.953512771 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.951414206 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.951919362 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.952867518 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.960731563 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.953312494 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.952260108 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.956333899 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.959352029 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.952931545 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.951758543 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.954401966 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.952328713 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.959601206 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.952152078 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.952777504 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.953270855 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.954118332 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.956602073 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.952591735 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.95693116 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.958806428 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.961310788 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.955500937 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.95872666 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.95906338 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.956390382 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.962460809 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.973915465 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.953677716 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.959332013 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.959697149 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.964674178 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.958492128 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.955292718 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.95854046 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.954806071 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.953436469 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.957681545 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.95611279 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.955409107 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.955470228 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.95480476 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.954881899 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.955036129 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.956855998 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.956364852 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.957303965 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.953350074 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.957805442 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.954316772 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.957694427 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.96248717 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.956070005 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.954593835 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.955258959 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.958346212 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.956973981 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.956032038 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.956113822 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.955338066 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.955075625 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.956169695 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.958626608 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.955635778 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.956383675 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.956888465 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.959852428 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.956090603 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.956711832 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.956796385 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.955427992 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.956249327 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.958134675 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.956685453 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.958860889 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.955178901 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.960693033 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.956238038 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.957051017 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.955546236 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.956680488 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.955299508 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.961763317 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.967002392 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.960803493 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.966399848 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.956504499 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.963980359 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.957134937 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.959533809 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.960162031 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.957249391 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.957443374 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.95752532 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.957857037 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.961370879 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.976396444 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.967790949 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.960099225 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.958398018 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.962833793 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.960762942 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.962335818 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.958894465 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.959537422 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.95961511 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.957500429 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.957536269 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.958539801 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.960638874 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.959255585 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.959264389 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.96290867 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.95817848 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.958343759 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.959697673 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.958478993 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.9615583 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.958363712 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.958870569 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.958874022 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.959594412 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.966778293 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.962110918 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.959138805 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.958795844 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.961303121 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.958005291 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.96004834 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.961554195 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.96348467 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.959475168 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.962070912 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.967004672 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.960645363 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.960220548 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.959858324 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.960662115 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.962929965 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.960657118 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.96399092 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.967268033 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.962918486 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.959527567 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.965254445 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.959820087 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.962722425 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.959714697 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.961553113 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.960389232 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.962026874 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.959732414 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.960305335 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.967922542 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.959853692 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.961761786 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.960268894 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.962026397 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.960979943 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.96360942 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.959038231 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.964598247 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.968230777 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.965823432 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.961865382 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.963511854 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.963527577 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.962863003 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.964545939 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.96218669 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.972810071 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.97112064 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.961674428 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.96115871 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.961826572 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.964040607 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.961988811 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.960464679 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.969348477 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.962797144 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.964051033 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.965708015 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.961972819 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.961584687 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.968800256 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.964593503 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.965339386 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.964375855 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.963793768 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.964227647 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.96249662 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.965326449 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.962155071 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.964712733 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.966186395 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.962490864 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.964110642 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.963442749 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.972140608 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.962758965 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.963846294 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.969383089 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.965089065 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.962854924 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.964976629 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.963014365 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.964559153 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.964020516 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.962633755 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.964125847 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.963897232 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.967490566 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.973796731 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.967794359 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.970784206 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.967478921 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.972934181 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.963524958 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.964259 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.963424393 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.968366328 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.970379357 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.96403532 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.965000017 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.971571182 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.96491248 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.964680817 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.966377144 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.964392747 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.963695523 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.963976499 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.965191211 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.970568831 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.968123155 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.964915921 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.964361489 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.965429289 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.964667256 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.968179781 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.967301362 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.966591847 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.965554977 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.966186527 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.965261521 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.964929837 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.965230159 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.965244702 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.965568628 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.965130605 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.972758425 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.964891425 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.966814656 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.969290649 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.965857032 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.97347983 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.965362407 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.964840368 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.96618053 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.96711315 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.967838286 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.965928181 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.965427312 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.966786983 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.966613621 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.967672858 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.976820683 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.974073578 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.969974262 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.968802417 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.966359462 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.968450673 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.975614781 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.987571958 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.964827187 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.969627514 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.970179361 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.974797199 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.970426883 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.973012797 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.97057313 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.973744476 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.969370566 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.967192518 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.971901471 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.98036176 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.96705881 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.967731543 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.967188078 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.972898838 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.968282925 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.967802135 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.969348146 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.970121729 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.968508842 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.979099033 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.968338295 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.969915339 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.968085224 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.967078274 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.967324044 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.968292672 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.969574673 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.96951757 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.967668424 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.968162499 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.971400739 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.973438921 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.968783133 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.971958473 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.977265502 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.967719099 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.968411065 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.970548074 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.968614694 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.972348214 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.967633396 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.968735268 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.969700519 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.968814458 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.971121343 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.972570587 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.977931949 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.971876964 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.97015691 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.96856399 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.973729732 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.96966528 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.969304367 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.971292929 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.978101179 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.975100449 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.98034957 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.979073138 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.969557526 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.972355309 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.978113069 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.977324382 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.970092742 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.970859404 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.969997218 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.973934506 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.973291798 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.972514621 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.970095713 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.971443075 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.976726292 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.970785492 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.971992034 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.971005544 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.9715122 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.974131335 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.973600422 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.976185092 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.971262178 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.971838398 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.969652004 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.973223818 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.972344249 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.97461917 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.971340909 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.971544971 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.97343813 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.973867948 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.975638712 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.971414816 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.971574929 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.974360128 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.972008077 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.972562229 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.971940477 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.971929493 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.971257245 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.975595564 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.979210247 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.971830256 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.974265239 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.972650655 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.975309847 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.971717896 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.971703166 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.97199549 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.97256042 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.980299358 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.973551361 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.972695726 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.974463003 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.973313672 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.978246544 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.976137707 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.97873888 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.972822368 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.973044057 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.973023647 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.977159324 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.981821139 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.977256031 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.978589553 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.981050156 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.979103195 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.97605274 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.973614123 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.973179817 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.973698059 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.974021939 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.977166481 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.976168476 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.976303482 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.973012772 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.976210646 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.974329073 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.9771846 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.974784862 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.975021628 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.978155036 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.983169252 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.983342227 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.975574491 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.976545349 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.974602747 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.978444427 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.985014843 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.974125523 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.974539202 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.974139294 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.976440053 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.975466608 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.982413942 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.983447979 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.979276778 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.974675102 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.980207397 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.99085918 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.978508453 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.984771262 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.00527238 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.977564025 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.975466548 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.977538857 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.976944147 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.97556421 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.977845495 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.975334604 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.983459906 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.976961402 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.976339293 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.984210942 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.976429472 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.975768519 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.975734429 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.978318807 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.982240144 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.975865974 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.984055719 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.97629178 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.97587174 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.976413268 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.978307441 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.976818364 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.976381857 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.976697024 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.980086756 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.97649554 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.976221196 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.985849562 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.977469663 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.979822487 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.989368044 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.986645765 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.976446193 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.977547422 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.976939975 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.982381944 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.980593434 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.976690259 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.981140243 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.985295379 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.981190362 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.984792702 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.978866801 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.979672086 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.979606534 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.977211037 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.977228048 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.988969281 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.988593581 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.978940592 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.979840292 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.985333284 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.97807772 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.987071243 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.984488623 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.978479722 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.983157581 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.97843189 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.979498636 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.979374944 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.978544692 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.9829957 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.98655894 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.978613752 seconds)
  done (took 1173.331176142 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.979424468 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.979472317 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.978257805 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.979693666 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.979042455 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.979341214 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.979390936 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.979821031 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.979383787 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.979883745 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.980908555 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.97967838 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.979368633 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.979849165 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.979635434 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.979455129 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.979560188 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.980348181 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.980141901 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.979738886 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.979621512 seconds)
  done (took 43.483715003 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.979487913 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.980238318 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.97942574 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.980910543 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.979174346 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.979257742 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.979005002 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.97889055 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.978919337 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.97935806 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.979840987 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.979755543 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.979367319 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.980076701 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.981654175 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.980890173 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.980822707 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.980780266 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.980034218 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.980530595 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.980948925 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.980725958 seconds)
  done (took 45.472321071 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.981647092 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.981408027 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.983669129 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.980348167 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.981214736 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.980657007 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.981069374 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.980796709 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.980157156 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.98195091 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.989000844 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.988589672 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.981496794 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.983635972 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.980915528 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.982012183 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.129208107 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.980635688 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.982159764 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.982397387 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.981227273 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.988699085 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.982310104 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.981753799 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.981544482 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.981816205 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.982339558 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.982269793 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.982573409 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.983462821 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.985786091 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.982515225 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.9849763 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.987264956 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.982859098 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.983956949 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.986389554 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.982570916 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.983253137 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.982604862 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.993254407 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.005754944 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.983080193 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.983842937 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.99104827 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.983363161 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.983900931 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.988247657 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.991105815 seconds)
  done (took 99.281480014 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.984136895 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.983155474 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.983498064 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.985786765 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.98298832 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.983724268 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.982395359 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.983066131 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.983859058 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.982865217 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.983016755 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.982294792 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.983382187 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.983030307 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.982892254 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.982682429 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.983635013 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.983783212 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.983039871 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.983734269 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.983453238 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.983234492 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.983286847 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.983821703 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.983439638 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.983923581 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.983138247 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.984284317 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.983202026 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.983101968 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.983774876 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.984230758 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.984093058 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.98300832 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.984362437 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.984200141 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.983733625 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.984698649 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.98433827 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.9850877 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.984382594 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.985575379 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.98492655 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.984744274 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.985231333 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.984610095 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.986523131 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.985225603 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.98598043 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.985603035 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.985523562 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.985493124 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.985622383 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.98620966 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.986160807 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.985983421 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.985691027 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.986123356 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.986789522 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.987682057 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.986694351 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.985376309 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.986121028 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.985873721 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.986251274 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.986850477 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.986316297 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.987223053 seconds)
  done (took 136.865800497 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.987664252 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.986734752 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.987185286 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.98614292 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.986726085 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.987195016 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.986867506 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.987070072 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.986695542 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.986866373 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.986830967 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.987214689 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.98720295 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.986286875 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.987338875 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.987631585 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.988046304 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.986985803 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.98691971 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.987012158 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.987705611 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.988230925 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.987624872 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.987838506 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.988310611 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.990313314 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.988798087 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.987698305 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.988440856 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.987865446 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.988346508 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.988664751 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.988108041 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.988296136 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.988462632 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.988806685 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.988353006 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.989991188 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.98894173 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.989457886 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.988749145 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.990186708 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.988233319 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.989352741 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.98903356 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.988860179 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.988083319 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.98836068 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.988768939 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.989013732 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.989241416 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.98921565 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.98892889 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.989200869 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.989511372 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.989227955 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.989211458 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.989193005 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.989926451 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.988854487 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.990116018 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.989584531 seconds)
  done (took 125.191433471 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.990134772 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.989931152 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.988761035 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.990208383 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.988924867 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.989079196 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.989666892 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.989338213 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.989099713 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.990129868 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.990605651 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.990190644 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.990733198 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.990583306 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.990668493 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.991678898 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.990536482 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.990038699 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.990708175 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.990975835 seconds)
  done (took 41.722896994 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.990496281 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.992091673 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.989738617 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.991872365 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.990909979 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.990576914 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.990199144 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.990929596 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.990736675 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.991137948 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.991349435 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.990951006 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.991317151 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.990722605 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.991236941 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.99128147 seconds)
  done (took 33.778116818 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.991932049 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.991491087 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.991334835 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.992026905 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.991131734 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.992357931 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.991702342 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.991519116 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.991331095 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.992067142 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.991484678 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.992238681 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.991747401 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.992357893 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.991551751 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.991856052 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.992945652 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.992903571 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.992662635 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.992819207 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.993525267 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.992272016 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.992819715 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.992132777 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.992981172 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.993362809 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.993169511 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.993062332 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.994163329 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.993666722 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.992539776 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.994290817 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.992954294 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.992888783 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.994011652 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.992534752 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.992836294 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.994072929 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.993021317 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.993013753 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.993522077 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.992791793 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.994202749 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.993397033 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.994165486 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.99380539 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.995333229 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.993945237 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.994199491 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.994278064 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.99445647 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.994288976 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.994350289 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.993585655 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.995080485 seconds)
  done (took 111.538606553 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.99412079 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.994038557 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.994042649 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.994542324 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.994612251 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.99566627 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.994736526 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.994012078 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.993744482 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.99495502 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.995228644 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.99375829 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.995540533 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.994303956 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.995100474 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.99459113 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.99549285 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.994112656 seconds)
  done (took 37.828687918 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.994972932 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.996312141 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.996411745 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.995139252 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.995151347 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.996062453 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.995257829 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.996434397 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.995816598 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.996285397 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.995934756 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.995649744 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.996318054 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.996402046 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.996591364 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.99510425 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.995232809 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.996155414 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.995529158 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.996597499 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.995863265 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.996398918 seconds)
  done (took 45.836233031 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.996744848 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.996356219 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 2.010038173 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 2.014883453 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.015913849 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.028623886 seconds)
  done (took 13.989051895 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.996283852 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.996739372 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.996740368 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.99681501 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.996188959 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.997039688 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.997297512 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.996917233 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.997192529 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.998064186 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.997628796 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.99670885 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.996702166 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.997726676 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.99748177 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.996805491 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.99728052 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.998519464 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.99752258 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.996594077 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.997944229 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.996807696 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.997366385 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.997443613 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.997348 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.99790303 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.998724448 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.998761874 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.998248292 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.998514311 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.998068439 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.997529542 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.998679082 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.997630689 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.998322791 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.998335376 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.998216945 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.998669678 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.997718399 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.998570293 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.997522434 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.998272997 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.998295854 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.99836614 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.998100646 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.998676763 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.998774139 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.999695382 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.998425277 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.99944276 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.998783375 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.000171371 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.998300875 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.999691929 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.999504707 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.000248201 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.000293452 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.999013491 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.000099373 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.000284773 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.999998548 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.000489252 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.001994599 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.000215527 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.000092092 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.000306758 seconds)
  done (took 133.81791404 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.999281961 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.999440346 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.000978048 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.000954651 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.000187859 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.001222114 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.999499869 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.00011421 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.999954908 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 2.000902305 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.000744108 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.00007214 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.000638125 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.999599883 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.001342107 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.001500201 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.001126938 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.001685506 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 2.001666834 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.0026196 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.001046372 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.001442345 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.001382355 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.001644628 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.001486981 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.003477093 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.001565192 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.001071818 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.002015923 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.001901142 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.001027428 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.002225529 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.001401368 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.001213657 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.001506371 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.00174206 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.002295789 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.002057519 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.002524788 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.00118421 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.003895691 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.002389112 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.002567301 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.00228088 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.003050457 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.002402189 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.002874737 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 2.002405359 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.002273195 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 2.001939092 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.001832802 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.00519894 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.002374098 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.002827543 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.004071928 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.00443377 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.004070015 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.003793385 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.003587447 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.003411806 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.003127812 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.003641292 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.003508449 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.003717244 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.003752057 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.004052065 seconds)
  done (took 134.065295212 seconds)
done (took 2733.818770719 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.034429581 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.234687707 seconds)
  done (took 16.202889169 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.169006057 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.120287024 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.007722336 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.058089624 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.008498916 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 7.034086348 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 7.027771208 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 2.007757725 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 2.007949422 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 2.007777251 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.00763969 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.192474422 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.057716709 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 2.008132672 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.009160342 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.09962829 seconds)
  done (took 54.762589625 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 2.012198534 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.013559487 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 2.025994671 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.01419482 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 2.012703134 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.030823453 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 2.044717918 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 2.017350567 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.073972133 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 2.026219002 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.131375017 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 2.025888799 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 2.014868695 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.075499699 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 2.027261706 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.026629384 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.106339306 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.091896935 seconds)
  done (took 38.708874974 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.092330929 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 7.01717505 seconds)
  done (took 11.053998067 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 7.026744319 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.011005291 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.006532414 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 7.020213519 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 7.026425673 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.025396696 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 7.027344535 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.016921978 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 7.041177126 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.010102662 seconds)
  done (took 72.1533346 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 2.015079802 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.014252965 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 2.015369386 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 2.010495879 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 7.008672406 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 7.012990993 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 2.013575388 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 7.008316419 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.717630657 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 2.05207577 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 2.021927749 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 2.019501192 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.01128366 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 2.013212876 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 2.009499614 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.03656387 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.151302114 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 2.007865904 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 2.010304217 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.017260823 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.012713798 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.068556368 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.025108504 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 2.012959924 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.044549121 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.71081817 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.024027976 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.017940192 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.11991922 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 2.0089492 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 2.012192595 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.222087002 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 2.018387553 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.477241003 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.291830668 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 7.017582774 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 2.025133293 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.019968761 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 2.009995362 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.129065365 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.013999864 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.018961097 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.975655979 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.264514145 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.109907357 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.06177693 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.363332645 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 2.016305981 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 2.013307088 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.048102031 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 2.016011928 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 2.014103546 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 2.028777186 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.524076472 seconds)
  done (took 140.845915194 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 7.013858744 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.35692631 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.17839337 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.012732607 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.295795216 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.217018603 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.013261419 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.058029255 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 7.014440596 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.238200173 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.267077518 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.116962682 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.013271126 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 7.014194066 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.016110313 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.010308658 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.163887426 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.081455744 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.014393821 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 7.010341796 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.037509491 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.251436285 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.132469402 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 7.015690836 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.037436568 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.220189474 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.133243002 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.116505593 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.806689264 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 7.009479086 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.072781133 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 7.014217549 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 7.013998593 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.011106616 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.166212855 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.106348715 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.093652557 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 7.014289483 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.011461908 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.012161916 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.669600125 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.209959689 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.106757808 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.141886403 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.264316056 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.215170004 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.789904636 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 7.01095078 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.743326668 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.172915174 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.239289275 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.239710992 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.133236333 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.014903282 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.256679761 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.01234103 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.01173547 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.259820288 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.235596752 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.113486788 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.016495836 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.013876941 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.012093572 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.248597632 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.016080068 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.106966394 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.016081854 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.012436879 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.109001026 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.114237957 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.244397583 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.224584047 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.045266312 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.351301715 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.515704388 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.258557733 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.078812584 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.262703963 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.018203631 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.013988823 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.089585415 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.859649567 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.266391191 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.258267615 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.258641231 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.048903717 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.736290842 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 7.014605333 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.239137342 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.235017464 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.277512337 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.259397396 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.249970004 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.340398795 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.013762395 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 7.015341488 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.242037035 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.138365538 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.018300679 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.361552212 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.245679246 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.581748831 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.040363285 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.320378777 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.14600312 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.01798833 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.643366712 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.014610712 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.243039885 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.054367443 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 7.016505358 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.015221852 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.234444704 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 3.003902312 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.015280891 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.88612272 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.074990401 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.021635789 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.245857577 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.019543781 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.285772557 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.01876925 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.24624703 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.195582789 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.045414309 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.188369449 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.26254047 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 7.020672749 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.258933808 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.2594048 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.130729784 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.286164416 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.895935678 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.017551767 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.303908504 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.019033832 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 7.01691442 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.184926496 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 7.018439731 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.158791974 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.021311437 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.308175947 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.039202804 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.248748683 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.02075698 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.271372554 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.050786123 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.068078373 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.021698911 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.141897079 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.018339982 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.845165341 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.17276633 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.020557279 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.017761842 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.561859873 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.018682327 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.172090177 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.24675224 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.040289405 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.090481022 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.679256304 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.018725522 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.099272059 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.041930331 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.404805595 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 7.021150326 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.26947639 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.021979011 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.017860963 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 7.017438477 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.251572401 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.255612796 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.022657323 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.019533383 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.923501642 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 7.021525927 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.018065084 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.199132808 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.361078714 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.019597461 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.221911367 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.025881228 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.146871606 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.023252114 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.095409636 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.351168468 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.019743569 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 7.018608658 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.020650188 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.018965914 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.021438765 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.22871377 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.046561432 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.551528837 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.156792746 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.29380689 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.329178475 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.258135085 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.063001461 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.025624492 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.272169099 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 7.023820136 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.081321945 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 7.023872705 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.03989853 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.252081753 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.024111135 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.279511573 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.291353404 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.89470793 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.06884891 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 7.024260775 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.022426417 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 7.021370709 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.16594458 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.110485321 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.026679697 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 7.021107766 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.134653191 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.141972071 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.232801643 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 7.023159944 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.218955428 seconds)
  done (took 936.829296982 seconds)
done (took 1272.4956951 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.020584628 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.025034287 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 7.026842057 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.024682833 seconds)
  done (took 30.049467394 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 2.024649269 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 2.023885605 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 2.025830599 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 2.023597972 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 2.024417893 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 2.023374137 seconds)
  done (took 14.0994377 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.095510385 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.024965715 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.024938422 seconds)
  done (took 22.099161067 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.099914108 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.443850583 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.166433844 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.472019116 seconds)
  done (took 11.136057214 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.025632604 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 2.026248083 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 2.026310829 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 2.028648558 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 2.024539044 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.025033993 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 2.025537308 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.026737479 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 2.02593111 seconds)
  done (took 20.190323689 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.771839539 seconds)
done (took 104.302346314 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.344554686 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.095594621 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.124810269 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.157067854 seconds)
    (5/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.206428644 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.029557589 seconds)
    (7/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 3.814117248 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.039430572 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.159707514 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.02728071 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.076754418 seconds)
    (12/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.184008842 seconds)
    (13/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.026721459 seconds)
    (14/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.10415832 seconds)
    (15/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.033867249 seconds)
    (16/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.277818317 seconds)
    (17/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.477832485 seconds)
    (18/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.625002505 seconds)
    (19/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.103436138 seconds)
    (20/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.421185223 seconds)
    (21/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.113148091 seconds)
    (22/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.141715611 seconds)
    (23/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.242826298 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.054008515 seconds)
    (25/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.770261674 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.653662764 seconds)
    (27/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.279093114 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.03031728 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.182223873 seconds)
    (30/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.1036094 seconds)
    (31/309) benchmarking ("sort", Int8, false)...
    done (took 4.926479244 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.341663301 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.02931515 seconds)
    (34/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.529920945 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.038746769 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.196505142 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.168430755 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.029060102 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.87476322 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.025400017 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.641867497 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.026430148 seconds)
    (43/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.057351618 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 4.36831815 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.683258713 seconds)
    (46/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.136451966 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.18235594 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.333605322 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.212244996 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.450526709 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 2.243689008 seconds)
    (52/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.213291883 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 5.719254762 seconds)
    (54/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.832090338 seconds)
    (55/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.050932132 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.259639763 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.125071048 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.703116565 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.196124003 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.047108459 seconds)
    (61/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.026936138 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.859506548 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.129579153 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.213469928 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.646139985 seconds)
    (66/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.119544201 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.203094643 seconds)
    (68/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.030985035 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.1266642 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.429829028 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.235805852 seconds)
    (72/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.146784654 seconds)
    (73/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.438772147 seconds)
    (74/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.311050848 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.309511627 seconds)
    (76/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.296709201 seconds)
    (77/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.030851775 seconds)
    (78/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.472889843 seconds)
    (79/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.175579782 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.426524325 seconds)
    (81/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.032481001 seconds)
    (82/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.540499417 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.031490363 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.415652138 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.289056361 seconds)
    (86/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.093882911 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.340847602 seconds)
    (88/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.035564966 seconds)
    (89/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 4.268055096 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.441915272 seconds)
    (91/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.045884545 seconds)
    (92/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.688202322 seconds)
    (93/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.129627872 seconds)
    (94/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.367764025 seconds)
    (95/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.555915889 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.241063099 seconds)
    (97/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.163778411 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.044821421 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.033663797 seconds)
    (100/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.184954121 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.03388899 seconds)
    (102/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.29202366 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.182637841 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.363452542 seconds)
    (105/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.374743003 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.036532467 seconds)
    (107/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.11675847 seconds)
    (108/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.05267008 seconds)
    (109/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.644853981 seconds)
    (110/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.899469299 seconds)
    (111/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.322474717 seconds)
    (112/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.217048076 seconds)
    (113/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.064054519 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.129813487 seconds)
    (115/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.032226538 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.321586047 seconds)
    (117/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.10806507 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.052808233 seconds)
    (119/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.515282148 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.936261229 seconds)
    (121/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.695655414 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.118847055 seconds)
    (123/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.051470254 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.798190001 seconds)
    (125/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.174824732 seconds)
    (126/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.318681645 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 3.033716484 seconds)
    (128/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.674009257 seconds)
    (129/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.604879054 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.195607371 seconds)
    (131/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.512282918 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.277785213 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.923802011 seconds)
    (134/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.041237563 seconds)
    (135/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.102123615 seconds)
    (136/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.725358783 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.269823257 seconds)
    (138/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.12805887 seconds)
    (139/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.052796546 seconds)
    (140/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.132771081 seconds)
    (141/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.059677012 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.323026511 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.05972007 seconds)
    (144/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.297597876 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.355428883 seconds)
    (146/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.355795344 seconds)
    (147/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.892802433 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.050689951 seconds)
    (149/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.042033082 seconds)
    (150/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.106930298 seconds)
    (151/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.13565824 seconds)
    (152/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.336880403 seconds)
    (153/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.167381398 seconds)
    (154/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.092830845 seconds)
    (155/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.52370725 seconds)
    (156/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.302658902 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.434860987 seconds)
    (158/309) benchmarking ("sort", Float64, false)...
    done (took 5.7612101 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.037218753 seconds)
    (160/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.382979691 seconds)
    (161/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.059145401 seconds)
    (162/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.42710519 seconds)
    (163/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.40579479 seconds)
    (164/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.144928469 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.035146817 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.138043427 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.361099398 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.732527792 seconds)
    (169/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.191152286 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.161539568 seconds)
    (171/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.142799156 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.299372764 seconds)
    (173/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.280514428 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.674656256 seconds)
    (175/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.05728416 seconds)
    (176/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.163074396 seconds)
    (177/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.237446837 seconds)
    (178/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.345413119 seconds)
    (179/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.285969837 seconds)
    (180/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.038379431 seconds)
    (181/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.174174869 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.777341538 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.229168277 seconds)
    (184/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.949393331 seconds)
    (185/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.040806585 seconds)
    (186/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.253902962 seconds)
    (187/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.319750148 seconds)
    (188/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.115738785 seconds)
    (189/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.041894878 seconds)
    (190/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.451375795 seconds)
    (191/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.287845799 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.388582662 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.167195606 seconds)
    (194/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.035873149 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.500866011 seconds)
    (196/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.45888324 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.382890705 seconds)
    (198/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.0437587 seconds)
    (199/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.038336329 seconds)
    (200/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.049518826 seconds)
    (201/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.167064669 seconds)
    (202/309) benchmarking ("sort", BigInt, false)...
    done (took 7.034604837 seconds)
    (203/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.12200387 seconds)
    (204/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.157568681 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.106535792 seconds)
    (206/309) benchmarking ("sort", Float32, false)...
    done (took 5.742959107 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.038178148 seconds)
    (208/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.050150873 seconds)
    (209/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.114370037 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.344084918 seconds)
    (211/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.373888966 seconds)
    (212/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.041807523 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.325482102 seconds)
    (214/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.098912105 seconds)
    (215/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.741562717 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.036312545 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.049155773 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.09889107 seconds)
    (219/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.858024318 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.348808037 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.043123339 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.748045549 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.363248889 seconds)
    (224/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.096718379 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.037176198 seconds)
    (226/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.04463156 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.167718614 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.941232705 seconds)
    (229/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.0466365 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.060496592 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.350775668 seconds)
    (232/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.189920799 seconds)
    (233/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.171951186 seconds)
    (234/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.166462275 seconds)
    (235/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.34300478 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.1717333 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.375045858 seconds)
    (238/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.345505454 seconds)
    (239/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.722881436 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.095515236 seconds)
    (241/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.288268263 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.050826129 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.445787254 seconds)
    (244/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.063252901 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.317889436 seconds)
    (246/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.050597726 seconds)
    (247/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.148868946 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.691049354 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.234910823 seconds)
    (250/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.531857147 seconds)
    (251/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.498826386 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.833628908 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.1871686 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.038308583 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.599879847 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.322922364 seconds)
    (257/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.208101336 seconds)
    (258/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.133407789 seconds)
    (259/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.185190874 seconds)
    (260/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.804314359 seconds)
    (261/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.677358326 seconds)
    (262/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.398474052 seconds)
    (263/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.24438964 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.07353097 seconds)
    (265/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.530047703 seconds)
    (266/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.22266458 seconds)
    (267/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.129284637 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.038333263 seconds)
    (269/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.133431866 seconds)
    (270/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.612374475 seconds)
    (271/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.602772705 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.056442682 seconds)
    (273/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.327668445 seconds)
    (274/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.184219977 seconds)
    (275/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.04369982 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.102427092 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.043653653 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.410719622 seconds)
    (279/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.154051005 seconds)
    (280/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.449359098 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.221598579 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.992310607 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.290271647 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.227384495 seconds)
    (285/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.864139451 seconds)
    (286/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.427231769 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.559992619 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.043097482 seconds)
    (289/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.125944203 seconds)
    (290/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.057576436 seconds)
    (291/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.076708183 seconds)
    (292/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.259405444 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.305000745 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.20424669 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.043532547 seconds)
    (296/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.192324644 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.16618763 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.974746837 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.175808603 seconds)
    (300/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.453257729 seconds)
    (301/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.254106858 seconds)
    (302/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.515439822 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.041270097 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 3.767195315 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.06315984 seconds)
    (306/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.729650188 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.356639011 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.372256078 seconds)
    (309/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.24969348 seconds)
  done (took 1063.760784789 seconds)
done (took 1065.786165944 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.068013326 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.06184967 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.045707315 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.066272982 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.156940615 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.088729677 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.058252871 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.04952957 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.094254583 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.094313314 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.042762646 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.086147869 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.047563806 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.045511061 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.044973369 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.06110377 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.358024068 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.077429066 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.063910582 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.05722637 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.063324944 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.0439995 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.096037296 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.08722716 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.04924718 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.050294151 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.050979634 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.065998457 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.159570434 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.050537311 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.05092212 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.060431597 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.356279593 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.077150087 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.044168283 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.065674427 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.06015768 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.058799006 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.04978214 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.080333669 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.506289386 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.053252807 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.047839358 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.04646702 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.046044186 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.055690789 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.047483459 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.054566553 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.062041189 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.062539238 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.497667116 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.070202429 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.051368779 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.047538586 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.061577989 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.047452712 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.051356484 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.064596456 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.067096012 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.064359325 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.344120432 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.086383792 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.051713161 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.066498141 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.056232962 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.534053329 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.053521568 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.055013901 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.506133547 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.063792261 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.534390655 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.064398683 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.051057259 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.063944997 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.080909458 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.358438007 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.07698562 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.04812819 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.058422329 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.04691387 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.061790882 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.064406321 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.053960964 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.048854859 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.068418284 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.094210662 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.062787097 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.050209694 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.061394056 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.06891389 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.059509035 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.061834334 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.053555283 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.047910569 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.064726381 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.055388433 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.054166835 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.053755363 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.054756116 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.063538613 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.505212302 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.074048961 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.046935252 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.047223231 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.049693007 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.065350467 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.505180826 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.058266379 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.072453373 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.099649389 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.052250941 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.347615425 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.084303849 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.067999266 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.061357853 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.052162592 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.048422659 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.345523093 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.529343074 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.071787124 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.049996877 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.049976527 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.066046549 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.051144148 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.045032311 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.358612927 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.080634925 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.0635128 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.169648754 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.06082795 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.080645417 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.044806935 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.050555625 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.093010859 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.064618291 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.080108227 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.04743072 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.063109508 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.062998486 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.042083319 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.0583346 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.056774583 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.045761921 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.052027486 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.040961699 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.090233999 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.05780326 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.057848963 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.063824288 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.164993546 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.040716917 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.337948839 seconds)
done (took 321.558014513 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.117595713 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 7.037015486 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.154352014 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.037628212 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.124693648 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.108099142 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.037059304 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.036741021 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.036233916 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.532000513 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.03517329 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.040613076 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 7.036259126 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.03414705 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.103569765 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.034250353 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.033350708 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.485410913 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.033747356 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.112539283 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 7.031491523 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.032540428 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.032965063 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.54566561 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.029969015 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 7.028437281 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.109595151 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.028356429 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.475179948 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 7.027712667 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 7.026713391 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.49037585 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.106663265 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.054045917 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.033961854 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.032397662 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.116271229 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.037649477 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.091087747 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.091368529 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.142559144 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.062459842 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 7.023948657 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 7.026216413 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.028850327 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.027928037 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.025109386 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.056610727 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.025143333 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.030270932 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.466853769 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.029105971 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.031828571 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.026897218 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.023390634 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.050863667 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.024434543 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.02532901 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.104417668 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.023607863 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.089700829 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.523654335 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.522017671 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.022396704 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 7.021020752 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.022979499 seconds)
  done (took 196.020691131 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.088490174 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.095750742 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.089454188 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.026832383 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.070398744 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.089310739 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.027333073 seconds)
  done (took 16.43977252 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.02732194 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.022082783 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.070559352 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.070490554 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.020899526 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.200793286 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.032605556 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.025825442 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.048589315 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.022022746 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.684567397 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.069851864 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.027832408 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 7.023221477 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.031295161 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.07346598 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.020438793 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.015623713 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.132302376 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.165192483 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.020168271 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.024213464 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.039754113 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.024597651 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.013180263 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.013301323 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.017056463 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.019866303 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.012771459 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.013254752 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.011820861 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.067274611 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.010010269 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 7.00825303 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.00837859 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.009765062 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.007950064 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.008684447 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.01082116 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.006804556 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.007037242 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.007418381 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.006282758 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.005618981 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.005766806 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.028879552 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.007535523 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.004423258 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.004652104 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.005069412 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.031197284 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.005401389 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.003648701 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.010198991 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.047392408 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.01018598 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.00520865 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.001677142 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.00260472 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.002453874 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.001921124 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.154426812 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.056908984 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.000699012 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.050445363 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.157526432 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.000135748 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.997900811 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.000836492 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.087904204 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.002674637 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.047524436 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.998645005 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.111641901 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.998383738 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.181833394 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.020723638 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.00106911 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.001098206 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.998179746 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.005808942 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.996484007 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.998652145 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.004302242 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.999936115 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.995072064 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.995158784 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.997269932 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.004839889 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.993226753 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.042520836 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.993873972 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.994520997 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.135857666 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.99296444 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.10979599 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.019728798 seconds)
  done (took 219.442600371 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.003014283 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.999725808 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.994271712 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.00737023 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.99493271 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.996261715 seconds)
  done (took 13.920370563 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.995243479 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.997604464 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.991804066 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.992417419 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.992559666 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.994804722 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.992952335 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.995654147 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.997334613 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.992035495 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.992094532 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.993181524 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.994295625 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.992352589 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.993335987 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.99268333 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.993106139 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.992980635 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.993066744 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.993827902 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.198579987 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.992626763 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.993632702 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.996554608 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.997206772 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.993064656 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.006094003 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.99305382 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.993206746 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.001591938 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.997344173 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.993275069 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.999498769 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.99931603 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.996980534 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.997762328 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.996621334 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.99660648 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.991846076 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.990802878 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.992490769 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.991259426 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.993183776 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.991887146 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.993624549 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.9982645 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.994700453 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.004692989 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.990891029 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.990401946 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.991460502 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.98975472 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.991744269 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.990737921 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.994852859 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.99630336 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.995195417 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.993479205 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.98999786 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.993998931 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.993630188 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.990113759 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.9946019 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.992936404 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.99498504 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.990271554 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.992159324 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.995765502 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.988301956 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.989274464 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.989038239 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.988341647 seconds)
  done (took 146.694275339 seconds)
done (took 594.506975387 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.881261397 seconds)
  done (took 9.801323665 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.089133913 seconds)
  done (took 9.082382386 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.938591229 seconds)
  done (took 10.929569437 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.073587267 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.098717149 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.065210106 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.067213578 seconds)
  done (took 30.306077486 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.326877997 seconds)
  done (took 9.316911701 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.080296167 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.068480409 seconds)
  done (took 16.202977665 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.186911116 seconds)
  done (took 9.177709336 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.488007 seconds)
  done (took 9.493865702 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.080901193 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.070079486 seconds)
  done (took 16.164021188 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.062112261 seconds)
  done (took 9.04978319 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.337075835 seconds)
  done (took 10.40911849 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.079990536 seconds)
  done (took 9.113051328 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.139554487 seconds)
  done (took 9.129571272 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.202341476 seconds)
  done (took 9.191321736 seconds)
done (took 169.292484686 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.068155791 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.057778615 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.059283185 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.057294329 seconds)
  done (took 30.231742242 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.092421811 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.092725127 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.101125207 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.092456452 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.082105227 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.082675708 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.093112849 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.092082223 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.083314994 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.090596869 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.091803862 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.088891604 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.090763211 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.100413713 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.099674998 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.088417241 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.090083584 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.090860203 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.081791754 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.098729711 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.087639068 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.089758894 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.056868238 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.055293105 seconds)
  done (took 52.099853728 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.244481971 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.125722168 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.208917445 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.1069855 seconds)
  done (took 10.66998694 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.054222795 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.118587145 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.106887395 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.101434847 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.107522249 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.156228372 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.106265123 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.19187131 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.181433879 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.178444737 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.060228581 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.077237814 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.076804027 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.101007472 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.157404387 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.053088576 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.055280365 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.169274845 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.115605717 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.238621583 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.051763467 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.110629312 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.102892259 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.104292046 seconds)
  done (took 52.760868425 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.052817862 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.060971386 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.058458916 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.051225817 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.05338912 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.052503284 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.058595532 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.050999835 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.071068234 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.051710961 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.052483562 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.049931047 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.055634347 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.050066325 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.049620195 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.062931865 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.06517986 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.051564734 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.054791452 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.057820493 seconds)
  done (took 43.094886141 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.048232582 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.895006761 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.393414141 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.301768503 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.049030221 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.050795105 seconds)
  done (took 32.720203527 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.062195339 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.05620903 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.050880004 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.107779105 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.191357172 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.057165723 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.050468238 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.060610949 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.097156568 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.115560735 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.068905712 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.078579192 seconds)
  done (took 26.975642385 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.048920722 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.049486332 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.050528796 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.060362427 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.057768592 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.055346414 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.055163695 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.04665008 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.061378047 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.067977395 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.055449541 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.058666681 seconds)
  done (took 46.650431313 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.755024415 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121055147 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.046533071 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.919508543 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.485466561 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.589642241 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.942238045 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.751556219 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.5376377 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.993383661 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270045237 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 7.066937836 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.153198665 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.068810299 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.338975961 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.435765131 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.258518413 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.315195213 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.961892213 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.108281114 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.271667415 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.274002059 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.349317047 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.070337313 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072988104 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.187930082 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.664358189 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.890933773 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.105722058 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.575622895 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.321883671 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.019924839 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124941498 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 7.072610565 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.083079154 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072647507 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07447642 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.343008498 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.188539519 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2016457 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14410604 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318362802 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074965103 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.620691048 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.779340305 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.382109005 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.182420069 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.068732841 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072184381 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.06895491 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.997314639 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154754634 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.074143108 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0784337 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.769016229 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.070077244 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14510119 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.069718461 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271154048 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.877168581 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756533877 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.072013408 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070366025 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.642564152 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.168850749 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.244469492 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.801512112 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.457619258 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.491046555 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.168454454 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.073760801 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073001352 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38242759 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.046737572 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.853190983 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111551558 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20546154 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.089580473 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716184082 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381525579 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.513684866 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.629356813 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.991577433 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.335255624 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.9344366 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.074054451 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289268057 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.907444586 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.997816582 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.279982343 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095011966 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07452398 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.337423074 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799117179 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.18356826 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.084972644 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.508961321 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089905379 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.077628797 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075035415 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.287449143 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.645738374 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.113411422 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.189709745 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090211781 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.15840801 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.99970658 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.090610274 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.073614362 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.976190253 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.080530267 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.073714026 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.114449683 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.921096227 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.120720919 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.012341844 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076039016 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.173941799 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117279028 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.030499787 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.310644338 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.369041327 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.722127349 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.093015081 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.205369684 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.450359207 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.299194226 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.080961692 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288258833 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.607224667 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.50391571 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.118450738 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361171226 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.132173096 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362187564 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.526405425 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15132086 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.859945117 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.705066354 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.290819962 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088869502 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 7.077570865 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077378699 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079823379 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.009964863 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.732784502 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.459574615 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.242413306 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.288936735 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.583319438 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.070157203 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.075891995 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.377687384 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209783787 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.066654512 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.730885559 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.669082099 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.902540562 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.104067923 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390715037 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.445297722 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.046745422 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088618745 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15639988 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091860106 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.081397026 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.461379467 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.439854312 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.080126151 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.076958288 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.026540668 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.077285265 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.078358489 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.609925421 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.051305229 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.080115985 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.08789032 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.950270265 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149491275 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078082246 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078231011 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.618838236 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.581589569 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.08046842 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.753438751 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.227223749 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150085065 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356026373 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.450566404 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204160782 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.776718691 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.508007846 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.189532641 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.778475632 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.005677955 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.08015803 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 5.018823852 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080521919 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.083553277 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082778224 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.265572982 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362760889 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380300972 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.534139788 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.141693628 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282918988 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.806155536 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.035899885 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.078994596 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082477384 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.078901396 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.07708394 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.595021863 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.371490546 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.191555053 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107860181 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.08222151 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206270908 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.088287679 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.002875416 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.079475468 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079316145 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.707161616 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.112253788 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.03467807 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.389692491 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.979355501 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199600131 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124446533 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.088711604 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083120713 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.799198744 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.129987447 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.010087385 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.674810941 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120822692 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.85238106 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.572080673 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.665344817 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377520695 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.406231802 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.413184522 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.148284104 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.292797998 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165254885 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133555156 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.166736906 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.013715886 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.00421186 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.733648776 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407851116 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.349938135 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089399991 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299661449 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803935213 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.309502349 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109459938 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.940701074 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3959331 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.056379821 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094784304 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.594177077 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192207625 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159208365 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080786123 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.038495723 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.397409016 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108663223 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.78481451 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094048684 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.430187612 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.664494152 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.154235603 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.473169476 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282718803 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.081523694 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.42989959 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.456048768 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.123358982 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.084739447 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.073115336 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.294677348 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.659763523 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.94898593 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084282949 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398289165 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.380588457 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.988009506 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 2.081541175 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40520697 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347754243 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.078847709 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.435361623 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.432162807 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.187985561 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138185565 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306422989 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.92346341 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396349274 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.630044353 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.568399488 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.08706169 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.005838306 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.780688671 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.282389871 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.079468928 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042982897 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.281711918 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304949831 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.759753024 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301375617 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326014168 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.091578568 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357544827 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154518372 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.178527053 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.405231077 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.488169644 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.317626834 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307621183 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.622376423 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.29730211 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.522958656 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.237661631 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.083085498 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.28561681 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298751515 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.294573013 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.457632452 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249963451 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.791191244 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.087871761 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.289249897 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387948039 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139866447 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.463485329 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.251484434 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.225760479 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088161763 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146006971 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.087298265 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092005974 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.465155159 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.609430659 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.0975004 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160449932 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.205686744 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.596161953 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.086879119 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.088080806 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359723919 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449396943 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420328332 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.067600288 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.084903328 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.088723972 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211853872 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.010378118 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088772495 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.355524136 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.088514536 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.688773117 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.234035063 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100999118 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.414781652 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.469372862 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.92095577 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.053286931 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089534222 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.289422923 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.38007747 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.435726052 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.207490803 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.35539162 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401928184 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.108188043 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.462876265 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.32808693 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085871499 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.956254862 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.085887207 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214751351 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.278145126 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363575539 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.586905058 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.809191326 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352093249 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.948926664 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.08337992 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.865405635 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354887419 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.358147861 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.132193331 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144618533 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085902433 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.674564413 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.814052653 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212194971 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.972725745 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.007182278 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.086964605 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.406186083 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.325455521 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.792625035 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084697233 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356720683 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387490053 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355813388 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.133588329 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.962202499 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298987261 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08669381 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.101983931 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356238532 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.288537338 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.321998266 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088124656 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.084200087 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.8908378 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.011976764 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.085537104 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138290686 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311996584 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103863424 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.598449768 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.784473385 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.354010862 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123058927 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087834602 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359205357 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.600427052 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.641320705 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091078252 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.286774 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.106882403 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.377772799 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.086986476 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.678674733 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.394387247 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.086047059 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.781918813 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.336684981 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.354791751 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.019762398 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094801027 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300446072 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.955406214 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.086212805 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.099023412 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.673079561 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324853285 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.821810424 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.647564322 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.08829288 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.087817187 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.689856906 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121073357 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.684599681 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.118575995 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100570729 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.605114272 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.782950481 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.379717573 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.327699661 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.772660046 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.692469367 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.082211815 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.083075506 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.082793248 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.998798276 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431525245 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.266715246 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344588344 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101632213 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.683573499 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116463156 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.475185558 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191209084 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404767224 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118043408 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.596248713 seconds)
  done (took 1765.709551401 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.09925303 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.102744946 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.119311907 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.085273891 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.109852876 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.090591498 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.168036261 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.092938602 seconds)
  done (took 58.869617416 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.071793996 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.086932953 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.074293875 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.070797543 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.085754438 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.07006785 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.233242398 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.093449577 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.075269882 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.074620739 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.070390421 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.086787117 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.354459441 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.092794896 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.068505764 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.069466232 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.070492343 seconds)
  done (took 77.753089091 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.069321601 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.323404854 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.131492869 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.068317309 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.005992199 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.080008568 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.033825567 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.118333199 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.062258979 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.298337198 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.363699622 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.087658005 seconds)
  done (took 92.638455647 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.058655012 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.054215456 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.054145404 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.054221917 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.053500957 seconds)
  done (took 12.263187635 seconds)
done (took 2304.499951993 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.278914157 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.118642197 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.151007836 seconds)
  done (took 6.25086852 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.199570196 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.243327089 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.358119955 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.119415962 seconds)
  done (took 10.905912995 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.351066987 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.435729958 seconds)
  done (took 6.764130395 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.412444019 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.05863882 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.430590196 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.048339699 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.051345238 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.054311159 seconds)
  done (took 23.13694773 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.049979662 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.050861691 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.049607962 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.050163619 seconds)
  done (took 10.178574841 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.050804279 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.796779393 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.050577839 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.060064036 seconds)
  done (took 21.936050211 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.198645581 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.166182642 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.193110969 seconds)
  done (took 8.536239473 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.192205256 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.890869383 seconds)
  done (took 7.061312577 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.196193057 seconds)
  done (took 4.173836746 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.077663295 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.320201108 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.550163715 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.574795571 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.700129478 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.864283404 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.371008353 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.295137417 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.45467495 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.480022008 seconds)
  done (took 26.666161836 seconds)
done (took 141.773849813 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.399194904 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.065160598 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.251251699 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.411796011 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.273735294 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.251376459 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.272343559 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.40251292 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.084278412 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.074314419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.414171322 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.272920941 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.224453068 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.062623503 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.227213138 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.061891728 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.270801208 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.407347495 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.09831699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.31432936 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.278856938 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.058221576 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.259973542 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.069942516 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.274420193 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.202829371 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.603276074 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.063464616 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.243107216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.613869576 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.204231954 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.462873912 seconds)
  done (took 174.154991568 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.052392098 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.052742875 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.053462648 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.055519515 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.600325757 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.053314361 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.053457283 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.055281714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.492853166 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.490382306 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.053275311 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.59204774 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.054779576 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.053551897 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.056806271 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.053473904 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.677323362 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.053085673 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.053797898 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.053902833 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.055458795 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.433865291 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.05452229 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.443341336 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.667717702 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.054955626 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.054520703 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.054614852 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.054292778 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.058241556 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.051349444 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.051070721 seconds)
  done (took 215.678703364 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.037118828 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.045860171 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.046215784 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.047477244 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.044046893 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.042866524 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.044769859 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.04268589 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.882754517 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.870958175 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.036747722 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.036592375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.03487276 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.034783609 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.034462637 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.035504895 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.035130534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.034646333 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.034476842 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.037046875 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.038487011 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.719742297 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.034651204 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.745115381 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.040559226 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.042685402 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.036273574 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.042227579 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.042037301 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.034276076 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.034411287 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.032158891 seconds)
  done (took 226.280144723 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.266741597 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.027407838 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.031119538 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.940583208 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.03047065 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.027940194 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.014273844 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.27184282 seconds)
  done (took 20.568088962 seconds)
done (took 638.677749512 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.408937769 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.242737783 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.213282299 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.058523669 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.344229133 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.098327251 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.052983011 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.117883737 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.878765699 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.129838242 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.68725289 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.069954556 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.778838024 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.083210023 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.176679275 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.112358946 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.585262362 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.694002548 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.189028999 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.145977726 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.236165797 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.990966262 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.134909873 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.912445068 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.698660307 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.029579799 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.07694505 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.599690902 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.066806389 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.209234536 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.74100811 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.332223562 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.059166244 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.041179084 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.104700634 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.080943714 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.26180608 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.050238425 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.165140698 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.773880752 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.138630393 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.778045337 seconds)
  done (took 109.505560172 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.024869011 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.023376699 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.023651168 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.02374857 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.031249466 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.021734625 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.022929746 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.023809246 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.022439403 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.021789599 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.022966738 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.030545268 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.025165163 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.035310427 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.023598619 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.023056091 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.024013665 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.032205247 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.022302666 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.022775394 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.024782902 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.023322764 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.018291432 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.025404109 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.024025031 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.024437714 seconds)
  done (took 54.601010367 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.018196806 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.183343451 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.26103978 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.039028994 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.018212501 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.020845906 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.036912567 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.023989555 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.021430599 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.020107108 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.121602888 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.025514935 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.03665802 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.26305816 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.036733728 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.017419665 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.018484819 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.018819929 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.192646213 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.035597795 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.039273532 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.025363106 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.038038842 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.035046557 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.024326019 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.021832885 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.023999677 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.470535001 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.029950736 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.122509951 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.066425594 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.044092872 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.404985098 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.273117133 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.076935526 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.025406838 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.020502045 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.128955443 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.026901187 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.022006835 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.039958874 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.028513072 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.26514711 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.548517369 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.034962606 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.019734488 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.479316604 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.138697735 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.062338262 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.030410887 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.269763757 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.036948906 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.02484268 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.022581055 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.05740168 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.032841176 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.022205056 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.330563636 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.035619625 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.042012079 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.023787951 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.021661726 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.204730139 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.029772277 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.187895886 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.032304329 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.027288085 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.02558055 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.269180998 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.042563028 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.567606716 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.036621807 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.023757765 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.123388183 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.19497973 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.503666616 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.033213283 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.205018166 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.426227471 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.046595634 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.029259277 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.45642195 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.050808121 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.030023905 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.022517821 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.022276298 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.023130009 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.066150952 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.038641821 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.468955085 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.55870258 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.345348134 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.048836811 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.033731252 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.024661706 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.33341132 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.031441922 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.021143181 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.259202193 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.569514896 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.041444256 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.031451126 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.544696475 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.039322774 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.043198363 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.031027683 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.276610089 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.042227054 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.067513515 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.025182029 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.030123628 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.02701628 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.042660089 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.032782285 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.023083537 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.530346092 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.147512518 seconds)
  done (took 250.237075033 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.024143209 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.022954163 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.025146993 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.023327179 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.022424593 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.024157815 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.024433161 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.023031201 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.024140743 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.023390349 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.02164644 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.021410454 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.023265244 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.024675301 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.535466668 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.028290299 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.626428683 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.027359941 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.026360508 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.026314808 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.707355447 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.033600453 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.025150763 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.025919843 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.026094107 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.027100296 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.033383709 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.072092197 seconds)
  done (took 172.506345001 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.028858787 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.208936201 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.045104074 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.060025173 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.036229245 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.029220111 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.171458511 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.050245174 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.032315272 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.029463734 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.027542623 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.08958641 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.039136885 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.127436028 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.062167923 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.134605991 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.132165892 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.036179786 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.030608432 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.028355305 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.056882384 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.041153307 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.091367283 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.155821859 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.0496755 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.143582979 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.051711341 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.029185174 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.02878463 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.141557153 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.048932565 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.087772993 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.060263147 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.049907636 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.146125674 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.145631088 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.13697729 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.13616635 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.040818862 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.030434764 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.029918367 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.032786441 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.141154659 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.049974772 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.031403765 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.145481681 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.050428001 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.033440376 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.028820982 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.029741593 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.042597518 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.046805682 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.097099352 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.163970825 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.064273212 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.055658237 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.128469746 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.157793477 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.031464133 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.129765389 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.044075452 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.145441214 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.052512556 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.034253847 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.033643337 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.03659047 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.061542235 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.143621226 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.137911334 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.040531648 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.129007344 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.070298529 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.042229627 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.033766366 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.032471591 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.144285015 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.148056218 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.069523181 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.070864172 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.063070553 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.043584472 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.033792934 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.03574725 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.048112261 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.037085064 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.144733753 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.151485385 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.042254785 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.029882991 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.035404654 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.033305245 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.057315536 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.153051745 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.069287678 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.14139094 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.100825408 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.107068326 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.04583964 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.04913435 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.038311584 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.09507057 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.045821637 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.046016903 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.324748005 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.091966386 seconds)
  done (took 220.057883672 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.435077667 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.091149925 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.088711954 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.350109425 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.405043841 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 4.037601508 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.081471253 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.093121983 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.112944142 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.310506433 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.156892444 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.107493715 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.068878057 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.051688262 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.084807207 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.115188766 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.094338517 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.41701233 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.285566672 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.63455731 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.072475833 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.35177301 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.399356397 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.651900528 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.129924802 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.493798334 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.701262753 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.253333009 seconds)
  done (took 68.045108279 seconds)
done (took 876.909552679 seconds)
SAVING RESULT...
DONE!
