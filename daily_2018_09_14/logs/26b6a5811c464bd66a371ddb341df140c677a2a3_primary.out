cset: moving following pidspec: 25927
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.361846422 seconds)
loading group "string"... done (took 0.511546286 seconds)
loading group "linalg"... done (took 8.152604236 seconds)
loading group "parallel"... done (took 0.178636062 seconds)
loading group "find"... done (took 1.323243195 seconds)
loading group "tuple"... done (took 2.027673428 seconds)
loading group "dates"... done (took 1.36642398 seconds)
loading group "micro"... done (took 0.250622424 seconds)
loading group "io"... done (took 0.688555761 seconds)
loading group "scalar"... done (took 43.002194412 seconds)
loading group "sparse"... done (took 12.873447982 seconds)
loading group "broadcast"... done (took 1.042043656 seconds)
loading group "union"... done (took 14.412950604 seconds)
loading group "simd"... done (took 4.917731992 seconds)
loading group "random"... done (took 9.941600626 seconds)
loading group "problem"... done (took 2.005668387 seconds)
loading group "array"... done (took 22.83445662 seconds)
loading group "misc"... done (took 1.460570213 seconds)
loading group "sort"... done (took 3.653167274 seconds)
loading group "collection"... done (took 19.889673869 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540825151 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124912169 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149013087 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.156119159 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203044428 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.139777315 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160969586 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.096588899 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.949892144 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.187384668 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.145575376 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.501125445 seconds)
done (took 5.085784009 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.219814879 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081372072 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095751358 seconds)
  done (took 0.848975026 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.090203992 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143746401 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091304166 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.076688605 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091948716 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076737828 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.075740766 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.091213433 seconds)
  done (took 1.321989378 seconds)
done (took 3.165762279 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.742441271 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.281026824 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204329455 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.51643976 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.18048954 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213112436 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672546633 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.331528521 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.244039532 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104116987 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.132958293 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.405613385 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134633391 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667471259 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08571203 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12601675 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.170923739 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432250832 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.091680683 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.092239259 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.114886265 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152203972 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.113661856 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.086555755 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.182908583 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.077843478 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.189175879 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108114035 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.075734876 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.28819275 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200178006 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684001509 seconds)
  done (took 10.812058641 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113510662 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13818976 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.0972991 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137295977 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139055029 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081569152 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099420662 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078555058 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123496598 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180788801 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13531465 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142393899 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075231052 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080993154 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117612824 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249363685 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104719863 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120016073 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.082418957 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105820887 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137238384 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096304913 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10894953 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090529609 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168358542 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.216538992 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107844319 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122297491 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092983389 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095088867 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143430765 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156509394 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076965279 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09488823 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176767601 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105586297 seconds)
  done (took 5.08549058 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.108493805 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193130444 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.10228487 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.172313654 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.164204104 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143412227 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.169200863 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096922901 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.263227803 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.141430495 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179670406 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126476681 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109683337 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079228835 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.100425686 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.122763678 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076608415 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.774738874 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.12489516 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.156080847 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116099377 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081802237 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100012247 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.37167839 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08362186 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.076350472 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104620176 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.070603153 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16055901 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09975585 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.196717852 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121358516 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079724657 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13531247 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194826873 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123118511 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137354425 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079617104 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.075060503 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179191459 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102553186 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07723238 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125274605 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.074934774 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134999537 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135481574 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.091401055 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07842984 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.214593247 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.092417591 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.093194412 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.039515021 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.176306877 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090162658 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075470043 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.340837311 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116930576 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077761361 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094830654 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.309067884 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.111899721 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09662926 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077451855 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10167094 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079622769 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385022866 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093509993 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.77205811 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079902306 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.087625988 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095710342 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094253449 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08656284 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103541678 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097915197 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095262402 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079618997 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077279105 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094279708 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.078701005 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11607388 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100757004 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07836889 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15811859 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.07784728 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097381064 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126499747 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097008885 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076636629 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129901187 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079040689 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.093111428 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136117722 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07850121 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116068284 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.076143732 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094850624 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.138589867 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079167117 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.184074429 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.077770493 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12400036 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.082331332 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126648663 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109155125 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079606899 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101466562 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075822295 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093117712 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146059841 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091361414 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078809919 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.096571528 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092106677 seconds)
  done (took 22.693025396 seconds)
done (took 39.26434228 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.359386394 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109721869 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110047913 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.11029628 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.108333627 seconds)
  done (took 1.549165394 seconds)
done (took 2.279804603 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.291312084 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.178526565 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09286549 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.17271338 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074744694 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.181671281 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.180448244 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093353769 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.2067165 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.074654438 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.168653763 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091832012 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074802541 seconds)
  done (took 2.634109533 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091682947 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11510284 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081489201 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.092876371 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092379899 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093167737 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108839926 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099605171 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109292716 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082396181 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093154659 seconds)
  done (took 1.786619818 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090539599 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113126773 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081210175 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09196192 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091369326 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091949713 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109015117 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098630263 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10976053 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083972634 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091886962 seconds)
  done (took 1.774390397 seconds)
done (took 6.913719208 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092225146 seconds)
  done (took 0.808976381 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.045104512 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.998698955 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119078187 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.169230147 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343728501 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.216371952 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.607911385 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.134547752 seconds)
  done (took 15.558954515 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.111825739 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.114012565 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081077501 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101095601 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.079199764 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099933782 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.082888255 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09547927 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.081528076 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09544111 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.079061702 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.097885792 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081606558 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095181575 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.080194259 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.079689488 seconds)
  done (took 2.244388288 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.115360695 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11627959 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102435448 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087838231 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.101532608 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.083206077 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104225805 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100728525 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083152078 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099931308 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088380539 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102329171 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086087918 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098636982 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.085868567 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.104937883 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.083572078 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10253974 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.086460797 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.103687352 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103600668 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.084150508 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.101628456 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.088325248 seconds)
  done (took 3.151687735 seconds)
done (took 22.485971145 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151019889 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084302982 seconds)
  done (took 0.964441588 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098450915 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116456501 seconds)
  done (took 0.952180244 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.104620573 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094888751 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133903086 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.097303279 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.097284714 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079695069 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.129234931 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097131067 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080870821 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096992156 seconds)
  done (took 1.748663218 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082920202 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.0995077 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089375567 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116696022 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.090652605 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098935574 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085233013 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100773624 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.086858666 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09506646 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.088321676 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115135032 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.103658375 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.09889793 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101869924 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.102579433 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090417197 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101515694 seconds)
  done (took 2.484510728 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078743644 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080214379 seconds)
  done (took 0.894493968 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082378848 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093236617 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083100587 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097962494 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078697602 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094441632 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078808079 seconds)
  done (took 1.346982018 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.492029665 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.14192105 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.269847848 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.082956371 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121411629 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.31873142 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.095732362 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083145027 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102044133 seconds)
  done (took 2.504793418 seconds)
done (took 11.632650274 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.089148033 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114078973 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113555734 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.473149766 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.115896376 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.078384434 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158509526 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.260126327 seconds)
done (took 2.142415164 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.146922389 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338517435 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.122902693 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086060429 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079580032 seconds)
  done (took 1.373444657 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076493357 seconds)
    (2/2) benchmarking "read"...
    done (took 0.080057783 seconds)
  done (took 0.901945972 seconds)
done (took 3.167092534 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076406609 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.129275674 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077410991 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.093665845 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.078319246 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.077484777 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.093769112 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075170227 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095357107 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.077752845 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.077311688 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.094596646 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077943503 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091685682 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076742884 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093575599 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.075202762 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.074768135 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09175577 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075944412 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094088082 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.075028336 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.074936014 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091625425 seconds)
  done (took 2.815547045 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105770563 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096357118 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.085349643 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100607132 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082627123 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100722754 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.084057103 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095207419 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.099989735 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.080738962 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098861605 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.0829906 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.095961416 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082444892 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096632609 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.08208278 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.10114223 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079053804 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097063815 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08262034 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.0995798 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079014072 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099034154 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083849762 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.098465821 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082899902 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097758383 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.0787354 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10109141 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099171322 seconds)
  done (took 3.498135021 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081771941 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073904746 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092822902 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.082109954 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09211951 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080416451 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.091902726 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076388241 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077036818 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09253588 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077773374 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09223267 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075921126 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09368298 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077396424 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.078634521 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10626027 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.075465929 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.092130492 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076819213 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.095860888 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076090675 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078149155 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.09292151 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.075580267 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.091986811 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.075687046 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.091960637 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077106805 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.075759689 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.095522254 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.079543287 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09206397 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.082452601 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095098591 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.186888017 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.079537096 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092258276 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.076447851 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091318406 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.075882039 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.075248677 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092231721 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.082599054 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.096249505 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.078111643 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092834927 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.077593198 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076051773 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096399499 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.075282462 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.0919677 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.077460884 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093571029 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080417094 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.091615447 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077244721 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07552264 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093129425 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07568706 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.091856599 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075875882 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094493853 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077130043 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.091600473 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.099888198 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075960094 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095050786 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.080545794 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094839176 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.077999533 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106884306 seconds)
  done (took 6.974933854 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079045163 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102565231 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079124127 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.077888155 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091969678 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076969436 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096955836 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07624255 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095045503 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095243183 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093955463 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078412865 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095133398 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080887027 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093238623 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.078990823 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103430508 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074156152 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093404346 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080392024 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093180885 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080817052 seconds)
  done (took 2.671084252 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214439528 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103840852 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139878966 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094293516 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113619874 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111240068 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083970239 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102386127 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084655836 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104293214 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086757367 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10010805 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113506457 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087223364 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10309217 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08828582 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099962298 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088128914 seconds)
  done (took 2.678220669 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091897193 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095273934 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102109812 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097125239 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079493307 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09906892 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08625155 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112390344 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082115091 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096393465 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089212944 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099183036 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.081419022 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096443012 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081761362 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096903755 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.082223112 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096207725 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08961218 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103015942 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10192209 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090727511 seconds)
  done (took 2.812601156 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09493651 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096935934 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100074657 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100400979 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077710103 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097589003 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086072895 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096915168 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088197002 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097516319 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079242769 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096744527 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086692627 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096413148 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.085731768 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096706874 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081615158 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09693028 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082886387 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095071028 seconds)
  done (took 2.596567129 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11782856 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111570525 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094403714 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121846122 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094339264 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111400168 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122091953 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095261756 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111844702 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107756401 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111978657 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110990601 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105953934 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118037718 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094478049 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121308995 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122037598 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104183381 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111433073 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094992912 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125337834 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111728604 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105133181 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11143283 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094212559 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11179075 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094363618 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118694449 seconds)
  done (took 3.816822126 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077386225 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077691891 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093513562 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076099713 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094072193 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.076678219 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.076684209 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094111419 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078737842 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093601926 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079048828 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096159208 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079456446 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078393982 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096467573 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.079207539 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095491482 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.076964432 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078834727 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093602061 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.079336292 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095698372 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.079260473 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092811954 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076785509 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.078787602 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09350344 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077159466 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096061089 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076699855 seconds)
  done (took 3.305493419 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08801688 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104573534 seconds)
  done (took 0.962402594 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076067766 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112246457 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076850419 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082205538 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103224113 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.079136912 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107007686 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101904287 seconds)
  done (took 1.504568094 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095619098 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115449655 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086133934 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.1090599 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09784912 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113997463 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158074066 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086205336 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.085701649 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.095622777 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.096833457 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095870701 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.085242625 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097896092 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.08568131 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103340984 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080325847 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108230781 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086953793 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098986422 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086403945 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108795411 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082587955 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.093331917 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.081585645 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108073411 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.090120073 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.099103589 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083343239 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107623257 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086786689 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.073738152 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101628519 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085826757 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.098329125 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097500915 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111344013 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083585695 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107077458 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085885553 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107070448 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078757763 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.103304272 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.085810421 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108167426 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.088275282 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10379998 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078190595 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095216414 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08302777 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096178784 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080117603 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.074840319 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104409235 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.084483589 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111173155 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082570109 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.098740302 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083211257 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.100596226 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086907194 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.099722987 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.081673635 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100668788 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087882501 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.101380007 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088508581 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095723023 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.074412651 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08106186 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106756987 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120951373 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090101614 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102590834 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087935924 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09846167 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083978842 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102931862 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088046406 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106896146 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08556405 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104789502 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088874472 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097265104 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083458063 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.088225393 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100856423 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083442686 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.095473209 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096274007 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101051365 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081694404 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.095626062 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090173645 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.101835442 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.085037707 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.095187961 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088948163 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074120212 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103009484 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085961182 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098749286 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.089843689 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103359025 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087001463 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.105522457 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092060446 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0979074 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084044609 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09454905 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086465167 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100639991 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.087585154 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092135458 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084252871 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099414249 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085980048 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105095412 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083224232 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085287512 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106362124 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088072821 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.10071159 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077482161 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101429153 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084560045 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107247887 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.087619143 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100513122 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079217126 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096425054 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085011443 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102609247 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086221519 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103662199 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085501236 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074231384 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099457109 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085427737 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10751786 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.0808438 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.09885641 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.085466479 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.099708807 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08451739 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.103921714 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.083583149 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.096974662 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.085918687 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.099479357 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079699322 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107888685 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084030448 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083084985 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102233271 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089662954 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101016821 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085801143 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100995198 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085332445 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104393661 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08019527 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09777502 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083250253 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108773427 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.083139917 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097385809 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.078337317 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.087215355 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.095998748 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084461091 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097171977 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08307357 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104312881 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081953612 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101464019 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.082778662 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114275386 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094343428 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104054747 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087025573 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.108362533 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084873442 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.100892636 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085030655 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104109861 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.08619637 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.087637808 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104749022 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085407466 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10133274 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076644476 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105317256 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088882258 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097794645 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081286926 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097598823 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085529714 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106182008 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08627655 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103386606 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083829871 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080754759 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107764312 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.083495078 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102279136 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080149966 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.103411131 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080384047 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10528334 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087138769 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.109321426 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084454971 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096813037 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08957267 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100707576 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.08706675 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097241701 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.078385098 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.079157287 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10502329 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083371266 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102277369 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.074601589 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106639636 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089212946 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.098179813 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080335455 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103389992 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090330635 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100052026 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085411508 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084344986 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105204993 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113502913 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080375307 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.083415657 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109457445 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085598192 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093337715 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087886698 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10132227 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.080211318 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101905024 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082825622 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10264138 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088669434 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104097222 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075163757 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10113814 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08352178 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080086285 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098258701 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08804644 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103214151 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083719113 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108146058 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087178313 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105275435 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085212802 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103277943 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087018147 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105699308 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08482585 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10432511 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084447334 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.098322026 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.083992982 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080000564 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101047208 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.083153388 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.104231676 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.080959507 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105776057 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084622971 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099871118 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086892984 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104758444 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082165281 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100330187 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08138812 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084108425 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100350974 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081369282 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102018654 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080221574 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107157152 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085469078 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108172392 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.081616356 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095864413 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08674072 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.101837718 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087256408 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086386493 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106010861 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.082832907 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103840701 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084351737 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108944846 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.079208883 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11013133 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087446255 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100639976 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084927951 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.099297436 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084175098 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098634327 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083194003 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104301086 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.081784163 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086204728 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104868904 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084249336 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09970838 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083015972 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.1049652 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081119416 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105455256 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.075995725 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.098647566 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081303809 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085649127 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107600625 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086465241 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102848096 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083329571 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105588444 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084043412 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097084522 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089979539 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107093898 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086740163 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109201911 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.080632841 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.100773725 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091977722 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094034442 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083975244 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082081741 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.097363887 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097796195 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105203823 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.089868011 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.099682753 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080807237 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097502076 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087473357 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102368455 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076106613 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081868593 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104224275 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084434226 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103093579 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086949843 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103033479 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087327111 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107600886 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085089728 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.101638161 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086744748 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096833443 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080742549 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080226564 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103768118 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087414087 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.097774224 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079332869 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104019347 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08435163 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101417566 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086052653 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101526303 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090331657 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085439997 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104008851 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090291553 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095379537 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085658251 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103791553 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085540757 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099048555 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08596174 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103887635 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087566935 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108093615 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085761817 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100321166 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08627827 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100621228 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086480285 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085492507 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105091335 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.080679355 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106283471 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090857954 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100943111 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.083757649 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100046443 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082519336 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105626831 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087865846 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102761512 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090007252 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103876558 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084470706 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08842865 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106074858 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085395178 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106531647 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084591929 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106887867 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081043276 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.10900027 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082189144 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106289957 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083553959 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.098087805 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086235678 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104194782 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085314257 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105153576 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088450959 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081375933 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.09974098 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083698792 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103726029 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091049969 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108465505 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084784045 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103827856 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081423126 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097273574 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088098786 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.097952158 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084397292 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.084373416 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107391773 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08444818 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101702142 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084806886 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108256248 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088682706 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105742016 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079970567 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106029357 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087406093 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103820205 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08342886 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.10114387 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088007968 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.10627725 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084666058 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081381654 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110199827 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086944922 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10691077 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084232628 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102058749 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082648158 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099582624 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089013834 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103723488 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089048203 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103152153 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086919551 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111425998 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081892536 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100166557 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092090048 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104091974 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089373689 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098722136 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083624371 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087524318 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108527533 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080984443 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100263456 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08025278 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.103985812 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082227911 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099335132 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09288484 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108316261 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085928423 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102759699 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085731398 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080171701 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100083785 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081673381 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107431869 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08396865 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111047598 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081358891 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100397998 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080969075 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1055137 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086818394 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085526701 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098348887 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080601141 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.099671999 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.084262678 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108579932 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085249702 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105034129 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086229173 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10416805 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083911541 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110434231 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079001984 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086025088 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114033679 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105666996 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08374813 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089210918 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110314549 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087446445 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100152821 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088267171 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104542174 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08339903 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.107836916 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088154382 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116893336 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086218802 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100787303 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086036904 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104279477 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08251733 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109595612 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088658847 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106728832 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088416878 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.102788171 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089791496 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103482843 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089193846 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08457087 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104081321 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085764178 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101446913 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084289352 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100528135 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088838409 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107317902 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08627022 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109162856 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081681051 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112326809 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091117678 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106309767 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080537471 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081606038 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101394349 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082598128 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107312411 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081253944 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103547273 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085057923 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104477945 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.0844128 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088609075 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104916516 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088363515 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105832631 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077015894 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.10301697 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085706318 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101668934 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.07992068 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104822107 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089014855 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088769385 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111694687 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083331543 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105890754 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084342788 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10267466 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08149517 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.10836543 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085537988 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.104479124 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082375949 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105590938 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089132133 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086281282 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108344582 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088856966 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105680819 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.091783329 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108643925 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080330212 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099439446 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089823833 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.104213118 seconds)
  done (took 56.583304452 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146406484 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088654612 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078418917 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097507332 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12472003 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083281348 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097483158 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083385197 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102038915 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09368951 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097857738 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078265775 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120122949 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128151497 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123038209 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094324866 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097688134 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083063035 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097088648 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083335791 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11935087 seconds)
  done (took 2.933283133 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10308598 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116924049 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115279322 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100564613 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110435105 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115324569 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09518817 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116861551 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120060947 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092016236 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.12099166 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1163965 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09142748 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111205789 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090983146 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112886828 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120832677 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090239335 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117343542 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115039759 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093807295 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115498208 seconds)
  done (took 3.198745298 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09020173 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086266379 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106482415 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.07790004 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105913901 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.07809698 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.110980178 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.080986364 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.110919334 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.082130446 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081425275 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100564619 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08725344 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.09756704 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.082079748 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.099637606 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.156528176 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091101576 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106746303 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087890085 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.099659335 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085197389 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.080584657 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.101188739 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.081224889 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.115730053 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088384191 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.106544548 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086408058 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.100345763 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087561222 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080250999 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103532857 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.083073877 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.101675019 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.08218501 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.105145133 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086719673 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080381303 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.104153991 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083354501 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.102545016 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08847637 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103174261 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084076025 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100468634 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085029902 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086248439 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09850094 seconds)
  done (took 5.433707846 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114126401 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.137329602 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.107393358 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.148116337 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122391197 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09718512 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.109359694 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.147345322 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.081469363 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.106690379 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.10388073 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123194992 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108981776 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093370971 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108010332 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087446954 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109476686 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082841843 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.112324948 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08258514 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.113587109 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111333755 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101297759 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11929165 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111818076 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086236434 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103217817 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.093851402 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.118212407 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.113965111 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.092920475 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114812831 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.1227004 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.089216063 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102587528 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089274236 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124186778 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087500337 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10991288 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.080999375 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.109886625 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111849411 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090996822 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123905678 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087823608 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109526819 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086468233 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10118461 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119693862 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089805444 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117873072 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120998305 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092322932 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107540001 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092516911 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122327753 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.107009862 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085971476 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.110192236 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099520683 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101567398 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091006455 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120395192 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109059099 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096332655 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121414377 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109346836 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092443673 seconds)
  done (took 8.170907868 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115612555 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112972798 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103606565 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122793323 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112358454 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.093025695 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112324841 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092055655 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113142793 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119211229 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093063129 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.158941068 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.109829327 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098296685 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112690918 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091671049 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113206532 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091659801 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112297432 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091694388 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113408327 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123362893 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091338832 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123560148 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125942736 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089222941 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113208406 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092986762 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124269677 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112656535 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126280758 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092543755 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113923669 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102900898 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125784196 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112906029 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087065934 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112507307 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091951125 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112328516 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088849958 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123753452 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112626011 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089725907 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112413135 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092116986 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.124530982 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126598622 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097827367 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119648214 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112339433 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103734161 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112721683 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113439858 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103470181 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.131765655 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124657144 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123683642 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092982843 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124615575 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123149782 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.110086364 seconds)
  done (took 7.657852553 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116745675 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.119012378 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.126641577 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.079554152 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103153236 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092435251 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103273571 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082031908 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119204662 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099325906 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121988274 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113399983 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095883916 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121295547 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113263599 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096187019 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114511463 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113072895 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098175564 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113089929 seconds)
  done (took 2.980259545 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092565906 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125922244 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085904771 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113497616 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087941166 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113781408 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087129694 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109178864 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085748646 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109940528 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097971101 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118416019 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106522581 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09336549 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118626315 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.091968334 seconds)
  done (took 2.475320166 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098173187 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.127414109 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.126629991 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08472864 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104302502 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082236156 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087232224 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102203606 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080935563 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122836114 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085003492 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112455049 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087287848 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.104718929 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.081004285 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.112215515 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.080643981 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.10412375 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087552385 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125924593 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09622763 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107179394 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088328413 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108441418 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105077119 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092023677 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106444944 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.082772857 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.104257611 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.088223058 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105732549 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.093564696 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102260811 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083520781 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104233684 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082387744 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086985247 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109314903 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111567949 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088546911 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082601438 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105621231 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087356922 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107730501 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080269908 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109180894 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080395651 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112636174 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.082637287 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106044655 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.08776339 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109529845 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085765295 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118163346 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088889951 seconds)
  done (took 6.229685523 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099883426 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110745376 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080433322 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08183495 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10965573 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.087503811 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110743617 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087354626 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107911979 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082174373 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108528348 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090149202 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108912304 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088992303 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109412803 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089527568 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101418314 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086520815 seconds)
  done (took 2.586633417 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091299135 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.085434376 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.114657366 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085465265 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.106865964 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.087359971 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103202851 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.082961821 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104660648 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085172063 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105898856 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088397469 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10445554 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088517607 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084927738 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107538142 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.088149218 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104665131 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085689051 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102734451 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088104464 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104598756 seconds)
  done (took 2.947026828 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.12296762 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126830868 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093415875 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.218106692 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.127063043 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.110976207 seconds)
  done (took 1.643534176 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110586853 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143611294 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086280294 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109916241 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098891488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111413345 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08985083 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111408288 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1236112 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124846305 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090529995 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122343221 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102517984 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121830084 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119352858 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097908103 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111577459 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11162827 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087513817 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132945478 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091137838 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12404123 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111548992 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090523635 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111583345 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100738161 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123395743 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125616199 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090045037 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123545078 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119438801 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090375831 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123940082 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125836094 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087517096 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123698191 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111560637 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111239546 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11929306 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122587531 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088342207 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119886875 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101897956 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1196765 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123927833 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090175551 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118663184 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111738154 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090926568 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139742158 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120009161 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101557091 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120100515 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123540502 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102609739 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141158012 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124563203 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12260307 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118569001 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104879473 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122317641 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120015233 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100795773 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125213045 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120067696 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123079196 seconds)
  done (took 8.278012873 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126755268 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109315927 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090113417 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12634695 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123433871 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090436749 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112206143 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112410594 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091383191 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109121674 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158902757 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092257362 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122971012 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122517909 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091521802 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1118948 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091110496 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122793869 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087251818 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140472023 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112229287 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122637488 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100857616 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123536772 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126326981 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119388564 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09155033 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112653533 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091013053 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11293964 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097130452 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112380313 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122777184 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08778712 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12307529 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090812275 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112067203 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118976029 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091034761 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120364631 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12316676 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112845485 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112802094 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090781759 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126766724 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112056266 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090805242 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109148135 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090770712 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10941258 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125149716 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105042635 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126435384 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123544631 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11215394 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091887977 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11272355 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091047852 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111928055 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099052914 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123815476 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112173941 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140079749 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09100996 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112304397 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101872404 seconds)
  done (took 8.126108689 seconds)
done (took 153.626183826 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102338058 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141991657 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100160622 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171098167 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08271442 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141550353 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11517006 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.118074199 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087477361 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08660175 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108437166 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088013858 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.175524415 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.081795109 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10564086 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.089733889 seconds)
  done (took 2.635810779 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.179676034 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.301566215 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104184303 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106827562 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090757374 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108942427 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084710901 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.094369743 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110020226 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085973528 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109322858 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086878119 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.10689078 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087437882 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109193676 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.086612514 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.085326579 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.108651617 seconds)
  done (took 2.906438139 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115186063 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147467131 seconds)
  done (took 1.117765219 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122325787 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181325727 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279687988 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157762177 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.139533238 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.101696361 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159572379 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129676847 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.208596678 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13347315 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.131237832 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.093929016 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142683113 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096550488 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116899407 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.093050849 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144627105 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115533192 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095135614 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117481707 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119446449 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107818301 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095884557 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115712926 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.19260054 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13036011 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086110721 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084951014 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11739078 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116608764 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.093470714 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.122666659 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.107950484 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175639249 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100075497 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.155454351 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.116170237 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092402503 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117276594 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092553781 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119684576 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118381986 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101964217 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.116028162 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086323636 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.116009569 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089211703 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085380625 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116530488 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.095670237 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117232529 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114793878 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154282883 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097194811 seconds)
  done (took 7.483002444 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.823036694 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156051234 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092212567 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.929963743 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141301905 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105885977 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.815643372 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134686112 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236083812 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.807938178 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126262405 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121837463 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.213347224 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255520219 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.938373538 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313212702 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.706807167 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.345101094 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.140423674 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1528979 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098779043 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140795407 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133403544 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.410716442 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11608295 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091998865 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119975078 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123076271 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165332769 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.09261415 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117552617 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182493423 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247540078 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205609078 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092424246 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114121622 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090722327 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169560354 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.281230272 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.225052951 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.156920373 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109798552 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090572448 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124636384 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133864476 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088597119 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165708182 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175583042 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.196575129 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094535041 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123736967 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099883241 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124170385 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165267099 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.088922698 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.322194231 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.324650562 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115094173 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099595441 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129962535 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.247228806 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113730426 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231628977 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117801832 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.22182995 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091072029 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804011808 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168337919 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114088754 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097096302 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120820429 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09593464 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12254227 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168183293 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392436261 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104228629 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117027604 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090339562 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233922287 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091588647 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113366817 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167745784 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092446471 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120954586 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10390093 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12482816 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172682206 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230324538 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125140729 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121958163 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094723449 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126353434 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.091491399 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215166809 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226351467 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.1630887 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.21381613 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125050816 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16653356 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167370953 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122403429 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172445845 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120738536 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105452221 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12401091 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223247849 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145082696 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091229724 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118328879 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097699263 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147264426 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093684554 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121052246 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170067978 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.489352065 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167725538 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087680545 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117829094 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099082173 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165026453 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120966471 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.244690801 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123001743 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16780965 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121139043 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08769996 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12084501 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16666299 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125225278 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098553089 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125171579 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09800851 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.252669361 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203403728 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125922892 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225402369 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182779137 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120053943 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17466126 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1223248 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170509838 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100639511 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124038112 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092680844 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.791870786 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12316932 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096236714 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117827972 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187756885 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089941398 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089202851 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113671462 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088230534 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782921716 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093717286 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112960245 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.092515996 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12105899 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097863977 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120661457 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094929615 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18701336 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214462689 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123329265 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12112034 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.092208265 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.165331177 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116362705 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.091950877 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.115841544 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.092748148 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122912058 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095032249 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.1163243 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.175097103 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163137465 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228395023 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.578219249 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11533524 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092475764 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235696112 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09166314 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295939484 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123287491 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.209147589 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.192888441 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089185807 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316656799 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.172422008 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189827011 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094554775 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174659953 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112296243 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097362192 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.187967661 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091437063 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120513484 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162338292 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105179258 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126803556 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.927745236 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086089865 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222723502 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.107247982 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172828063 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093354325 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123791247 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.302251142 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092327545 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132572848 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165906929 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117234737 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.092727383 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.736038467 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114032168 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102157805 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121670501 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23045461 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.170726681 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122275182 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099423418 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125061578 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.166705167 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212979893 seconds)
  done (took 44.009735266 seconds)
done (took 59.005485686 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.283801252 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217416224 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.265180582 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172309208 seconds)
  done (took 1.899176772 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.18291355 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.127927802 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.148928472 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108127598 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.162009297 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085963889 seconds)
  done (took 1.698305698 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.376232526 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.288357347 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.247954693 seconds)
  done (took 1.804120617 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251681765 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.275328234 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.333161608 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.41118667 seconds)
  done (took 2.268778765 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211023638 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129082764 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.101997014 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.142313152 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.149559895 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.21338914 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.146183414 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.157463295 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.111028447 seconds)
  done (took 2.29932104 seconds)
done (took 10.858227746 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.253190748 seconds)
    (2/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.265656873 seconds)
    (3/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.17648118 seconds)
    (4/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.178714649 seconds)
    (5/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110160413 seconds)
    (6/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116671868 seconds)
    (7/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.236692357 seconds)
    (8/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.158172776 seconds)
    (9/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.13285404 seconds)
    (10/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.099229216 seconds)
    (11/286) benchmarking ("sort", BigInt, false)...
    done (took 0.255618782 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107765108 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124965228 seconds)
    (14/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.190518688 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119246181 seconds)
    (16/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.110052643 seconds)
    (17/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.221443623 seconds)
    (18/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.231104434 seconds)
    (19/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.231165512 seconds)
    (20/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.126796918 seconds)
    (21/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.19496137 seconds)
    (22/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.176837594 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.222927416 seconds)
    (24/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.131457564 seconds)
    (25/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.240359796 seconds)
    (26/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.120069821 seconds)
    (27/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.237217178 seconds)
    (28/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077260657 seconds)
    (29/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.124492445 seconds)
    (30/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.096605279 seconds)
    (31/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119135785 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.114567364 seconds)
    (33/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.157496479 seconds)
    (34/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.224048874 seconds)
    (35/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.11695983 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 0.233917226 seconds)
    (37/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.204986305 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.121933942 seconds)
    (39/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.183010279 seconds)
    (40/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.122818977 seconds)
    (41/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.182836507 seconds)
    (42/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.143295979 seconds)
    (43/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.118090706 seconds)
    (44/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.17725552 seconds)
    (45/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.14667509 seconds)
    (46/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.217327428 seconds)
    (47/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.206029622 seconds)
    (48/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.101970281 seconds)
    (49/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.112810703 seconds)
    (50/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.207050345 seconds)
    (51/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095142457 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.138442642 seconds)
    (53/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102461223 seconds)
    (54/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.206802813 seconds)
    (55/286) benchmarking ("sort", Int8, true)...
    done (took 0.23460889 seconds)
    (56/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.166608573 seconds)
    (57/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.202382165 seconds)
    (58/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10390812 seconds)
    (59/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118492164 seconds)
    (60/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.096072211 seconds)
    (61/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095619619 seconds)
    (62/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113781124 seconds)
    (63/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.190943726 seconds)
    (64/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097756009 seconds)
    (65/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.182905633 seconds)
    (66/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.097433813 seconds)
    (67/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110126268 seconds)
    (68/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.188013696 seconds)
    (69/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.074634398 seconds)
    (70/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.161416685 seconds)
    (71/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.119686408 seconds)
    (72/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124438484 seconds)
    (73/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.155596667 seconds)
    (74/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107043424 seconds)
    (75/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096066138 seconds)
    (76/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.20983332 seconds)
    (77/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.198236043 seconds)
    (78/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088939991 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.111981132 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087597605 seconds)
    (81/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.080608035 seconds)
    (82/286) benchmarking ("sort", Float32, true)...
    done (took 0.244340509 seconds)
    (83/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11287769 seconds)
    (84/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.101157921 seconds)
    (85/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.113321247 seconds)
    (86/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.075331725 seconds)
    (87/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.075191519 seconds)
    (88/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.192388226 seconds)
    (89/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.125303032 seconds)
    (90/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.100547986 seconds)
    (91/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.163010884 seconds)
    (92/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.071259057 seconds)
    (93/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.178502794 seconds)
    (94/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.085349625 seconds)
    (95/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116966393 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086774168 seconds)
    (97/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.119419745 seconds)
    (98/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.14548193 seconds)
    (99/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126973103 seconds)
    (100/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.193296061 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.111319494 seconds)
    (102/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.15286507 seconds)
    (103/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094731561 seconds)
    (104/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.118107962 seconds)
    (105/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.136638326 seconds)
    (106/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.129048828 seconds)
    (107/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.143739819 seconds)
    (108/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.07483068 seconds)
    (109/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.174408087 seconds)
    (110/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096517928 seconds)
    (111/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.134369151 seconds)
    (112/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091141065 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 0.189758665 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.122097004 seconds)
    (115/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.075967386 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111927263 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094987799 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121710359 seconds)
    (119/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.131279879 seconds)
    (120/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.234880686 seconds)
    (121/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112891247 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086135371 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.134183004 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089387067 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.082653653 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.1295248 seconds)
    (127/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.07039886 seconds)
    (128/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.105797168 seconds)
    (129/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.174178924 seconds)
    (130/286) benchmarking ("sort", Float64, false)...
    done (took 0.153482675 seconds)
    (131/286) benchmarking ("sort", Int8, false)...
    done (took 0.193944101 seconds)
    (132/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.13081367 seconds)
    (133/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093822055 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117391466 seconds)
    (135/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.083561154 seconds)
    (136/286) benchmarking ("sort", Float32, false)...
    done (took 0.180502083 seconds)
    (137/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115843549 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088009866 seconds)
    (139/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.21357163 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094329903 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.107691888 seconds)
    (142/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.212228463 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087195214 seconds)
    (144/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.08951785 seconds)
    (145/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.163541899 seconds)
    (146/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.175472751 seconds)
    (147/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.070232993 seconds)
    (148/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.114113544 seconds)
    (149/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.072773449 seconds)
    (150/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.08389928 seconds)
    (151/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092711049 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.093964971 seconds)
    (153/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.114467656 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.083941658 seconds)
    (155/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.107066569 seconds)
    (156/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.090651141 seconds)
    (157/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.081600013 seconds)
    (158/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.110846553 seconds)
    (159/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09435721 seconds)
    (160/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.094732597 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.092709264 seconds)
    (162/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.095227894 seconds)
    (163/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.160578868 seconds)
    (164/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.09426299 seconds)
    (165/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.085286729 seconds)
    (166/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.139698221 seconds)
    (167/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.084976288 seconds)
    (168/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.078572829 seconds)
    (169/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.12047234 seconds)
    (170/286) benchmarking ("sort", BigInt, true)...
    done (took 0.251484904 seconds)
    (171/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.083927624 seconds)
    (172/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.100541938 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094799352 seconds)
    (174/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103970857 seconds)
    (175/286) benchmarking ("sort", Float64, true)...
    done (took 0.244315136 seconds)
    (176/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.114592983 seconds)
    (177/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.077142775 seconds)
    (178/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.164230961 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100182994 seconds)
    (180/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113164702 seconds)
    (181/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088162716 seconds)
    (182/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118555932 seconds)
    (183/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159945327 seconds)
    (184/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.100481369 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.236080032 seconds)
    (186/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.089599068 seconds)
    (187/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.076770097 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110649115 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087829337 seconds)
    (190/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.197575808 seconds)
    (191/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.075467774 seconds)
    (192/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.101546117 seconds)
    (193/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097874376 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121591059 seconds)
    (195/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.078165678 seconds)
    (196/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.076990029 seconds)
    (197/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.100438937 seconds)
    (198/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.088969388 seconds)
    (199/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.131969627 seconds)
    (200/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.109876459 seconds)
    (201/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.110031434 seconds)
    (202/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.094211469 seconds)
    (203/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.114008216 seconds)
    (204/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.193227438 seconds)
    (205/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093981803 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.086017349 seconds)
    (207/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.099873991 seconds)
    (208/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.189304968 seconds)
    (209/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097269411 seconds)
    (210/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111676784 seconds)
    (211/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089185285 seconds)
    (212/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.163068612 seconds)
    (213/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.150058393 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108982111 seconds)
    (215/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.07529183 seconds)
    (216/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.07828373 seconds)
    (217/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.116078181 seconds)
    (218/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.075986715 seconds)
    (219/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.134580957 seconds)
    (220/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.070641889 seconds)
    (221/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.177363886 seconds)
    (222/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.081514275 seconds)
    (223/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.119195536 seconds)
    (224/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.071593534 seconds)
    (225/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.119720656 seconds)
    (226/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101686519 seconds)
    (227/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.075486918 seconds)
    (228/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.179976189 seconds)
    (229/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.10028276 seconds)
    (230/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.077258991 seconds)
    (231/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.086513046 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.217487364 seconds)
    (233/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114144956 seconds)
    (234/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.076393738 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087892665 seconds)
    (236/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.112330368 seconds)
    (237/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.252023066 seconds)
    (238/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.078934964 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.120238238 seconds)
    (240/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.085370956 seconds)
    (241/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094176142 seconds)
    (242/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.101230265 seconds)
    (243/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.089967788 seconds)
    (244/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.102224053 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099017573 seconds)
    (246/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135750479 seconds)
    (247/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.115952446 seconds)
    (248/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.109526238 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.083867945 seconds)
    (250/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.074495291 seconds)
    (251/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095659494 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.082736573 seconds)
    (253/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.095852511 seconds)
    (254/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085695407 seconds)
    (255/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.085136543 seconds)
    (256/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.105324333 seconds)
    (257/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.07571995 seconds)
    (258/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.074614918 seconds)
    (259/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.10929917 seconds)
    (260/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.089405442 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120900091 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087212598 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.110952139 seconds)
    (264/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.114825441 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118641366 seconds)
    (266/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.079038868 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088614645 seconds)
    (268/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.114487494 seconds)
    (269/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.077011252 seconds)
    (270/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.110007276 seconds)
    (271/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.087698588 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.087754762 seconds)
    (273/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.10126141 seconds)
    (274/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.090790096 seconds)
    (275/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13967813 seconds)
    (276/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.078629718 seconds)
    (277/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.097526529 seconds)
    (278/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.072664737 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08292392 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.106029099 seconds)
    (281/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.085786106 seconds)
    (282/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.096035099 seconds)
    (283/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.070689719 seconds)
    (284/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.074032702 seconds)
    (285/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.096829271 seconds)
    (286/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.082753852 seconds)
  done (took 36.919188202 seconds)
done (took 37.819651241 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100844707 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148912165 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094044332 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135869364 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.100492442 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.123267383 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.093353891 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.119098537 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.096665163 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.121972745 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.094586375 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.096711257 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.094151868 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.117793052 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.094556307 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140793594 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097459568 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.113660696 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.08792166 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08473082 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.110313497 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086165079 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111149378 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.078265634 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123258426 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094548172 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.090046957 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.11732861 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.083141994 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.107009288 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.082274256 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.114625948 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08398149 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121528046 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.089388023 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.086772076 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.118253081 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.092762409 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.108656597 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.082977207 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115241503 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086301333 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.092933369 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.119331993 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.087776418 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.109860735 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.091907081 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126816548 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121212257 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120477856 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097599737 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124739977 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.098259945 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.12000272 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.088359974 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.092899887 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.110767614 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120497909 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11404666 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088118868 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115139229 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.090960357 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.106012257 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.086352696 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110671888 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.09361583 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.1175838 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.082557476 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.093844432 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.111697517 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.083235232 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.111123035 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.081973851 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.106567346 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09265021 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094194552 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.105804535 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.084504645 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.114412848 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.088501078 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.106095709 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085702093 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.085242038 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.107911711 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085970891 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.096554961 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.081592691 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.090044032 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.105737679 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.087208943 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.113329571 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.090010073 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.10851938 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.094312619 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.105699551 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.08337475 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.08320413 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.107122895 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.085064091 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.106674483 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.08370022 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086395044 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.11592345 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.085027181 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.109006231 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.09584268 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.107470468 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.089702721 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.082668631 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.106358229 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.099825124 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117113293 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.083512143 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112989839 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084164218 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.086894938 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109501508 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.08485 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.107723813 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087604782 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.110236155 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.083520392 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088227104 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.109433531 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101391071 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.108319766 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.084172312 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109461169 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.083950545 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.08888013 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.107919871 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.083560661 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.109829226 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081097462 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086230676 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.107106376 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.085155391 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109677947 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.08654446 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.109292087 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.087591312 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.110652517 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.085336635 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.083092965 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.106258435 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077744256 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112393134 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088595454 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.085586546 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.10734163 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.08642676 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.106636887 seconds)
done (took 16.101245405 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090077718 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184217368 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.13780583 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.117996622 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128948364 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.083315428 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119211999 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.139785178 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.085196292 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140745428 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.107119853 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.127767413 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147223606 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08281635 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.083390465 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.111981431 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.085322525 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.124499381 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.122149132 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12937911 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.139384015 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.082845145 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.130914739 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.108311537 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117461566 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.11113332 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.107879497 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.087772322 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.111637756 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101210988 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128629968 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.087231935 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.10868928 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.107325747 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.124826236 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.092198828 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.108069144 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090508245 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.083889307 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107128518 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.124147233 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105721034 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.113527526 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.089766181 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.087986053 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116146981 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.085175991 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.116863876 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095811256 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111779853 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.09983242 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132045839 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.11199586 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104560751 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.110253006 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.100008436 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12765678 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09876857 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.089271904 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120735944 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.086541117 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.115906193 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.105922475 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.132853826 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092889783 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.128438065 seconds)
  done (took 8.229963422 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107405789 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.1432816 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.107418272 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132023892 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.08957706 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.11628141 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090502497 seconds)
  done (took 1.746789984 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.107200087 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112295247 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.142445554 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.143524971 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.115193133 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.143195057 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096042692 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.116387879 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109956373 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112881689 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11576848 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.159287936 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092574262 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.1252396 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.120146546 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.116257623 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119417638 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.116029426 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093611557 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.145533403 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094709377 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134545449 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092589702 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112967874 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11026404 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.09066974 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16704307 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121517383 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088276748 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.094476101 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112824335 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150339038 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103088541 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118471238 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087021306 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128937078 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.105728105 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112212235 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.107803879 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.12231272 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.109237818 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091416777 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117294968 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088890824 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121326802 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.105199457 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120831587 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092108983 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094023073 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141720571 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091763473 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135900334 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091118312 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.121715712 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.092991704 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121505669 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.101471032 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117202582 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11618379 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08890461 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13871755 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.138035107 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.109109517 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.137804569 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093735763 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134981123 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.109904068 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.09390879 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119135607 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094480313 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134680521 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088579156 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.119605889 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105730907 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118863407 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119525148 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.145164421 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092705601 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12899744 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.09127073 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.120266737 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091428722 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.141901722 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089313191 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.085389445 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116189804 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088017014 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.107938159 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.084742961 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.113074454 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.084106315 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.086584517 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.113368171 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.08542656 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113148383 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105400355 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.111201496 seconds)
  done (took 11.837629502 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087618225 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086918981 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.113960252 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087139914 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111663291 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087553155 seconds)
  done (took 1.540326805 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116591562 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.112014256 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.099938984 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.11544205 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.127849667 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135217561 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.113098482 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119480101 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.128367601 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.097594858 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.136599225 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112251279 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.140576672 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.090930724 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.133924914 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.089527285 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.136438503 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.091487477 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.121885164 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091371648 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.127674151 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.091184537 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116463834 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.105565007 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119702101 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.090449309 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.116809384 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.097004171 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.121975607 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.095279597 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.115676592 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095969379 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.116349034 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.094964819 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.134929399 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.116279042 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090300361 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121500024 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.092518003 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11996233 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112539768 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115297489 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.097847757 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121558148 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.095640491 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116394799 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096912946 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115666996 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.109517952 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121414812 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.098546904 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.114576961 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095307596 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122543403 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.091748606 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120244583 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09681693 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.135386475 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.093131117 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.116532222 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.088058121 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120873493 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095496444 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121587791 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.095653003 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122413907 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.092079315 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116098018 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09188796 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.115955338 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.0968027 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.112735278 seconds)
  done (took 8.919335218 seconds)
done (took 33.219667851 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.683752362 seconds)
  done (took 1.649524701 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.801382451 seconds)
  done (took 1.768976125 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.563028697 seconds)
  done (took 17.557904542 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.461153173 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.533565523 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.965877801 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160253075 seconds)
  done (took 3.088256342 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.952023638 seconds)
  done (took 1.938206287 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.285010196 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228814677 seconds)
  done (took 1.487017794 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.760089252 seconds)
  done (took 1.743189341 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.431880126 seconds)
  done (took 2.411949371 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329143439 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155883165 seconds)
  done (took 1.476598793 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.567888467 seconds)
  done (took 1.556452428 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.947879857 seconds)
  done (took 11.934928899 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245751168 seconds)
  done (took 1.242997806 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.293535534 seconds)
  done (took 1.277541082 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.469888833 seconds)
  done (took 4.455729814 seconds)
done (took 54.562251511 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101172936 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098120034 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.123180309 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096205852 seconds)
  done (took 1.394387842 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.104959857 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118052312 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100749592 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.116134035 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102265073 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117108916 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.095521782 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.1282009 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.09203618 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.118607967 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.092613819 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.091360383 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.120913148 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119496938 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.089405612 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.094976763 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125312125 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.092421823 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12223733 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.092606276 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.114916654 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.094508109 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121848366 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.090397999 seconds)
  done (took 3.546566598 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100813349 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090857441 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117776255 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.09061656 seconds)
  done (took 1.391249353 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099268072 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.127300224 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.102665856 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12210236 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.103634485 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.127010087 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.087990145 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.087823403 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.11550405 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.096000664 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.112073337 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.110412751 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127816664 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.095579826 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.12317383 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.085452468 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.113151136 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.102779597 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.121015483 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.096736507 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.114428732 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.096111126 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.086515682 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128852266 seconds)
  done (took 3.577788307 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173002803 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12394595 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.109673152 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.117273509 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.15747283 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.111388274 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.084300996 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.13715154 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.084677419 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.124994926 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.088506349 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.156333435 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.124381565 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.084803989 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.083852922 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.109474015 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.096879596 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.122199688 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.087250301 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.124590933 seconds)
  done (took 3.300315251 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099072071 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.088536809 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.109556493 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087594366 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121637401 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091954615 seconds)
  done (took 1.595511824 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097992667 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085682831 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.115235618 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.08733307 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.116134412 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084696006 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.109714038 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.086364947 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.086059766 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10999241 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08700936 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10926294 seconds)
  done (took 2.179499221 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.514200154 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114169245 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.087928232 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109147822 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.095667612 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.110884162 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101836282 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.112812201 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.113446741 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.11055763 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.085802598 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.087425195 seconds)
  done (took 2.641084114 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205203729 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098257215 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256507036 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345267366 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153130294 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158407932 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272084145 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160074722 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.174237252 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13877813 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191112006 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152966637 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124886271 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170513143 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135853197 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.150777149 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168271301 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186147669 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11852867 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222228482 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15503756 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137430563 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17619142 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147835961 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136732519 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155089934 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.091812361 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126662236 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166760402 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163992106 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169453534 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119213736 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137129798 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.457373472 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200223556 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170101638 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278141409 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131737213 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.173791492 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138982552 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242670866 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110627557 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208898036 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124801655 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12780613 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173986463 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.318071265 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.171458144 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128997244 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138881183 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174069736 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174784424 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171625101 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109221704 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318348354 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12027673 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.138542738 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180339588 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17564298 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184807459 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160824986 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.11567763 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181790319 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178766896 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173716864 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113200286 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159965131 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122364722 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166518867 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188527394 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169336021 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158089893 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178238508 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135304176 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158603669 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166952282 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149356239 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145195838 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154627697 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.11829242 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120577896 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134073826 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127724611 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.164813753 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121445505 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19249957 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131040392 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.142572613 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223705091 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127582807 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156463633 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159337586 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158115975 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143119642 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08773634 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142982561 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148355697 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126505006 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128232522 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152920966 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138510785 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.099599264 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148390423 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.093791976 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153561906 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.124433812 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330002246 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159433562 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.122181707 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133605199 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143903501 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.146051679 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164706328 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180592311 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104392021 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129683192 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189012668 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155033734 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.130760667 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169520754 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176653389 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125803506 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13544289 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162348869 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183093103 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137994763 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181289068 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112952341 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131309013 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138131218 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128032194 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152768432 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155371577 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130244174 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.121593013 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213209405 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09484593 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134999688 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167795055 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098369428 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126608586 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111050805 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133292231 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.131920111 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.111130035 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13351504 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1516924 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154321456 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124591734 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148612597 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138313142 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183012242 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131983889 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.119724479 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14423982 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.090691927 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.167212409 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179880964 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127114065 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190487165 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159313725 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194991659 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157699594 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128339779 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173761638 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099164714 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.116889496 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159140863 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153414555 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130612157 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.175533089 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216514234 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159555752 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119879313 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144484259 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160385889 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161278563 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146381453 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107128785 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159333378 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152678849 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.092249334 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122307872 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.099229664 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137473424 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128032675 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105702328 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172600923 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160342891 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209667838 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130207563 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136396868 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178696277 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123340087 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158079437 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.368945156 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138175209 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.177764821 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177444045 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161938512 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137151048 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165737914 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.090472752 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094299345 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13130802 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158302662 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132509559 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105449571 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138490345 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177894969 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.328964175 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146279566 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223932988 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162019609 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186556553 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.091814411 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.165815569 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164180403 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127134014 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.171003921 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128978485 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.118920574 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174821378 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141894953 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178158283 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157702665 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162604806 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185243518 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.145345134 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101418566 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145762327 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160084246 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135244299 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137704145 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143666781 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133996757 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313045974 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.12374981 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097201645 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169888247 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141755766 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169008668 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144666476 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159945258 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097735342 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138177325 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154904262 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116848197 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113246 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330353587 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176523981 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141831782 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.31500136 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167895836 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1284895 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30553811 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183455923 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.362525403 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107531876 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139677177 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157086575 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156320731 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.3187443 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174699427 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143528505 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173211034 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126582337 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.132363316 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13418482 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117575782 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147475824 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.138663516 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.102717836 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.148608828 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.13282151 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170234025 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138959123 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126883914 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160161153 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148823151 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.113728229 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141385469 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19588061 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155202312 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170196773 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.1439674 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.132780717 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217720047 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095866272 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126481239 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.09753277 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174772348 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130645027 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127393014 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.207772366 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194326543 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156461313 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160710743 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109305491 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.11697084 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155068371 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118694909 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218701862 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111647226 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132266019 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183213075 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.141094804 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101546618 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157271937 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281930029 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141245894 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17118622 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083325838 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276974459 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122692586 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103083333 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158304634 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166573969 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133133966 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.144788641 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158056389 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140207199 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157588478 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108468011 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186578721 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226324522 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135592486 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166031562 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.130402996 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156507904 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.317924582 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172453732 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142143118 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.105014238 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159698084 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179442188 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.18068607 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130999295 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160043963 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157698463 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128773681 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162545792 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134032714 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191746416 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128396749 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159408706 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109272386 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122054595 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154339426 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.18084713 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104017648 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168028076 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155095104 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130456796 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096731065 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147973114 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155706247 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138543994 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.097865182 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168748146 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.093234642 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158800364 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174171091 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129904461 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124795324 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14341681 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133025616 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111630668 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140829306 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135024847 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.1350447 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174722074 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.12757764 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172439107 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168873639 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159736434 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315482774 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139443628 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635792837 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127209857 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178799605 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144462721 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175818386 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118420575 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161710044 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157380351 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146561929 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160143948 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11806172 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228389431 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161862834 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154445159 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101732768 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140521678 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139954849 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.101270855 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150019589 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159200779 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138106564 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.106223609 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154365062 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141267786 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.102910623 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137535034 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179002915 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117010654 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196208074 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147630226 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136738955 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162758112 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163082978 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128199049 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.128134299 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169144359 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139907272 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1463714 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.103063138 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132741314 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17539996 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09396469 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157334971 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157174213 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157512085 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130853591 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131239901 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155604697 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137930027 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131129289 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12833753 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149450367 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153250371 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104746628 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124960982 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124501682 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149556119 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.147750041 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095464641 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.161750677 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179101459 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.093038745 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13098019 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282368693 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156321172 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182794732 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.111476026 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132763158 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140398423 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115607342 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149718402 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1574662 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098076546 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130271156 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.127393389 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.135983721 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.14078761 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154721881 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184426792 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31908956 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192415683 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134776678 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276143876 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109572285 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152336641 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.092916301 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12726829 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139020396 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105036515 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14283585 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186968508 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175450757 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.143142766 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.104191356 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124411616 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.095320363 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130526408 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157284775 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122674782 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15584586 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140313247 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.084911214 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140507107 seconds)
  done (took 75.509842061 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144742964 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130565823 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145662135 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200317025 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164902666 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249894689 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.207195934 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2358773 seconds)
  done (took 2.560000061 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.091372044 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.141579254 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.125492323 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132406795 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.114250233 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.113805112 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.300204324 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130082981 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114004635 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.118267784 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.130203894 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.114238507 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.525785973 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.114478641 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.088321566 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109333886 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.113744759 seconds)
  done (took 3.655725088 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.111466587 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.471425263 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.915165696 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.191081588 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.174963665 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.091539895 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.704227349 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091668564 seconds)
  done (took 11.83524598 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.121088121 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.141485813 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.133482012 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.159643106 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.117384085 seconds)
  done (took 1.770576032 seconds)
done (took 115.935838218 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.094187546 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12276578 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.095144227 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.126037594 seconds)
  done (took 1.518241676 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100811116 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073966145 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.106836248 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078660587 seconds)
  done (took 1.447788536 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.191403318 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.165980678 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.400149302 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.075331056 seconds)
  done (took 1.595937101 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.1113143 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.127858775 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102150419 seconds)
  done (took 1.439173569 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.103453119 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.098170159 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.126630986 seconds)
  done (took 1.423971162 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100708703 seconds)
  done (took 1.188463163 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107445388 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136422479 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108788247 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134627743 seconds)
  done (took 1.58154659 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094133899 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095776806 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.136330915 seconds)
  done (took 1.41971601 seconds)
done (took 13.064848589 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104768204 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.513414499 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.386703833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134527097 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.694048408 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.40608583 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004372287 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14210991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165408475 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088939451 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134234545 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.668342242 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.021293172 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.435224934 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.008286404 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.340552331 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697130724 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089087038 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115976356 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090205008 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.015073502 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089297926 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087826796 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116999954 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668938046 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420563784 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089388325 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.364635496 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.08839013 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123846745 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.375033935 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115648602 seconds)
  done (took 16.879650102 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.099007394 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175224942 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.100049723 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118462624 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096494347 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118089023 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.093522181 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089276501 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179912406 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117486378 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105339232 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116668659 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.093164867 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117952396 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109060186 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117038076 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090876469 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115861213 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090504939 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088872877 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136672401 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088803747 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116844265 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.08951157 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116631085 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102480539 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116937175 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.089632098 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115769106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098074591 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090430238 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117574481 seconds)
  done (took 4.599207873 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142497885 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184714052 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128700314 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124548296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170482446 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.091311554 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197345886 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144485926 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18153048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088918973 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134403512 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.089660123 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151135887 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.08974789 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13769907 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.089454552 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116715752 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089397294 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115556389 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090170851 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108409724 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11619293 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088908431 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11726097 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089701912 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131853329 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089481773 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.116897867 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089687326 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124530155 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091976501 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116657157 seconds)
  done (took 4.935595894 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095112526 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.094327655 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133614879 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.1051349 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118740996 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.092956216 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.121591064 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090477327 seconds)
  done (took 1.944620658 seconds)
done (took 29.45281366 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111399763 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.094889296 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131701498 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.101826116 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127743018 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102365995 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.117321343 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101768514 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.130372266 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.098210941 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133087156 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.088830407 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.0900511 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116757383 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.102870277 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122877752 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.102929842 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.127021554 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.102969577 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131505925 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.090490549 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.128997742 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100526775 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131553179 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104190687 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132050939 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.106559455 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.124139435 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.090953 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.090785566 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.130917785 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110240289 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.120102883 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104068815 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122867469 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.093677817 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.119369892 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09359154 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131153814 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100902209 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124995544 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100737053 seconds)
  done (took 5.775618931 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.117340665 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.151922197 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.116159711 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.11809092 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091785582 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.111157122 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115191137 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082415604 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.113027689 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113495096 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.106438363 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080137705 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.110294116 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076180958 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079176442 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.107546329 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.082891253 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.105491398 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080586825 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080037793 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.111976009 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.075807326 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082564944 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.110605494 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078240917 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.112672255 seconds)
  done (took 3.725273296 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.096057688 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.104868536 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137921036 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.17168101 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.123475178 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.1264631 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.09778881 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136162361 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.106234553 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116649212 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.091170006 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.146770569 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106320767 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124780623 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091724292 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.103626026 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131211869 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090645202 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123598937 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108660957 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.134108319 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.099281548 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137115526 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.099458671 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.117452701 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091370627 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121786629 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.099287305 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.095796081 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126761479 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.094704192 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.120844126 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.090432239 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129490945 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.095616641 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.119088052 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.108263854 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127605796 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.098420695 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118941005 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097506449 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.09318113 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139613071 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.158120089 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090199404 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.124353511 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.093815388 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.098215247 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119249116 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106659434 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128607888 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089495796 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.120564649 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090511926 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.090576766 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134395131 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090370368 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.119861464 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101894403 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123715226 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.101685415 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122185817 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.104389888 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.11838274 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.095253231 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.089828832 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.11855539 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.087721506 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141922628 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095192704 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160385017 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.090536702 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.11945044 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.097818927 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125320495 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095827941 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.118377422 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104796564 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126902531 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093742292 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.12924813 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092467635 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.091881022 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.136803723 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.091382959 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.119245027 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.090309325 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12428066 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.092542774 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090299766 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133719575 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.088013585 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121493879 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.103034489 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118171699 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.090749391 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.12435103 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.094829877 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.11741659 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103685645 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.122580903 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.089530482 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128539123 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09051662 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.092662397 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.128401628 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.09409772 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117660165 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.094635587 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124921108 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.090356522 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121703183 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.093397781 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09095256 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.127955402 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097221501 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122544282 seconds)
  done (took 14.075528066 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230165379 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215190129 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.187431244 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.29431355 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.101737236 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.144175897 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210811697 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124974135 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.119933328 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157974382 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.169166802 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.152204228 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170341676 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179259568 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.16975381 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.118467488 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.109780304 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164785697 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213818354 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.260176869 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14001296 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.097404654 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159317136 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158394358 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.132230169 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.099533544 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.136870111 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.101659544 seconds)
  done (took 5.638489827 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.112224408 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151864789 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.094762996 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.140753652 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.115847238 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119743271 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.094633394 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.121074025 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102962413 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13356678 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.089151723 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125632922 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.097693107 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.128836709 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.090232468 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.128378638 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.100012865 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.120153996 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.093769169 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.094515411 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.128801593 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.135905412 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.094108846 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.088769914 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.128020266 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.08863801 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.120880826 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141127378 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.089816246 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.141097474 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.087876753 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.097421296 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132416414 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.090258132 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.11958023 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09145395 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12006542 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.092227689 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091151383 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.11697807 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.088600143 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.11070511 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.088862503 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135294168 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096329224 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.113106463 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.096646251 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.124809416 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.090777334 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.08748835 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.121832283 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.092811933 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.121609273 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.097591572 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.120806023 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.091352478 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093185869 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11906515 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.096606575 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12155045 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.088648978 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.087996737 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.123645221 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.122834165 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.099371488 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094479455 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.117593817 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.092174417 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.123523264 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.096498166 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.120084411 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.096873439 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.08774714 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.120770095 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.091886132 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125109377 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093844138 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.117194666 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.090363966 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.089791982 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.108118257 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.090228733 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.106411549 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.093899862 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088030399 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.117565101 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.092118367 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125630632 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.105975153 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.121402621 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.099536085 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120411423 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.088860156 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120874534 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087107116 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.093514575 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.135489514 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.1391328 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089606638 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.11622629 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.104943962 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091893714 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.117783958 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079251688 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129228664 seconds)
  done (took 12.438924378 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131111842 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150677275 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.092271804 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137372822 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123587244 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.154444996 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.09690727 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.127435462 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.092252997 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139306105 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.089896521 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.128859548 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09093808 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.133582263 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124140666 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.129577323 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.091689939 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.134431068 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.094853487 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.16755729 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.109309565 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.138181128 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.1080315 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.11979796 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.096182657 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.138223274 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128268228 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.135238832 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103831532 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.13920438 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.104539161 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159223869 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139830847 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.095256375 seconds)
  done (took 5.277577089 seconds)
done (took 48.029919122 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.219891809 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.432045802 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.186704772 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.033740422 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.227698606 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.216379543 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.225665666 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.187552662 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.255347077 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.195542426 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.428515541 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.724610065 seconds)
done (took 58.456360473 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.298216433 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.346841944 seconds)
    (2/2) benchmarking "String"...
    done (took 1.483170424 seconds)
  done (took 3.948303479 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.755464178 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.125195401 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.446745658 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.187440101 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.192880729 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.482666399 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.852321855 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.602014585 seconds)
  done (took 28.006509828 seconds)
done (took 42.129276027 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.193102144 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.188288625 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.22312851 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.172871773 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.300316037 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.211931686 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.579182823 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.227233997 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.213385713 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.175609102 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.211636657 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.192327565 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.19185463 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.524313902 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.200014588 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.186934694 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.269195481 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.749234114 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.588136212 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.205411047 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.227959222 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.251667092 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.212919842 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.197130813 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.212966573 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.193886354 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.201637204 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.201168465 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.697964085 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.191253187 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.199814169 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.720407626 seconds)
  done (took 190.431664275 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.189689188 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.217427454 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.290909217 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.223340278 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.701926235 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.38961369 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.326078319 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.78706989 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.20882736 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.205589507 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.349540515 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.191278507 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.421701433 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.158338614 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.220369428 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.280826503 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.390698409 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.433149557 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.225634386 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.348850861 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.201087182 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.299853702 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.230962206 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.328988229 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.206802866 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.245413092 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.19944551 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.195277772 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.383751483 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.317402318 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.189564832 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.232889646 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.815570627 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.041856145 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.202920884 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.209277168 seconds)
  done (took 148.983012527 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.188949367 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.189349972 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.19017347 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.189515153 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.222654423 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.191069416 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.765773285 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.757862931 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.722915283 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.497118271 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.568321165 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.445857942 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.190698243 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284533419 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.203085362 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.19236682 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.190904879 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.206077053 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.21585589 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198157605 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.192226745 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.753508288 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.202866509 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.329861268 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.369597016 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.207048813 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223592319 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.587043538 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.191715012 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.223155376 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.522599787 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.24018231 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191645457 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.587800498 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.583629705 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30531649 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.193358455 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224400775 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.190976117 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.471563391 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191802979 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.193431435 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.196289206 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.192416232 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.885311906 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.197001068 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.770286684 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.198216651 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.143715207 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.191155372 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193786264 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.174460993 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.896367061 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.212996193 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.192907515 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.195690749 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.192103679 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.192479753 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.225798934 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.111387955 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.293378838 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.193584501 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.197170264 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225091215 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.193496202 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.251344922 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.1980805 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.531370765 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.26823887 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.309188086 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.761589842 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195842584 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293404862 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31499244 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.193871593 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.193887966 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.194027324 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.193658487 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.305478388 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.193991803 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.614343079 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.369983024 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.211029554 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.580816379 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.299214034 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.195176708 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.599301121 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.200287486 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.194440422 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.945432939 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292286442 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.194784699 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.194140036 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196229724 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.612983496 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.194701466 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.759281402 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.455960093 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.200722387 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.397270947 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.201405286 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.625327385 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.749043363 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.835485099 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.19760431 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308351576 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.370984891 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.212976121 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.196376832 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.580540165 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.200826117 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.2508505 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.195868601 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.594005727 seconds)
  done (took 366.006511218 seconds)
done (took 706.544147494 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.806460863 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.798521654 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.911442133 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.7925936 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.754894367 seconds)
  done (took 10.190043493 seconds)
done (took 11.316309518 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.386699172 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.384737363 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25816219 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.387930123 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228214755 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.404238215 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.36746018 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.216355626 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.298145861 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.27787114 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.298241861 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251470126 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232082177 seconds)
  done (took 18.118725445 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536689398 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.525454427 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260726529 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.52303788 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236764023 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.513851594 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.404784443 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.417201692 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418389163 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213828127 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.211372044 seconds)
  done (took 16.389877704 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.530521889 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.523174433 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265117565 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.524750492 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241485451 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.60691094 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.400811709 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.417305177 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.432377398 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213260314 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212142703 seconds)
  done (took 16.496703028 seconds)
done (took 52.133839816 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.209943389 seconds)
  done (took 2.340403767 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.248344976 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.41204336 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.233977458 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.21869296 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209463331 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.221144751 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.219055178 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.213636807 seconds)
  done (took 11.106700088 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.206479294 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.209262193 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.207553971 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.208249645 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.204355418 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.209342459 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.208620679 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.204839835 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.208717025 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.205641886 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.206495012 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.209402785 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.208083837 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.207171363 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.206367813 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.205379348 seconds)
  done (took 20.446099391 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.20664402 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.205236168 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.204573495 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.206645951 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.206830459 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.207592214 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.208323331 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.205809766 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.205131495 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.205105268 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.206735962 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.20634965 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.207308422 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.206653265 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.206454334 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.208255365 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.206369375 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.206179122 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.211518693 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.206833992 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.207423336 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.207842894 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.209206114 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.207074741 seconds)
  done (took 30.098565604 seconds)
done (took 65.122425103 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.836570444 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.735621757 seconds)
  done (took 6.705187513 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.268090724 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.269810135 seconds)
  done (took 3.671029786 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.212393623 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.209318934 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.210631294 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.210390445 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.209008482 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.210140289 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.209737197 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.208281508 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.209908717 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.210517529 seconds)
  done (took 13.233536015 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.209652102 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.209220115 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.206938822 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.211187127 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.209287361 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.208152468 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.210149213 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.209948855 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.210878749 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.207162143 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.212048157 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.209052191 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.211433278 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.208139785 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.209500188 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.209747324 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.207211091 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.208896176 seconds)
  done (took 22.901106176 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.224966369 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.231942318 seconds)
  done (took 3.589362747 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.337888402 seconds)
    (2/7) benchmarking "second"...
    done (took 1.250068756 seconds)
    (3/7) benchmarking "month"...
    done (took 1.319704018 seconds)
    (4/7) benchmarking "year"...
    done (took 1.308246209 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.250694021 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.228766444 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.249700216 seconds)
  done (took 10.078794373 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.213524072 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.396263879 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.500532865 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.791736073 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.212557042 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.21478036 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.096967789 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.215020114 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.218078212 seconds)
  done (took 13.993455436 seconds)
done (took 75.307804711 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.231039941 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.205106796 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.481142973 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.22361626 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.221097455 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.503013321 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.248103574 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.327978617 seconds)
done (took 37.57657967 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.205753302 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.204422455 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.980097762 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.217651886 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.269935648 seconds)
  done (took 18.80541725 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.255268541 seconds)
    (2/2) benchmarking "read"...
    done (took 1.543502706 seconds)
  done (took 4.932190854 seconds)
done (took 31.076159276 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210738965 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.210299007 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.211402748 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.208470287 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.211845925 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.212299804 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.210054966 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.21007795 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.2116784 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21062027 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.211527134 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.212697031 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21214148 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208953453 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208739076 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211998435 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.208887044 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.208493841 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208424715 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209384973 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211294733 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.209507351 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.209465086 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.208741055 seconds)
  done (took 30.181298031 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.211149529 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.210257834 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.212219913 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.212897407 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.208824976 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.21224401 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.211886792 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.20900689 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.211193276 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.211016987 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209226204 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.208064506 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.212411699 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.209286774 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211781709 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.21001934 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.211354196 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208039203 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210510427 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.208941816 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.211975899 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210546696 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.207886307 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210226142 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.208701959 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208610807 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.210337527 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.208365163 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210655017 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.209892136 seconds)
  done (took 37.441660252 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.215168707 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.217639103 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.210601955 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.21012395 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.211275139 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.210673723 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.21096742 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.211733189 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.21097879 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.211675986 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.210870255 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.211258838 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.212518442 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.210867713 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.211903755 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.211987802 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.212455059 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.21201748 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.212534158 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.211207542 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.212064232 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.213136057 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.212452716 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.212943242 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.212563148 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.212228303 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.211786494 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.212245134 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.212345103 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.212315014 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.212723307 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.211956133 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.212711452 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.212746381 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.21170263 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.211842406 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.217994387 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.220648574 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.213819147 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.212163219 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.21399209 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.212636029 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.212732388 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.213761111 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.213238699 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.213801908 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.21309889 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.213786518 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.213362932 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.213797016 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.214170287 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.213712381 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.213906588 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.213785287 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.213651099 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.214307568 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.214166406 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.213619959 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.2143968 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.214884866 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.214502724 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.214014166 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.215272745 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.21433876 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.215131391 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.214296869 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.213832468 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.214600183 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.214257252 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.215730456 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.214948348 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.215937242 seconds)
  done (took 88.488203986 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.215485337 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.212172092 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.212748769 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.212232652 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213126379 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.215399545 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.218169759 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215838918 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212021012 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.214574813 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216138792 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.213398977 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21310558 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.215928524 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214782471 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.213338219 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.216504833 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213219203 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.216469664 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.21570735 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215707535 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.213153371 seconds)
  done (took 27.855859653 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2165016 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218405113 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.213688577 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.217567486 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215854319 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218744085 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.21621944 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218120736 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21699373 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213717747 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213824164 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217319336 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215707223 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214736047 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21467309 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.215985847 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217275447 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.215271668 seconds)
  done (took 23.029167361 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.214795068 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.214864407 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.216715996 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215413233 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.215042708 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.217144496 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215526229 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.218665133 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.217142483 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.215161244 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.218921051 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218043929 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.218308391 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216661776 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219363451 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.215457528 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.217894319 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215408503 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217740305 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215296879 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.215650025 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21837823 seconds)
  done (took 27.907045115 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218580616 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.217948379 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.216606338 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.216607801 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.215746319 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.217410126 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.218701143 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.215877519 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.220707464 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.219226989 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217067075 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.219661916 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.21802368 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.217651748 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.217919892 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217301416 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.219652809 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.21779321 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219994152 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.216654469 seconds)
  done (took 25.499873208 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221711467 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220705406 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.221689919 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222449117 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221645408 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222182342 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222586149 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.221739769 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222424639 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222283459 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.22271724 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.221905657 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22266501 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.222121269 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222572709 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223286584 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222538605 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221495958 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.223745497 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222305097 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.223646147 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223758311 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22420736 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.2250716 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.22306695 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222767325 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225016166 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.223789911 seconds)
  done (took 35.378416964 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224430007 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222367833 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219552557 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.219426965 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.219026247 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.218093771 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.689402699 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220466659 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.222607072 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219147731 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.221613359 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.221195059 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222270042 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.221265149 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22074431 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.222068968 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221702547 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.219921616 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218432673 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217262382 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.221664005 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221471207 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.221036743 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.218172679 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218230763 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.221270563 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218892094 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.21895029 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221048747 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21961162 seconds)
  done (took 38.226195361 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.240390769 seconds)
    (2/2) benchmarking "in"...
    done (took 1.239628002 seconds)
  done (took 3.623059151 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.218534244 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222053778 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.22219629 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.219719354 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220263787 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.222068885 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223220153 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219600569 seconds)
  done (took 10.911304612 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.221193424 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.223052523 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.224123621 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.222495785 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.223943177 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.222600163 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230254568 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.24129846 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.222439101 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.223911546 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.230824828 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.230627364 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.225300944 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.224355117 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.224439323 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.225819305 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.225303972 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.224215345 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.225183168 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.225164379 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225635795 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.225648386 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226273255 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.221675051 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.226890273 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.235963275 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.227291161 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.226682216 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.22422832 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.226809059 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.224852326 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.22152389 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.227207751 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.226199375 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.225299507 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.226678043 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235010602 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247248659 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.231626697 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.22642101 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226475967 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.223803225 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.225164375 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.225991379 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227176271 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.227553591 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.226963388 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.222614791 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.225666414 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.231099806 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.230904007 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224478553 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.223235241 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22818887 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.22770729 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232611691 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.245400799 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.230863694 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.23601468 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.237776671 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.238435684 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.250239239 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228019158 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.228973402 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238016873 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.249686279 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233449587 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.242373286 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.224105783 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.226175901 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.232781303 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23905242 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.254259047 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.22799264 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228596801 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.227104539 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.227093075 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229119953 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234046054 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.247299758 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.230201511 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229576328 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.237830523 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250746417 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.227673096 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.22996204 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.22927053 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.229255964 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.229216981 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237876857 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.249080707 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.228874572 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.227883777 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.228463019 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.229175343 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.23090464 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.227648316 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229166298 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.226649828 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.229564541 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231118485 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233262872 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.237075328 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230503721 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.230914214 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.236132898 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.230973718 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228763655 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.235933956 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.229812036 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231478751 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.232966857 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.234727547 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.228113844 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234171868 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.236875679 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.230813313 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.230409679 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.23095371 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.231374986 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240260146 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.255416248 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.230582215 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.230447849 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.235592436 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.242954674 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232632913 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.232584685 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.231154203 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.227663069 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.228524384 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.232019732 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.231573691 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.23244153 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23266132 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231961129 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.229529537 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.231997459 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.232953958 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.232890556 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.231881921 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.232421892 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.23274147 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.232273229 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.232809705 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.23326997 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.238336014 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.231440103 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.233059742 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.2321953 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.229020982 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.232452427 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.233278758 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.233957394 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.232093758 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233466345 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.232805449 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.234046386 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234810382 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.233966057 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233123704 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.234599502 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236488535 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.235226751 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.23637011 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.232594262 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.23045516 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.232740857 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.233723879 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.232649759 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.233752385 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.231930714 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.236709101 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.242302984 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.234863314 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.235202194 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.23523302 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235487635 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.235930502 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235412583 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.238689581 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.241987357 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.235241346 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.240346714 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.236003046 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236253112 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.235322052 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.235077822 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.234898225 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.236727191 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.238473389 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.243275285 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247210277 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25958357 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.238491506 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.239186364 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.237260048 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.241072681 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.23835521 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.236968871 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.235896124 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236408696 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.235653317 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236782687 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.236241619 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.23637494 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.23596907 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.236554225 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.236108725 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.236978291 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237860382 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.23603742 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236519499 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.233773259 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.236356185 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237618363 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.236336044 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.234374896 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.235258994 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.236734133 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.23768831 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.23829221 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.243287667 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.234413063 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238187357 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238062463 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.237580452 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.236518001 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.238370954 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238721277 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.237231994 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24425097 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.255024816 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.238371147 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243351465 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.256803305 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.237223568 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.239631775 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.237859222 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.235117113 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.241328006 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.245763175 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.238972007 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.239987973 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.239987276 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238319001 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239913444 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.244435936 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.236574523 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.23769713 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.238978512 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.239738528 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.236013899 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.24008305 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.238871954 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.238965199 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240870918 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239660458 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.239740224 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239638633 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.240205524 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.240386178 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.240566784 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.24308489 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.247916186 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.244232442 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.239925675 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.240505906 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.241014023 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.244207344 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.239359297 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.240708729 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.240002693 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25187155 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.266466177 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24722697 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.241315629 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.241100443 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.245991549 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.241271409 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.243115972 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240745686 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241047629 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.240810676 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.239955158 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.239648871 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240626383 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.242596807 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243089205 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.242863406 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.245423024 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.242744651 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.240237105 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.242856986 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.242358855 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.241827851 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.240451224 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.241452339 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.243027466 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243479478 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.241441747 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.241008854 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248158599 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259188062 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.242208968 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.241173282 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.241237566 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.241624995 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.242445812 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.243993376 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.246006404 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.251475455 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.246310663 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.250829247 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.243325994 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251933565 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.244437786 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.246211583 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.251587614 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.240374132 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.242300458 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.242585235 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.244088839 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249952884 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.262500094 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.245461943 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.247629154 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24479628 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.244980007 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.243993933 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.244782555 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244485113 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.2443777 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251921474 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.266535596 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.24731438 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245391505 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.241584476 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.245602333 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.245344352 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.24356325 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246667595 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.246509953 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.244413112 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.244184661 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.244039258 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.243995805 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.2458225 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.245481904 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.241989608 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.24556186 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251362654 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.265579983 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250220707 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.246296485 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.252421879 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246024907 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251703572 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.264056685 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.247034601 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.247354209 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.246034986 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.246904099 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.245401633 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.24639171 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.24791992 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.247559409 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.250809654 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.248361982 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.247880402 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.246838629 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.248296032 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.247004489 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256967255 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270959417 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.24919686 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251677978 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.244111421 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.249558207 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.251883335 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.248724969 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.246051987 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.250296905 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257812456 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255090835 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.246653295 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.248434056 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24817124 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249934105 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.24692107 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.24785433 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.248400278 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.249121299 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.247623167 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.248448333 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249305844 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.248332447 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.248353482 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247393589 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.248859018 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.258111475 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.249098652 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.248379857 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249149865 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.249239998 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.248953938 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.247171413 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.249202673 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249008963 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248893179 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.251169795 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255607992 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.256057269 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.250881079 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.24831179 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.249679946 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.249254825 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.248747935 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250014692 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.251157892 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250137088 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.250095593 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.249994948 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.249725732 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.247863529 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.24917514 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.249104194 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250207334 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252651141 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.257999368 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249713392 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.247735821 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.250126399 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250230804 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.249018786 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.250656814 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.256444279 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253697644 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.261713719 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.258764478 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.256894169 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.250382644 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254169194 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.25915212 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.248563021 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.250635868 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.252138755 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.252174656 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.252539316 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.253480165 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252363822 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.259156936 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.25072738 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.25117411 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258567352 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.274220215 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253661747 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.253826282 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.255381835 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.251499474 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.249598615 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.251958018 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.252070828 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259353556 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.271169722 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252725242 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253881774 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.250681072 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.252995462 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258210301 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252540428 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.253061245 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.249723078 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.251795115 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253637906 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253428958 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.249330941 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.251673372 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.252705066 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.25553371 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.259020969 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.250385641 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254129762 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.253871011 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.252336317 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255023566 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253909651 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.250955465 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.25025644 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.252373816 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253694296 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.253192101 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.255294764 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.252798088 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.256114721 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.254827333 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255636596 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25831945 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.265022579 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.261902605 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.251736084 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.253465521 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.254417017 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.256272851 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254892682 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.256536087 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254749764 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.255346001 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.25399118 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255340903 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.254957856 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.258323629 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270299315 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.276288167 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25506769 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.254505949 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257212779 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.255666893 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.253283678 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.255804843 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.256803945 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.258426339 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.263672835 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.256964812 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262385287 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274395 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.257046493 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.260616129 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.258867846 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.263482876 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.25723419 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257299802 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.257785248 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.261581983 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.271964742 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257679563 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266359326 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285526414 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.274566883 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.256174089 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.258348294 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255986704 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.257858143 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.257767891 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.258901186 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.257360652 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257263784 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.257905868 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.259541089 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262850578 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.258202471 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.258103191 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.257466269 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.256608179 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.257216879 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.255572912 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.259235363 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.257742756 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.258267545 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.259271994 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.258868341 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.258226859 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26963586 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.284082878 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.25866997 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.260029948 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.257254243 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.260839271 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.260940653 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270046235 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.265644185 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.259456592 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.260501592 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.260585436 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259003019 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.25764248 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.258507241 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.257737238 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258488885 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.257519832 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.271007617 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285126836 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.264118151 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.259841246 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260673214 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.260471088 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260013781 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260769887 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26123985 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.260265947 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.262332074 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26593541 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.260052132 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.260114237 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.264050711 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.267451109 seconds)
  done (took 742.800810521 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.257805753 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258213069 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.257644617 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.258501002 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259595841 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258642793 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257275267 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.259198446 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.258238725 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.258322837 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.257775898 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258542327 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258261268 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.259013353 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258500342 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258210784 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257787874 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.259108176 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.258842428 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258973987 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258344424 seconds)
  done (took 27.606269516 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.262297698 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.25863486 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.259642177 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.262396733 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259863682 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.261679381 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.260191473 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262139096 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.261896354 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260123416 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.262404911 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263715274 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.260708747 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.258910084 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25988091 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262176676 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.263241006 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260152809 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.263760629 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.261216329 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262791006 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.259845641 seconds)
  done (took 28.928750659 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.2648504 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.264819972 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.26283681 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.259812663 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.262799256 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.259797737 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.264042629 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.263120007 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.264604779 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.263812855 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.262325759 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.264416905 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.271195538 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.268342575 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.265168154 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.264359397 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.407512814 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.26461285 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.265477793 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.264616192 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.261689551 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.269239398 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.261880797 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.261467522 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.262680381 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.26576558 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.26569806 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.264946271 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.265287679 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.266350327 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.269307029 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.264559422 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.263876436 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.265905801 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.263703053 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.266047568 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.268863783 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.266464215 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.263580925 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.264373897 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.276391134 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.286944779 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.267210208 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.271121501 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.265823622 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.267130453 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.26993943 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.275782292 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.263423107 seconds)
  done (took 63.357168727 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.267253903 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.266776329 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.263423836 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267030464 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.267659554 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.267164943 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.266110637 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.266520662 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.263749733 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.263861809 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.266358413 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.264359028 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262912898 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.267823615 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.26706606 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.264452666 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.265674277 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.264223914 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.264153032 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.263905739 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.264524316 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.267093024 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.267155333 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.266749006 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26783946 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.265026943 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.265144726 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.267844778 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.265154642 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.265405805 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.26947592 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26737491 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.269651104 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.265392128 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.265363542 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.268692889 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.269006577 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.266006942 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.268101767 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.265373571 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.268816578 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.26922708 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.268824254 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.269132226 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.266920842 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.265816846 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.266636596 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.266567062 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.266753391 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.268951156 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.269330189 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.267773222 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.269543839 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.266975355 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.270268975 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.269523727 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.267464829 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.266770596 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.269527142 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.267516603 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.266684925 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.270130443 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.26750906 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.271139043 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.2701903 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.268253462 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.268047497 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.270900295 seconds)
  done (took 87.348990131 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271156754 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.271875074 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271846099 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272114221 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27288233 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.27087167 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.27186217 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.272733113 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.273065132 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272977349 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.272636647 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.272381377 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.272063509 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.272019203 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.272793226 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.272866022 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.2738444 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27413978 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273178526 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273183239 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.2730902 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.27319576 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.273434123 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.273962038 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273697566 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.273838853 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274455729 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27385934 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273877016 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.27345927 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274875684 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.272901081 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.27423728 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.273815147 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.27578945 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.274080107 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274222657 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274489066 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.273452275 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.274995804 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274910485 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275127035 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274383131 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.275231492 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.274767383 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.275161367 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.274438118 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.274873563 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.274024369 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274877781 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.274975542 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27384608 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275088379 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274993001 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.274765215 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.274283327 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275907271 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274966787 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27553764 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275779119 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275463562 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.274926423 seconds)
  done (took 80.169279182 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274837003 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.275394488 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.273486139 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.272708638 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.27463571 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.273203285 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.275764666 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.275118099 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.274939411 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.275984583 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275573579 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273637328 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274979141 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27519453 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.273982607 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275970121 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274117797 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.273663256 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276588146 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.273711298 seconds)
  done (took 26.685353797 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.274434529 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.276241314 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.274988513 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274107948 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.276806113 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.273882246 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.276178436 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276366375 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273428837 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276248426 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.277657721 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.276637093 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274406968 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.275355962 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.277200115 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.274607839 seconds)
  done (took 21.601897983 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.274204525 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.277269158 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.277435035 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.277808284 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.274393837 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.274727398 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.277021452 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.275277532 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.273831396 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.278156835 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.277244934 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.277756414 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.277944395 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.278046811 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.275273851 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.277838182 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.27535295 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.275789268 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.277514534 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.278682563 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.276774744 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.275485978 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.278272986 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.278395294 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.275450264 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.276716548 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.275837222 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.27599495 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.27573239 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.278226605 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.276045685 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.276253555 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.27603837 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.27587443 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.280167435 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.276691276 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.279282606 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.278416466 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.27885225 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.278572238 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.27943029 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.276543739 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.278849688 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.279387244 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.276695922 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.279963351 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.276976979 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.276695208 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.277545764 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.277869015 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.279904903 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.28112929 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.279729881 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.280277688 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.280269882 seconds)
  done (took 71.451129324 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280735899 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.280117345 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.277944963 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.280200724 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.28090288 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.278219088 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.280687502 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279495069 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278924494 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.281109533 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.278592642 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.282260102 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278719486 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.281755077 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.279940136 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281822114 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.279009722 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.278516811 seconds)
  done (took 24.236138733 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.279597952 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.279001444 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.281770299 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.278486551 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.27899019 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282025718 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278836376 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.281509236 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281765163 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.279715956 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278197356 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.282342726 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282459688 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.283128355 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280536589 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278847071 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.282981126 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282697805 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.279673771 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279390728 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.283185428 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282708226 seconds)
  done (took 29.375597508 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.282160953 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.28179526 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.28290996 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.299869273 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.302021369 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.305682771 seconds)
  done (took 8.953822104 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290990485 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282668674 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28130951 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284710535 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284054279 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281330508 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281883948 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281196722 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283392165 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282313308 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281500495 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284810213 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283989897 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281270541 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283782635 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284509782 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281850608 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282032941 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282530585 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284595314 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281818765 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284410981 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281697185 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28267853 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282813977 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281845221 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285081384 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282918103 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281748112 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284716678 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285974167 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282745078 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285331524 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282915433 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285816716 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285375409 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283757748 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285942489 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28654322 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28291908 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.284757659 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28594444 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286427764 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283323131 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285817019 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282362676 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283846677 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284324148 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284567974 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286391484 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285806486 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284020211 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286742281 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286315628 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287266056 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286717307 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284029734 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284673603 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286558012 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287422357 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285161491 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286870984 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284747019 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284665554 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286833813 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285203195 seconds)
  done (took 85.988438603 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283876801 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285354455 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285702272 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286402012 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285682281 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284410761 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285199695 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285102888 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286009097 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284610973 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288344051 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285962125 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286203144 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285882373 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284417601 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285416984 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287379943 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286953784 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2855833 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289419925 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285715484 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286387129 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285604792 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286191797 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28643151 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288148346 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286965805 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286824351 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285577985 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285916736 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286400564 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286221182 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286643463 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286334587 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287696382 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286563374 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287835522 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286774706 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286482099 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290610293 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288173204 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290264437 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287656783 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287849413 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287997955 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287580178 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287466359 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288137146 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289099188 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288266353 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288772636 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289187032 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288950494 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28936378 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287816812 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288739148 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289135177 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289475732 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2888078 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290227492 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288613968 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288570938 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291426709 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288775251 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289199019 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290068472 seconds)
  done (took 86.168472537 seconds)
done (took 1734.348590412 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.454834568 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.406887696 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.289406449 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.340204215 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.289909753 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.309678633 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.286576568 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.290643212 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.291100771 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.289950613 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.290893618 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.474885368 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.342534907 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.291450222 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.290278209 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.385821896 seconds)
  done (took 42.533480833 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.319227054 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.297772825 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.412009492 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.312401588 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.318863845 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.488134984 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.349848936 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.296611122 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.470657245 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.335770912 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.887941608 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.318174645 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.295981465 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.432697847 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.314195717 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.486156059 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.544402526 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.896264932 seconds)
  done (took 29.985574653 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.758174727 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.310745771 seconds)
  done (took 9.278393069 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.315232009 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.295838976 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.297644783 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.296061003 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.287564416 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.288456423 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.2948596 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.289964878 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.105147869 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.423999736 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.298293264 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.305596384 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.316537784 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.298037323 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.293606099 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.334357038 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.448933795 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.294627648 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.293035017 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.30160293 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.296419696 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.389937054 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.338604427 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.294788104 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.426319447 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.093563465 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.298948672 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.303842344 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.429604431 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.295707107 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.296335332 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.296710216 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.299246605 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.186839619 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.817527427 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.289991354 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.340203755 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.305691598 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.294715597 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.448029519 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.298805905 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.304709945 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.301050065 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.786647335 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.436327227 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.413631758 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.573321438 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.29995281 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.300379215 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.360244155 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.299340343 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.301610579 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.342482435 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.113589389 seconds)
  done (took 110.17514569 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.341493716 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.681616182 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460016564 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.310751848 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.0091916 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.879958506 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.308896688 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.588252357 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.339042558 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.29381837 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.572575572 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.812179623 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.322282784 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.322148907 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.466407865 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.304959079 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.29534914 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.074266646 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.311637527 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.295851644 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800195108 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294344239 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.29413502 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.4465234 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.33227297 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756007077 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.707807328 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.727287723 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.311594584 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.293655099 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.764679915 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.316055664 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.366268099 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.295277979 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.559027059 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.660163577 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.638418358 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.298024495 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.300529149 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.294553528 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.308822256 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.751824793 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.642799701 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.29576865 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.295980561 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.753885204 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.29535542 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.295048449 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.299154535 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.495608759 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.90584726 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.29716101 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.711323711 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.295940122 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.565419735 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.370004645 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.372473226 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.787856646 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296796054 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.375391029 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.334375511 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.29741057 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.29888392 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.295900652 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.298444843 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.650524744 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.563388599 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.299104196 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.651474729 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.76076541 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.313406449 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.825343579 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.134479544 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.318895013 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.360717329 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.30377798 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.917832806 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.796138578 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.331860799 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.296476948 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.63601773 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.298664759 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.583114852 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.313382294 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.298086259 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813009003 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.305849742 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.339164202 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.297199127 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.32583582 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.960319057 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.301242455 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.585707379 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.367860106 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.297315956 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.298711789 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.347791537 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.298570852 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.297849938 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.303731037 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.826568978 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.314951921 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.420400894 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.319388673 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297923963 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.304289497 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.29975951 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.29970605 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514993271 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.894754973 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.316373859 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.298940516 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.31264629 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.302388428 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.480366394 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.303714794 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.613034166 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.302536636 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299724025 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.320210111 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.922128723 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.357967582 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300087833 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.317909532 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.21638258 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.5024265 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.318071708 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.31665971 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31608221 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.299828123 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.578685509 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.321398877 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.344030928 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.299516538 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.009419259 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.341856759 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.306735666 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.570813614 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.307088774 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.186276249 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.322488255 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.300351082 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.587484071 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.571324674 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.499783578 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.303579824 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.318596157 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.988850524 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.351485027 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.448316083 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320368602 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.346733548 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.498041119 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.425443044 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.302962111 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.884028623 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.302905921 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.513679713 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.302339814 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.599607254 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.796887878 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.320077089 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.302401651 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.014919089 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.03398794 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.967972402 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.303203386 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.581592143 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.248879417 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.781338111 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.302450087 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.303133483 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.790665084 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.303459773 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.307446997 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.30309637 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.303019405 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.44368578 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.476707371 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.572578482 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.310570894 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.761640919 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.306290858 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304138119 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.310054503 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.306000016 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.651088641 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.318329128 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.30287132 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.322964026 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.30465385 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.308912149 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.778199874 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.17789142 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.304054073 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.45728362 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.941209994 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.321683925 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.304991347 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.072909259 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.346695541 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.822202085 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.361050702 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.619105757 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.309121179 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.344023943 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.907826375 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.389833235 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.784016024 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306613575 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.304624876 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.905962875 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.322611234 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.354148707 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.305054163 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.307383158 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.844808431 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.324131698 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.307390227 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.569166909 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.325515696 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553475794 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.307092669 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.336650071 seconds)
  done (took 1102.346976679 seconds)
done (took 1295.527657293 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.306416739 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.312603639 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.299884521 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.312925503 seconds)
  done (took 26.45904306 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.318949929 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.313775839 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.316123279 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.313159095 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.323717569 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.313290436 seconds)
  done (took 9.127908761 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.351910679 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.314861456 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.312848106 seconds)
  done (took 19.207882546 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.522610834 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.618572423 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.65362456 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.554695052 seconds)
  done (took 10.578792269 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.315402396 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.315507198 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.315252366 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.319498161 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.320609691 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.320677926 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.319068227 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.320269341 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.320381668 seconds)
  done (took 13.093934383 seconds)
done (took 79.6950309 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.193990197 seconds)
    (2/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.327102315 seconds)
    (3/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.742128902 seconds)
    (4/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.318315039 seconds)
    (5/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.765338453 seconds)
    (6/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.372048336 seconds)
    (7/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.295518039 seconds)
    (8/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.005611899 seconds)
    (9/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.819045931 seconds)
    (10/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.412960913 seconds)
    (11/286) benchmarking ("sort", BigInt, false)...
    done (took 6.308843349 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.563447816 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.365604597 seconds)
    (14/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.29585677 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.352079274 seconds)
    (16/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.296114316 seconds)
    (17/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.338586854 seconds)
    (18/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.391208487 seconds)
    (19/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.703969262 seconds)
    (20/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.417121141 seconds)
    (21/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.295610482 seconds)
    (22/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.963984247 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.015362199 seconds)
    (24/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.165632987 seconds)
    (25/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.350465943 seconds)
    (26/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.368874819 seconds)
    (27/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.639469373 seconds)
    (28/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.314382861 seconds)
    (29/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.397245093 seconds)
    (30/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.368855378 seconds)
    (31/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.310436311 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.29425626 seconds)
    (33/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.991454601 seconds)
    (34/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.297384525 seconds)
    (35/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.320269052 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 6.311868155 seconds)
    (37/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.500729379 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.413897681 seconds)
    (39/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.93451571 seconds)
    (40/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.435187222 seconds)
    (41/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.29686163 seconds)
    (42/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.431575203 seconds)
    (43/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.39351642 seconds)
    (44/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.700714309 seconds)
    (45/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.473423155 seconds)
    (46/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.801641764 seconds)
    (47/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.304560907 seconds)
    (48/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.31055268 seconds)
    (49/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.418794306 seconds)
    (50/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.305845516 seconds)
    (51/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.337107761 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.730061252 seconds)
    (53/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.643893641 seconds)
    (54/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.924424649 seconds)
    (55/286) benchmarking ("sort", Int8, true)...
    done (took 6.313188787 seconds)
    (56/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.314630493 seconds)
    (57/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.820142116 seconds)
    (58/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.629721373 seconds)
    (59/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.424810094 seconds)
    (60/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.410173439 seconds)
    (61/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.573628462 seconds)
    (62/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.376065072 seconds)
    (63/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.913668788 seconds)
    (64/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.338749923 seconds)
    (65/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.169974167 seconds)
    (66/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.315897815 seconds)
    (67/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.370078161 seconds)
    (68/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.423338417 seconds)
    (69/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.941505263 seconds)
    (70/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.687405411 seconds)
    (71/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.59552045 seconds)
    (72/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.398058891 seconds)
    (73/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.535734897 seconds)
    (74/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.825558565 seconds)
    (75/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.331301037 seconds)
    (76/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.436275205 seconds)
    (77/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.350222223 seconds)
    (78/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.424457037 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 5.549314255 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.207585125 seconds)
    (81/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.314627688 seconds)
    (82/286) benchmarking ("sort", Float32, true)...
    done (took 6.320990002 seconds)
    (83/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.323369553 seconds)
    (84/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.321714445 seconds)
    (85/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.410927176 seconds)
    (86/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.61323251 seconds)
    (87/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.842842209 seconds)
    (88/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.536455786 seconds)
    (89/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.315352426 seconds)
    (90/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.360937757 seconds)
    (91/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.970929283 seconds)
    (92/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.192298899 seconds)
    (93/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.312498782 seconds)
    (94/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.304302881 seconds)
    (95/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.345030438 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.675997471 seconds)
    (97/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.34617953 seconds)
    (98/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.314129039 seconds)
    (99/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.744319706 seconds)
    (100/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.302211774 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.537091098 seconds)
    (102/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.177261293 seconds)
    (103/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.151549411 seconds)
    (104/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.531294614 seconds)
    (105/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.927594607 seconds)
    (106/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.840110289 seconds)
    (107/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.315450317 seconds)
    (108/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.100586314 seconds)
    (109/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.331180385 seconds)
    (110/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.441999837 seconds)
    (111/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.399112007 seconds)
    (112/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.101289753 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 1.836425434 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.339201552 seconds)
    (115/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.303422035 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.971611113 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.572039394 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.973508308 seconds)
    (119/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.708411889 seconds)
    (120/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.273556633 seconds)
    (121/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.395055214 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.574552679 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.22417171 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.102349292 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.04112244 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.572757303 seconds)
    (127/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.276090031 seconds)
    (128/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.332161922 seconds)
    (129/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.301822302 seconds)
    (130/286) benchmarking ("sort", Float64, false)...
    done (took 5.608102581 seconds)
    (131/286) benchmarking ("sort", Int8, false)...
    done (took 4.362690753 seconds)
    (132/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.877946581 seconds)
    (133/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.781893683 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.426465755 seconds)
    (135/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.398592061 seconds)
    (136/286) benchmarking ("sort", Float32, false)...
    done (took 5.333695029 seconds)
    (137/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.335810863 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.109737948 seconds)
    (139/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.304906037 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.342726045 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.272438469 seconds)
    (142/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.145099701 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.281163325 seconds)
    (144/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.381358713 seconds)
    (145/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.302883092 seconds)
    (146/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.304810558 seconds)
    (147/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.168337602 seconds)
    (148/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.363382482 seconds)
    (149/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.31918688 seconds)
    (150/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.318347 seconds)
    (151/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.933921706 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.340738798 seconds)
    (153/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.345160406 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.935201179 seconds)
    (155/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.317642099 seconds)
    (156/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.346276703 seconds)
    (157/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.440897107 seconds)
    (158/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.3879329 seconds)
    (159/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.318916907 seconds)
    (160/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.334221487 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.749740037 seconds)
    (162/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.320638631 seconds)
    (163/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.123963753 seconds)
    (164/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.789449907 seconds)
    (165/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.421926586 seconds)
    (166/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.330764615 seconds)
    (167/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.117456139 seconds)
    (168/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.305949574 seconds)
    (169/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.345553371 seconds)
    (170/286) benchmarking ("sort", BigInt, true)...
    done (took 6.319306427 seconds)
    (171/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.697578301 seconds)
    (172/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.590451376 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.346285974 seconds)
    (174/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.039557395 seconds)
    (175/286) benchmarking ("sort", Float64, true)...
    done (took 6.345998535 seconds)
    (176/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.343887596 seconds)
    (177/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.30874107 seconds)
    (178/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.55938757 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.379491623 seconds)
    (180/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.787238793 seconds)
    (181/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.783648058 seconds)
    (182/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.346348736 seconds)
    (183/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.306060443 seconds)
    (184/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.83429666 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 5.344169537 seconds)
    (186/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.346281204 seconds)
    (187/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.306586313 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.393673214 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.274511701 seconds)
    (190/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.429574076 seconds)
    (191/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.511080357 seconds)
    (192/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.308324924 seconds)
    (193/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.324458556 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.528206909 seconds)
    (195/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.791468835 seconds)
    (196/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.307736947 seconds)
    (197/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.604809756 seconds)
    (198/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.33743175 seconds)
    (199/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.323091017 seconds)
    (200/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.378979552 seconds)
    (201/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.452344967 seconds)
    (202/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.321486444 seconds)
    (203/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.264877718 seconds)
    (204/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.425443986 seconds)
    (205/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.346918308 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.343136172 seconds)
    (207/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.306817342 seconds)
    (208/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.554915823 seconds)
    (209/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.423960134 seconds)
    (210/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.429011756 seconds)
    (211/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.20101787 seconds)
    (212/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.699891923 seconds)
    (213/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.350959968 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.361919404 seconds)
    (215/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.512247032 seconds)
    (216/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.309413853 seconds)
    (217/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.325811152 seconds)
    (218/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.335511016 seconds)
    (219/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.944880595 seconds)
    (220/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.589748717 seconds)
    (221/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.778371215 seconds)
    (222/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.404080497 seconds)
    (223/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.477949246 seconds)
    (224/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.310740917 seconds)
    (225/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.351122108 seconds)
    (226/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.048301299 seconds)
    (227/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.361038298 seconds)
    (228/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.319137778 seconds)
    (229/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.336310425 seconds)
    (230/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.309473014 seconds)
    (231/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.699170644 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.404405076 seconds)
    (233/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.42792809 seconds)
    (234/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.392001977 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.540722963 seconds)
    (236/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.206174877 seconds)
    (237/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.323616567 seconds)
    (238/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.309559608 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.349544336 seconds)
    (240/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.671573115 seconds)
    (241/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.349270327 seconds)
    (242/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.540044963 seconds)
    (243/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.348902422 seconds)
    (244/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.309455418 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.720734148 seconds)
    (246/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.338958703 seconds)
    (247/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.86424342 seconds)
    (248/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.324023516 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.69114836 seconds)
    (250/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.328149916 seconds)
    (251/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.580294389 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.733012531 seconds)
    (253/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.330888385 seconds)
    (254/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.453487355 seconds)
    (255/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.411467803 seconds)
    (256/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.939913134 seconds)
    (257/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.349062674 seconds)
    (258/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.98746301 seconds)
    (259/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.121290868 seconds)
    (260/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.327277733 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.40917216 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.40986261 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.435739264 seconds)
    (264/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.785731676 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.147447486 seconds)
    (266/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.312122845 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.842711178 seconds)
    (268/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.344633341 seconds)
    (269/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.160700837 seconds)
    (270/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.721451626 seconds)
    (271/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.351686116 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.366482095 seconds)
    (273/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.105467819 seconds)
    (274/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.326245275 seconds)
    (275/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.351687532 seconds)
    (276/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.324670864 seconds)
    (277/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.313749636 seconds)
    (278/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.833897372 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.987483215 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.349512307 seconds)
    (281/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.327234914 seconds)
    (282/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.32240768 seconds)
    (283/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.223331634 seconds)
    (284/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.312939004 seconds)
    (285/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.313298162 seconds)
    (286/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.141535875 seconds)
  done (took 940.037195025 seconds)
done (took 941.267428211 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.359500726 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.354953871 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.337125249 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.359317697 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.448954081 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.512930379 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.347247652 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.339716742 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.385221008 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.387473327 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.336425769 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.511932872 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.340111987 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.337930568 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.336938247 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352728104 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.419007055 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.339370072 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.355535229 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.346225527 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.354864595 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.337625649 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.38816389 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.512498361 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.342879639 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.340533569 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.341961926 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.359344444 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.450829436 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.342906895 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.34227301 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.350462043 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.422341901 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.337589062 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.333809542 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.360488953 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.350462604 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.34901488 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.343406222 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.37174165 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.843177797 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.34040177 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.341935809 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.341350064 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.340961546 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.346365968 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.342518468 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.347174774 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35501354 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356885434 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.838408372 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.356295787 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.345125036 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.342187906 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.352187664 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.340675849 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.343852145 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.35926979 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.361000527 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358997189 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.41352842 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.345931226 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.344222053 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.357634634 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.348748899 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.874007904 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.336702656 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.345999124 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.850284455 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.348040461 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.874816137 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.349937999 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.343289597 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.355780666 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.374210412 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.429048556 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.337577923 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.342178776 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.350160443 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.341632968 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.35305801 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356635391 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.347719721 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.34352112 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.35766781 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.517431904 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.3536339 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.34466399 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.351433133 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.362708936 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.351178629 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.353312798 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.345470041 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.337881606 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.351799378 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.346805325 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.346825191 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.345426634 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.347805572 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.353871127 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.848849826 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363366229 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.340165061 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.339764078 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.343760332 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.358098605 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.849556787 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.34526711 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.365367682 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.392038501 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.34570621 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.419298434 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.348414394 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362019217 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.353272857 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.34841407 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.339408233 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.421918224 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.843547272 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.361226217 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.346481655 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.344127163 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364061492 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.347414134 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.34125713 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.435637923 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.347571887 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362693648 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.467204794 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.35598018 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.377711964 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.343514797 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.348809036 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.375403999 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363546999 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.37717325 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.349419836 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363465237 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.362554695 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.343768607 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.357322718 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.358178959 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.347384986 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.352142457 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.341087116 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.376938914 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360752921 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362050638 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.367392396 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.467582561 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.343877756 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.423670714 seconds)
done (took 228.347355665 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.407583718 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.341143186 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.435880348 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.343447345 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.44465504 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.446527475 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.34062587 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.340314451 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.341138387 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.755989501 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.340637991 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.342553837 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.343735531 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.342576391 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.42898936 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.343994878 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.342576985 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.733595459 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.344961307 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.414937396 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.341975751 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.342347153 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.345583156 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.756933835 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.341595661 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.342068662 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.415384696 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.344876907 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.7233834 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.342053417 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.340664867 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.692212 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.434747584 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.362749478 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.356161869 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.352254802 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.447197215 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.364555057 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.426617334 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.425307661 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.439302563 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.386079322 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.339887292 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.346682417 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.347094696 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.348260922 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.343759467 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.373116935 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.341907459 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.343195561 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.731414773 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.356329272 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.343918643 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.344920456 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.343871411 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.376542602 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.345120845 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.348431225 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.437726841 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.348490667 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.410844808 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.792781712 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.72693131 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.348439643 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.346498789 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.344720381 seconds)
  done (took 149.487228883 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.414401285 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.430589605 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.463388943 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.348857391 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.400768282 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.468341203 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.349789339 seconds)
  done (took 11.135233537 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.35413923 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.349536843 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.397478744 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.39896315 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.34994837 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.5268213 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.349090427 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.359891775 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.346252287 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.40039176 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352999979 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350375619 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.356754624 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.351283594 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.397274781 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.359906357 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.463610801 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.349967215 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.350429828 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.500652464 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3465506 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.355964983 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.40131429 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.360762371 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.354083206 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.356142768 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.184729315 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.351504524 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347706476 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.349957783 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.346963142 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.429661247 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.350612835 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.34668539 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347847744 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.465674709 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.350826848 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349115779 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.350828465 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.348169652 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.351088568 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.351238839 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.351436609 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.348890345 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.351866846 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.373220694 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.351331024 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.35075379 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.351225578 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.352914739 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.403260401 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.352420156 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.348345979 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.350101077 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.405693529 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35942357 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.353205593 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.349857645 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353032275 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348949252 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.502456289 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.400225991 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.351409341 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.400772162 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352641101 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.352322595 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.352568662 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.351394128 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.406724615 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.352244686 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.400185341 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.349657857 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.531837602 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.375718493 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.354014828 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.356142506 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.355455147 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353651209 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.346439648 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.358367577 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.349974017 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.354379457 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.359289026 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351676818 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351309904 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.525094932 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.458510214 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.351132973 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.367254553 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.360765846 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.352407288 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.407867336 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.353855634 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.351899904 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.406113613 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.469110887 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.406865212 seconds)
  done (took 155.363623154 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.358770069 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.362714865 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.356430565 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.377654856 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.355589387 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.35399253 seconds)
  done (took 9.429874587 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.357885094 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.356232069 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.3539473 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.354172418 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.355967965 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.358468875 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.355903651 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356690011 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.359868922 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.355695336 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.358816699 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.358736618 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.35980822 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.356411954 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.356221674 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.35539038 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.357141321 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.353984665 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.356347398 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357279335 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.451760162 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.357653276 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35826408 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.358260035 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.364564413 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.357412281 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.36463486 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.357234212 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.356221189 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.364370372 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.378058098 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.361224438 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.359477573 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.363921629 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.360899698 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.358894991 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361423379 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.360400142 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355374618 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.359475605 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.361069158 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358563338 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.358225247 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.360771393 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.359196463 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.362748772 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.365591061 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.365407252 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.358525716 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.361385189 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.361527919 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.358513454 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.361641504 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.361910888 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.361158579 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379523514 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.365562063 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.359808156 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.359591706 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.360613498 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.360023304 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.363323378 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.361836525 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.363194816 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.365912721 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.36142378 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.361758873 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.363823584 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359678367 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.359416957 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.362101381 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.35718552 seconds)
  done (took 100.293097305 seconds)
done (took 426.964781431 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.365113988 seconds)
  done (took 7.634571122 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.476319886 seconds)
  done (took 7.74832049 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.837190811 seconds)
  done (took 23.113759473 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.458447667 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.433146439 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.357157201 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.358937339 seconds)
  done (took 26.878083808 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.450452692 seconds)
  done (took 7.720145968 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.353495292 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.360231282 seconds)
  done (took 13.985985831 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.436452376 seconds)
  done (took 7.707171308 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.070635594 seconds)
  done (took 8.346885693 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.367046893 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.355911318 seconds)
  done (took 14.25962801 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.358229449 seconds)
  done (took 7.629719054 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.326984934 seconds)
  done (took 12.59955491 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.365723935 seconds)
  done (took 7.639076828 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.418155889 seconds)
  done (took 7.68948233 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.757523502 seconds)
  done (took 10.029009016 seconds)
done (took 164.252840563 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.354158471 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.354637966 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.354914097 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.354957441 seconds)
  done (took 26.68955163 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.395603099 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.395449307 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.397081267 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.407304388 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.397445282 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.396215387 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.387504861 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.386994559 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.405788214 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.399572699 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.397327437 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.397871744 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.395529767 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.387523376 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.397787215 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.397807374 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.407624448 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.397501458 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.388729016 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.400007624 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.363255193 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.406972021 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.400139126 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.364474106 seconds)
  done (took 34.743801201 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.886918983 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.437486798 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.51827324 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.416940492 seconds)
  done (took 7.533531118 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.415066219 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.417404282 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.428549408 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.469308281 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.510508897 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.426593215 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.387914646 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.384943385 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.371223071 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.416327269 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.500219833 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.432511733 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.518503449 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.363010884 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.548960127 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.364176969 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.364004094 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.416696003 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.467316043 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.482235402 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.364947915 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.41589912 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.41995055 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.433529022 seconds)
  done (took 35.593785899 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.363775658 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.382549355 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.363685409 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.362559205 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.372561718 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.362733179 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.364297149 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.365064807 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.364011843 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.370036439 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.363833479 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.376854622 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.363593222 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.364453671 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.371188309 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.365546952 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.369527112 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.363816768 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.364247444 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.371599029 seconds)
  done (took 28.620929108 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.35832443 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.246802421 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.710680353 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.614676893 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.360739048 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.366537011 seconds)
  done (took 28.933720653 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.441904393 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.577776548 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.367503032 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.748823741 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.824797145 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.369286984 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.367461855 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.620432886 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.964994036 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.961867734 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.434632075 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.436946307 seconds)
  done (took 20.39498151 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.363450145 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.360802802 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.365296287 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.375757845 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.424906921 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.371023481 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.373695476 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.361711998 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.425018287 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.429788623 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.371388365 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.426859167 seconds)
  done (took 37.928389404 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448265383 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409523436 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.405358305 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439816289 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.093158244 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572264384 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.370968675 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122413199 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.385780744 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634395772 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360709335 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46651105 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.619402912 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37798674 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.362422771 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.412605557 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595863322 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860820407 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365155023 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.596070235 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386159717 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36727392 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.666965334 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.612234095 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574649497 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.345819272 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.621829741 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.138767742 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66505653 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376132695 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373417453 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362188484 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63577935 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.422903478 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458926719 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591393079 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36326914 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.911356123 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.352930493 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.622118159 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366731189 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36705244 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374328942 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364118477 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.29819173 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362843684 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.51525585 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.368841215 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.075178064 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.363627241 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639801084 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460525252 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.368173913 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.355149828 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447401062 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.376708935 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.366988504 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463700486 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932997509 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.850803781 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367089657 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.298974106 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374607633 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.612356487 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007177378 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.370075139 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.368147922 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36860135 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299603143 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.59495654 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381208539 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502863897 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.390339497 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.025888621 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104952276 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.368316013 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.296488164 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928561668 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383839371 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.300006643 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595315077 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142909463 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306385827 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.315385634 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.300025453 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116322184 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381504209 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.862860172 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394486319 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.102983139 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.619523274 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38469379 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390988681 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.591796031 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.252227593 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367009046 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.372781072 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483011208 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388783516 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.106523662 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321027037 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.371277068 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624613829 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.579358512 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369470724 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.428231059 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269269295 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366884709 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.400164068 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.378308376 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.607668232 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.978028893 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384816957 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.883931736 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38452313 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.145464047 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158616602 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379743701 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.371296706 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.372531788 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646400366 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.193112413 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.258907876 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436857083 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377365142 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36966039 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.757796532 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.223190117 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.26082565 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.592032887 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38895861 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.387224101 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.371685734 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330006553 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.369256552 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370047513 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.169626884 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595212793 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370226022 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644220536 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30464354 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507566111 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38605331 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.594374253 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.611470152 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.374920803 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632921821 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380852832 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37919706 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381472707 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390398884 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470055429 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393154259 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.375678381 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.628686227 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.374522274 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.374600985 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.763072655 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.14991861 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373718954 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.376267753 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376950345 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001592861 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342077871 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373440271 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.264709397 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.385197285 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439456108 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376979779 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606753543 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.7378826 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378860037 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.377480822 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.382997589 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596608616 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383120469 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.622125764 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452996933 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.882617784 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0167453 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392750238 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.306944927 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.08264928 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.06461455 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372980408 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.563864184 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373140389 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.604672424 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388419619 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392755288 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.995956669 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375118127 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.620119939 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.379464762 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385285145 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.688362493 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37493521 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.721236679 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.898218021 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378966098 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.384859463 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515847166 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.387890784 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.307937673 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.890852694 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379718732 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375578992 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.150588154 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409491818 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.625223478 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.723548698 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661231438 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391247507 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653386291 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.707733146 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.408337298 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.373097276 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379753452 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381463427 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.374678477 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404028819 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.385836636 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.627317202 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.824075434 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939700979 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140741698 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929798082 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.703509239 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.385519069 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.275100238 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.120476449 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330460578 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.035708841 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623999162 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120170879 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353720829 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291445789 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.621403065 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190662675 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657551803 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607408607 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.701419106 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.379136303 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659141568 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590419924 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411045301 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.385174276 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.305536864 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.664304849 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497394435 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377424854 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455389942 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.586209419 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377401481 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.155084958 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.4606225 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.15789108 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.161121669 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.925295604 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.773314838 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391619503 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380654444 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.725170055 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405925784 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.906661663 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025186675 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386937216 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.888697552 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339900199 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.614066585 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.390436043 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.383076895 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.055946812 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.383815037 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.634878236 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660091174 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315442859 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382679189 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934100156 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.237527623 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.384455332 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379673746 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173743536 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402121541 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683480887 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.381079534 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.745204177 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384735512 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.314344142 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314023384 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.072872004 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385406945 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35067827 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88716434 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.385291401 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412780032 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387097984 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230667157 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637600414 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.394380374 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.998805395 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607851737 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384707902 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421443342 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.384609448 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394808768 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.369196957 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.27584984 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.617037336 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398620113 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634266841 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.406963178 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.288827515 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.469881653 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600862449 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.277159517 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382682248 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626516385 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.091855213 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.403593816 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127385573 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407993903 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381976329 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418522377 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.385647244 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402589239 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452582017 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618553717 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.39379576 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.39326593 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.19256823 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382566319 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384517227 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.397391387 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476858153 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.922573938 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.755682885 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.15571594 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005557532 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161323475 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.010068537 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665388699 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386116549 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385279035 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317459618 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531878797 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.913336812 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657025398 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503628479 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.400643244 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406930719 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396701328 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390883703 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604080696 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658903793 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.260192014 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388905811 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.047446535 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.266624455 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39613553 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.597348696 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895538512 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959844123 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507987859 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.385082996 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.157029828 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679368551 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.476879568 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386014141 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.980679153 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.39231119 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.150545086 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.39218112 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401401772 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53246702 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667155242 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.504380333 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.397038689 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.546410725 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.15922083 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.67492383 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.642955923 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.871903702 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.623810368 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010983119 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.150638613 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658801616 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457698464 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623792393 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.505296498 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535005226 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.391648953 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.288407474 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388210059 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235417887 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.097212052 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.398049897 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02484206 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652027929 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.391284102 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.393480929 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410312425 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.396906226 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.611846162 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152458064 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619340011 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398756633 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39308619 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.380595472 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025017452 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680584635 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324070407 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.392142694 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632161281 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.626546149 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414458039 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.841589391 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.099631392 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962782718 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.365143448 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410322107 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388353396 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.161736921 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035243516 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.777708022 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897530063 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.050753928 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389972091 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663997547 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.394802987 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397100558 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673032896 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.393800574 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.395238293 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634697359 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.02350507 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222226229 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.410837882 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.837434727 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.327216176 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.619042601 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.494506962 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335376769 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400261766 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.863266982 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418996028 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511453987 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402778305 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.396177452 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40784386 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.151518769 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680199417 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.396862614 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.383618624 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.397869006 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.392931801 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492367815 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.478192474 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400972905 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.064464132 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.743695468 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.648254098 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.39839273 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.385904661 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.395928281 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393645643 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.116806768 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.370834382 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406484931 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970007546 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.394248395 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.410798936 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397146692 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.609758886 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605700204 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.3933025 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648978667 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396139905 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414149001 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.298760042 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.166278349 seconds)
  done (took 1703.970628121 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.396085007 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.409247523 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.417495406 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.455271325 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.42423073 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.422541074 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.491045152 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.479788678 seconds)
  done (took 52.803872647 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.40850253 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.552022841 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.426777641 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.407080395 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.403304197 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.404094363 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.875553937 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.410264274 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.404561353 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.404162421 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.411674198 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.392841735 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.05026124 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.404066048 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.404548326 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.398656075 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.402775163 seconds)
  done (took 66.475571796 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.756948774 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.694499072 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.67002885 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.442030545 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.428707697 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.399716732 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.763088316 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.411690601 seconds)
  done (took 54.874903027 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.405788697 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.407445703 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.40685107 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.407787399 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.407606465 seconds)
  done (took 8.34487779 seconds)
done (took 2108.182267114 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.399630895 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.402625753 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.402082821 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.402520908 seconds)
  done (took 6.915902584 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.382843487 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.130662346 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.384520634 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.398504379 seconds)
  done (took 18.606383662 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.405825173 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.396333125 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.140913617 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.058084548 seconds)
  done (took 5.510442049 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.149989 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.161029283 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.146049965 seconds)
  done (took 7.768197514 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.399959689 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.407465025 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.407043114 seconds)
  done (took 20.526711406 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.705707331 seconds)
  done (took 3.019401735 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.545823397 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.597184589 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.750472007 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.740799812 seconds)
  done (took 7.94934409 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.787835313 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.770495643 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.594733824 seconds)
  done (took 6.466084738 seconds)
done (took 90.874998919 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.484172461 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.803401091 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.605469765 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.458153481 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.631553384 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.605492543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.709052974 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.419904704 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.958903436 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.948471761 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.495297087 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.63319953 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.656476763 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.80453288 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.657244487 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.428747135 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.631259514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.518742712 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.14546896 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.339240043 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.707457 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.086041806 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.327269317 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.114430587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.632060714 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.553270907 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.695450462 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.4292281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.327037486 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.710702366 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.554362052 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.399967396 seconds)
  done (took 196.78620776 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.39992139 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.400322226 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.401639091 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.402594781 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.400893948 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.419891025 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.40216422 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.40100856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.402926976 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.433830329 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.407059853 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.402127415 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.404225156 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.420285822 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.402082879 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.402321025 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.402956005 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.419590894 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.420016496 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.402011581 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.419647213 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.402163305 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.403727801 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.419146556 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.402344768 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.412683276 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.417006234 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.40185988 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.424133326 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.42404392 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.435064178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.403047769 seconds)
  done (took 206.428675595 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.413787256 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.403299385 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.41530502 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.402832414 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.403048805 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.411027611 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.403304053 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.420966144 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.436149863 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.406326585 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.414161466 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.404386113 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.406671799 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.421228784 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.404872142 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.403760724 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.411897208 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.403950907 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.416867709 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.404687169 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.405367649 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.419343275 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.404015072 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.421029311 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.405829655 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.41983856 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.419404605 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.420450868 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.404707549 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.404685615 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.423039144 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.43154902 seconds)
  done (took 206.50563555 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.59999642 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.411550025 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.413188715 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.370685878 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.412645215 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.41260812 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.409807077 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.610575877 seconds)
  done (took 14.959301474 seconds)
done (took 625.994367493 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.813947605 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.520510019 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.61780919 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.435630905 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.248389605 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.45181837 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.43310185 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.613498328 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.356357346 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.621652838 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.718111022 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.431699265 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.863747993 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.431618271 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.697060748 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.535271336 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.364309381 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.470240335 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.764079201 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.988564131 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.706908759 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.965260053 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.61744035 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.351101907 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.877438458 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.963170314 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.174586114 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.351654082 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.451658527 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.767651939 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.172534699 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.477007561 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.481443759 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.482545832 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.539000851 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.535729858 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.42425109 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.496687635 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.620435879 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.726664099 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.017453956 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.172590391 seconds)
  done (took 96.071278444 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.404832647 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.404496494 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.402702145 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.405033257 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.40540183 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.404260395 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.403207436 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.403610509 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.404097387 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.403997882 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.404895577 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.405162956 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.404286546 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.406101195 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.404406844 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.403377917 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.405173482 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.406854575 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.404560349 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.405027165 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.406168228 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.404112791 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.406039591 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.405070995 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.405571247 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.406920253 seconds)
  done (took 37.849002915 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.417252026 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.67131243 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.846415592 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.42323814 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.418106549 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.4233249 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.502062584 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.419257321 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.420465105 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.421783597 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.591889344 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.421708523 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.454136532 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.873896154 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.42043918 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.419219784 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.419132823 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.418750617 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.680882775 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.427569768 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.52293402 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.419959875 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.50226744 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.428799858 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.442283431 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.42043519 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.424851549 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.989285212 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.422930952 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.593893157 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.29107966 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.506575267 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.931462884 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.857938016 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.296468985 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.428477492 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.419719319 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.597539785 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.422161741 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.42070498 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.503152506 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.420711838 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.857226293 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.092151539 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.439220545 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.421451573 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.008078319 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.597982517 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.685988805 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.429257196 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.890740285 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.423918364 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.422736878 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.422046141 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.68696357 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.428227026 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.422636674 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.998964291 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.444490744 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.504263702 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.422052987 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.422245759 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.689083853 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.423154291 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.677198755 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.423273652 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.429207845 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.443419417 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.860443256 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.425165088 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.117052654 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.442934026 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.422659446 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.595592487 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.677087956 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.042736199 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.426089015 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.694083985 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.947780488 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.504560087 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.427413395 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.978420957 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.508007191 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.427240834 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.426139036 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.425161379 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.423816963 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.470307346 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.504255517 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.053873402 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.114046555 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.029609337 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.526409527 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.432716791 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.424032251 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.000339499 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.442051851 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.423898885 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.856641544 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.119396341 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.451035125 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.431882016 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.121295596 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.450135364 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.510550393 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.436335068 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.869352492 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.426142363 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.471522802 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.424970998 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.431547008 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.448553377 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.509419128 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.427740319 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.425725034 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.096563541 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.627460837 seconds)
  done (took 187.51961367 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.419381788 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.418709471 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.419187172 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.439340413 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.41872189 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.427870458 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.41898201 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.418689954 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.424675396 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.419397023 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.420271284 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.421645437 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.421516556 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.429926281 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.431743744 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.427246615 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.035948234 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.421541081 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.422823734 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.420225398 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.243396177 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.423282769 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.42178305 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.421458075 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.421143946 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.421504621 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.421666376 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.423140904 seconds)
  done (took 154.607735746 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.429131206 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.036801911 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.42985802 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.569849898 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.45093426 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.426363125 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.566324069 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.488715362 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.429134997 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.426199309 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.425393947 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.755004317 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.429575746 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.983024651 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.635981136 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.568155481 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.981647032 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.448158214 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.426458193 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.426986095 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.57104227 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.439394954 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.763078338 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.070621106 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.4389646 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.040971703 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.419425745 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.429825887 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.428144778 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.04070007 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.427642608 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.756637266 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.512648623 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.494665683 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.042628917 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.986437404 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.002078004 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.591266291 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.436930036 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.427332354 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.427774227 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.419841499 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.043969298 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.431903553 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.430553247 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.037479368 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.449192053 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.432318792 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.434586445 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.429809364 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.492301672 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.49479569 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.762337506 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.049782177 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.512508445 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.44248027 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.576342501 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.829349918 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.433963688 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.987771746 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.419107851 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.046321097 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.452701633 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.421362125 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.433042451 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.436291569 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.596098977 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.584707945 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.99654828 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.45037712 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.98781768 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.614916602 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.437705478 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.430835953 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.433437666 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.061526421 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.993329223 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.613782722 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.58696025 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.647502382 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.422903285 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.431535557 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.421747969 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.514883789 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.430518322 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.047578675 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.007914657 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.451435963 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.434695105 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.433593522 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.435032594 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.623849305 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.049685876 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.515877328 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.98372415 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.781725242 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.764658671 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.435120486 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.496173246 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.450797607 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.764141897 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.435359651 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.493798241 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.887046712 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.765849203 seconds)
  done (took 171.234586174 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.690075973 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.738248597 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.53709591 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.586069445 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.058088831 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.020524563 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.817825465 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.583526087 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.549126386 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.712616585 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.717374867 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.531232386 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.657808845 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.513416597 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.163468916 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.504714535 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.530956226 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.580751832 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.580391554 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.513755167 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.141795836 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.746225759 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.634050946 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.465233585 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.537663641 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.228871914 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.019973575 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.97096692 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.611750989 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.855580274 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.989744257 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.608222118 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.443022102 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.150586123 seconds)
  done (took 69.331469042 seconds)
done (took 717.933162979 seconds)
SAVING RESULT...
DONE!
