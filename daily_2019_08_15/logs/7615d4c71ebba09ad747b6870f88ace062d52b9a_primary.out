cset: moving following pidspec: 12672
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.347565114 seconds)
loading group "string"... done (took 0.540105204 seconds)
loading group "linalg"... done (took 7.118920041 seconds)
loading group "parallel"... done (took 0.15853997 seconds)
loading group "find"... done (took 1.133873996 seconds)
loading group "tuple"... done (took 1.751874651 seconds)
loading group "dates"... done (took 1.259210713 seconds)
loading group "micro"... done (took 0.223746277 seconds)
loading group "io"... done (took 0.915454294 seconds)
loading group "scalar"... done (took 38.11537587 seconds)
loading group "sparse"... done (took 11.253135261 seconds)
loading group "broadcast"... done (took 0.990165871 seconds)
loading group "union"... done (took 12.799850355 seconds)
loading group "simd"... done (took 4.460545937 seconds)
loading group "random"... done (took 8.983419353 seconds)
loading group "problem"... done (took 1.859721261 seconds)
loading group "array"... done (took 19.986975879 seconds)
loading group "misc"... done (took 1.759138889 seconds)
loading group "sort"... done (took 3.156740664 seconds)
loading group "collection"... done (took 16.816387797 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.482004231 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121597953 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112977222 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117198046 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138788422 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113992459 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121925923 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082735708 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.767656442 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143432954 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117439238 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.407190524 seconds)
done (took 4.883624818 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170241975 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080902128 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080411889 seconds)
  done (took 1.27641293 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064502092 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120048265 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065095184 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065695776 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066187717 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065286168 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064836699 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065086436 seconds)
  done (took 1.628159422 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072213122 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06776783 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068251827 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067418364 seconds)
  done (took 1.391040734 seconds)
done (took 5.653863081 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.75821702 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.196701558 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.180923462 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.389530429 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.125335793 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.148945849 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.629696424 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.336041973 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.181741759 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079362642 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101398503 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317065203 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105347119 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635259169 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077177611 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088694802 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136357425 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.450881371 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066163341 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081371258 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087914869 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127335066 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.083945799 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074593209 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142019061 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066679664 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128226241 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078716544 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065699093 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205822971 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171724848 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651351747 seconds)
  done (took 10.121818268 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095059757 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.094955585 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067149701 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135018255 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096274975 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068385974 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069751292 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066382921 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08561144 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126674282 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087464448 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099309876 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064977045 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067663458 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083007871 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202768125 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081182797 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082285549 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069967002 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074259303 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115016556 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077109313 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077080411 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075806897 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127034096 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179980122 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.0987089 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098518228 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067957762 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078874338 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113525064 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127097733 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066684162 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066422217 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122680025 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094011713 seconds)
  done (took 4.556637435 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.914054637 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.137433077 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089575251 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160230454 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066567862 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105463961 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064388945 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083189804 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.196136297 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.275828221 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.562041785 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109618971 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097838765 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066502067 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06747692 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065791898 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.344448739 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.121651567 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112586346 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08483243 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074394221 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070612366 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.348571324 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069277859 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06743907 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068950693 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058760966 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112318015 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067201694 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.953396813 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120170303 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065279753 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098535403 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.159629098 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081670901 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.215421186 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134906176 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065488031 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064812287 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.147446825 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073886549 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065762091 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082044358 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102629793 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.108402054 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068225856 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066931894 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162052891 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065804547 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081935343 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.96908663 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153742932 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078167461 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066426255 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.241013942 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084596887 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066277843 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064048889 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176954977 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127927644 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066456661 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065915658 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064628735 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068467115 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.355515646 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068100802 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064588303 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068100443 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077359894 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.92647896 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070904969 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067211991 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071570809 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071149136 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084168555 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.064935421 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.073925417 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064699036 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064595488 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066924462 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083050774 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.356365314 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06714679 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066840825 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.088779547 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064166524 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08552662 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100339225 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068276509 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064187824 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099033481 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.16970117 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06771782 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100784523 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066394059 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06377312 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083426006 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.0687242 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112379965 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067688014 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.096053177 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066365559 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098237139 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.0683828 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098276115 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080335085 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069520843 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.395116779 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06467686 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064054927 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067216861 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067033156 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066205067 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06754851 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078458018 seconds)
  done (took 20.968621265 seconds)
done (took 37.675020845 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271706559 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073435435 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074003547 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073338386 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073476684 seconds)
  done (took 1.775628843 seconds)
done (took 2.966286178 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119060541 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098152826 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063864534 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094317336 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063442701 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098554293 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098200916 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080276484 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097767861 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06349801 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094857314 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063265734 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06356913 seconds)
  done (took 2.308892478 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081690669 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08210547 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068645175 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081259012 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062467309 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081866465 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079526497 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087084682 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079665794 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071327058 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062869895 seconds)
  done (took 2.024447689 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081056796 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082281169 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069363491 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080257762 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062723483 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080700589 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079794352 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08419805 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080543182 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07224725 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062832647 seconds)
  done (took 2.01706101 seconds)
done (took 7.529249351 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076564833 seconds)
  done (took 1.249623293 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.578293297 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.053224072 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081161884 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11077148 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181245042 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11672243 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272292939 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085488514 seconds)
  done (took 8.832048671 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087934529 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.081667189 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070662771 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068517505 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069413296 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069645932 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06751757 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069935944 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070504011 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067742461 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071391349 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06724667 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068035848 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06715652 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070921352 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070931716 seconds)
  done (took 2.383814713 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090720768 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089716264 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072543606 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073647264 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071098308 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07120705 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073440102 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072417032 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069790081 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070929428 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073790561 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072416549 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070637382 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064180798 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073138325 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074352236 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069842348 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073185309 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073803272 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073748844 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073269804 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063771788 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07019514 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072744261 seconds)
  done (took 3.034389926 seconds)
done (took 16.68019653 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111351675 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070742502 seconds)
  done (took 1.364921477 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080108685 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081636495 seconds)
  done (took 1.351946183 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080420765 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064772368 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087662219 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07633445 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065175992 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064894129 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085608321 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065099238 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064909442 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065262267 seconds)
  done (took 1.910802964 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068947673 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076557689 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068894406 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079781048 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073202272 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06325808 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071243576 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066612264 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075876769 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06240058 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069622022 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080654144 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069785031 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082094127 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070799979 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066949078 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069270018 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065720118 seconds)
  done (took 2.473411152 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064864486 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064951246 seconds)
  done (took 1.324008681 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065857077 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062341519 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065640926 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064880452 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06241548 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061930105 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06254997 seconds)
  done (took 1.636703685 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.363127211 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109457056 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.29176999 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.06959143 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079791195 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247698343 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06438355 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06924019 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069224192 seconds)
  done (took 2.597793339 seconds)
done (took 13.854046944 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077890947 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083940817 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093374667 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.339463486 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090593622 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065042168 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112992598 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184999578 seconds)
done (took 2.250017032 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.20927952 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.554282487 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.363411313 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193047506 seconds)
  done (took 2.309721543 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.310937485 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090569317 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.057981921 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065899546 seconds)
  done (took 1.73206719 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06532344 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067700636 seconds)
  done (took 1.336910547 seconds)
done (took 6.790751767 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065703399 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081825356 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065639144 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062644596 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.06278527 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064896134 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064784433 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.062519421 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062512324 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064756479 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067555011 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064792005 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.064641095 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064770903 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062950811 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062433592 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065036405 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068065509 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062313204 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062364172 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062264832 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064767641 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062301897 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062330827 seconds)
  done (took 2.791517695 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082097277 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065314838 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070874293 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069492096 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069666577 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069742804 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069963457 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065283607 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070451918 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067108518 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068572494 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068584877 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066901432 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068749648 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066919638 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068875959 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069991248 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066725563 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066761773 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06899712 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069522779 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065149135 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068986828 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069904633 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068452673 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068721455 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067125287 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06535844 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070007154 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06870349 seconds)
  done (took 3.273450202 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06892692 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062505168 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063266364 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069785111 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062754673 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063838842 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062526841 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063105705 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063234081 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062415943 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063845918 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062406193 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062530884 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063174758 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063770109 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066213955 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077679171 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06275145 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062674266 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063007024 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066028835 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062864463 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062457754 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062877013 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062535969 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062361574 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062976477 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06257171 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063306997 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062585576 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065592988 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066016134 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062392415 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069050173 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.0662324 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062446865 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066351826 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062434412 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06342515 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061915888 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061963726 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062558539 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063058732 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069092514 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062351214 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064201709 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062446599 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063693406 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062816671 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06496667 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062015587 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062295227 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063842494 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.176007018 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066264747 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061880903 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06298486 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061916628 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06321427 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062096644 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061838966 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061772843 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064898026 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062607462 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076665222 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068804346 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062154666 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06387048 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063334143 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065007638 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063567029 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075459106 seconds)
  done (took 5.948852154 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08910004 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085023725 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064067586 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064132845 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060716238 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063278482 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066507339 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062899915 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064335183 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068574068 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062995458 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06417634 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064058334 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075456277 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063074801 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063877086 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068197004 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060676346 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062748831 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065928654 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063024392 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065948631 seconds)
  done (took 2.695632319 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152010629 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06933581 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103090471 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071745822 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066505924 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071284753 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06835693 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068918482 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068914013 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066874899 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066901326 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068461788 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066376249 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066629202 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066678692 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067028931 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068818816 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066825557 seconds)
  done (took 2.565138588 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076157176 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064878813 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084864218 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065228589 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065124263 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066950298 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069298429 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072470409 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066962328 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065284593 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072626702 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067249938 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06707786 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064621662 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067190546 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064688034 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066918111 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064719112 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072694459 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068991228 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069389034 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072658262 seconds)
  done (took 2.737273342 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078871548 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06676979 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081353129 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06707143 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060952583 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063341583 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068852863 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065122408 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069147266 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066854462 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065178022 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063422693 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068291859 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064768285 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.0681093 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06474076 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066175443 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064629986 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066179506 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060861118 seconds)
  done (took 2.563294174 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08529425 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066223783 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066734742 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073877287 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066297548 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066166903 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073802749 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066060147 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066138154 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08568168 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065966727 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065967979 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073758539 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070664463 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065950894 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073567896 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073395146 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073952 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066067276 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066397694 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085848597 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066017896 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073556032 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065955816 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066061843 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066254503 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065845629 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070589792 seconds)
  done (took 3.195852769 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06617668 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064818591 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062909777 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063283465 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062679678 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062331514 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062806248 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062651667 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065660863 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062506197 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064643305 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064700121 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064776921 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064744324 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065504359 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065328278 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065644629 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062421324 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062171191 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062262674 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06453154 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064503338 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064921396 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06221553 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062209685 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064732001 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062307585 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062146555 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064902553 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062528424 seconds)
  done (took 3.139805877 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07427147 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071787145 seconds)
  done (took 1.375046534 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062456235 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078330724 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062261271 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069524236 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068159397 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065460755 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071854763 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068395798 seconds)
  done (took 1.771306682 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079965196 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075723081 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066451898 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078516087 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07545643 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081618848 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130378635 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065963262 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071710479 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063372334 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078926301 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064086933 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070842103 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065474071 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.0709671 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07124219 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062904274 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071265536 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067664215 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064253696 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066287368 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0733814 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067467044 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060713112 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066270457 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086385793 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075816854 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064757715 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068186041 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07279822 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070762091 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059611929 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064880006 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06545916 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063522655 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074360914 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079551907 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068114868 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07358455 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065785329 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07495597 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060182397 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069579708 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071300803 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074726921 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065768162 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065573635 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060162109 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062741749 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067285364 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060331722 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065104944 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059584366 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074441565 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06836647 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075616377 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063946714 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066562018 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068029997 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068102857 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071594679 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066855312 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067642998 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064603277 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074425489 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069615089 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073960177 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060487226 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059889803 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063621343 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074540938 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086884431 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071064745 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06568579 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065733676 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062671696 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068220118 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066206831 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070513768 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071445088 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064999589 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070219169 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072213235 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065398796 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067379069 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073027802 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06356379 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067686956 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062986947 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080722205 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064375279 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063208686 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063208183 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075235903 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068610162 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064534635 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063079645 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072147875 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059446174 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065950294 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066064067 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06602112 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074118794 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068614132 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068637785 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.0723232 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071189119 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064322575 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067076232 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061251894 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064680354 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063905856 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070683868 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058250533 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06656997 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064719911 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064323546 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.196301074 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06418205 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065953283 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073806692 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07198877 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065132482 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062702295 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069741404 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065981298 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068731462 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073775912 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06439249 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061403449 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061599026 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068919866 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065934519 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069551729 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070637817 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068657265 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060526141 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063623551 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070753782 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074599483 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066254084 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06731761 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071348943 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066697337 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064832739 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071923346 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068076574 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065097265 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070520525 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066306412 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061186249 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068585008 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068073091 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064515534 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069466654 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069282269 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068386695 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066093397 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064390096 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072548155 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067156095 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065530134 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066517635 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064467127 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076161043 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067653094 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061149476 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062605148 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074584912 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064324116 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065069704 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064925815 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067836882 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067111221 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063628539 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065026563 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067925764 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075461578 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069796512 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065997388 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070943161 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076230762 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065310186 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068016994 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065352275 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066875121 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065967442 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073594051 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070390128 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069355739 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067317962 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06210758 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070615106 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072516252 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065129916 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063253987 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064569018 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069478323 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070994066 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069656358 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065861072 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063723882 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065782335 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068098256 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067584968 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064830854 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064489403 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071450725 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063218672 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071979874 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065794713 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075079986 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068720124 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060614653 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0682712 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063546175 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071142816 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060561243 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063012571 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064935526 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066192203 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063979451 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067410736 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059849424 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071472979 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071277749 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064038083 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063291158 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063667172 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070176038 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06550067 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067568016 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067581525 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069611942 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074191585 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063247843 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06745385 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073767473 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063757117 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.186816183 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07115227 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06533827 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065276863 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064686525 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063487328 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069052385 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074928107 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072313255 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059995958 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068119974 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064020005 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064766771 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060838302 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07069008 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068710493 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066890556 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072289121 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06626362 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066620748 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069243489 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065415181 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066248823 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066945303 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068957612 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066528144 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067459343 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065626661 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069204239 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06567361 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064002344 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067701493 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065712308 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066093845 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072084821 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065615007 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065881683 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068106234 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066236101 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066317189 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066235185 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065488066 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068395438 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066389467 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067286146 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068621003 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061170814 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072391488 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065086396 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073046722 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066590141 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062680889 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073143192 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067683719 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071134079 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066411169 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066924217 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066505557 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065679587 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069067894 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072564857 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063990379 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076235583 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073312786 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065511149 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.067706908 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066175528 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067507331 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064704022 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.065935191 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066003113 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065910246 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065057876 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069476996 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067569488 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065486445 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066653625 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065864033 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065297319 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065974244 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.05987104 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064416053 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064674515 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064855021 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075198385 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065436279 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064899272 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064110358 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065922224 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06399167 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061906409 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072994347 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073989105 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065510967 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071989442 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064434308 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066610821 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075167882 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059512875 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063431705 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063149848 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063162618 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072373343 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065928138 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074325226 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06525373 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064679734 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062320998 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065446194 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063293746 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059124087 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062144581 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067560981 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063289418 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063098041 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06406348 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066514939 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064665197 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073063839 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063140491 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065112773 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064152698 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061466956 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063359875 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063741787 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.197895401 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067016078 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064400693 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062945865 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065314383 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066335073 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06726595 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065835153 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067139478 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075548994 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064814502 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068371954 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069153279 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060616911 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068106552 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065995981 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065798371 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065060425 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069213475 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069011631 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066879334 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074305707 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066174866 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066376669 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066286142 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063801123 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065983052 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065005916 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065724303 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06521918 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066551265 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074067984 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063499228 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068997359 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065791895 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066187399 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072292913 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066856794 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06870624 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071996075 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066252433 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067578166 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073515135 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069682628 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069101618 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066385737 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067280688 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07096173 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064912074 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071899722 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065821048 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066464354 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067464985 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063751719 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065174343 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065110403 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064921095 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071832072 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066315876 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06512279 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06463937 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062915098 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066385718 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068629756 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072226853 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067545173 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0692567 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060923413 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062732719 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066476408 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063363528 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066795238 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067839933 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070876359 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067384662 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065834865 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063890904 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073920357 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07075909 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068693574 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063155625 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068536146 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065925006 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067207639 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065873071 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065581412 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066319372 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069069922 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06731727 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064628538 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071971491 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068515615 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065973891 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067199314 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066480334 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065708664 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060693756 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06656882 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067490284 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070797282 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068046813 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065748194 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075796281 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063389162 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065698079 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069165762 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065017794 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070056258 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060549139 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066431405 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06542653 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065570435 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060531356 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064205155 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06213323 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066064275 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06326373 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059602658 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073919417 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072686741 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067431956 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062981867 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063091664 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059232073 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059119551 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.194634911 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066776231 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067661326 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075929588 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064868881 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064586856 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060642269 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065477615 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068977506 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068951094 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063169654 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061030723 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064923945 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069319735 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071075401 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064507801 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065003461 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068691234 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067405894 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064062378 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069539262 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062973036 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069317317 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078127295 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066236919 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066112732 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07180731 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074318589 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066478701 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061624235 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06589074 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068679374 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066325346 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066942611 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066665196 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080952722 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068743658 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064980344 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064690932 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068830165 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064926768 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07365282 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066747327 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065977479 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069789711 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067193873 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074340818 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069144652 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073059728 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068895927 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068870488 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064909472 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065618154 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063557893 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064548711 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066489212 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066471198 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070993744 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073689671 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065491428 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075609077 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074555649 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068006162 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062828435 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065297396 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06482204 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060951728 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066543982 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063622813 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063267715 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063873814 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064311169 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066492519 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070327784 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06634746 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066188141 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065300969 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059451469 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067382046 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067074238 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065877724 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062253392 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065267563 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065604285 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069199217 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068181855 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06304132 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066645343 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067284599 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065868702 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060483089 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071309675 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06418609 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067244367 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064668475 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065273639 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065804036 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068902615 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069556702 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066238938 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067790733 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069025633 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067256813 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062926511 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062960714 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07085505 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063584012 seconds)
  done (took 41.887490555 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097871941 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062044313 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061381486 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061736825 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072116817 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06209851 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061006999 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0624549 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061969209 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063923291 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060848341 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061041287 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069364761 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07667336 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07212466 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065623876 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060876336 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062133247 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060862143 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061796262 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069441258 seconds)
  done (took 2.708657341 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072148921 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069523701 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071308425 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074058986 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065818088 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069282436 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07091468 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069533907 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074070243 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065843586 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074164575 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069270436 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073951108 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.065770172 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065782402 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069442082 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074158682 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066264324 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069312282 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07091013 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069625047 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070901783 seconds)
  done (took 2.840756257 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065604399 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064773158 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06727114 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060300325 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065285601 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060341346 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068133244 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062905755 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067666812 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064473286 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.063834639 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064159816 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066234058 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060514523 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.064967298 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062554401 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105470505 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067780438 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064556988 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065675073 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060434881 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066826392 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060452919 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060727154 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063890759 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067864861 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065284103 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062675518 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06484071 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064108012 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064609489 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062624681 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066261201 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065356833 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063868497 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064050625 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064593266 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064252739 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060348118 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062821207 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064946964 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060856091 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064679196 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065846431 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06278819 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062351751 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065809007 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064364718 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059847741 seconds)
  done (took 4.481385897 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077839535 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106859103 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066700744 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086697927 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077968296 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073650411 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067864779 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087940256 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062102787 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063032856 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079287266 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07785797 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064449584 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069069684 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.0710471 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064297231 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065648687 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063987755 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068264555 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063814654 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068166907 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070712843 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078170994 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077103026 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068008632 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063331288 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064010273 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068599222 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076349341 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068689223 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068898308 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069721396 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078456939 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066545242 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063848275 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066610495 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07959704 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064504179 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066727067 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062277832 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066426412 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068480678 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070689916 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079646796 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06459361 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069228457 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064243552 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061530946 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076755085 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066386312 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071905879 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077806316 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06779403 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064505076 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068619986 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078772015 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064185429 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062743406 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067359562 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075817747 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061981649 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06799521 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07726057 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066276776 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071105561 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077474971 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069309212 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067929046 seconds)
  done (took 6.233446301 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073034637 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.07136919 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078628614 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078056965 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070682183 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070859099 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070609667 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070624523 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07043362 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075246228 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070488888 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091458193 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066370084 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073034442 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070676707 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07083972 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070766444 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07098123 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070637047 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070872442 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070821975 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078236846 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070793029 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0781154 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096679851 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066243256 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070755673 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070966902 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078129075 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070575883 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078053591 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070546993 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070974435 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078397114 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077663276 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070812146 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064093947 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070813871 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070675282 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070489904 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066332311 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078507776 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070510513 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066770517 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071016528 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070467996 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078234404 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077765618 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073141806 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074886007 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070770342 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078104416 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070567282 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07065235 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07802405 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102220778 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077987414 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077977539 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07042484 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077924084 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078217775 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084143352 seconds)
  done (took 5.920317884 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081292557 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07367429 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074241043 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060524477 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063300204 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068528552 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063231751 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.0630759 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072863354 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07277962 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075347238 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068235609 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071129673 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075149453 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068280557 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07113061 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068431908 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067999543 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072762303 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068265224 seconds)
  done (took 2.726549929 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072865901 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081400863 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066263885 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070654298 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067534303 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070112362 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067264609 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067697654 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065610642 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067639515 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074647039 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074211726 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065533476 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070408333 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074376122 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070329978 seconds)
  done (took 2.445166488 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073473086 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070819228 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078023866 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06512984 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063336821 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061703806 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06444999 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060336669 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061720599 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07646957 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064681648 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.066940125 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065005037 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063263241 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061955374 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067746248 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061379799 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062487994 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064376096 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076630588 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075332194 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063191152 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065274543 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064610292 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064877497 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069381924 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064300036 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06252288 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062288206 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065280417 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06525534 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068191256 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06237199 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062645346 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063449767 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062275795 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064723101 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065153745 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067121914 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.0646254 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062570596 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064538765 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064803614 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065417346 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061231809 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064731592 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061225366 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066805941 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062725051 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064524662 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064396995 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066843707 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065110166 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070862022 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067230755 seconds)
  done (took 4.92588745 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078121976 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067859641 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061016959 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063192542 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067313365 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066448116 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068296834 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066459789 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066511998 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063276036 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066387924 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067512885 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066465245 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068183995 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066379028 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068614434 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060902185 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066398544 seconds)
  done (took 2.530652145 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069488544 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065055523 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071774927 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064426844 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064661754 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066813938 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060775119 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064087308 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063565509 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064805043 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065077614 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067154772 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063481354 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066889033 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064741837 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064781216 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067167645 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063498586 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064560519 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061085513 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066957525 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063635578 seconds)
  done (took 2.759150072 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.070753506 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.089901235 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136063184 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.081972216 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.079697405 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077453099 seconds)
  done (took 1.861826285 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089022037 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077992097 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065877722 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086744366 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071810503 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066574031 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066252956 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06628361 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07463177 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074893675 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066284054 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074819541 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074488092 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073832582 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07205591 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071653638 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066232269 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065947595 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065121699 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082429696 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066415564 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074379225 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066108278 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065965397 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066523705 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073541801 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074469472 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074445253 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065743828 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074294052 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071831598 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066167222 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074414068 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074567308 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068141978 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074460142 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066134597 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082602713 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071514886 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073932839 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067669104 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071793205 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074605433 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070639092 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074213761 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066404604 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070662415 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066401517 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066529285 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084091835 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072137477 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073719579 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072222647 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074582447 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074230685 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084090675 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074386544 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074002154 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072045627 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07692553 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073733891 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071747817 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073422453 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074419587 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072191504 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073605938 seconds)
  done (took 6.108708973 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080366013 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085273628 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066828317 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074552548 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073886222 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066372953 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066158918 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066127261 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06619447 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066074402 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105602869 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066467073 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073856723 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073966736 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066645484 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066149908 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066702958 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073640822 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066299925 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084227685 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066315225 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073534676 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073782633 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073504639 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075018085 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071959823 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066286724 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066633636 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066504133 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066197209 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071025768 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066966681 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073506891 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065880084 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073945193 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066710455 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066745118 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070896162 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066288088 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071741326 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07368057 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082131127 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065921829 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065931314 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074692595 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066137224 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066052185 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065798503 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066315237 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066333865 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074982334 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074716684 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075046426 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07383083 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066715158 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066901723 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06634279 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066433866 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066748363 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071903042 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073780241 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066383893 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084462033 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066379926 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06650145 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074256268 seconds)
  done (took 6.023268445 seconds)
done (took 126.710554795 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18256507 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168877322 seconds)
  done (took 1.676696524 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06718834 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094679979 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075765517 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127319717 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065557238 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.09869748 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097628218 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07697088 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065420234 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06583396 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.064991525 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.066643265 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129383075 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065561988 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065095751 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067022479 seconds)
  done (took 2.630685038 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095644535 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171465632 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098331819 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063879954 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095364782 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071626501 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063650173 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073358639 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069658994 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064428375 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071830308 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069708539 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064149552 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069524279 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070043592 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072087201 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063982136 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071898787 seconds)
  done (took 2.761970852 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098703862 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089421899 seconds)
  done (took 1.528206401 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153566482 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.109277519 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.147805324 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331040276 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158861887 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228769815 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125828883 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124287257 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115122845 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121053945 seconds)
  done (took 2.951077552 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096599478 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.145841954 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254493176 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113902319 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07145892 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.089981775 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114850707 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.0765078 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076461561 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076329818 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076174978 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075209262 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095150326 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072762455 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072252796 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074879132 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.09786302 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071523717 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072624717 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07285178 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09558973 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06504646 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072209839 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071288894 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073406491 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07393791 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064370017 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064966871 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072678714 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072555815 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075476503 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088023441 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073330938 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102920267 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.068838951 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103738371 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075359856 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070046869 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072393608 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070100879 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074376807 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074895753 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071116294 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074662742 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064315494 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075111502 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064641137 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064576539 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077122071 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065600284 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076697606 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076370897 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103001937 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065796274 seconds)
  done (took 5.816419083 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.099739606 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102654165 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070893784 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107288706 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096521008 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070682356 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.098262135 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089905172 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.099873152 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090966369 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.08731434 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069441142 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081495938 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081601638 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108016308 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.099942534 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093472031 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070204448 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100172651 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.100271746 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067347865 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092698066 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089081246 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.099815646 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066870116 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069392154 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067531245 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069652393 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075346764 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076753936 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069396625 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.099203646 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082524012 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077357252 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066080354 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066949412 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067191657 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077662162 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.095261775 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076801502 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076050124 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066467079 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067177435 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068858998 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089325252 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066314781 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076724401 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078685463 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07666791 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06920439 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069114786 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067149029 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068784712 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078045497 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076508378 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07884236 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077874164 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067399378 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067933929 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070996992 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079097478 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077704203 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077439259 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091467663 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077884982 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067763652 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078410641 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083482003 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067640434 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069457979 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06771656 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069041772 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06910875 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076679542 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076736915 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069157254 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068833751 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067508273 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078535073 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076341067 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067746021 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07518644 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066308714 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067944356 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068959275 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068704075 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.0759794 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078357206 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068719805 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066903624 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068568036 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067867217 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065438272 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073982891 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076186752 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076316247 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075583801 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067551158 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075554742 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075338394 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067637504 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.075958349 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066209275 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197002434 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069731473 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077591698 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076602065 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07823289 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06900044 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067797072 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077139932 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079687334 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067382096 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077814839 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079447486 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078969162 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067408694 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079650041 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067785678 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078793715 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069591182 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079269179 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068112348 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078636672 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068071637 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067466349 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068583727 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078673157 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069529108 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068558842 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069278057 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070113815 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078154578 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081594782 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070186704 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079746216 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077914456 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069880707 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077399332 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068503365 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077342358 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069674682 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069259197 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066780335 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081388073 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06797377 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068024468 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069601041 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07921986 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068090388 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078934256 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076906005 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066941379 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079888821 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078929696 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076567315 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079392147 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069922552 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067981458 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067257454 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069070462 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075670549 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077981057 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069795647 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068063228 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075864578 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078388189 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066309781 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07651854 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076609703 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07676086 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067703207 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068971965 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078791968 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079599325 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076462978 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076459249 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076752689 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067489226 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075698528 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076206734 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067464111 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08230638 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066790906 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080547687 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077180294 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075116837 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07731442 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078702898 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078883689 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078805458 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081055357 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067006273 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066988621 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078007394 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067059705 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068554964 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076111167 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068227826 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067697462 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079991688 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066178625 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076373474 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065292397 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075315018 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064828478 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067981138 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07971705 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066266182 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.198473232 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078026707 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069446635 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076166906 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080247618 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077354966 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067735155 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069880084 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078096094 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077767611 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068295481 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067360471 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070168792 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077139181 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075539286 seconds)
  done (took 18.463834223 seconds)
done (took 37.175145375 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.204419924 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.14804026 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199951065 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116321771 seconds)
  done (took 2.108707893 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119808787 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099080191 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093249893 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06401251 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100106047 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063872117 seconds)
  done (took 1.917038333 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.307293867 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213011338 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178829723 seconds)
  done (took 2.07249659 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.193459475 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.184128354 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.38908065 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.24843329 seconds)
  done (took 2.492418587 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140991881 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087508574 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066195194 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.081661939 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131308229 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157386568 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099301363 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123504332 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076769758 seconds)
  done (took 2.390673376 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.141517872 seconds)
done (took 12.498553637 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.092965182 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081187846 seconds)
    (3/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.19699807 seconds)
    (4/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.158484556 seconds)
    (5/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.183976723 seconds)
    (6/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108173438 seconds)
    (7/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.086104811 seconds)
    (8/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068385641 seconds)
    (9/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068752748 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080632605 seconds)
    (11/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.107753138 seconds)
    (12/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.210794432 seconds)
    (13/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075514336 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.131028118 seconds)
    (15/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08703858 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076289398 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072618544 seconds)
    (18/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072882972 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.144450682 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106594065 seconds)
    (21/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07257497 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.109425312 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.09274764 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093815588 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088201847 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.184105117 seconds)
    (27/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073339153 seconds)
    (28/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.161483041 seconds)
    (29/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068611747 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.093043623 seconds)
    (31/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.154020613 seconds)
    (32/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066639871 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.151825529 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070586427 seconds)
    (35/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.144681514 seconds)
    (36/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.143925716 seconds)
    (37/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.049854162 seconds)
    (38/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066186795 seconds)
    (39/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.060608487 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.119820634 seconds)
    (41/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.158507857 seconds)
    (42/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080818358 seconds)
    (43/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052228963 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095785881 seconds)
    (45/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071212704 seconds)
    (46/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.196459792 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.192746391 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064039365 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071662772 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066106893 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089731507 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.168923779 seconds)
    (53/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066594094 seconds)
    (54/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.188500397 seconds)
    (55/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.165819607 seconds)
    (56/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078925234 seconds)
    (57/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078323896 seconds)
    (58/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.097791772 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.138556641 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066402157 seconds)
    (61/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07493619 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08814953 seconds)
    (63/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076246962 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069880404 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070944931 seconds)
    (66/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.139135916 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139429654 seconds)
    (68/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071295471 seconds)
    (69/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072025241 seconds)
    (70/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.167728197 seconds)
    (71/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077195883 seconds)
    (72/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074507881 seconds)
    (73/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.174795129 seconds)
    (74/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071990666 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.049869259 seconds)
    (76/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066685803 seconds)
    (77/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.199638727 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119154767 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.094468377 seconds)
    (80/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.061128581 seconds)
    (81/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073758419 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087620209 seconds)
    (83/309) benchmarking ("sort", BigInt, false)...
    done (took 0.181029915 seconds)
    (84/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.189114714 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.07360982 seconds)
    (86/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073135041 seconds)
    (87/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.281622155 seconds)
    (88/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050872745 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.061603247 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065282878 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.066349961 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070762713 seconds)
    (93/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050581538 seconds)
    (94/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07697184 seconds)
    (95/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051818005 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064891384 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129050878 seconds)
    (98/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051020164 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08842844 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064568866 seconds)
    (101/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076798255 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163158135 seconds)
    (103/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.109676893 seconds)
    (104/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.137448905 seconds)
    (105/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.13820479 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065083126 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087648441 seconds)
    (108/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071408789 seconds)
    (109/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078159916 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072152592 seconds)
    (111/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171689463 seconds)
    (112/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086810572 seconds)
    (113/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.168078552 seconds)
    (114/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.137515621 seconds)
    (115/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065833137 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07143337 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079660166 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099809335 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091580569 seconds)
    (120/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.133255419 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.134276267 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.387411751 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064688324 seconds)
    (124/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087584679 seconds)
    (125/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070971322 seconds)
    (126/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053366887 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.11655235 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094097249 seconds)
    (129/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.096264091 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140855672 seconds)
    (131/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.061932835 seconds)
    (132/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.145654907 seconds)
    (133/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074718051 seconds)
    (134/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052034483 seconds)
    (135/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068226362 seconds)
    (136/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050278394 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 0.131232423 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072086723 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.131854939 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064132143 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.090221847 seconds)
    (142/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.159554901 seconds)
    (143/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.155643467 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069444116 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050346789 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070567597 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.136960768 seconds)
    (148/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05126174 seconds)
    (149/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068346803 seconds)
    (150/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072483843 seconds)
    (151/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.167327397 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071645999 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08583727 seconds)
    (154/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.077574243 seconds)
    (155/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116719124 seconds)
    (156/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050001444 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070672138 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050442533 seconds)
    (159/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.135345982 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085107182 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066027666 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064279531 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071572878 seconds)
    (164/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072135764 seconds)
    (165/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06494443 seconds)
    (166/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068428926 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.130206994 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064212101 seconds)
    (169/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079694289 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070744931 seconds)
    (171/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.106900443 seconds)
    (172/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06672789 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064738506 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07471074 seconds)
    (175/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06467543 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.136222449 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065827883 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064234767 seconds)
    (179/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.107824898 seconds)
    (180/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051518097 seconds)
    (181/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.070844253 seconds)
    (182/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06011565 seconds)
    (183/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.094574609 seconds)
    (184/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064611291 seconds)
    (185/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085846092 seconds)
    (186/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.097615789 seconds)
    (187/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07512 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.093273548 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.176724308 seconds)
    (190/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072585583 seconds)
    (191/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062484635 seconds)
    (192/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.152639301 seconds)
    (193/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06728927 seconds)
    (194/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050003734 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113109554 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.063826573 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.225404708 seconds)
    (198/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.146321772 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085867453 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089229879 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065438917 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167021477 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073571699 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050404602 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127273009 seconds)
    (206/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.09816694 seconds)
    (207/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071191443 seconds)
    (208/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066191534 seconds)
    (209/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063593299 seconds)
    (210/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070711364 seconds)
    (211/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050433419 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063702459 seconds)
    (213/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.05291368 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065100153 seconds)
    (215/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051305879 seconds)
    (216/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075103316 seconds)
    (217/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070089432 seconds)
    (218/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05094711 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088558312 seconds)
    (220/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066213977 seconds)
    (221/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051863074 seconds)
    (222/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066154811 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074442531 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072191926 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088805743 seconds)
    (226/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067090019 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051099346 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073348181 seconds)
    (229/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050950156 seconds)
    (230/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051457484 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070560943 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.133174321 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063537134 seconds)
    (234/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061359978 seconds)
    (235/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065103092 seconds)
    (236/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050124629 seconds)
    (237/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072053227 seconds)
    (238/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067067269 seconds)
    (239/309) benchmarking ("sort", Float64, false)...
    done (took 0.123781134 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089286932 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13140306 seconds)
    (242/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073678855 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050701392 seconds)
    (244/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.10820731 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174900207 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067065395 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103587584 seconds)
    (248/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060920939 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053106072 seconds)
    (250/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.107615621 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065812609 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091271 seconds)
    (253/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050197407 seconds)
    (254/309) benchmarking ("sort", Float32, false)...
    done (took 0.125432531 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051761808 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064086276 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087799575 seconds)
    (258/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064241937 seconds)
    (259/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061184076 seconds)
    (260/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061000231 seconds)
    (261/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.16710434 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070661848 seconds)
    (263/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050334767 seconds)
    (264/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051849997 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.0745761 seconds)
    (266/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051675209 seconds)
    (267/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.049941743 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.131734219 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053387536 seconds)
    (270/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.069959059 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.0718825 seconds)
    (272/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053771196 seconds)
    (273/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051755264 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064136644 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062180526 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084243576 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087307325 seconds)
    (278/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051051662 seconds)
    (279/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051049787 seconds)
    (280/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059747608 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063924547 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05068859 seconds)
    (283/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050381935 seconds)
    (284/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051706363 seconds)
    (285/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066251279 seconds)
    (286/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.135675234 seconds)
    (287/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065870713 seconds)
    (288/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066625443 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071718985 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06319178 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062848625 seconds)
    (292/309) benchmarking ("sort", Int8, false)...
    done (took 0.136255167 seconds)
    (293/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.049975367 seconds)
    (294/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050309153 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071603704 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064460165 seconds)
    (297/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07072096 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069388213 seconds)
    (299/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050072167 seconds)
    (300/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08490843 seconds)
    (301/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052284107 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069468926 seconds)
    (303/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071471795 seconds)
    (304/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064224154 seconds)
    (305/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063311191 seconds)
    (306/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059896554 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098300343 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162988807 seconds)
    (309/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051681371 seconds)
  done (took 29.750411572 seconds)
done (took 31.134153724 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082394402 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091967025 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074471797 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091379889 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079608019 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075993954 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071643407 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077522569 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079577341 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080373395 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077283499 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054737089 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073013842 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073072381 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073435915 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0900466 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077523041 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072407736 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072386288 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06450598 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072570366 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065653392 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066819288 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054502006 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077141385 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070978182 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072161393 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073525312 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064979553 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06523298 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068541519 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072400369 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065214794 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077164727 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07120354 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072524004 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073488789 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075481006 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067001738 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065373456 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073387413 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065706458 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071705912 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072569017 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071003036 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070680575 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072168225 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076912579 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090395962 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067856263 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073665409 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074751681 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075820674 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071711659 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068591677 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071931945 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069876658 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090027186 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072490384 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067296325 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073110638 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072981017 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070659429 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071937475 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072298754 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074720882 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074794464 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070183459 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07425152 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070314835 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064670153 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072050014 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068342641 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065245242 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074735497 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075842737 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063812267 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070494039 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071538856 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070448654 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064290931 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066631237 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066480814 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070672253 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06687403 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054108204 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068380807 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070585571 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063800021 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072112439 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070770326 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07119544 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066523516 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074608904 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06418357 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069832597 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064525864 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06501456 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066308681 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068350299 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064538587 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066811639 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073855584 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066361695 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07095394 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077830078 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064747217 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070537729 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063580485 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06359917 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078097752 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073336085 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064438805 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066757765 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063529126 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07119141 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063708375 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064192793 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063753756 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064130333 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069932136 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063945461 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065786771 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070068389 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07534709 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063075542 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066452252 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065809104 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06326452 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068444996 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063365176 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063145878 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199691178 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061813262 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067146833 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065486088 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072080961 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066836665 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071928797 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066663528 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072777102 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069387163 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071256093 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070119568 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06389854 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058313788 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067841395 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067627738 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066858806 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065192839 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066531716 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065146419 seconds)
done (took 12.294823541 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066040607 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140786996 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096402311 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094007258 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084651691 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065862982 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075078358 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100296462 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067144716 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10125837 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086627686 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084049734 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110456013 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064383816 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064992743 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068907504 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066838118 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080571717 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.09930536 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085514693 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107521557 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064610728 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09348992 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089110628 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085797111 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100089745 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066694334 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069438738 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068953122 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090476286 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085521329 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069134471 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066096433 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099021268 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.090651911 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082009183 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065606183 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081087904 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066146478 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06526584 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080049552 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096346654 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078766696 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079028539 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069227475 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068502638 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06632161 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082369255 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087878776 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077743028 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085323775 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101488994 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067774548 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065063889 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064078182 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083982736 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064855835 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068325863 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066071395 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06750641 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065487043 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068282528 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079887949 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085522477 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069390893 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079301914 seconds)
  done (took 6.725732017 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082091448 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089753165 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082524643 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083000299 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065047847 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065904347 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065993406 seconds)
  done (took 2.015107512 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066844095 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087166368 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08872407 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088138669 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083785538 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086416269 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074895048 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066186614 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079461905 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067183702 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.0861474 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10026045 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066493118 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071937027 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08951176 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065779865 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089414376 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065897262 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068816218 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088819793 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067856601 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081449662 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069658575 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066273745 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079886047 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066433165 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111814544 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070622271 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067795638 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068654679 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063986375 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104694261 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078898929 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074747214 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065893254 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079977223 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080063101 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06424923 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08167574 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071019314 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07964028 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066073965 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066861948 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064129122 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070362873 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076225939 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066882692 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066541314 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068814632 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085160206 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066906962 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079133167 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070891672 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068652895 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067387721 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069900347 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075567671 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066780683 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086016675 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067388285 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082792837 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08182414 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.07940064 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081894069 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068838684 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079185323 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079825288 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068523651 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067432276 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069480474 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081933165 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064625407 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067306018 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076435606 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067725786 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088531191 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088604947 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067550818 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075596153 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066530168 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065939235 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066183368 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088354865 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068408395 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065779848 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070349922 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069057033 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064662431 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065113682 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069753096 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064611373 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067536557 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069034532 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069331425 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068712758 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082203538 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068248287 seconds)
  done (took 8.684519062 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068660994 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067175101 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068757335 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067947687 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067357788 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067541921 seconds)
  done (took 1.914395431 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092576694 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069039615 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079859048 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071629343 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103168061 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08598073 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086413488 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07838431 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083346958 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078413115 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086255613 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087312122 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091920136 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072057133 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086123019 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07185267 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086885303 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075399371 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077653535 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072440525 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085652831 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072343574 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072340986 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080551806 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075442757 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07175804 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067419318 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078632534 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077918174 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078138704 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07212067 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075428732 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070047996 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077785343 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086118084 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069686296 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070962357 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076379493 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071977513 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074890167 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087305287 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072548964 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073707273 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076637923 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077523491 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070186969 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076266558 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075112298 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085393313 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076320436 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076542267 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07073967 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074468167 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076187718 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069711542 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077843779 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076423522 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085655482 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072141985 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069848836 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068222222 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074732976 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076545426 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.0744137 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07755764 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075954111 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069362586 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071581597 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071537485 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070818547 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076240762 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067824343 seconds)
  done (took 7.024422132 seconds)
done (took 27.829326333 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541905956 seconds)
  done (took 2.016685574 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.614879864 seconds)
  done (took 2.112184002 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.158359897 seconds)
  done (took 8.651950533 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.378041672 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.462099678 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.705087637 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129112684 seconds)
  done (took 3.209688306 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.667201058 seconds)
  done (took 2.169680028 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.206287299 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194937836 seconds)
  done (took 1.915257712 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.367835801 seconds)
  done (took 1.861730537 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.098549683 seconds)
  done (took 2.594403671 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.25815564 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161653683 seconds)
  done (took 1.921709317 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.460320033 seconds)
  done (took 1.959743271 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.844830029 seconds)
  done (took 6.346350609 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.2055236 seconds)
  done (took 1.751336255 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238943757 seconds)
  done (took 1.743844494 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.694659426 seconds)
  done (took 3.20151466 seconds)
done (took 42.957093692 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08044228 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08108213 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080576057 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077260134 seconds)
  done (took 1.813568718 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076270994 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072246407 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076085278 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071592574 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075887916 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072033111 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073741384 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076037249 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072276879 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072323744 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07214507 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071954504 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074678237 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073970148 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070821679 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074281508 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075185057 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071889038 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07488625 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071891822 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070522085 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074108782 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074248431 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071321893 seconds)
  done (took 3.269105006 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07693452 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072635865 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074150196 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071453394 seconds)
  done (took 1.805644375 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076873863 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092270312 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088527096 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076780703 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091448557 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085611594 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068829559 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068638575 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072938511 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076702263 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067577105 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095652616 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086883395 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076211873 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078408984 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065851094 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067967907 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08599803 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077103786 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077220827 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069792277 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076645451 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067513144 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087272358 seconds)
  done (took 3.386036676 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076815485 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102527348 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076883092 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086874565 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.08915848 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065125416 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073736775 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089045007 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122482305 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065063458 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069480119 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064852013 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072088914 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064639286 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075579803 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104248815 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107830226 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068332007 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095020331 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065212197 seconds)
  done (took 3.150693182 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.0719804 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069615096 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065465136 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068707992 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077332983 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072432074 seconds)
  done (took 1.941493518 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067612611 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066458774 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067983672 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066849824 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071246178 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067401543 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065293186 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066427484 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066690755 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066534898 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066283181 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065411373 seconds)
  done (took 2.316019847 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.323527452 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067881369 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068579346 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065282625 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070235724 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06575922 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079276842 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067435441 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089983631 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066026691 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066117834 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06770507 seconds)
  done (took 2.611768002 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201718836 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07588913 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234051893 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13556254 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110411372 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11417539 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102880286 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112723546 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141473033 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100597624 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165937301 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164054259 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106566941 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136170006 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088746496 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09827095 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153453078 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160254672 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102463464 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163571232 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142082759 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123217369 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145872992 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10105816 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105425108 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120718777 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070594482 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079880992 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168518805 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129860678 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144379443 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110160713 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092669631 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174367474 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169329884 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140954145 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133535162 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083011185 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101182174 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131163334 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197229043 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086928316 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159501477 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244678788 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081112506 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134485022 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119312017 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119088327 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106034642 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090117136 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145033948 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18004572 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13739546 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086567037 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111427403 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114302383 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113837684 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101966176 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17825121 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159756177 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127144821 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070765963 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098340685 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151448198 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130241973 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108638846 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124997027 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093122765 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13239622 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153652188 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117809931 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141816447 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127680566 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087978687 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118405751 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138451496 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126681187 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168041887 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12377244 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072869752 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123356716 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102523138 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080799626 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142213341 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075261052 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172981577 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097401463 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104802431 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111976631 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107901604 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107396809 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157568142 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140106473 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24325141 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066884656 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103239825 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120081894 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146106465 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087238414 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107540325 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115095109 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077371406 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136817342 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074227958 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123041663 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075591013 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12438957 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131241976 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07520244 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120246029 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100700172 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099355292 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132534479 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157698177 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088868493 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081204555 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165549334 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121676319 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103991663 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142516914 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153901602 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098002549 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101055552 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147566529 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177269222 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088869399 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160944905 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10645278 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083343153 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086927886 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122351741 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111421292 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121221424 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081537417 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117676913 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166376804 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074839391 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095149802 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132333868 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078302832 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079667252 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101579033 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098843843 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093627477 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098798461 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102564453 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134958923 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121302181 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103112387 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268035057 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099102079 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16843311 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088654299 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100114823 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103167312 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069280949 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135015408 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155958047 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079413509 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16287922 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122260833 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104398732 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118540414 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082880141 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139115478 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078963614 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069899329 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141854271 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109818746 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109526069 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149275112 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103990811 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124670812 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11853436 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132152546 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130673948 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127688948 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103929298 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08743703 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110771656 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123881113 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072475099 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090298383 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079352401 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103021859 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094714516 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082886798 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140334327 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123204547 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099534586 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110742252 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095769038 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145720766 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076075966 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127623422 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117743088 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092529832 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149416232 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15025954 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129724673 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097839429 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142242397 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069329224 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072807417 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.230433234 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12362345 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083432046 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083521683 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116158107 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14581177 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128325452 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137502485 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110897914 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119693913 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153500315 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069583017 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115644805 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146911193 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120775782 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104249612 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090224966 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099096236 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14047648 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106477679 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17928502 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112895311 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124764406 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151371466 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104082677 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07958671 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102017544 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134148658 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103419245 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142285004 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098547527 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087421414 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108990967 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074378581 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098914176 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125622029 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118279731 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134032645 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113677511 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131204671 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076483071 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115828351 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119936517 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121277143 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063730466 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118446981 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158185164 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092703775 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116633885 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150313278 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077906963 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12223646 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318583212 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144972065 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084848845 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10912091 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118379969 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127541673 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119357619 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139190712 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107168785 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134190652 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108461005 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08574033 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087247387 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096874617 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10428038 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093779069 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107835047 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114038462 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094530443 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13000437 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102236984 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109106023 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117153987 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096050304 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088625355 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095816497 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172037191 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11835532 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168523408 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098694095 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143927077 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161562199 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0743735 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078475129 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077658357 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138436395 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083637782 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129676213 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097095857 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10492375 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123191991 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140247116 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094452001 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068214552 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107763741 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133035257 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111062263 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097637627 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.1029991 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159693893 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099596474 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078493514 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111970959 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103436072 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100726695 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165793303 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.204338583 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098539491 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076476977 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081344506 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126836112 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151025526 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079594543 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101923692 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117604557 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109644251 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126757179 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101333725 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099199918 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113905598 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14822931 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128066198 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089534505 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111306018 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128380237 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173104488 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104683246 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094281088 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170320536 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150368967 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158527479 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088072388 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113935363 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112828409 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107448196 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140143051 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082415002 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161065678 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081207058 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134643439 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103111701 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089174081 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128684291 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098251257 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087457006 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146210633 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11632658 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08213937 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077206761 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11632473 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118838378 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105342995 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074701362 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136620019 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072255348 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129946987 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165169649 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080047196 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102035677 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093063807 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077155395 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103639083 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098649497 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086739182 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096316836 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164683432 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084614973 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142768716 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135217727 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108540409 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129856001 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096182521 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.631601259 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075246244 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145404816 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109753185 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156958291 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09222883 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110761433 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103245156 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115598397 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13269264 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098533747 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.171044413 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122066389 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.10949787 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07626621 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096721336 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096990475 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.083845529 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099591796 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106935536 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108499072 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.088254898 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.108880154 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114537511 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.078678835 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09023661 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14436557 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109484393 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132407809 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131197262 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080947407 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111265253 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128047396 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076830761 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.11293848 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139691515 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100169492 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092847201 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076082738 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.357356946 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171941445 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075385958 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163993867 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122081561 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110274069 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114376849 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11390758 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133516748 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108217433 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121307598 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094744888 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.11164671 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113943826 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083104804 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078718286 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105831988 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113179148 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097778719 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098493195 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098493028 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151358256 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071988125 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095511216 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103414166 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143816919 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172663088 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088589154 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082957868 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117662795 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112574495 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112414863 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119908433 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079122385 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082070788 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081253888 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076802213 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107885465 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111096885 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103182998 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110136357 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161864283 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081975757 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224882425 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094061215 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103555208 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069722046 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077923337 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094903137 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096519831 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107231994 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099779743 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167418115 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093007684 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088578755 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091427389 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072368 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081634866 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276181595 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109536913 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117922306 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096670336 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062424383 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108547529 seconds)
  done (took 58.072973033 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107009865 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082651856 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096216887 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149423607 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121556696 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210980848 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156220035 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198742121 seconds)
  done (took 2.777823708 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067824088 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093282472 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099016904 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083517961 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066680547 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069989457 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223989957 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08156953 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066375517 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088112329 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079669892 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070067152 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.399986518 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065850707 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068312717 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063187296 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066856804 seconds)
  done (took 3.399460179 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.373851009 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.364817272 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370561135 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073008024 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.857445761 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08846507 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.083428162 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096300266 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070621629 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.277751713 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701680714 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.094022825 seconds)
  done (took 14.106066385 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075676932 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068964728 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083391693 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082543588 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071888154 seconds)
  done (took 2.037303117 seconds)
done (took 102.254304479 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079683112 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.29433307 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053271702 seconds)
  done (took 2.03089963 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082543567 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084580647 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08443602 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082587033 seconds)
  done (took 1.991318815 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073616321 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075475052 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084610173 seconds)
  done (took 1.88587282 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221601315 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138775783 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086401325 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081158456 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078086952 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078134588 seconds)
  done (took 1.893673358 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071478761 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074443865 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.0720281 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076248457 seconds)
  done (took 1.949139614 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075813424 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052288021 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055119033 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055541104 seconds)
  done (took 1.894424036 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085167401 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078365443 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077636382 seconds)
  done (took 1.897361383 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105416421 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08421017 seconds)
  done (took 1.846469821 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080831781 seconds)
  done (took 1.738716005 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098491609 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113034426 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127421207 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108328597 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135058014 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107848879 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084967944 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085906621 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076426061 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08593745 seconds)
  done (took 2.681239613 seconds)
done (took 21.987625883 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077996844 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365895521 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360238355 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090374678 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668555826 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356449967 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991835959 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091824978 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119971601 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067501602 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08362536 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647731356 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983982246 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32342607 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969269761 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318002072 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65892208 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067703341 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067175357 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068141717 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979571907 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067176718 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067534401 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068402119 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.660621947 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370474515 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067616542 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321138679 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067313918 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068990672 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355016936 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067633199 seconds)
  done (took 16.184431584 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070095317 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117651154 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073155942 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083904023 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070411952 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068960183 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070933274 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068460477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124572371 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067396235 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083844216 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067712884 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072004656 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068140536 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087029061 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067898074 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068219535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068017228 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067585875 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067854597 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086182521 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067369382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067614165 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068069749 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067485717 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079408506 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068023953 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06782951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068339868 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069529484 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070570932 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068409217 seconds)
  done (took 4.054364001 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114766237 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124058548 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073638327 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102352303 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111985975 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0695878 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142495178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092319705 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126708158 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067931013 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08416317 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067997776 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100282245 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06841811 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087109756 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068500918 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069145237 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068221028 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068137675 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06824011 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086621618 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06783863 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068180708 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069205789 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068773891 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081255292 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068499392 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068525768 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068393674 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06990471 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071356141 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069258763 seconds)
  done (took 4.305879176 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071834792 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074248864 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082164362 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083696033 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069652877 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07140328 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072548582 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069443641 seconds)
  done (took 2.27035978 seconds)
done (took 28.476748537 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078640087 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069208181 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072362331 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080790212 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072500429 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077934694 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066714432 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074217025 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07191025 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07264474 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074825907 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067150348 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070512596 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067152654 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072910189 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067628782 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079112245 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071392762 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078341232 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079127405 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069783365 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073021165 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074284798 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078813607 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079157213 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07839898 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07692747 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072355227 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068628581 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.06994476 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076428247 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083567266 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068609045 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078662415 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067595401 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067193367 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071466798 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067772058 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079327354 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076526949 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069031202 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075679041 seconds)
  done (took 4.742717575 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087369703 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090821985 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084003682 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061377922 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06652509 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064547472 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087965592 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059103042 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059536659 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087325263 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055997486 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059638003 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06205234 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054103434 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058933141 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056930936 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061393204 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055832288 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059459706 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059242888 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057794972 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054192798 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059874643 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064946307 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056186656 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061911584 seconds)
  done (took 3.369026009 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074048591 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083847524 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088162473 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12675831 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103294293 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07666154 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077339525 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091505719 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085184199 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066632257 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07122726 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093185092 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087683545 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073688637 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06698167 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084050158 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08147967 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068750067 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073087558 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090828002 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08403687 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083803952 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092533507 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080623931 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066683249 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069283151 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070852733 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08119213 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072088448 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076774377 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071314883 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070652039 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068981007 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078630153 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071043082 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068858047 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09013577 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076756971 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077441195 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067576999 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07033558 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068137892 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089073831 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121994355 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066741879 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074092608 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075082865 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08746936 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067155091 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085431985 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078402322 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06671731 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070160927 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066385609 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067325372 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080104288 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069487516 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069358188 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076254184 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070156284 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084819228 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070986796 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082437667 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066933853 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074655708 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066427202 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068112658 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065994099 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092570121 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068529092 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108185489 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068499665 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068382637 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075530961 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074870192 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073366044 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067574546 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082176215 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077092962 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.0702276 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075463611 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070284902 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070409936 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08744477 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069402814 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068692675 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06815036 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073659048 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069970888 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068583154 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079879636 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067221802 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07034984 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083719084 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066704613 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068321936 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07310796 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071687791 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067208744 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078303275 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.0718076 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067937432 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076006568 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067017696 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070712335 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077783218 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073469478 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066216783 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071752929 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07336465 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068031648 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069219802 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070140503 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069334215 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076254639 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073408589 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071793091 seconds)
  done (took 10.558219932 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159903885 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153011198 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06999353 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143573428 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076329059 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078623218 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147328063 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093754727 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067666377 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068284138 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068980265 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114816131 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104783525 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121397516 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078193445 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06739651 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083091447 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117055538 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148979604 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142722761 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083814504 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076345143 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069576336 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068673319 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074474015 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082444527 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090346925 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07652222 seconds)
  done (took 4.442582713 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.07973354 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100310067 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073814841 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088441161 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090421909 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067696353 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069698689 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069528882 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079997815 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078052881 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067446631 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07343849 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074381977 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073675397 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068497316 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074775324 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074649782 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069104094 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070467737 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072719825 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077268141 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080046293 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071365553 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066879166 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073707852 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067121415 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.0636582 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083917075 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068294505 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089539239 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065399536 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074578991 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081200707 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068455601 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067564688 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067111823 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067138086 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067249872 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069500782 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066271272 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066000342 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057565978 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066726674 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078877639 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073488478 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056461297 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072494578 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072700105 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072776527 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065350778 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07005568 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069921764 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07072592 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074455802 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072226687 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072351481 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068266848 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065953892 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074755943 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067155752 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064354224 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065907966 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071692252 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065620384 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075542355 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071955566 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065809243 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066967572 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068963 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073864093 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066977779 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070467271 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06489406 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069165802 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071539461 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068957398 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067889128 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066033609 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066953794 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067753536 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.0553348 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066969762 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053199313 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070161548 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.0654128 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065608649 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06714235 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071739905 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078648765 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068376437 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073006 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068054096 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066042623 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070964864 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060025605 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069998948 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082235406 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081731271 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06698301 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065252833 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081441519 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072098548 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066241987 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056221198 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074480438 seconds)
  done (took 9.139326835 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094145891 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087409419 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069723864 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08282202 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090204865 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086521753 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074505471 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077040405 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069049599 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081627216 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073134458 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076045527 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067615873 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076923098 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093909263 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077244322 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069857188 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076292172 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071720057 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.10084542 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082463173 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081713823 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074747986 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067810559 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075867611 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079521989 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089394936 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079613969 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078471896 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075455556 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079832702 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089444129 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073697428 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071628634 seconds)
  done (took 4.419276846 seconds)
done (took 38.338707805 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.76051769 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.925778142 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.754339436 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.123773227 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.831105306 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.050675873 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.848150001 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.748259146 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.865753043 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.789247784 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.013656145 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.796296866 seconds)
done (took 65.201147353 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.769910237 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.890856079 seconds)
    (2/2) benchmarking "String"...
    done (took 2.02532972 seconds)
  done (took 5.610105132 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.064177063 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.281114596 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.997062287 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.751058741 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.756196407 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.059132622 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.547174762 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.270931448 seconds)
  done (took 30.356793906 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.936900704 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.952988195 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.40273269 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.439706397 seconds)
  done (took 15.470304494 seconds)
done (took 63.040422594 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.758976835 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.771469321 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.753731929 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.735853848 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.809605867 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.76837806 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.956134052 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.759109948 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.751477614 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.740914885 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.753624176 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.191563043 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.755395173 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.014872194 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.752357252 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.757622857 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.822186105 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.199688374 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.908124878 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.774223536 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.756068869 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.781244991 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.758480535 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.758933883 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.76196374 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.752564689 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.191362348 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.765126406 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.377460867 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.755659815 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.786451111 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.194931577 seconds)
  done (took 203.069007092 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.752217478 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.622666242 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.666373 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.763044707 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.107281672 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.954172417 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.890715776 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.175159307 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.757664426 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.756969836 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.893635207 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.755974299 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.924579374 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.706535132 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.760546067 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.862804469 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.940546028 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.938822074 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.757205916 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.007623991 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.761922154 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.922138438 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.868750718 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.878442765 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.782729415 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.831952412 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.902683235 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.768533687 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.946278929 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.909366043 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.778988002 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.771719283 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.975319112 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.626248393 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.765306196 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.774623036 seconds)
  done (took 168.956306764 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.145820223 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.75321144 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.753966315 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.754151096 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.766030137 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.75459308 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.878207808 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.880334035 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.210312534 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.195385898 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.805753888 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.604856402 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.756261938 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822377254 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.768426279 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.75740879 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.769769541 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.779246032 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.755852275 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.75557596 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.879588258 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.767846922 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.825062501 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.76176169 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.755601689 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761391825 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.125186523 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.756343533 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.760613377 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.015324276 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.755433805 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.755400951 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.657142238 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.426292418 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.76363143 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.839051203 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.757667987 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.761029442 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.756418642 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.974673635 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.756607627 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.756330509 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.759318662 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.937239205 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.755740085 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.881815405 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.75714645 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.269202263 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.756914105 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.757592156 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.568698903 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.465989674 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.758363772 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.756028118 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.759572522 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.75661513 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.757376097 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.763263739 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.592878988 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.830332622 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.75791324 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.760064492 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.762607535 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.757124259 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.864922451 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.759791007 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.7579866 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.813805408 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.872451553 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.210168272 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.883316856 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.760278412 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.82481249 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.852486435 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.757694881 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.757338368 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.758090425 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.757472051 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.838259666 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.757962758 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.882468895 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.764921301 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.758643507 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.808438193 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.758265937 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.826647967 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.758862046 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.65678797 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.760052835 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.758837788 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.091655359 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.826346252 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.759713477 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.758291612 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.759172995 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.758207033 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.886102361 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.883707137 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.535467541 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.761257378 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.514333344 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.761148663 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.897878842 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.759532881 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.955896865 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.762333034 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.841385267 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.764442716 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.761078719 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.759282709 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.790408596 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.760189248 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.817755152 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.761788004 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.130312501 seconds)
  done (took 400.538734361 seconds)
done (took 776.456976491 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.437181622 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.396705121 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.517551575 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.425013171 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.402929169 seconds)
  done (took 13.880401366 seconds)
done (took 15.580934297 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.845819514 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.851322368 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.78546788 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.849073523 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.780885368 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.848117546 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.829006562 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.785821606 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.815012959 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.785102942 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.81705293 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.78484304 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.772392225 seconds)
  done (took 25.251888202 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.986915427 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.003502931 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.829452918 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.010384676 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.805557161 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.989766259 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.920400188 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.913213646 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.914175121 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.7774672 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.774059968 seconds)
  done (took 22.627913758 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.999175004 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.999567904 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.833897689 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.991838938 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.808180664 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.994858824 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.931305815 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.918268551 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.914058026 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.776118475 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.774981285 seconds)
  done (took 22.64587307 seconds)
done (took 72.226371851 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.769171328 seconds)
  done (took 3.472787348 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.790936028 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.929749439 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.776678439 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.773123422 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.768960778 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.771627471 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.773064789 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.770569733 seconds)
  done (took 16.05888994 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.767155466 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.769275676 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.769466545 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.768490985 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.766734718 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.769948563 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.767672251 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.770063956 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.769254861 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.767450757 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.769901025 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.768065469 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.767033491 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.767659076 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.770854011 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.769933013 seconds)
  done (took 30.004088511 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.768192624 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.766008187 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.766399369 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.767746709 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.767542167 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.76868089 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.767547006 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.766497359 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.766983558 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.767383991 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.768230831 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.766684425 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.767366773 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.766810175 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.767446597 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.767409865 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.767848559 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.767623782 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.771099586 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.766716007 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.767462929 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.767499577 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.767821235 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.765014269 seconds)
  done (took 44.127208399 seconds)
done (took 95.365905003 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.461533911 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.191008624 seconds)
  done (took 8.354881483 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.769412679 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.766882426 seconds)
  done (took 5.270983109 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.767701244 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.767414397 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.76754823 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.767706324 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.767969489 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.769716634 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.767145837 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.767038378 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.767931764 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.767536881 seconds)
  done (took 19.380003403 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.768669062 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.767192679 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.764632232 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.768194041 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.76776162 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.767868767 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.762920502 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.764009551 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.764463585 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.762690883 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.762796594 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.762400425 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.763740113 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.760842647 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.764420283 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.761035253 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.760444846 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.770090778 seconds)
  done (took 33.467988272 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.761994222 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.762368713 seconds)
  done (took 5.22047316 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.759861797 seconds)
    (2/7) benchmarking "second"...
    done (took 1.760057663 seconds)
    (3/7) benchmarking "month"...
    done (took 1.758392856 seconds)
    (4/7) benchmarking "year"...
    done (took 1.758880255 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.75907857 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.757134891 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.761739462 seconds)
  done (took 14.012592193 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.760275451 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.916775473 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.989571892 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.467913487 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.762509356 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.76561987 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.726841471 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.76238898 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.768288372 seconds)
  done (took 19.614415462 seconds)
done (took 107.022860503 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.578428994 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.757945038 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.103780192 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.845066996 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.773970624 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.054359373 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.797524397 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.978807489 seconds)
done (took 42.583724517 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.75484428 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.230618159 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.235438593 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.809605309 seconds)
  done (took 11.969561875 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.742522495 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.273789434 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.798589244 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.357808178 seconds)
  done (took 19.887679008 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.118910351 seconds)
    (2/2) benchmarking "read"...
    done (took 2.105439279 seconds)
  done (took 5.920999205 seconds)
done (took 46.230463551 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.756173557 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.75321049 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.757875754 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.755366685 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.757296716 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.755849398 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.757616458 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.752282892 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.753152259 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.757339909 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.755578352 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.757466139 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.757090553 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757066483 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.754078251 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754470689 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757466784 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.757472131 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.752072765 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755213725 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.755439953 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.757828407 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.754563342 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.755463088 seconds)
  done (took 43.827163374 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.755387031 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.755481389 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.756862187 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.75247257 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.748746227 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.751072541 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.751920417 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.750756784 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.747827444 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.748601811 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.746212334 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.746601475 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.750258505 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.751028683 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750611356 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.747143616 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.750146427 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748712713 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751444792 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.748897944 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.749386952 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748371654 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.748904501 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.750181821 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.747903286 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748760735 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.749961615 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.747896938 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748121512 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.746856591 seconds)
  done (took 54.191026329 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.7543284 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.75829892 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.74892179 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.747845244 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.750093828 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.749177668 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.749238822 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.749803564 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.749507458 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.751258367 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.749277376 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.749591601 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.749203081 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.749611655 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.749575461 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.750278326 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.750599557 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.749293993 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.749330184 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.750676298 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.750918696 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.750345351 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.751092313 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.749879269 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.749605207 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.748765595 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.748843233 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.749939198 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.750449551 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.749899756 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.749596608 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.751038419 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.750142961 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.750712526 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.751959142 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.751051064 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.756712241 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.760150099 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.75144179 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.751714177 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.75103307 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.752191709 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.751254687 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.75192756 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.750808218 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.752578567 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.751430173 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.752654023 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.751310593 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.752295198 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.751843693 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.751519539 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.751300616 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.751611467 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.75099978 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.750576287 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.753651357 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.751926155 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.74936199 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.750233103 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.75157465 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.750345212 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.751614785 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.749849637 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.749063806 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.749449784 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.749992299 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.750786201 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.75170065 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.749038538 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.750079824 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.75045348 seconds)
  done (took 127.750837172 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.75017895 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.749445431 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.746835939 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.746368197 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.74586353 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.749973433 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.74859112 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748690295 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746598606 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.748484985 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748057914 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.74831744 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74658255 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.748480871 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747737481 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.746455991 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.749574415 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.746566694 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.749633211 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.748353061 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.747282441 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.745406867 seconds)
  done (took 40.137079336 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.747665167 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.750297988 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.745503341 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.747302936 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.744878659 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.749007592 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.74875243 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.745898436 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746115678 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.743379048 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741693199 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746452594 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.744278731 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742219333 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743607027 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.743170799 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.746113082 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.744156022 seconds)
  done (took 33.103984125 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.742464819 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.742766288 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.7465842 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.743135697 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.743207648 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.746055772 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.74292497 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.745580005 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.744872776 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.741828834 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.747535848 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745430765 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.746048541 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743680749 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746058305 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.743959394 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.747268383 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742251245 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.745760334 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.7431345 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.742960065 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.745706185 seconds)
  done (took 40.060997732 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.746257719 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.745479534 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.743041599 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.743648299 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.742900496 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.745979593 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.746196865 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.742976751 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.746328559 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.746250961 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.744511209 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.745382979 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.743789399 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.743412785 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.743789911 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.744766598 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.747334976 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.743667558 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.745345821 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.743933281 seconds)
  done (took 36.577143232 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.746656877 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.748262255 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.746235582 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.747594592 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.746126152 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.7466167 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.746860018 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.746024348 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.746966536 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.747626544 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.746413239 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.746602669 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.747671698 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.745755655 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.746646713 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.745858806 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.746069617 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.746932358 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.747645484 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.746508716 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.747193224 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.746370202 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.747368199 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.74642363 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.748043834 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.746302131 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.746804442 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.746584442 seconds)
  done (took 50.59143662 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.746805178 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.744575194 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.742587872 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.742619351 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.743455587 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.74303968 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.744751984 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.744017368 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.745932313 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.743038596 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.74578893 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.745847064 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.746550132 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.745344541 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.745136211 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.745097699 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745457486 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.742468022 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.743486118 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742704939 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.746490867 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744873888 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.745968724 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.743298604 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742857168 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.746219649 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743080411 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.744275148 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.74608968 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.743898302 seconds)
  done (took 54.017599578 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.764150716 seconds)
    (2/2) benchmarking "in"...
    done (took 1.763195399 seconds)
  done (took 5.208246297 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.742559037 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.746079066 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.745008686 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.742996936 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.743338602 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.745456699 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.745539418 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.744377737 seconds)
  done (took 15.63639386 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.745771741 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.745121356 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.745794222 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.747577705 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.746444633 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.747359612 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.754935579 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.747041278 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.750436799 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.749074747 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.753027872 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.754688096 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.749535151 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.747171365 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.747269758 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.749563099 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.746848621 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.746158288 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.745355285 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.746694961 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.746153485 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.750313471 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.748460224 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.743279255 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.747033191 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.759032969 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.752792622 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.745407187 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.747518056 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.752985042 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.747453801 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.744415312 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.74798724 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.746709536 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.746898253 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.747744441 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.756660175 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.747598164 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.754663452 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.747584245 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746626359 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.74417305 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.74899215 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.751226377 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.748082345 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.746388477 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.746739351 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.74378442 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.746118996 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.75141436 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.75032179 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.746483508 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.743804167 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.754027123 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.748262534 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.755414332 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.746202603 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.747835489 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.752644984 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.756235932 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.760006986 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.751701217 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.745693537 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.744333861 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.75210551 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.764801167 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.752560807 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.741425105 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.740171406 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.743895205 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.752807108 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.758886983 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.75333946 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.742584568 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.74410218 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.743202394 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.744616578 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.744084756 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.752333515 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.746672057 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.74402386 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.743619891 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.752694786 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.764335285 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.743668015 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.743412666 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.744078871 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.743756099 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.745002412 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.754617077 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.743618115 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.743252153 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.743398251 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.745246182 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.747701478 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.745410079 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.743850148 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.746065112 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.742732164 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.74325329 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.743855224 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.747883765 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.753285179 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.745339347 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.744485178 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.753883827 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.745703931 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.744895513 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.754934264 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.744081095 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.744817557 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.744668956 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.752396618 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.741107385 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.746823624 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.752567859 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.744039079 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.748990531 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.7454746 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.744492894 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.753587968 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.767552406 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.745145588 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.745263178 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.74912374 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.753544551 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.746036458 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.748898057 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.74471543 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.744303815 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.741841452 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.747202033 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.745944991 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.74833618 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.746598713 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749924339 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.742174065 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.745362731 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.746585966 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.747193637 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.749179814 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.749645683 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.749306224 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.749762115 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.746482314 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.748830837 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.755513762 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.747202195 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.748244293 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.749030729 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.744367969 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.746528723 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.748896032 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.747737302 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.747491929 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.747848558 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.747888666 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.748205444 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.748288199 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.746384914 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.746715491 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.74805941 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.750864115 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.747919542 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.753806434 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.747839858 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.744604785 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.747100959 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.747543566 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.74912381 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.747222546 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.746895643 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.749268819 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.753909292 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.747461229 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.748702885 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.752345232 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.747688941 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.747668587 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.748479554 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.750742377 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.755269012 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.748427676 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.756692469 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.747695876 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.749154386 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.749234667 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.750126172 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.748474224 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.748398237 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.750591628 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.754738813 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.764647625 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.757072975 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.749383816 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.751045999 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.749842009 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.752329563 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.75583466 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.749270288 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.748068437 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.750015408 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.748762825 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.749227093 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.753400964 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.749469861 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.750330927 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.749265151 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.748708328 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.749881788 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.749091775 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.751415235 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.75232975 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.746267259 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.748814811 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.750643484 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.751280696 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.746954616 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.750123221 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.751118555 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.749992596 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.752158828 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.76092651 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.747776207 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.751741083 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.752043847 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.752854678 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.750233131 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.750473584 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.753755053 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.75126678 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.758990831 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.752651309 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.752632445 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757644277 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.751285977 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.751157719 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.754941364 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.750833985 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.749144416 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.752395516 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.757940583 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.750612194 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.752419965 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.751914047 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.751677906 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.751661549 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.76018308 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.747898068 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.751468838 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.750863599 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.75499868 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.749774864 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.753459529 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.754792289 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.755293994 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.753881857 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.750816255 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.751906347 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.754299898 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.751293228 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.753314011 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.751851738 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.754809121 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.758879918 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.759084809 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.754465252 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.757209625 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.753574024 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.755220483 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.753824502 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.752991325 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.753811102 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.76678762 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.759093862 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.762064053 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.756330067 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.752864292 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.761315974 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.755213866 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.757675187 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.754128076 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.75574294 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.756479886 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.753529158 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.750861084 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.757006371 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.754011773 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.754520832 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.756457894 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.75644446 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.753945722 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.752983448 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.754366276 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.754063037 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.756243828 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.754023817 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.753951661 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.759120464 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757153989 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.753902327 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.7550887 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.762419343 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.75544563 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.757532839 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.754320432 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.756101808 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.754283831 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.756560192 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.755262542 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.757822939 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.76055221 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.758153119 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.764238729 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.75553021 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.765420014 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.755012369 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.758594655 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.762368566 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.752712557 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.754334125 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.756572361 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.755937804 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.765322751 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.75576162 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.756612969 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.760085337 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.755573124 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.755493552 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.756704841 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.755413172 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.755874027 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.756072524 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765814439 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.757080975 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.760029954 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.759733628 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.752394563 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.755883867 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.756233019 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.757886538 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.763333069 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.755616597 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.758636222 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.756633053 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.757014796 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.756805855 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.756608914 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.756709363 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.752959035 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.757332562 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.765409018 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.757888355 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.761233004 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.756869257 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.7685726 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.756837148 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.766818361 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.757612594 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.758427159 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.758141945 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.756740362 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.761477514 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.759878051 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.759695787 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.757448166 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.757885616 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.759914008 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.758180029 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.762100174 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.760033502 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.758050021 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.758250403 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.766640977 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.778602806 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.758843569 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.761191529 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.755166187 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.759908283 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.762695756 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.758260875 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.758368968 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.760153584 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.768487091 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.76454599 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.760261281 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.759731319 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.761905482 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.759232299 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.758646554 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.75846109 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.759320391 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.75934538 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.761758753 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.758571937 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.765878589 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.759452139 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.763087193 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.761555432 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.759830229 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.77003369 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.758208189 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.761008133 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.761083172 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.758941341 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.760787273 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.761245962 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.759499085 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.762160429 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.758607142 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.760779288 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.764760234 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.764314911 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.763800462 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.761677496 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.759079719 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.761108705 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.762766024 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.760217952 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.759388474 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.760666735 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.763338994 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.760953872 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.763682113 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.759541077 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.760598132 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.762840226 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.760156006 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.764263891 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.765129597 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.761806923 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.759110113 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.759615424 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.760223873 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.760161805 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.762884865 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.773514328 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.764350238 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.770367534 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.76812318 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.764386875 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.763134266 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.764119577 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.771548832 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.761739175 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.763175946 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.762934423 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.765506149 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.763249072 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.764697956 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.762147887 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.772157005 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.762327131 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.762506886 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.774993619 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.763950891 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.763397273 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.763694224 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.767053421 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.763593531 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.760260044 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.761722462 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.762087272 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.77108825 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.766170484 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.765183945 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.766548608 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.762827283 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.764858414 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.765223849 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.763954773 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.765658056 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.76087089 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.763220129 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.762723818 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.763525666 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.759743085 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.764555439 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.764906861 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.765970719 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.770577335 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.761411764 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.767944945 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.76445974 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.765437699 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.762987858 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.763634918 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.760513336 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.762940078 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.765796963 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.763730759 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.766617766 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.76687263 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.765459764 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.765316953 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.764788618 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.764231014 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.766789519 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.771665449 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.771644824 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.761565885 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.765345772 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.766787136 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.769006491 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.764861088 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.766438058 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.767167595 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.770179201 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.766036764 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.765028474 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.764971241 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.768739459 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.782369046 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.764347063 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.766679369 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.767653738 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.771542135 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.76521902 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.762294218 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.766057696 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.77024043 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.76832201 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.772021307 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.765617621 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.7739582 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.766550482 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.766285713 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.768736345 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.76911711 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.774254388 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.770169607 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.765716875 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.768827333 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.772446773 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.780342845 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.765726279 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.775017628 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.793362684 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.766674319 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.770015126 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.767136218 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.768263219 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.76560546 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.770048972 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.767950109 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.766794176 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.766306802 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.766448723 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.769333334 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.772711318 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.77026436 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.767281781 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.768639405 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.769617444 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.770209421 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.766283473 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.769154653 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.76791976 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.76736469 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.766553618 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.767891126 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.772081259 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.783333643 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.778272427 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.768898878 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.769773387 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.766872374 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.773914961 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.77004984 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.776820738 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.773784196 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.769488085 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.769568039 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.772844959 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.767914074 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.765232899 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.77035587 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.769713711 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.770859519 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.765956207 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.783495681 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.777101841 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.77572453 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.769937127 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.769392349 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.768032684 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.771839066 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.769654576 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.769476724 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.77280415 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.771179217 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.772149415 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.769605486 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.7689386 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.771796074 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.777886755 seconds)
  done (took 1048.948194359 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.765806275 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.766787365 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.767196019 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.767281271 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768028456 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.766784694 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.768526582 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.767940647 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.767510005 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.768112101 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.768639293 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.767217159 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.768307493 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.76762118 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.767951175 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.768104455 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.764078013 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.765495938 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.768020101 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.767281425 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.768595145 seconds)
  done (took 38.818515014 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.768658251 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.766571074 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.767976333 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.770518068 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767218053 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.769395533 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.765674767 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770694144 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.770453468 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766731145 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.769802246 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77132083 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.766940281 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.767328722 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767368573 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769729496 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.77105623 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.769076414 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.771601827 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.767363644 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.77248199 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.767739686 seconds)
  done (took 40.620496566 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.770775924 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.77345774 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.773939022 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.767476157 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.770014861 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.768404949 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.770210017 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.770619193 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.769640209 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.775735269 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.771549815 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.771538197 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.779822158 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.776299217 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.775008271 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.773048683 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.916366032 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.77318279 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.773114673 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.774833331 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.770114921 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.779670027 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.769851283 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.77021674 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.772582886 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.773545007 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.772531962 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.774561412 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.771314793 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.776467847 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.777344163 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.773901341 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.774414063 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.774428519 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.77283204 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.774237726 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.776964464 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.774394469 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.76866692 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.774117065 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.782742341 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.789096312 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.774565629 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.781459237 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.775455365 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.77341386 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.777603861 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.781556202 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.771931796 seconds)
  done (took 88.781420108 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.773974977 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.774163497 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.771087162 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.77282976 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.774791917 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.77539147 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.774694288 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.775170026 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.771707147 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.770440916 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.773887775 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.771101698 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.771787136 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.774334872 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.774979073 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.772350265 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.772333251 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.771211113 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.772113497 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.771345649 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.772826188 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.774934815 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.775481605 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.773053252 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.774781345 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.771096437 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.771491523 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.775452307 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.772660618 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.771779525 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.776212729 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.776299107 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.776550126 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.773769759 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.770553924 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.775231873 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.77679849 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.772640332 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.775064107 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.773726269 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.77756361 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.776615934 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.77422125 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.777393231 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.773531028 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.774735499 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.775377796 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.77544044 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.776931333 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.778811444 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.776727671 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.774311702 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.776122903 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.77496241 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.775200911 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.777275306 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.771999328 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.775430485 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.778267718 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.774514761 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.774041699 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.778145486 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.775450366 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.776256385 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.77555977 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.774627797 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.773003976 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.778173163 seconds)
  done (took 122.371409375 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.776987636 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.775730595 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.778972408 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.779301355 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.781959418 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.778486474 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.778946375 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.777893604 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.778695978 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.782461114 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.77887875 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.776947617 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.774888341 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.779122301 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.776582078 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.782261011 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.776962269 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.778477088 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.778492994 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.778380915 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.781117259 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.778502206 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.777958098 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.778215663 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.777840518 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.77755451 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.781514361 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.775999395 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.777273231 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.777828289 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.776745599 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.773948272 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.780170884 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.776237676 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.777040499 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.777742924 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.778133847 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.77839292 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.776324604 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.774897398 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.777132552 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.778738529 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.777655496 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.779426384 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.778341388 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.778477457 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.777148894 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.77638297 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.777648503 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.779309868 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.777789062 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.777678533 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.77718015 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.7782562 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.782304311 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.780417965 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781889585 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.779906606 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.778204464 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.77713612 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.78207253 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.778367238 seconds)
  done (took 111.967583734 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777162701 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.777992271 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.774586636 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.774834692 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.77745437 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.775396145 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.777486808 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.777595372 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.781037263 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.779617038 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777292263 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775893759 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77651935 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77827961 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.778416498 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774570414 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775978787 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.777066883 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777037844 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.77846356 seconds)
  done (took 37.253246872 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.776137603 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.778858721 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.77582488 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.776460449 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.779028096 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.776304131 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.779953383 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778251449 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775411043 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779871783 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.77883216 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.777391953 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775362955 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.775419756 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.77994718 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.778987709 seconds)
  done (took 30.154764764 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.777178671 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.78181206 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.778580227 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.781942736 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.78124515 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.778087981 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.779119041 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.777815329 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.777935735 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.780797102 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.780028659 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.778735908 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.780886884 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.779324979 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.779295818 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.779247235 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.77812522 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.780604862 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.780282796 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.779864974 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.780620909 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.777872417 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.779907924 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.781123398 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.779483338 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.778444139 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.779110694 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.778952704 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.780300282 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.783849056 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.778120564 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.780561581 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.780354385 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.77833742 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.782493735 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.780008048 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.78098892 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.782606137 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.782991308 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.78039607 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.782104174 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.779479941 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.782347351 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.781905679 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.778602282 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.780641967 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.780052649 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.781703127 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.781645476 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.781524857 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.782005784 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.781951097 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.781902016 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.782456155 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.784879068 seconds)
  done (took 99.634905479 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781045718 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.78157028 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.780000837 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.781741277 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.781256023 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.77988229 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.78133202 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.779112819 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780061642 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.781887629 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.782023358 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.782966759 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.779634761 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.784462614 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.781552555 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.781100014 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.780748233 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.779553172 seconds)
  done (took 33.774159575 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.780962975 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.782133009 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.781730128 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.780862251 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.781084498 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.784160745 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780715627 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.782537236 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783867479 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.781943823 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78154597 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.783804911 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781922535 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.784311634 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.782479513 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784183626 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.785294944 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783915817 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.78184369 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782583895 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.788217336 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.784621623 seconds)
  done (took 40.940826509 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.785421467 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.78564684 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.802822484 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.824876158 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.81493622 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.785614818 seconds)
  done (took 12.516579097 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783796974 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783159413 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.783640054 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786887632 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783883046 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782854015 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783504193 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783399818 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786289281 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783636901 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783248092 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786453678 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787594739 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782778913 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78638142 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786818232 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782698636 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7856968 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783446349 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786704399 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784229092 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787042548 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783507254 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784639322 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783388671 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785708473 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787879063 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785048226 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784770569 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787370383 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787949089 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784466433 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785557038 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785056499 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787795099 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791308788 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783954923 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787418898 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788320219 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787156125 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.789710975 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788776799 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788904153 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785321476 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788282163 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788064947 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786500066 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783051728 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785113612 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790199442 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788176167 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786594308 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786372679 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7882969 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786392115 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788657532 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787918474 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783735694 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786090928 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787936317 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786018142 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785790166 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786396673 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784436664 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790060221 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786752879 seconds)
  done (took 119.599728737 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787399146 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.786913617 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78499764 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785610588 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787256967 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787593855 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790982568 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785561648 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787312039 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786844342 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789829083 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787502447 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789404147 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789530958 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786244293 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789423886 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788149195 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789805781 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787085276 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793370255 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78795565 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788902126 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788286393 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79078811 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786676687 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791895265 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790514069 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789230643 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789810287 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789017058 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790857073 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789038958 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787854502 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.790304377 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793079444 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789839842 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78972194 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790833757 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787944646 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794035365 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788531063 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789984496 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789696161 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78930193 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789876355 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790880793 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787420739 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786861712 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78800077 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788234994 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787768151 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791146958 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787918574 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786194686 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789854686 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78863617 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789471207 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786140148 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787810401 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790753655 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788992015 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78839668 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793009291 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787899928 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787594632 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788363052 seconds)
  done (took 119.788710053 seconds)
done (took 2447.963846754 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.790516561 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.962923813 seconds)
  done (took 15.478460225 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.96281404 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.917420397 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.800998483 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.843028478 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.801084668 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.825921361 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.824401835 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.801438342 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.80101824 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.801620868 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.802091777 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.985618599 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.804433968 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.801305121 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.801368539 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.893617872 seconds)
  done (took 51.206873896 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.804233242 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.806008908 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.815644487 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.807128268 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.80479748 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.823441511 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.83750333 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.807822688 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.862465307 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.829398158 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.926217084 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.816787991 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.806025521 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.861952039 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.81770801 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.818901952 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.904025851 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.880816827 seconds)
  done (took 34.766886247 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.883439873 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.80954434 seconds)
  done (took 10.438447481 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.808003558 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.801635933 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.826167147 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.799026628 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.824419643 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.854267175 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.841656011 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.837860422 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.826196782 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.811468282 seconds)
  done (took 69.970395394 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.810171015 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.806311469 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.805169035 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.804007243 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.798547234 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.802617357 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.80588117 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.799976142 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.503231358 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.842305492 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.811738856 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.810032392 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.806494003 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.807885261 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.803755818 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.826801575 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.921158139 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.803158973 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.802936399 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.811803272 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.80647499 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.899327575 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.819287974 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.806806478 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.836800068 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.498670411 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.816093864 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.811747785 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.942510267 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.804310363 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.805399359 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.807435795 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.809376083 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.195000987 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.121220337 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.806584534 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.81570256 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.814091919 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.803482733 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.978437165 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.80739069 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.812835665 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.799743372 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.10820242 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.890841883 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.84934087 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.181369479 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.810817874 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.807773766 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.838278867 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.809884517 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.807251093 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.82067652 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.317505908 seconds)
  done (took 129.387434857 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.802138934 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.379550683 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.966636152 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.804157787 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085358717 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047543047 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.80458209 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.853240507 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.805133468 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.054351087 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.982558641 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.923566175 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.804775506 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.804308519 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.800936733 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.802002343 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.956091755 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.874408232 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.806753098 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.801949129 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838999949 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.070180999 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.931559286 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.805976186 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.827320576 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.034306582 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.931019257 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.922850354 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.322353435 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.802172421 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.872312279 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.805738144 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.802357739 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.802835315 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.970490552 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.913397577 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.902447476 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.805571374 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.802079814 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.802865844 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.46604737 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027730388 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.91614901 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.944078823 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.054617423 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.033904524 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.454144427 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.802763474 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.442505516 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.001703347 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.014390802 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.059395564 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.935044574 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.806921271 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.053692259 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.803672187 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.80372534 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.069128589 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.034227204 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.922070795 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.808719965 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.804019801 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.804858529 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.121063172 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.807030397 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.91674198 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.807023441 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.806007716 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.918736669 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.923719902 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.038247965 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052826545 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.83675845 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.714028458 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.31266595 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.089748724 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.879861467 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070792191 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.807197456 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.805012786 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.901846157 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.558656921 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.981160517 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.125272364 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.073052654 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.85116543 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.411350235 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.80436741 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.053834591 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.058349465 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.037393462 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.052678027 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.975060625 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.125864987 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.806703466 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.805405448 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.019445465 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.940001428 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.810174055 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.171063321 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.057549311 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.542129303 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.837717251 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.116442218 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.948277634 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.810304232 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.432526687 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.806688219 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.010810481 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.851577112 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.810160221 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.807007684 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.055712907 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.680954409 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.806229849 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.612266441 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.876416619 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.812912186 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.074576094 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.812608874 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050807912 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.812153227 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.120594999 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.349110874 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.8519496 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.000981863 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.056651937 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.603600822 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.076767852 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.124487024 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.935944197 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.069320584 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.627261541 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.81086854 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.092913785 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.810911518 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.808849435 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.979542245 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.810570244 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.965200918 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.812629515 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.073238862 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836521259 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.982099989 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.812909486 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.084278992 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.856786923 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.864147476 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.813000722 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.927767913 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.81196511 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.853065065 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.994685695 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.814437604 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.810167686 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.416072311 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.812214029 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.959506286 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.112878821 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.837344139 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.88378711 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.340038156 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.809963337 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.906644927 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.843512088 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.41406366 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.811192923 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.981400391 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.813942326 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.768864718 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.809338496 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.121243897 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.037031392 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.81439645 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.813606253 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.605007525 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.520916874 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.810654548 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.988823462 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.057212479 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.459687415 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033117269 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.813059112 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946180952 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.814596017 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.892645772 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.160954583 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.811412729 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.810529624 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.812354748 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.81316764 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.810797942 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.039724675 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.84214266 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.508673353 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.94965619 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.059324555 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.124836014 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.075435902 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.8623017 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.817273874 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.082078474 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.814383712 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.880087975 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.815374686 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.837340713 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062962854 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.814584853 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.04457731 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.103212397 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.874793382 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.865229458 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.816110941 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.812284395 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.812806276 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.959435154 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.915981427 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.816660796 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.814253336 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.931589266 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.941628093 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.003440632 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.410518913 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.988502922 seconds)
  done (took 890.650087511 seconds)
done (took 1203.620577504 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.813602349 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.813081277 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.803648741 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.820908597 seconds)
  done (took 29.003282086 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.827521069 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.824541865 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.826064821 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.825729312 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.827173277 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.824316135 seconds)
  done (took 12.713225234 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.856473699 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.820670019 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.822591543 seconds)
  done (took 21.257768129 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.894449089 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.237080957 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.931195551 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.270084945 seconds)
  done (took 10.091256195 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.826706373 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.826668235 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.827271517 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.828854783 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.82907341 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.829435862 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.827895553 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.829030794 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.829959079 seconds)
  done (took 18.215048251 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.002438961 seconds)
done (took 97.0350755 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.953690304 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.949849022 seconds)
    (3/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.026493266 seconds)
    (4/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.045652241 seconds)
    (5/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.077243384 seconds)
    (6/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.849376605 seconds)
    (7/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.917453467 seconds)
    (8/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.882996443 seconds)
    (9/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.883264868 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.95159482 seconds)
    (11/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.358096664 seconds)
    (12/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.064078682 seconds)
    (13/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.939684467 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.893660109 seconds)
    (15/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.836237604 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.860276142 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.845937126 seconds)
    (18/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.364705304 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.282373584 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.822563674 seconds)
    (21/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 3.480743019 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.459842138 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.074424062 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.155990348 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.969192921 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.697753214 seconds)
    (27/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.86867143 seconds)
    (28/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.223882055 seconds)
    (29/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.997635068 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.654128792 seconds)
    (31/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.979012309 seconds)
    (32/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.892562636 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.876872307 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.924536978 seconds)
    (35/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.807436259 seconds)
    (36/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 3.106436239 seconds)
    (37/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.928718345 seconds)
    (38/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.170757095 seconds)
    (39/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.828526347 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.900669814 seconds)
    (41/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.991604772 seconds)
    (42/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.7559962 seconds)
    (43/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.723028694 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.87324678 seconds)
    (45/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.837051504 seconds)
    (46/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.117471331 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.828038696 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.201639594 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.936586066 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.822290087 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 3.386552943 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.110170185 seconds)
    (53/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.812310472 seconds)
    (54/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.888673184 seconds)
    (55/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 3.39180837 seconds)
    (56/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.500119077 seconds)
    (57/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.833195484 seconds)
    (58/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.013655804 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.826062539 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.8835178 seconds)
    (61/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.824925125 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.742199882 seconds)
    (63/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.857670703 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.040527863 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.160954042 seconds)
    (66/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.995894727 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.939177565 seconds)
    (68/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.949623227 seconds)
    (69/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.848487763 seconds)
    (70/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.808831697 seconds)
    (71/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.90421171 seconds)
    (72/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.831860976 seconds)
    (73/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.260489643 seconds)
    (74/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.853837088 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.124754115 seconds)
    (76/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.895917725 seconds)
    (77/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.428367261 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.814252986 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.499925202 seconds)
    (80/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.955077217 seconds)
    (81/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.828210044 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 5.675134456 seconds)
    (83/309) benchmarking ("sort", BigInt, false)...
    done (took 6.828133613 seconds)
    (84/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.813486645 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.079492212 seconds)
    (86/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.914447784 seconds)
    (87/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.903337249 seconds)
    (88/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.130524978 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.184411507 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.126874433 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.522980452 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.972000789 seconds)
    (93/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.200878861 seconds)
    (94/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.827227203 seconds)
    (95/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.439281782 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.244845232 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.853062204 seconds)
    (98/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.126173688 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.860258187 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.174077718 seconds)
    (101/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.84155089 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.826532099 seconds)
    (103/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.966172256 seconds)
    (104/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.927497525 seconds)
    (105/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.900083469 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.106982159 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.876405527 seconds)
    (108/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.851622226 seconds)
    (109/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.334238749 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.104225318 seconds)
    (111/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.829471146 seconds)
    (112/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.910381266 seconds)
    (113/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.02445672 seconds)
    (114/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.123636718 seconds)
    (115/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.828465846 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.108800175 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.644504682 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.834035408 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.880222065 seconds)
    (120/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.771208318 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.829551785 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.815987531 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.247170085 seconds)
    (124/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.831653662 seconds)
    (125/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.963194596 seconds)
    (126/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.813064582 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 9.675623125 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.913979014 seconds)
    (129/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.978660243 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.852349132 seconds)
    (131/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.347069379 seconds)
    (132/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.215715296 seconds)
    (133/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.845366534 seconds)
    (134/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.343728081 seconds)
    (135/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.425926535 seconds)
    (136/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.11202105 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 2.27732911 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.853812189 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.828319656 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.995834251 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.110996621 seconds)
    (142/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.013205019 seconds)
    (143/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.71639629 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.045840565 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.261177153 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.086490379 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.193845839 seconds)
    (148/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.993808808 seconds)
    (149/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.001231974 seconds)
    (150/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.085226772 seconds)
    (151/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.522862074 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.839494594 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.751825084 seconds)
    (154/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.985125474 seconds)
    (155/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.828511888 seconds)
    (156/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.178507056 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.933969485 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.132870454 seconds)
    (159/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.036570065 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.752933947 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.837103996 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.053300746 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.857527492 seconds)
    (164/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.934455506 seconds)
    (165/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.08796722 seconds)
    (166/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.440224525 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.838425317 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.1202314 seconds)
    (169/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.403181454 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.871669986 seconds)
    (171/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.338310594 seconds)
    (172/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.8028967 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.611510113 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.852634988 seconds)
    (175/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.832427047 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.845294481 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.835470809 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.135050145 seconds)
    (179/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.978759276 seconds)
    (180/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.432545199 seconds)
    (181/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.857803987 seconds)
    (182/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.026074198 seconds)
    (183/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.971464165 seconds)
    (184/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.834314792 seconds)
    (185/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.851063335 seconds)
    (186/309) benchmarking ("map", abs, Int64, false)...
    done (took 4.381031867 seconds)
    (187/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.942710038 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.817195368 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.868303209 seconds)
    (190/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.954882315 seconds)
    (191/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.912698646 seconds)
    (192/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.411878834 seconds)
    (193/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.850929514 seconds)
    (194/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.925613634 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.955752039 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.081759087 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.860105373 seconds)
    (198/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.030629293 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.841980553 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.64472696 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.43226187 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.83318749 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.874907325 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.018078722 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.934271764 seconds)
    (206/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.16566015 seconds)
    (207/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.237874122 seconds)
    (208/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.532404807 seconds)
    (209/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.997544087 seconds)
    (210/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.857809037 seconds)
    (211/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.014688644 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.892434546 seconds)
    (213/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.81799816 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.510103203 seconds)
    (215/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.183533449 seconds)
    (216/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.943139569 seconds)
    (217/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.857985191 seconds)
    (218/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.995634858 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.228698092 seconds)
    (220/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.91884271 seconds)
    (221/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.817627152 seconds)
    (222/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.907319215 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.650503978 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.033861586 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.525138732 seconds)
    (226/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.967770756 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.712526845 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.858734417 seconds)
    (229/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.818865243 seconds)
    (230/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.020995125 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.864624372 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.934854592 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.874757342 seconds)
    (234/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.123764966 seconds)
    (235/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.837213543 seconds)
    (236/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.05125169 seconds)
    (237/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.866662426 seconds)
    (238/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.919094969 seconds)
    (239/309) benchmarking ("sort", Float64, false)...
    done (took 5.638471615 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.64192732 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.772548806 seconds)
    (242/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.947698865 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.214294218 seconds)
    (244/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.126008764 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.835955903 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.836963372 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.918673679 seconds)
    (248/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.400342474 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.834853572 seconds)
    (250/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.1234788 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.539323643 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.9530788 seconds)
    (253/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.045760235 seconds)
    (254/309) benchmarking ("sort", Float32, false)...
    done (took 5.629951116 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.824493729 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.945797173 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.508556131 seconds)
    (258/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.94262971 seconds)
    (259/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.148709495 seconds)
    (260/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.051381625 seconds)
    (261/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.841331072 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.86165049 seconds)
    (263/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.13644873 seconds)
    (264/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.22296859 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.166154352 seconds)
    (266/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.10207689 seconds)
    (267/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.94534982 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.841023295 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.822405066 seconds)
    (270/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.931276482 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.217126238 seconds)
    (272/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.822347859 seconds)
    (273/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 3.730422566 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.232071857 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.825255801 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.821716191 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.100058051 seconds)
    (278/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.981022518 seconds)
    (279/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.982155784 seconds)
    (280/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.018966826 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.083708295 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.126873934 seconds)
    (283/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.208337674 seconds)
    (284/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.242923254 seconds)
    (285/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.950562219 seconds)
    (286/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.066535686 seconds)
    (287/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.930871287 seconds)
    (288/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.961085878 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.918625608 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.919744037 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.947786118 seconds)
    (292/309) benchmarking ("sort", Int8, false)...
    done (took 4.799724378 seconds)
    (293/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.480675072 seconds)
    (294/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.028148719 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.030970283 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.215367085 seconds)
    (297/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.866025182 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.878471367 seconds)
    (299/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.897091566 seconds)
    (300/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.860950034 seconds)
    (301/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.425082409 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.861195339 seconds)
    (303/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.846994789 seconds)
    (304/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.242550195 seconds)
    (305/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.769828514 seconds)
    (306/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.019882589 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.919554913 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.801617549 seconds)
    (309/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.358399172 seconds)
  done (took 1013.398657721 seconds)
done (took 1015.172703379 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.874934291 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.865877789 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.849777783 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.870603993 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.961660002 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.882704115 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.860186994 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.850971203 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.896940977 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.899775722 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.849465518 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.882417398 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.851747403 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.850558056 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.850011284 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.864767381 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.158723332 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.87964458 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.867960075 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.860839983 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.867334551 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.85048746 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.899396479 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.883280793 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.854294539 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.85399868 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.854721517 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.870932777 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.96305117 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.855239886 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.853899238 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.863288705 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.159298344 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.877014398 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.845792502 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.870889884 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.863424996 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.860404557 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.854645619 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.884704878 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.300178366 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.85841462 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.853072795 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.851902938 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.852233193 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.857016372 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.853779529 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.858273898 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.865548301 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.865519521 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.298035672 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.874415115 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.855414764 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.852177835 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.863186054 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.852238818 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.85699249 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869404039 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.873033444 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.86830237 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.151091383 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.88417085 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.854788408 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.870514021 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.860832665 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.334677695 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.856070095 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.858221406 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.301006908 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.866184647 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.3351056 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.869269077 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.854404074 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.86854559 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.886335998 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.161094548 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.875865598 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.852450375 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.861355856 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.853372195 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.863490104 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.870011602 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.859613 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.855229218 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.86813212 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.886828578 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.864445723 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.855720072 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.863229836 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.874797538 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.862281019 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.866387493 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.85793164 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.84964764 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.863772827 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.858615494 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.857526428 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.858406204 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.859865759 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.865607455 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.29964103 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.878401421 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.851837456 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.851722379 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.854009126 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.869430579 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.30094605 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.863128901 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.877761222 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.90303652 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.857852708 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.152055871 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.886682473 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.871750037 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.865381069 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.859588753 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.851449816 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.15366749 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.328641499 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.878325905 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.857606938 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.85542289 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.872550888 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.858274179 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.852615389 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.164040881 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.884476298 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.870623177 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.978104641 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.866760617 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.888760903 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.85570213 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.858822325 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.886022049 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.87234392 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.888831614 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.86085491 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.872556269 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.874543446 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.853395256 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.869436244 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.867787571 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.857980185 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.862617572 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.851445431 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.886646533 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.870029957 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.869897317 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.877408045 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.978768887 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.855512245 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.155441178 seconds)
done (took 291.631182231 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.92481741 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.852971834 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.957661091 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.85319314 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.939768849 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.942303352 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.84990912 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.851296653 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.850896989 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.233984378 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.850043263 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.851736424 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.846953958 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.851188307 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.939205028 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.852759366 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.850852452 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.196617431 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.855257763 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.925440823 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.8566811 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.851394973 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.854232382 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.23759908 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.854382035 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.849580251 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.926249916 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.855222724 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.203256768 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.854360968 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.849673156 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.203222098 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.944785314 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.872036713 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.864859857 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.862142257 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.942899419 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.859463569 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.937451671 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.937724604 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.959616992 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.895133215 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.854231966 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.849337082 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.857807003 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.856693265 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.852493672 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.88334247 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.855397055 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.853649909 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.198659141 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.865831886 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.854471354 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.853620444 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.854160933 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.88701127 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.853678639 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.856698765 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.947361448 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.857114949 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.919889592 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.240221868 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.236894698 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.855735902 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.851105168 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.854059669 seconds)
  done (took 183.384554939 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.924584439 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.93186871 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.925026952 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.861610461 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.907206356 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.928283524 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.860942582 seconds)
  done (took 15.126203083 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.863263009 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.857019824 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.912027926 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.912565179 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.857399691 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.008530961 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.857131881 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.86931009 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.854527732 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.923646245 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.858906641 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.856812191 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.863709357 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.85659817 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.911829814 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.86895261 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.972397485 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.8594529 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.858040728 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.014858561 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.855639284 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.864630436 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.913057894 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.870401925 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.860298224 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.865471138 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.443807071 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.858534311 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.856581986 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.858224906 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.856091628 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.898556964 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.859348849 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.855190998 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.855754951 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.97554055 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.858294322 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.855608975 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.858674326 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.854445512 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.85774804 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.858547328 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.858779327 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.855586039 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.858431594 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.883388211 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.858757254 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.859464327 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.85837294 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.858922697 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.920734548 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.859253791 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.857708699 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.857391432 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.929197064 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.866091804 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.859827838 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.856655962 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.859955767 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.856924297 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.017249219 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.914121065 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.859092255 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.915117931 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.860029143 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.860427879 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.859844596 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.859625339 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.922397729 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.861076637 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.91586989 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.858005828 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.043760782 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.88531769 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.861755408 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.863319187 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.863898399 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.860532846 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.853877722 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.867512911 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.857817026 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.862762666 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.866978484 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.858822187 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.857928638 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.968595159 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.971010243 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.859016961 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.875355075 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.868469629 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.857852419 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.925553795 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.859914208 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.858978331 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.925969649 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.976983798 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.919015117 seconds)
  done (took 204.908402558 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.866963368 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.87023722 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.863881824 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.878412708 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.863386204 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.862264428 seconds)
  done (took 12.997680231 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.864967164 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.863394504 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.861949889 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.861579092 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.86197661 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.864297765 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.863108627 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.865371371 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.866634879 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.862150954 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.864404128 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.305836921 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.865249171 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.863768441 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.863969491 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.862315325 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.864622991 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.861298248 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.863736689 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.863997631 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.006883047 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.864868937 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.863685008 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.866277412 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.869685903 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.864340981 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.872458107 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.862704124 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.864337416 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.869878669 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.867701962 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.864947543 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.865371785 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.869854025 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.86886731 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.86662525 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.867288767 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.869808676 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.862225587 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.86640542 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.868646737 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.864614856 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.864644697 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.868684979 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.867184524 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.870571785 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.873054547 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.873507608 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.865647743 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.86926785 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.87003665 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.864624833 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.866814114 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.869380775 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.869875889 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.871534636 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.87389643 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.866094762 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.866191251 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.866839064 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.866694315 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.867416332 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.867174334 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.869912963 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.871978775 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.86994769 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.867231269 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.870293409 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.866548769 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.86650621 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.870696087 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.863720786 seconds)
  done (took 137.773646141 seconds)
done (took 555.991006198 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.107264535 seconds)
  done (took 8.903584378 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.931636926 seconds)
  done (took 8.808771126 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.519152373 seconds)
  done (took 10.317012086 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.86834198 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.896275613 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.870582642 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.870603855 seconds)
  done (took 29.314968034 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.136337301 seconds)
  done (took 8.934731564 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.874881171 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.859679554 seconds)
  done (took 15.596222325 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.935237403 seconds)
  done (took 8.734378098 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.90672707 seconds)
  done (took 8.70774688 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.880004911 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.864042864 seconds)
  done (took 15.555767032 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.848328722 seconds)
  done (took 8.647012464 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.546196386 seconds)
  done (took 11.354265125 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.867701109 seconds)
  done (took 8.680641764 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.873932731 seconds)
  done (took 8.672992244 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.012405454 seconds)
  done (took 9.810469602 seconds)
done (took 163.835497814 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.864891008 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.862246476 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.86198532 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.861082314 seconds)
  done (took 29.247918186 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.90128151 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.901514673 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.903107637 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.912201222 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.90483821 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.901663253 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.89351578 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.894166754 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.912292005 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.905800757 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.904056295 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.903541116 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.900856184 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.893806051 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.904041762 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.903219603 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.91251612 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.90281065 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.89402516 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.905196072 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.868318589 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.912733122 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.904370294 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.869674379 seconds)
  done (took 47.410109879 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.067507451 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.940339243 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.022532822 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.921245048 seconds)
  done (took 9.75060724 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.921439584 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.921745404 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.933435846 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.973022143 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.99822408 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.930962385 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.895366202 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.890752501 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.876581844 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.922416956 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.997191733 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.937684808 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.01065593 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.86927518 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.050471851 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.869150375 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.869104835 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.922264645 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.973389528 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.993068564 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.870789671 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.921784583 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.92533922 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.938890784 seconds)
  done (took 48.213410847 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.867829176 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.877428101 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.874618752 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.868460287 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.868661373 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.869323113 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.875282255 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.870803853 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.890548696 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.870981223 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.869180614 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.869283813 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.868717907 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.869852103 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.8690349 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.882428754 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.88305973 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.869875313 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.871584403 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.875881526 seconds)
  done (took 39.263696552 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.863653961 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.718532548 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.21602703 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.120933928 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.86465387 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.865196444 seconds)
  done (took 31.450937828 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.885020761 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.936388865 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.879150259 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.927998325 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.009888991 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.878964726 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.872226546 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.93963449 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.984910097 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.945572797 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.893381 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.900474204 seconds)
  done (took 24.855531401 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.867910049 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.869570574 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.868614353 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.88430249 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.883802921 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.880068539 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.879407225 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.867168781 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.886660913 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.892399618 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.881577115 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.885148758 seconds)
  done (took 44.354441173 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955365137 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.911197473 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.883652673 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545499859 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.245255324 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077847095 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.518353242 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.207046586 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.870378867 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140181181 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.877312507 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972835149 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.124002858 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.384833397 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.904670467 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.33078862 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157161082 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0689252 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892725559 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.504517368 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928467205 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.082968055 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.579501552 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.921005003 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.079710146 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.001174307 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.128632817 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.868475643 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999510478 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900100363 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878367582 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.868269403 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141734795 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239030977 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972415904 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87886305 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.483591229 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.58456835 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.892498657 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.544917285 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.530969079 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.983972962 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879793897 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86941432 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.803137108 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.051105964 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248327525 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.875813416 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.581186947 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.870198591 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.880709064 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963947256 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.872409572 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.685833104 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78260773 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.872532075 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.867435771 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87673287 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.439330424 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.933424899 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.079430675 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.848786361 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.963761484 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.509744066 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256927517 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.011824901 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.873491409 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.873955306 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804965018 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.583754656 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922952789 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219343081 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.891673819 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.520284305 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162523862 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.925797772 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.81621102 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131274167 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.429418678 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.850607152 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099842394 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871630693 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806771192 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.817337453 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.805810032 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124127836 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906556976 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.636209498 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908744973 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.209608381 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.882731066 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890753517 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89458191 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.095638107 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.759252104 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871884295 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.635450316 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.025692261 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893626067 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.202136685 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806634781 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.876302643 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129489486 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.08488365 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.978875977 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.381400556 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021621132 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.467295307 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.930727313 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.04927182 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.926331892 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.132438723 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923739218 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.939220052 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923628164 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.873110063 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156162729 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.486935145 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.015498258 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.892760309 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.001867914 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.193493457 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898653427 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955576549 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.876224623 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.874347216 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.581558396 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.421805562 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.875043572 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.876415917 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.97994625 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.92710214 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.875439641 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821024453 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.500615014 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.894762784 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.890178827 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.098471373 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.473316177 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192019279 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809656676 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202293624 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.9297028 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.097775727 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.513545763 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.936651236 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135663308 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.981670887 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.020346118 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927943839 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893478545 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9734002 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896591489 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.047416057 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.173999834 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.879274571 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.878712098 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.614073528 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.909424622 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883623192 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.880666475 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.627470705 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140172036 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.894190756 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.882329658 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.765433469 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.889551563 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940492834 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88114786 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.887158877 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.416214589 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.590403593 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.883760155 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.464898732 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10156007 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886676039 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.605700012 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987390471 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.957779291 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.142304711 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929715333 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.810672888 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.588310935 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.569739152 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878003006 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812535764 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.876967034 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886546417 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88734721 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.075246157 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.141667957 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916126052 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.525545373 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.917190121 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888692497 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.882695083 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876821853 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.388683687 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.955987567 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.092510072 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.929255388 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021798912 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.891253958 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.811623022 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.880848414 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.882778316 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.878073676 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.878152393 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911338047 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.516741091 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250668925 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139727068 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.487846794 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893719866 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.577918266 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.932703982 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.880080966 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.64080498 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.079331127 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.917815972 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909028842 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.890162616 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.616768217 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.571321783 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.445578454 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17772557 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165791606 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29903537 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.11424446 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.911125033 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.214838583 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812937896 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.437104437 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938173776 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.220328218 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823991363 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96286249 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.517289223 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209512322 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893643292 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108653354 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252466679 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.678662703 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907651297 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091323036 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915424307 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.062322584 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.845102907 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.405724821 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021344425 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.510975141 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078832656 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229079167 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.499205677 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.035055547 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.880594607 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.539585173 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959930729 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.591213437 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.05328573 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.095968566 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.79903897 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343364807 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.888410336 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.106857295 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217804966 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.070628305 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.007524033 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817431169 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.892680982 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.891122974 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.883880388 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.878723667 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.766325872 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.135422215 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892433364 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816626844 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.027376041 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167897761 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.778691695 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.888124777 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883455432 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184721852 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.446320749 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049952252 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.006523647 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.405825594 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890624998 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.816498161 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816358085 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.575551975 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.889876122 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.85842778 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080769889 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.982226634 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.797297844 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.989528667 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.135816745 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.139375751 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.897979144 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.1499679 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152399523 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.58859627 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908293771 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.983423928 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.48973245 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.986123486 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.883879882 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.119766348 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.639329514 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.111123003 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.939814229 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.839234406 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.883908205 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098506764 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.88401921 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.756634647 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106860204 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.605889514 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.896226657 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192070009 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952295603 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.774921973 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.923056942 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.978802231 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895614907 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964228048 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896193801 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.897190939 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.895905695 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931236442 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.780979638 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.999500942 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.900674035 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979492339 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.956790025 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.408449075 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.892570307 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15522092 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242288897 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.194581531 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938536374 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.887195426 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891710793 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819933613 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035560782 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.112097486 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159556541 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.017732621 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.003585631 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912978523 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.523488468 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.117130909 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131693308 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162073932 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.781636997 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.423210532 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.931230137 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.887371338 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898718647 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.098805296 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089084463 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186468973 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030187011 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.999037243 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.250765602 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162025191 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.888851881 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.889517486 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.478649156 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.891960099 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.560056616 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.925800432 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.766936488 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157007901 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898440569 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269246131 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.909167091 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.043382908 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.661446047 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.580892556 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174853071 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.866550441 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.939742985 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151765259 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.25226962 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195484158 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956178671 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900214599 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.999241687 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036115435 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.77009537 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.892006632 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890373744 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.937736135 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.599011303 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.899218467 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154484565 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194099189 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.88737212 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.772670941 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913028534 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.900265023 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.113246542 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143288006 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.139679752 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89998467 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.896462835 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.705798639 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153582022 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94262278 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824534936 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.894377576 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987054334 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.138112522 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911531975 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.343337203 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.601896648 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151924819 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.889241001 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912877627 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.075831685 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244361482 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197202457 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.423911093 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092104291 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.474429207 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.494927622 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196245061 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.896963532 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.071691078 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198624104 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.896313403 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.002426984 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933960492 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.150754025 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196331847 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.90047223 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.554841585 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.859963439 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.233534429 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.452389153 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831560319 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901580371 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.954240113 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.892883388 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.020245414 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903887338 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.783096644 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.073222877 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.680879772 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.165700533 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.897680031 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.882658107 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.582420132 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.201149916 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930225309 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034742341 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902464367 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.565750534 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.242085155 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.149627408 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.006156269 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.904878326 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.89706891 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894144946 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.880445728 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.092072698 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.091682563 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173607465 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.025724265 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.934585214 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.897995741 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.109774216 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106034822 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.782634839 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025081406 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.999153342 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938699568 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.761305388 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396255287 seconds)
  done (took 1678.510707963 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.927574748 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.937091509 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.944362621 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.928233859 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.929430206 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.943282836 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.966095918 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.914086507 seconds)
  done (took 57.321372635 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.895904508 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.112900934 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.904716389 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.89532631 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.90446284 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.895605575 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.062912386 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.909287185 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.904455756 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.905789969 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.904512688 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.896380535 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.20950449 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.920945053 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.896332019 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.881015769 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.90482074 seconds)
  done (took 74.850325346 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.895117463 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.913770999 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.924110983 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.905080751 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.91054867 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.898734053 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.711046625 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.897742092 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.899459482 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.024404793 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.528646694 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.919977925 seconds)
  done (took 87.261442147 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.90606891 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.904106533 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.903175803 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.902898966 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.903089516 seconds)
  done (took 11.355557155 seconds)
done (took 2185.671371583 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.149425124 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.110799782 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.119735701 seconds)
  done (took 6.063973511 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.041435281 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.089090295 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.209660281 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.215288274 seconds)
  done (took 10.387387374 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.17671319 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.273707024 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.108351637 seconds)
  done (took 8.386452792 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.296393681 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.902265355 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.004347436 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.895212782 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.896039994 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.898778073 seconds)
  done (took 22.520061893 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.898282501 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.901328527 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.898793356 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.902345755 seconds)
  done (took 9.433077745 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.882403939 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.604393589 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.882344275 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.8955521 seconds)
  done (took 21.096023855 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.646066335 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.658272039 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.641433913 seconds)
  done (took 9.776694465 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.481741041 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.808353737 seconds)
  done (took 9.121407524 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.152396531 seconds)
  done (took 3.983258075 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.030627691 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.161059182 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.360712773 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.386584945 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.445366944 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.77219513 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.212400567 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.146923598 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.287250926 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.333485953 seconds)
  done (took 24.968634026 seconds)
done (took 140.92177684 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.275516386 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.131864898 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.09867192 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.234655758 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.11964903 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.099360893 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.118477063 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.21627418 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.743726482 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.7397089 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.235174027 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.1337478 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.061580441 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.135601411 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.063226829 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.140973961 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.154942212 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.28446472 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.930269029 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.12919102 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.120618272 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.872586779 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.076679635 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.886611986 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.224542469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.049268178 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.451012263 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.143924373 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.086749945 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.462094041 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.052228651 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.282724148 seconds)
  done (took 173.591072176 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.673061254 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.899379001 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.898866937 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.89958697 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.222691197 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.898074116 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.900935176 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.899504989 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.136386781 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.138647892 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.900426829 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.209224232 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.900993269 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.899344378 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.903926423 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.899496342 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.282156353 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.740970564 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.912123622 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.915835319 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.91863824 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.16981826 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.919446382 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.20587071 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.298845224 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.920907412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.900010221 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.919816481 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.909006617 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.91152116 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.915158765 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.900555614 seconds)
  done (took 208.858481276 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.899585051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.902401265 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.901177943 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.901683878 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.904586772 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.905525967 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.90183148 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.901221247 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.476267146 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.467696565 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.910473109 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.908465506 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.905628723 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.904367019 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.909720062 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.900882137 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.911581764 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.91083106 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.909122991 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.910314371 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.913206252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.618073673 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.913805067 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.619795075 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.908237519 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.910894612 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.902377002 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.909818791 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.911883291 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.911857048 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.911527067 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.902404615 seconds)
  done (took 221.431438812 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.104110211 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.90881883 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.910145386 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.857061391 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.908587112 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.907642746 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.903974389 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.105511034 seconds)
  done (took 19.458413843 seconds)
done (took 625.18443622 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.342400293 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.186236896 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.082886914 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.932836211 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.339674176 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.964515883 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.930432502 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.995353015 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.113144424 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.003165412 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.568465683 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.948273875 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.657832541 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.953058526 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.053674197 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.988619479 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.492919851 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.579049368 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.109494961 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.162282282 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.097061314 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.88995151 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.003836534 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.156822195 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.680442904 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.932094172 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.092454621 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.494602226 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.941152333 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.093006942 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.650760468 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.307889695 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.939800236 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.926823706 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.981288809 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.963436517 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.272757533 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.93963591 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.052090003 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.695051395 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.150907085 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.992126496 seconds)
  done (took 106.498336178 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.902447807 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.900171111 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.900868368 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.899859054 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.902242723 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.900478041 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.899623144 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.900429693 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.899700555 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.898771107 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.900599999 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.902625663 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.899254384 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.901756023 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.899688 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.900450865 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.900901059 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.901766752 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.900177457 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.902632718 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.900230652 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.900918192 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.901071701 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.899448237 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.899520593 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.900234847 seconds)
  done (took 51.271103494 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.913304172 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.058263608 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.133470616 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.931759057 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.912782191 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.915527531 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.933546343 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.918968472 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.915066088 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.915635903 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.004258563 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.921263802 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.931365534 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.135210577 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.928236109 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.913511576 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.914617753 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.916026922 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.065968802 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.930660734 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.935179415 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.919514366 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.933585295 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.927819178 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.914919958 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.917085991 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.917705842 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.34872612 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.923153693 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.005119284 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.956347213 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.935787361 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.309174321 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.144923305 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.968061097 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.922581853 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.915256811 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.014155051 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.921220264 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.914627289 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.933149467 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.920832068 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.135499251 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.413032831 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.93041907 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.916697031 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.359270427 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.026332477 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.957528794 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.929473515 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.140548079 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.931310847 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.915574907 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.916613341 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.952346121 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.92992457 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.917696459 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.224065071 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.928304791 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.934578126 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.920154429 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.916685444 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.073419889 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.925371826 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.062575766 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.924930641 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.923652737 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.917216054 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.137380859 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.931709873 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.413380908 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.929916294 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.916318322 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.007520595 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.066959343 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.386849915 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.93012532 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.07848338 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.324595068 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.940928194 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.924483457 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.342055655 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.945587313 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.92488305 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.918312679 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.919072039 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.91690362 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.961184567 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.933237573 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.354615309 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.416586926 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.236354496 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.94518673 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.934043583 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.918196415 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.225545881 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.925838831 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.919961765 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.132530619 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.426214889 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.930546771 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.925771839 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.404016956 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.932767823 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.937888688 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.928080024 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.141824066 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.932634235 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.961309476 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.918159772 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.925488445 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.92206195 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.937792206 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.925638972 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.918001857 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.391093675 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.026291239 seconds)
  done (took 237.122438343 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.914544507 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.92471696 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.913280132 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.913469036 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.912597714 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.919190738 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.911864635 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.912678537 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.917824944 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.91332327 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.913067346 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.918681432 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.915395743 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.917157754 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.375375691 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.921831676 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.526953548 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.916836754 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.915209214 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.916914789 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.591873181 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.925177082 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.914815205 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.919620483 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.921074893 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.919811976 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.930547848 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.940707582 seconds)
  done (took 169.307111084 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.921822259 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.102400517 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.938367138 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.957053398 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.932070982 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.919459294 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.946369008 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.942444978 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.927608198 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.919827084 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.919993678 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.982479182 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.936161974 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.047949625 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.95511375 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.957131624 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.027821213 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.930360768 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.921525586 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.920633598 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.951536672 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.920477727 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.98416027 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.053297159 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.939864222 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.041863249 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.928955865 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.92385348 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.92423054 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.041867125 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.938329436 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.984160734 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.954185149 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.943901313 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.044523918 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.03892905 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.029652716 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.954225353 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.928623175 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.922253479 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.922244302 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.913450493 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.042302846 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.942630814 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.924807721 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.033872837 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.941815316 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.924504076 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.934983946 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.923173769 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.937253994 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.942652656 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.991946164 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.056309739 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.957264354 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.961060234 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.95049035 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.213821361 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.934883157 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.02674672 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.919520844 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.044202422 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.945871641 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.914564719 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.924327415 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.929758982 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.953333329 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.962555836 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.034296789 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.934989908 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.026732985 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.959455751 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.934140836 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.925728643 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.928806193 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.042426126 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.046377859 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.965006036 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.963764473 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.961006081 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.924399879 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.928012022 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.91535144 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.947441143 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.930616517 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.042438453 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.048798149 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.934191021 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.928590268 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.929255856 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.928213765 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.952078399 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.053816636 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.961242518 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.025185464 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.99582111 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.001175814 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.942396975 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.941763935 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.93233686 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.992783061 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.940772655 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.936945579 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.261021188 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.000252004 seconds)
  done (took 208.601283611 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.021501122 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.3958864 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.979439656 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.983384745 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.208458377 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.357369716 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.723277753 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.974818153 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.977260737 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.002758028 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.136463363 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.034046892 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.990594074 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.96851321 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.383575934 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.97013902 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.978270399 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.996437779 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.980704685 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.535329022 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.314842434 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.110101805 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.977182693 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.108375105 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.956829073 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.239242204 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.461924631 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.355125722 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.009675013 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.324969674 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.30572012 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.661818751 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.198652825 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.217613813 seconds)
  done (took 76.704695038 seconds)
done (took 851.341280635 seconds)
SAVING RESULT...
DONE!
