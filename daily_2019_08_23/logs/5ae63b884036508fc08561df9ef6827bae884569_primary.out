cset: moving following pidspec: 8217
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.370094313 seconds)
loading group "string"... done (took 0.537851867 seconds)
loading group "linalg"... done (took 7.258976516 seconds)
loading group "parallel"... done (took 0.158473771 seconds)
loading group "find"... done (took 1.099356704 seconds)
loading group "tuple"... done (took 1.738171242 seconds)
loading group "dates"... done (took 1.232437088 seconds)
loading group "micro"... done (took 0.228885054 seconds)
loading group "io"... done (took 0.973135343 seconds)
loading group "scalar"... done (took 36.784887867 seconds)
loading group "sparse"... done (took 10.982620484 seconds)
loading group "broadcast"... done (took 0.908985022 seconds)
loading group "union"... done (took 12.294773933 seconds)
loading group "simd"... done (took 4.122735445 seconds)
loading group "random"... done (took 8.479453328 seconds)
loading group "problem"... done (took 1.848504805 seconds)
loading group "array"... done (took 19.784654237 seconds)
loading group "misc"... done (took 1.67096926 seconds)
loading group "sort"... done (took 3.131020341 seconds)
loading group "collection"... done (took 16.529510864 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.481525641 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122502449 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114184985 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117735807 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138908081 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113975395 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122526445 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083504593 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.821665732 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143490509 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11865616 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410822563 seconds)
done (took 4.973885752 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170547851 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083100814 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081006588 seconds)
  done (took 1.304082412 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064737209 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121037065 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065811564 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065970681 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066404126 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06560128 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065290225 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065549793 seconds)
  done (took 1.656201946 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072434931 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067843876 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068729176 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068000894 seconds)
  done (took 1.421100382 seconds)
done (took 5.766560976 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.763558943 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201260106 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18201416 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.394290758 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.126166453 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152992936 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.633437087 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.302759197 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18191883 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080913482 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101916655 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.315836769 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107153508 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.633484489 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075973845 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089210644 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13518907 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.430267269 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066352731 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081830903 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088902129 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127608761 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084434306 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073758469 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143481406 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067186883 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128896489 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079703629 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065816054 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205793437 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171561882 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.645621387 seconds)
  done (took 10.11957965 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095366712 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096006951 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068584662 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135763698 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097949419 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070699592 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070382554 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066501425 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086216958 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127267677 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089326258 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100477666 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065327882 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06806989 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083744004 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20457748 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081939815 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083260295 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07145175 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077176585 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.117652651 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079910303 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077055583 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076527615 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128021915 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181471108 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097650168 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096530599 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066145667 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079664209 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114572925 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128045308 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067103246 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066774298 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123151482 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093809731 seconds)
  done (took 4.61059738 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.937771866 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138439335 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089980697 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166240496 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067089805 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105671564 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064871515 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083717872 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.197728229 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.349464245 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.567308774 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110742891 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100073871 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066939355 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06815854 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066274695 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.340219742 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.120635469 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111291576 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083058381 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073399855 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067644894 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342068987 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067385392 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065368411 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067697815 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057493708 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111453094 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067162535 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.909724972 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12282326 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065591859 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099373643 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168888719 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086163999 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.271107157 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066191472 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065278251 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148138484 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074004067 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109390947 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065211453 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082653389 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103466743 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111448709 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068196869 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066663609 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161499097 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06575461 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082141427 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.964089144 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153470966 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077185149 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066676176 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.243482341 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085522844 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066885803 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064408127 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.174030955 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13356953 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066868194 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065868128 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065210818 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068582764 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365474507 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068274837 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.898050736 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069591578 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076547046 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063872337 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065507644 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068497622 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07233932 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071958054 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084451968 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065502347 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074167117 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064954194 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064952961 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067251093 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083825659 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.354970565 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06565902 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067500835 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064125385 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084712952 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095694244 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068431243 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064827452 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10421473 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.168886575 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069877546 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104720416 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066742645 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083406941 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064036799 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.06833043 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11256573 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067971357 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.091992327 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067436755 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095539105 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068725357 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097837194 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080245513 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067382679 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397035396 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064307149 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064111083 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068521643 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065099624 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069775395 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067887275 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063620382 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078394976 seconds)
  done (took 21.027023167 seconds)
done (took 37.838021226 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.274603612 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074345519 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074290703 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074478636 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07430076 seconds)
  done (took 1.805577623 seconds)
done (took 3.021801315 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118842299 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097774372 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063741074 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09399888 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063709835 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098923263 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098408927 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080149629 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098442766 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063694368 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094941859 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064064336 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063888198 seconds)
  done (took 2.334379643 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08184158 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082799931 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068741258 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081708334 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062743768 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081840907 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079728505 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087400454 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080153395 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07133895 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063476459 seconds)
  done (took 2.05133734 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08063361 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082567668 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069755422 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080961678 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062633194 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080468037 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080391306 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084428865 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080436897 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072696164 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06313196 seconds)
  done (took 2.043795595 seconds)
done (took 7.633631988 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076267966 seconds)
  done (took 1.274312685 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.581970287 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.043401663 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080801996 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11082178 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181913544 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118247752 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.274950908 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086102622 seconds)
  done (took 8.855070159 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100840391 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067871669 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071947139 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068227022 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070476072 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069153976 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067292739 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069004303 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067456775 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068816639 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070001386 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069911364 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070545903 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068765412 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071659544 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070811882 seconds)
  done (took 2.411796377 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090753011 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089642086 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072468488 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074049379 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071790136 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.0710088 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073192333 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073005057 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069870508 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071343946 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07370226 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072611242 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070803888 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064335049 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073388027 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075023067 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070416695 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073751955 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074043687 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074328546 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073838654 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063929245 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070427688 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073257023 seconds)
  done (took 3.065873221 seconds)
done (took 16.81347834 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111441452 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070726854 seconds)
  done (took 1.388742345 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080484439 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081486214 seconds)
  done (took 1.373828679 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082072776 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064537822 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089190101 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076599883 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065900546 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065395489 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085923364 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066439176 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065656782 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065540556 seconds)
  done (took 1.939640689 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067551945 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076978077 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068771303 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079705065 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072786922 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063568204 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071364906 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06681741 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076925656 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062009081 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070431002 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081241745 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070017206 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082908579 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.0716526 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067174554 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069367055 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066620431 seconds)
  done (took 2.501732454 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065996662 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066152455 seconds)
  done (took 1.351777244 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06597707 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062724675 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065913687 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065552222 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062803946 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062058243 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062590273 seconds)
  done (took 1.663665832 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383255043 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109202219 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.291374119 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069775437 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080806271 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247269828 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06463907 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070061532 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069765175 seconds)
  done (took 2.644787895 seconds)
done (took 14.084288878 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078433185 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084685993 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093343782 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.341885074 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090490686 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064968477 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113087795 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188002416 seconds)
done (took 2.283594526 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210543069 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.608136887 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.377118439 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192732996 seconds)
  done (took 2.402015582 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321603556 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08611804 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058640413 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066809371 seconds)
  done (took 1.763070518 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065497404 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068207969 seconds)
  done (took 1.363548209 seconds)
done (took 6.966740343 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065457357 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082732901 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065553396 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065070447 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.062786441 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.0659933 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062838808 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062804688 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065225072 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065365987 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068525484 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065630444 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065095799 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062883625 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062772299 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068013277 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062684558 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062638036 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065194063 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062628032 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06484995 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062685682 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062495089 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062404375 seconds)
  done (took 2.826023561 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082093989 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065690083 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070551914 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071177998 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069356314 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070770678 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070342868 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065358549 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070075509 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067625962 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06869469 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069016463 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067194464 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069537129 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067062448 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069254898 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070542358 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067287205 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067644252 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069471472 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070281671 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065514309 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069315996 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069819672 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069178493 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068929182 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067331927 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06612216 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07014644 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.0690237 seconds)
  done (took 3.313322977 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069518154 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063074219 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063733207 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070654879 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062631715 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063909294 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062559435 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063295175 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064068368 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062330235 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06450879 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062326485 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063293423 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063610351 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064065003 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066670874 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078264448 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063426971 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063367684 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063311479 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066039132 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062580298 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062717949 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062731151 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062967659 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062437513 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063707212 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062992984 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063226201 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063164133 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065818806 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066113663 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06296612 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069402125 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066149721 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062284318 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066608148 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062642301 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063538753 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062783658 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063224669 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062862399 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062514189 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069497789 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06317679 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064044355 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062939233 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064097126 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.175581769 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065143457 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062306749 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062432168 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064138431 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063650644 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066411366 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062112437 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063573711 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062308534 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063311914 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06254727 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062089708 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.0622562 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065054459 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063596088 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077017983 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069556174 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062273248 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064123191 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063651793 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06529664 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064623378 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075557551 seconds)
  done (took 6.000275176 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088707403 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087032378 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065106753 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064536422 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061311802 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063913696 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066760371 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06334291 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064728531 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068869778 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063441752 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06455434 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064747645 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075580722 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063482084 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064599261 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068701614 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060932234 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06315717 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066824219 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063392798 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066403904 seconds)
  done (took 2.730413484 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153094613 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068755747 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104492676 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07201784 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066738042 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071834957 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069326074 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069384821 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069761226 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06743049 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068051517 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068917573 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066826154 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067523743 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067764902 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067617082 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069342435 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067359149 seconds)
  done (took 2.600772057 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07595294 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065408377 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085140882 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065968007 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064998194 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067253168 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069689951 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073185197 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067482887 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065665871 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073430551 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067512443 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067670504 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065181019 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067320978 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06573785 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067548817 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065350691 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073214742 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070257501 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069602389 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073392555 seconds)
  done (took 2.772043582 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079106925 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067297038 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081151054 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.0681634 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062261826 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064134878 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069179009 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065232479 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069455592 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066823664 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065663298 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063754401 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068492956 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065253148 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068372825 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065253679 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066683761 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064913399 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066721748 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061063646 seconds)
  done (took 2.597221163 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085385952 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06705014 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067019967 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07556835 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06730289 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066751619 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074095319 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066736997 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066742453 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086369682 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066538602 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066309144 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073923363 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071130822 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066201411 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07413012 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074334257 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073804411 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066617221 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06693144 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086666557 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066992551 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074461856 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066816241 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066359268 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066385963 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066888005 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071147007 seconds)
  done (took 3.238207838 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066085059 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065527083 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06308906 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063013487 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063816126 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062612754 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062575529 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063125684 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065180434 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063053732 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065540161 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065839916 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065010359 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065651032 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066008717 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065218697 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065686431 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063016654 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063009006 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063053829 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065128561 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065056361 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065012308 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062791829 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062538425 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065672552 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062455295 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062513257 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065164879 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062752908 seconds)
  done (took 3.178252722 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074919055 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072509113 seconds)
  done (took 1.401563297 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062942771 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079892562 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062626378 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069164937 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069242822 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065823609 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07306901 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069487107 seconds)
  done (took 1.802841139 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.0804087 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076295282 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067448491 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080016983 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075803584 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082000787 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130808679 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067192276 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072225862 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06374157 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07894032 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064945052 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07188289 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06545044 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071349217 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071820241 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063835688 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071671318 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067702092 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064685653 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066845247 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074565482 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067885009 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061044942 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066554954 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087000312 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076082132 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065469965 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067998216 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072569416 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071517774 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059786423 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065217397 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065740079 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.0637814 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074856348 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080304437 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068048876 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073591448 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066242392 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075672767 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060685011 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.06983191 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071873349 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07537899 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06551407 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066071153 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06064219 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063298592 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067850759 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061220079 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065689355 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06030858 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074702126 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069045654 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076209025 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064196103 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066917527 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067946471 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068590174 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072069521 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067668464 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067950792 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06520964 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072346395 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070058968 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074335105 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061119881 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060012289 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064026827 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075416957 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088195765 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07208723 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06608639 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066410041 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063741038 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068845041 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067000828 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071457769 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072047361 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065623865 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070853899 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072720892 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065743883 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067899634 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07363642 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063931716 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068079366 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063226394 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081252164 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064652028 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063583656 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063443924 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075732484 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068591914 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065154996 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063254384 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072740142 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059639607 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066327695 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066713937 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066543166 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07546418 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069263698 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069029105 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072719318 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071862346 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064972105 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067265153 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061705902 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065167952 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063821475 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071415401 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058857729 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067287918 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065507217 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064573006 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197758261 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065128853 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066698611 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074642596 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072432635 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06547003 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.0628177 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069468872 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066000531 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069537005 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074783717 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064897244 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061505789 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061500106 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070016977 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06642071 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070163839 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070791358 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069264079 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060195358 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064175401 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071937977 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07563618 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066847463 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067811261 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072456025 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067161766 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065309064 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072939904 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068749566 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065181183 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072067615 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066950156 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061468596 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069348649 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069273463 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064164831 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069976273 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069783111 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068606963 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067027991 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064893082 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073229046 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066770775 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065657739 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066628267 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064750729 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076097315 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067919901 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06159788 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06292339 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075368485 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064475517 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065240249 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.0652825 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06847552 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067120028 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064325565 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065777806 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068205657 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076254665 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069658168 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067135717 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071197561 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077680866 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06546659 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068511817 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065075158 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067453109 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066760138 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074408241 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071676443 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070948821 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068391223 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062365432 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071353997 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073147671 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064912537 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063962387 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064924433 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069874278 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071254927 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069881974 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066824636 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063625309 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066000469 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068603583 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068060617 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064988918 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065209244 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072167156 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063627465 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072444845 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066263157 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075251353 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069106737 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060756549 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068890883 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063813409 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072093363 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060915504 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063509473 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06495853 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066596228 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064471247 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067899281 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05941107 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072366697 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072346599 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064682156 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064012201 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063873712 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071360736 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06585238 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068066305 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068069055 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070042135 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075130256 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06414716 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068098519 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074154966 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06425475 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.187563068 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072337471 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065959159 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064952938 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065870293 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064414051 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069426554 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076305995 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073387713 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060931303 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068540803 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064566168 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065135234 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061549607 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070697325 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068891638 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067312857 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073250701 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066969548 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066755297 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0706751 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065851188 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067151027 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067859343 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069705296 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067422677 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068914441 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065845179 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069269259 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065853569 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064771308 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068175795 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066251604 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067125857 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07223068 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065981286 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066846497 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069232572 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067031989 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067090429 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066706676 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06599605 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069488375 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067324798 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066415009 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06856408 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061184336 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073419548 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065672435 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073479897 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067386868 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062568074 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072657367 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068754726 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072005359 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066706126 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067348207 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06712785 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065721504 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068843402 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073233072 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064151556 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078469568 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073732416 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066699103 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069326193 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066642571 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067946349 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065544539 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067442532 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067484491 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065984379 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065835712 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070730027 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.0684891 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065945662 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067451928 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066595068 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066288716 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066493077 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060281555 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064926905 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06552604 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06533284 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074707963 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066284795 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06549182 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064563058 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06646951 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064931991 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062651983 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073861222 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075119877 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.0661464 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073244426 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065391224 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067559815 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076174534 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060724276 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063775751 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064040033 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063791924 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073485638 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066715447 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074839363 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066254159 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064944605 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062858081 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066197804 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064278541 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059721438 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062910849 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067985504 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063262944 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063225579 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064177066 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067019059 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06517015 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073216718 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063687029 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065348517 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064523608 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061446637 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06346301 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063474993 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.199368997 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067522509 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064392143 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063703306 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066237375 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068201546 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068414083 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066311937 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068094675 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076107323 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065865217 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069260703 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069839877 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060938197 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069674591 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06623032 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066000116 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065805261 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069611825 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069585979 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067970717 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075654649 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065996993 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06705521 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066332996 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06399624 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065736171 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066001011 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066325131 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066249477 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067413827 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073942872 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064386073 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069289001 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066240883 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066633321 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072906317 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066925398 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069522866 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073125837 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067132492 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067955438 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074258632 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07078056 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07031684 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067403229 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067920675 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071598114 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066032585 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072897152 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067333303 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066392314 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068321132 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063918453 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065521967 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065793889 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065801182 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071675269 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067513165 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065065541 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065765056 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.0641231 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066875772 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069603899 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073735859 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06880246 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069390536 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061885212 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063178709 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067502922 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064127583 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067955883 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068674175 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071226937 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068748049 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066028762 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065003515 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074540243 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071427797 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069194345 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063637919 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069149183 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066547749 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067755231 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066815212 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065901578 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066896081 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069436978 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067417439 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064975329 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072368539 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069279653 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066600909 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067374929 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066674576 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065980784 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060948346 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066147281 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068013491 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071321934 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067946255 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065694241 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076384066 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063778565 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066021709 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069061727 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065320968 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069839027 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06085786 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067473864 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066236933 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06581115 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060225073 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064517808 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062754142 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066536571 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064159488 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059954901 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07400687 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073258653 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067208379 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063249785 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063087243 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.05974459 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059497285 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.19567518 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067941943 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067927057 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07615312 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065729597 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065497917 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062339408 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065936038 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06920403 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069480574 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063404376 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061410854 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065606696 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069387169 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071509428 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065423636 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066014755 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068805608 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068625724 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064427265 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069568186 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062802646 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069877429 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07909674 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067399428 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066930963 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072309744 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074006223 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067238043 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061534222 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066739355 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068872082 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066652483 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067406597 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067717394 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080949242 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068887083 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066074654 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065460614 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068797297 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065545409 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07448708 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067247235 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067525304 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070410207 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068025454 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075129748 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068819802 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074691388 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068829995 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069989426 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064945073 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067273482 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065225771 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065193075 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067347739 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066907486 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070541049 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073858168 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064876639 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077354387 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075093902 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067924597 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062958761 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065232679 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065944251 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061604148 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066833447 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064508863 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063967478 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063785398 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064730007 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067139903 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0713292 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066658388 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066351676 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06555252 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059887801 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067689671 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067938075 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066813251 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062308371 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065775264 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066275273 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069562448 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068869927 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063401165 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06735763 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066916765 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066321333 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060942075 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072248865 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06454997 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06739759 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065160976 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065723293 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066327556 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06912963 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070139362 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066529936 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067827927 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068927424 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068403483 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063085547 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063318811 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070661757 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063554511 seconds)
  done (took 42.236991257 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098515725 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062674803 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061727383 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06137219 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072967177 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062298371 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061276438 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062656663 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062364961 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064831338 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061280357 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061352588 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070399791 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077027863 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073158452 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065840321 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061629115 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062413717 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0613159 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062827547 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070071306 seconds)
  done (took 2.74436669 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072776663 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069067702 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072297018 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074785161 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06638779 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070315183 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071714795 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069843104 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075436341 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066667014 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075344484 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069661776 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066054119 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066291628 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074680363 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069796623 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07497727 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066858039 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069588603 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071401857 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070070278 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071447321 seconds)
  done (took 2.879803774 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066277913 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065333754 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067071489 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061188812 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065565899 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060913489 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069040263 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063128097 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068335325 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064554016 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06458281 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064213931 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066752236 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060480951 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065145671 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063393192 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106852065 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068739136 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064869907 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065892225 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060643433 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066909086 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060941816 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060947119 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064795199 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068321419 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065941964 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063533549 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064678386 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064141676 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065239168 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063115848 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06695755 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06558251 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064220447 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064234314 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064594927 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065208985 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060612636 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062917964 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066010555 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060906358 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064992206 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066316172 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063248191 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06283303 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066610888 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064819454 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060376047 seconds)
  done (took 4.529033225 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.0789032 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106627055 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066917037 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08727597 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079117136 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074693577 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068772757 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088286278 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062722745 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063640313 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080726483 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078350646 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064929637 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069532335 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071302671 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06485248 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066233434 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063965301 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068544232 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064526385 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069047007 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071262308 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078840847 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078025233 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068841602 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06433954 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064291641 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068829477 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07679291 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069160227 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069280561 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069889671 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07927479 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070234245 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064343242 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066694917 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080898635 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064931299 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067512896 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062666104 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06734669 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069333289 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071282635 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080748747 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064995197 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069742825 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064846761 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061962666 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077026519 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066858136 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072768926 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078851613 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068594157 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064792431 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069165551 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079103789 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064833443 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063031602 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067612414 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07676049 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062601309 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068322573 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077720746 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066888896 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071736801 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078358976 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069734132 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068794858 seconds)
  done (took 6.301553534 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074352117 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071490015 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080136749 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080079923 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071358887 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071766285 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071342747 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071292595 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071116651 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076204908 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07162476 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092082184 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067274793 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074022703 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07145902 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0720654 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07161856 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071572805 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071848473 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071549585 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071709391 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078997375 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071608776 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079407145 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096999349 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067164982 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071135623 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071492148 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07919054 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071472278 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078629926 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071282593 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071554326 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079042465 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078419942 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071320022 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064559953 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071100606 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071597404 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07128667 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066729054 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079306869 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071186281 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066699138 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07216219 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071350855 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079434617 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078769607 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074130281 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07597806 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071275799 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079524406 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071804206 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071724028 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079153827 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104453989 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079398541 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079249398 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071507894 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078985324 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079551549 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085550871 seconds)
  done (took 5.99867243 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082797699 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074348237 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076496897 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061193555 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063550211 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06926665 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063751118 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063422887 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07408466 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07346923 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075955176 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069093919 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07149258 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075926238 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06877901 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071862894 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069186541 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069285998 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073527135 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06905675 seconds)
  done (took 2.767635575 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074239097 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082685453 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066485484 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070506041 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067989464 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070907843 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067517312 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068498762 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066629867 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068505113 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075536254 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075611779 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066504602 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070873432 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075185207 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070722644 seconds)
  done (took 2.481276744 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073967426 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071373881 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078959395 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065791731 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063627537 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062043254 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065039804 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060923952 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062164969 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077378753 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065377445 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067564583 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065519754 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064196445 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062328602 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06830823 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062000055 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062899239 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065225203 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077414576 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076169592 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063866045 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066268168 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065086196 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065260801 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070193334 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064646964 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063206989 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062565571 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066263167 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065855688 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068680822 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062999456 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063341928 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064013062 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062889083 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065541235 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066133026 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068496147 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065719355 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063610929 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064810426 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065487054 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066495161 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062185869 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066345131 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061975096 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067335308 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063374196 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065691205 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065256338 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068151235 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065974649 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071850987 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068105306 seconds)
  done (took 4.990229237 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078448587 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069561584 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061855813 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063713286 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069068049 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067720341 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068965388 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067336011 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067677458 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063947703 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06709676 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068054934 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067326858 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068634952 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067265907 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068998907 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061362444 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067409491 seconds)
  done (took 2.569762188 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070909554 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066008213 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071558011 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065301514 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065416614 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067841631 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061769037 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064309684 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064653117 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065234387 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065738572 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067716478 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064325353 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067605484 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065482928 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065609898 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067696714 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064560438 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065331622 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061511756 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067741874 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063959036 seconds)
  done (took 2.798619924 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071612595 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091509972 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137742368 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082962961 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080812143 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077770387 seconds)
  done (took 1.892709539 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089939497 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078392774 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066528437 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087728305 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072928721 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067067197 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067075508 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067098531 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07549774 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075806757 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066987379 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075183132 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075238407 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07461215 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072804367 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072312184 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066931521 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067147858 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065941799 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08304777 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066809353 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074835904 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066796886 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066585901 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066656097 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074583094 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075191801 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074747469 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066820981 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074931703 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0721304 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066598844 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075020162 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074919139 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068337391 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076093015 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066494503 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082841002 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072179608 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074398656 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06785653 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072671746 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075203549 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071179934 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075111452 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067251758 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071927017 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067273027 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067280091 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085023174 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073206831 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074543674 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073433772 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075301519 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075633672 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085033681 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0753788 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074313779 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072604077 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07806071 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074470751 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072693023 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074141789 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075523603 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072588953 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074526298 seconds)
  done (took 6.181855814 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080978172 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085813664 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068002764 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075817537 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074764204 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067530861 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067159697 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067031725 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066865039 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066565442 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107060858 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067289979 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075050429 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075161406 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067356374 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067061395 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066984778 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07498692 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066668842 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085610759 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067233524 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074747218 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074747056 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07477226 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076046902 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072385303 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067585454 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066901464 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066966231 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066939615 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071689901 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067140851 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074979125 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06626857 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074856961 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067237044 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066704184 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072021935 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066908867 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072731846 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074487895 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083072051 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066629895 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066753873 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07518646 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067057628 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066557396 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06635744 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066660729 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066458759 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075755611 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075600099 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075460812 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074725327 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067203079 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066863113 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066737183 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066645497 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067101208 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072475741 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074343341 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066827875 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085034614 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066704737 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067188519 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074546721 seconds)
  done (took 6.095646208 seconds)
done (took 128.156776844 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184735733 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169868779 seconds)
  done (took 1.702825044 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069232206 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096747235 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077104149 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127703559 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066642981 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099777647 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098765003 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077440946 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06577643 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06572072 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065773714 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068048516 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130914934 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.0660147 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065411032 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068558515 seconds)
  done (took 2.671598169 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096139014 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.155863618 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099052536 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064257931 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096750658 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072281888 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064722878 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074191827 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070466913 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064758588 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072327438 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07022493 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064995681 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069636369 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070443955 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072029991 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064786495 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07238014 seconds)
  done (took 2.778942312 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100225267 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09155989 seconds)
  done (took 1.559288352 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153983059 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10495101 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148811869 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342850196 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165852192 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.22805869 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126594132 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127091833 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116139684 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122987515 seconds)
  done (took 3.001118782 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098036465 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150400184 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.252656442 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114411649 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072008027 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094041618 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115457247 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077248525 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079905371 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080207599 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079649029 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075830589 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097864639 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.0729848 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072855519 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075470137 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101224075 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071946186 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07337031 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076104912 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098681301 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065668582 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072585426 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071544316 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076734242 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076705531 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064848577 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064821444 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076080222 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073303876 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07620882 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092458965 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076602263 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105826174 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069752472 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106710785 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076003208 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073312716 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07342512 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07374835 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078007518 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077913684 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071662524 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075334979 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064685577 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075703781 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065088352 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065077785 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077344017 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066376389 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077592774 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076159429 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105856055 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066453643 seconds)
  done (took 5.93010804 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101663676 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104990359 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071811542 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109340688 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09716584 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072281987 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101065123 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090779052 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10193485 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092181631 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088727007 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070094976 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081512353 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08272873 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110162903 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101235072 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.09464576 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070244851 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100972414 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102169297 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067850426 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094147981 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090657224 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10142817 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067379558 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070088178 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067245853 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069930609 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076143578 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077914333 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069510522 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.101063442 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083336203 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077815739 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066955539 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067513478 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067794721 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079039281 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.09652154 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078188799 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077456193 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067142096 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067685701 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068939497 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090572645 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067354154 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078260723 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079858141 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07840948 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068970577 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069834218 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067365716 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068835153 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079380022 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077923324 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080528333 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079336898 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067747669 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06800142 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071083652 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080336373 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07883275 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078390924 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092261957 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078974759 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068244905 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079688219 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084368031 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068194814 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069581238 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068514247 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069100246 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069302161 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077446142 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077647794 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069367911 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069015025 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068024466 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079854165 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078414693 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068273998 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076843104 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067096642 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068708894 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069986416 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070010691 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077649766 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079322922 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070016995 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067994629 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069666825 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068465627 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066303747 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075419065 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07789877 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076867057 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076994255 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0681923 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077073572 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076414777 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068368132 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076845776 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067185415 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068629262 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068079739 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075991579 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075700078 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076600206 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068379768 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066488693 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075580649 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07816667 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06681557 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075838161 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077758162 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076682178 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066124156 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078337189 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066546629 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076699827 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0681241 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077317677 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066946827 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076691241 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067607452 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066703495 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067327378 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076494863 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068744926 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066674114 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068109666 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067934435 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076333257 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080225617 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068694653 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078091242 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075493884 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06777926 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075964915 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067193356 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075449906 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06614555 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066714473 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065202852 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077446026 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065874219 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066001129 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067310647 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076294513 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06580607 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07610008 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07366189 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065877451 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077842357 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076294571 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078721549 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075217458 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067382222 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065998729 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065328907 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066934016 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073013206 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075652123 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0678396 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065951874 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074222884 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076020786 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065369966 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073795775 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074284543 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074543462 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066406336 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06692996 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076733745 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077420833 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074693213 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073959228 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074258403 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066557957 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073763769 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074850555 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065242238 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080350275 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065629045 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.07759612 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076169725 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072229404 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074796165 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076584034 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076675204 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076504271 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078034469 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066563116 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065653848 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075761775 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066164367 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067454738 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074474828 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067247061 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067014976 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079937624 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066918146 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07625451 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065483049 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074489816 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065796869 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067786892 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.314285819 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070067366 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072171966 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081037259 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07239816 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079812116 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083271474 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081264495 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070303077 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071764121 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080806835 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079712883 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069403403 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06944071 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072295257 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079380116 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078010366 seconds)
  done (took 18.435091919 seconds)
done (took 37.452149721 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211839144 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153805519 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.20574188 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119895774 seconds)
  done (took 2.185321088 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123456143 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102734836 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096158873 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066444962 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102962186 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066460701 seconds)
  done (took 1.989902724 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315124613 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212765131 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184075632 seconds)
  done (took 2.138329004 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199738881 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188549588 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.400146763 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254573189 seconds)
  done (took 2.580897378 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14493333 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08956851 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067425044 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084163552 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134530291 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160522194 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10122058 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12597213 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078109202 seconds)
  done (took 2.467114276 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14534134 seconds)
done (took 12.942636602 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.167630115 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.202082427 seconds)
    (3/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095296652 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122892578 seconds)
    (5/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076903771 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.107318932 seconds)
    (7/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080297202 seconds)
    (8/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.191952497 seconds)
    (9/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.161374021 seconds)
    (10/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072345563 seconds)
    (11/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.217337779 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082411471 seconds)
    (13/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100644278 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.219237978 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077852703 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073388374 seconds)
    (17/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076594192 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089621506 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.082795762 seconds)
    (20/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052741456 seconds)
    (21/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.178210744 seconds)
    (22/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069303727 seconds)
    (23/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073490657 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107464771 seconds)
    (25/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.16325812 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.19785241 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07533529 seconds)
    (28/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052125134 seconds)
    (29/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.211738813 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.147639291 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072894608 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.187072202 seconds)
    (33/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.13022541 seconds)
    (34/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067208278 seconds)
    (35/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087158917 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072317031 seconds)
    (37/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.191582877 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09892062 seconds)
    (39/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.196675144 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051993033 seconds)
    (41/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073679228 seconds)
    (42/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076069251 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065630474 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141070513 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185834026 seconds)
    (46/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.161168198 seconds)
    (47/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065373402 seconds)
    (48/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.188247515 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095653233 seconds)
    (50/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081446671 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094267884 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072930357 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.150551158 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.100721164 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072641452 seconds)
    (56/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051518631 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.124734021 seconds)
    (58/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.140202359 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13932441 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09764586 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122081138 seconds)
    (62/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.098979237 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067097724 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133751781 seconds)
    (65/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076196096 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070887738 seconds)
    (67/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072252044 seconds)
    (68/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072351113 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08786226 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094308788 seconds)
    (71/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.10901072 seconds)
    (72/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.151117657 seconds)
    (73/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065904679 seconds)
    (74/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.097485913 seconds)
    (75/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078609784 seconds)
    (76/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07181695 seconds)
    (77/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.061425586 seconds)
    (78/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074283721 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086925206 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118818916 seconds)
    (81/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.194309732 seconds)
    (82/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.185834732 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066313475 seconds)
    (84/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087241945 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.198928951 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.146525289 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096357384 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.067260555 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113836039 seconds)
    (90/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.157898893 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.098207589 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066051253 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089697655 seconds)
    (94/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075947857 seconds)
    (95/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075616951 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051869912 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091325501 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.188046304 seconds)
    (99/309) benchmarking ("sort", Float32, false)...
    done (took 0.12762178 seconds)
    (100/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076830032 seconds)
    (101/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15285276 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090878393 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066396643 seconds)
    (104/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.160023236 seconds)
    (105/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070241703 seconds)
    (106/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.07376352 seconds)
    (107/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076590472 seconds)
    (108/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.143375771 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065849034 seconds)
    (110/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06923426 seconds)
    (111/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07337963 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091987681 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.198394623 seconds)
    (114/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082661479 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065993178 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.296510168 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.073020141 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.15204949 seconds)
    (119/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171427914 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137848618 seconds)
    (121/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082181719 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165364257 seconds)
    (123/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052297479 seconds)
    (124/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.189165997 seconds)
    (125/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068565268 seconds)
    (126/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.140159724 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.133398473 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073507165 seconds)
    (129/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170521489 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072752441 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087082166 seconds)
    (132/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051609753 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070960532 seconds)
    (134/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051697952 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071746592 seconds)
    (136/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.148324055 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070537589 seconds)
    (138/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06174568 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071329738 seconds)
    (140/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08818501 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064795833 seconds)
    (142/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051851444 seconds)
    (143/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064221175 seconds)
    (144/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051803871 seconds)
    (145/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106831177 seconds)
    (146/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.11485158 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064502089 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.116795086 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071749519 seconds)
    (150/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065998605 seconds)
    (151/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050920428 seconds)
    (152/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.148566356 seconds)
    (153/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066338015 seconds)
    (154/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072056393 seconds)
    (155/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146420497 seconds)
    (156/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052022752 seconds)
    (157/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.164651164 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065510899 seconds)
    (159/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07153236 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072844479 seconds)
    (161/309) benchmarking ("sort", Float64, false)...
    done (took 0.125178523 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090976901 seconds)
    (163/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051489654 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064940266 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053491941 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064729939 seconds)
    (167/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.107629647 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088420639 seconds)
    (169/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052113024 seconds)
    (170/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.10689346 seconds)
    (171/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086995929 seconds)
    (172/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.097822287 seconds)
    (173/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052015911 seconds)
    (174/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064024697 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064610731 seconds)
    (176/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07758442 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071345797 seconds)
    (178/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075349183 seconds)
    (179/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.096681214 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090730267 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073153442 seconds)
    (182/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050754402 seconds)
    (183/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064440195 seconds)
    (184/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054075822 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.098892588 seconds)
    (186/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071144296 seconds)
    (187/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070358075 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.194803091 seconds)
    (189/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150326817 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066501435 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071263541 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.205678567 seconds)
    (193/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075575884 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066100162 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064262134 seconds)
    (196/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.15332514 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073083531 seconds)
    (198/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070169336 seconds)
    (199/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053322178 seconds)
    (200/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065824044 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066863617 seconds)
    (202/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065334669 seconds)
    (203/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076104626 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054246251 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051303028 seconds)
    (206/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06880865 seconds)
    (207/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053720893 seconds)
    (208/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052013808 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066701644 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053324223 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094123715 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134596692 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074464449 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073025009 seconds)
    (215/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051213859 seconds)
    (216/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067713231 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065919321 seconds)
    (218/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052333903 seconds)
    (219/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072303403 seconds)
    (220/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062159598 seconds)
    (221/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05263503 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052107653 seconds)
    (223/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070352464 seconds)
    (224/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.097331073 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051506403 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128834241 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120382784 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071031908 seconds)
    (229/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15082008 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174772902 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171966653 seconds)
    (232/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062088053 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064015919 seconds)
    (234/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064909652 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073170717 seconds)
    (236/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087940424 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133677242 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051378451 seconds)
    (239/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051490784 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133331146 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053912944 seconds)
    (242/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051438712 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138186682 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065262433 seconds)
    (245/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06980435 seconds)
    (246/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183950205 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137776232 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131873972 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051213893 seconds)
    (250/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051545531 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065914819 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064598051 seconds)
    (253/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072856798 seconds)
    (254/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072938578 seconds)
    (255/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052123888 seconds)
    (256/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052444582 seconds)
    (257/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.0653338 seconds)
    (258/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066477781 seconds)
    (259/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050906948 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064355783 seconds)
    (261/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050710636 seconds)
    (262/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079839076 seconds)
    (263/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050961143 seconds)
    (264/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066303539 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070649529 seconds)
    (266/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060139386 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064581128 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072340347 seconds)
    (269/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070877959 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091382033 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089104989 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098333567 seconds)
    (273/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051001428 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071877798 seconds)
    (275/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060366803 seconds)
    (276/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053133187 seconds)
    (277/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070648445 seconds)
    (278/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077495394 seconds)
    (279/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052429355 seconds)
    (280/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.0870213 seconds)
    (281/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.0712 seconds)
    (282/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072997211 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072354711 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065325732 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063902246 seconds)
    (286/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051178884 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08755985 seconds)
    (288/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069386094 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051096247 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063717713 seconds)
    (291/309) benchmarking ("sort", Int8, false)...
    done (took 0.139001046 seconds)
    (292/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050766472 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072286806 seconds)
    (294/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051262564 seconds)
    (295/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077680467 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070058215 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095937352 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066256818 seconds)
    (299/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.0675253 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065691513 seconds)
    (301/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062345207 seconds)
    (302/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077998641 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.0652733 seconds)
    (304/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052266827 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070670529 seconds)
    (306/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060264157 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17509306 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085254323 seconds)
    (309/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06652143 seconds)
  done (took 30.550640373 seconds)
done (took 31.990808072 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083226306 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091914062 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073825947 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091704888 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079861975 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075976682 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071528204 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077474659 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078890313 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081499404 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077995743 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054779397 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073155321 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07372254 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073669964 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090693458 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077263123 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072268831 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072186559 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064664293 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072295657 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065081982 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066704608 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054428073 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07730996 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071437931 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072075276 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073208295 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06528165 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06544074 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068798445 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072856466 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064962685 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077553688 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071672552 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072353174 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07377967 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075693228 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066853599 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065410482 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073542837 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065452713 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071862601 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072594288 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071275118 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070445393 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072924396 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077328051 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090668485 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067860244 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074288622 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075223156 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07587829 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072534873 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068838134 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072346594 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069726054 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090519562 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072867911 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067250778 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073160303 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073221982 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070599188 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072459868 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072284204 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075191585 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074230694 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070184906 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074133135 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070675892 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064658996 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072225453 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068364749 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065806263 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075072587 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07619945 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063949306 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070810766 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071850449 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07079387 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064526005 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06709187 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067265358 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070890809 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067122558 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054247558 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068590579 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070840082 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064186962 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072542719 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070838514 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071348885 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066461342 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074518848 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064201102 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069686096 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065466449 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065128395 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06621168 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068311862 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064259109 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06687457 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073075773 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065972185 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070694595 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07829417 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065283364 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071142425 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063675717 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064115168 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078772394 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073322198 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064835227 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067428119 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063814492 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071869233 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063564646 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064498011 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064809097 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064595584 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070265717 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064334288 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066700216 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071484183 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076343754 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064363745 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067549091 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066611656 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063908142 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069461093 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064312499 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064660073 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200546015 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061708148 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067247272 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065625515 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072136318 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067575076 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072708265 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066813145 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072917097 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070154889 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070980833 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070686515 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064057759 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05891998 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06798713 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067158292 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067096505 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06572102 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06743334 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065803989 seconds)
done (took 12.39530983 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066301702 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141625667 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097615144 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094459379 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084956531 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066092238 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075549747 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100983313 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067849735 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101285087 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086427399 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08451344 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111255472 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064159833 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065387213 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069104239 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066971961 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080757586 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099879106 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085764423 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108075584 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064654597 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093708689 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089127321 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086083871 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091337822 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06626493 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069211566 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06962108 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099443633 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08577043 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069148615 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066054571 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099524657 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091679636 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082413437 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065991596 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081681254 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065989681 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065931714 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080215359 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096919775 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079086346 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079375334 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069503427 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068714175 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066313686 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082435421 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08807869 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077818792 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085313774 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102347241 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067694595 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065085031 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064067124 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084409648 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065376078 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068458444 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065615905 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067721318 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065416892 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068483178 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080812933 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085778531 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06900811 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079338138 seconds)
  done (took 6.798178918 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082340364 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090536157 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082826139 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082885409 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065093539 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065880694 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066235749 seconds)
  done (took 2.069156557 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066872083 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087127205 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088380909 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088877585 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083404645 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08653768 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074747648 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066007232 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080086374 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067190461 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086732462 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100306618 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06616439 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072318778 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090277594 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065725418 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089587633 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066069717 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069199911 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089115536 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06762381 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081662032 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069365446 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066763406 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079939171 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066414215 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11211694 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070090114 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068117624 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068940494 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063676058 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10528692 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079463693 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075259912 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065744499 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080363216 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079877438 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064493003 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081439749 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071003459 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079639593 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066143187 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066724334 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063885737 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070537792 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076444519 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066844106 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066462327 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068554226 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085546091 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066741241 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080381259 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070428068 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068497754 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067734076 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069804556 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075781976 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067032648 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085584607 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067487783 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082443667 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082419329 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079374702 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082155976 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068202385 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079474845 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079395882 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068500616 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067518163 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069416126 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082014057 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064600701 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067365173 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.0764222 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067838881 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088639885 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088960103 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067409997 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075213828 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066602479 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066160814 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066288497 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08868266 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068110206 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065905676 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070351505 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069319949 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064484252 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065483537 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069863767 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064719755 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068239247 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069232598 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069780655 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069034008 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082758981 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068516375 seconds)
  done (took 8.749681994 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068135665 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068156653 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068563265 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066684009 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067593611 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.0679166 seconds)
  done (took 1.964615048 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092650632 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06890895 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080207053 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072237189 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10362998 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086326253 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086766282 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078644523 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08322947 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078837499 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086217391 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08789012 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092047315 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072201199 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085873918 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071647934 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086500871 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075301735 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077888095 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072601649 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086125085 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072298531 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073112949 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081212845 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075343223 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071545036 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067426259 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078286378 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078051614 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078342984 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071936079 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07530584 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069941757 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078230732 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08641233 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070058465 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071396375 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076796484 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072072486 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075199362 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087285926 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072890424 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07434877 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076416564 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077909469 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070024142 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076910801 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075443572 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086035848 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076975659 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076602903 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071522556 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074642146 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076709748 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069775263 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07780932 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076681638 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086171689 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072530355 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070119271 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068785124 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074936095 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077456495 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075264046 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078358718 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076667109 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070206159 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072043632 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072514273 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071498633 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076693325 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069072244 seconds)
  done (took 7.094922689 seconds)
done (took 28.198945618 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541827051 seconds)
  done (took 2.066079384 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.618500251 seconds)
  done (took 2.166267843 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.642536502 seconds)
  done (took 8.188855588 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.390078143 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.469184878 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.71650443 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130509985 seconds)
  done (took 3.291806185 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.667804848 seconds)
  done (took 2.226458554 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208926333 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.19533349 seconds)
  done (took 1.971011587 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37583838 seconds)
  done (took 1.924885366 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.11225067 seconds)
  done (took 2.662143396 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259769889 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.165072051 seconds)
  done (took 1.977776196 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.460739937 seconds)
  done (took 2.012102499 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.838534828 seconds)
  done (took 6.392299959 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204533316 seconds)
  done (took 1.805990298 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242166239 seconds)
  done (took 1.802114962 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.713008571 seconds)
  done (took 3.272637571 seconds)
done (took 43.313445493 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07848083 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081542723 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08061453 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077594463 seconds)
  done (took 1.866182335 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075780781 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071780012 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.0754102 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071463086 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075837857 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071369204 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073452561 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07636217 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071562392 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072269039 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071911999 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071863584 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074592134 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073347465 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070439733 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073993043 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075258313 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071989594 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075250367 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072064601 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070520657 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074032054 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074600094 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071551796 seconds)
  done (took 3.319651638 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076826829 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072676116 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073802637 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07269331 seconds)
  done (took 1.865481329 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076795944 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091390423 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088987554 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077475862 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091143768 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085100898 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068644607 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068233413 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072449579 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076449044 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067479211 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094774967 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086878389 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076444595 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078504847 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06570368 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068051288 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086303636 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076991175 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076990432 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069271986 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076140577 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067922075 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087227001 seconds)
  done (took 3.440461062 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076417915 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102757571 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07704206 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086447076 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089137624 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064469352 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073571588 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088588376 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121640482 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064844623 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.0692605 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065146166 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071805967 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064748284 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075502194 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103736049 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107697238 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068041267 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095142738 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065188677 seconds)
  done (took 3.206581506 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072527133 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069540312 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064827222 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068444193 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076814571 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072222506 seconds)
  done (took 1.995996701 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067644462 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067218952 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067568955 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066295902 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071187906 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067004863 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066015631 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066292178 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066571027 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066657143 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06575047 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065433186 seconds)
  done (took 2.370775962 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.41128969 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068426306 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067942606 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.0651855 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070389035 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065632232 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079468129 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067980813 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090009637 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.0662274 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067010916 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068055982 seconds)
  done (took 2.757788089 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205372822 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075479623 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235212437 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135619567 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110269976 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114352583 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10308219 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111650694 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142958754 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100805275 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16614012 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163777481 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106030962 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135202886 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088228652 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096790108 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153419001 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160401023 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102670006 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163585305 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141722446 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123465703 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145589171 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100458468 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104718444 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120422273 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07003998 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079468901 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168111518 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129709278 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144518745 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10951182 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09253454 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17382155 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168443004 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141222766 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133095444 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082813486 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100243162 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131752736 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196490244 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087427887 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160389366 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243971624 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080902889 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133280741 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11931796 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11915485 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105846833 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089338076 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144003485 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181136298 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137624756 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086414706 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111287687 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115171564 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116229693 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102999384 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180678554 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159958914 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127013196 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070005931 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098317241 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152705456 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130112447 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107783055 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124910517 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092790403 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131921214 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153328158 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11656225 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142352092 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127385013 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087444806 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118329995 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138010801 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126275158 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168283684 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123235644 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07177419 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123421748 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102431185 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080340418 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140913066 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074618721 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173833338 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096932708 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10452982 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110997621 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107024465 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107632231 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158034233 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140861476 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243022824 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.0655009 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103096067 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119493179 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146733884 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086861245 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107719583 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116367973 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077992147 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138392212 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074428838 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123105435 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075681518 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123554709 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131092791 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07572232 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120840683 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100237174 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099977051 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131477785 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158482275 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08823629 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08123363 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165653505 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120889149 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103255801 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142312459 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154038598 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097620593 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101146068 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147201981 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177329007 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088401871 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161475655 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105832875 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08326149 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086623808 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122661608 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111000964 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120886776 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080975114 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117031343 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166893945 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075450631 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094189129 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132294519 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078322387 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079909941 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101513285 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098684037 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093431449 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098916017 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102638808 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135605162 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121250622 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102842655 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267022486 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097795829 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168835716 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088693013 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101057002 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102824227 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069242856 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136117551 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155020433 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07891106 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163869427 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122277649 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10373764 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118092976 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081766319 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13871961 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077663971 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069380306 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143480974 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108824549 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109888268 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150069382 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10386317 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126054522 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118757298 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134473603 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131213189 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127908257 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105274047 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086978991 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110585074 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124490041 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07262816 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090698691 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07910087 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103035541 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094751557 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082533154 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140768347 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123677762 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099384281 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110735269 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095587933 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145511042 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075827271 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127672695 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118278731 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093428271 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149486873 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149586231 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129749809 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097708232 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14247443 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069212762 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072597693 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.230281607 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123562391 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083325763 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083622758 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117446393 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146627624 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12971404 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137079013 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109428737 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120702633 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153314709 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069164472 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114261331 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146497509 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121108193 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104513037 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090078594 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098297315 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142071496 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107319661 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179791474 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113300822 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125702498 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152128528 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.103848354 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079495236 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102006313 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134074582 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104067262 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142306829 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098600891 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086803846 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108099803 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073113291 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09894717 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12552532 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118856058 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133673278 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113461369 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13164719 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07618205 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115722509 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11905391 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121339046 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06355005 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119473233 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158373261 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092334566 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117110953 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150892665 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078262055 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122253626 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319179412 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145643125 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084318652 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108762569 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117828296 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127287546 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119712348 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138811568 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107764408 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133846088 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108570131 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084706909 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086289358 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095906614 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104058643 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092738672 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106621505 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113437848 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094171786 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130693808 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101541751 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108651541 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117957047 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095920397 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088503436 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09581196 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172664816 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11846093 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169893465 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098728548 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144225476 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16192977 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074669671 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078092238 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077338147 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138134778 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082858449 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129682886 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096685856 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10483513 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122471975 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140232974 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093677162 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067503872 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10736382 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133305575 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111033573 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096919105 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103840753 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160439596 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099022637 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078103247 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112487455 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103193594 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101692616 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169055352 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060754407 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095770232 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074892834 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079285212 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12509538 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145602871 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077586196 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100483059 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115484187 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106263479 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123268153 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097433445 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096412274 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110672181 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142829921 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123168315 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086871634 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108137476 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123471604 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149259104 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101420919 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.092723492 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162968612 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162236239 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155660998 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084747583 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109637579 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109357027 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104220787 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133452503 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080610382 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156382283 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078949217 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129851828 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099696572 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086112438 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123149933 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.095128294 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085004638 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140654683 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111996259 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079265779 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075015923 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112497002 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114731315 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101950264 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07310719 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13204644 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.070336322 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126554606 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158930831 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077506032 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098351425 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.346334758 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081998715 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108558662 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10442411 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091114112 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098311592 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173724366 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089154631 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150876673 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142253304 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114155647 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136803801 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099542162 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636062814 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07761268 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151015499 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115585077 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170670732 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097001572 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116831351 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108413933 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122621016 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143319588 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104137419 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175021168 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130169427 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115009807 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079315033 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101919688 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101702582 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087967371 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104024624 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112534055 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115458936 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092793306 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114925509 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12251242 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081115144 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094375661 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155491001 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116011582 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142712503 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139076557 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084444088 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117006709 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137229855 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078516643 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119456732 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14981894 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104769105 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096730905 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079630135 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.251035149 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169323444 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072705095 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160929392 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118516954 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108115012 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111395707 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112496963 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128840312 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10585033 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120262138 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092573068 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109164042 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111719182 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080992585 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076488533 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103422852 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110686885 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096131134 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096960854 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096562052 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149657158 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071231537 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094856854 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102503483 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143222962 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172411669 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087201338 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081949771 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117386109 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111905848 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112432291 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119132334 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078230613 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081219603 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080581601 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076206724 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107288219 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110947117 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103047023 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110305113 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162099816 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082114474 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223413706 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093777148 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103064923 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068796162 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078049163 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094924915 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096275711 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107527363 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09978963 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16852642 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092863397 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088144533 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09054744 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072161326 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081883115 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.275591548 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110142642 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118395715 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096936617 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062163034 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108751152 seconds)
  done (took 58.172178294 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103747716 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082127002 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096231136 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147871394 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121939515 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210693734 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156578739 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19814569 seconds)
  done (took 2.822470653 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067388422 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09333336 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099477701 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081410313 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066492508 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067950323 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223275544 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079098854 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065697995 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087685926 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07803073 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067935288 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.419602485 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065293385 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066244777 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062548909 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06675178 seconds)
  done (took 3.455177199 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.37200438 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.361857524 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370319393 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072822916 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.878546693 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088408254 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.078309015 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.094935411 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070855384 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.279941487 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701641508 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.090884963 seconds)
  done (took 14.165706188 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074361704 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068255076 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082383878 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082138861 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071520506 seconds)
  done (took 2.082634529 seconds)
done (took 103.120862062 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079040732 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.389825962 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053101365 seconds)
  done (took 2.173920661 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082304368 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083896909 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084127212 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082205698 seconds)
  done (took 2.043922251 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073200248 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075606467 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083596059 seconds)
  done (took 1.937396594 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221389761 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138017501 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085986014 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081271471 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077590882 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077514015 seconds)
  done (took 1.946373473 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070995021 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07382399 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071501615 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075459409 seconds)
  done (took 1.997216963 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075469871 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052234246 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054402424 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055912432 seconds)
  done (took 1.944915306 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084908288 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078439045 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077860745 seconds)
  done (took 1.947903546 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106828222 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083547969 seconds)
  done (took 1.897108229 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080699518 seconds)
  done (took 1.78922497 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097677133 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.111764001 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127813674 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10883654 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135091197 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107549626 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084774183 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085756671 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076221835 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086094143 seconds)
  done (took 2.729196062 seconds)
done (took 22.63548191 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078111299 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.460374643 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359976721 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089897332 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667411762 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355898135 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984312648 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09125585 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111928328 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067521673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083565312 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647661326 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97501854 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.418695527 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.96377524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322789518 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649735526 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067941543 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067167736 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067173553 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969889075 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066906759 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067089136 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067727671 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648615946 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370639791 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067261325 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318188286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066941362 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068850051 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354670772 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067093702 seconds)
  done (took 16.358997336 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069460401 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117420405 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072883659 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083603278 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07002581 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069185055 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070810381 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068419059 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118507244 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06710873 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083902221 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067249557 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071069718 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068714535 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08606521 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068084029 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068227918 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067934975 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067484832 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067866735 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085955805 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067219468 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067422425 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067930781 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067243538 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078633341 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067511093 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067236578 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067270258 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069255545 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070119656 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068557197 seconds)
  done (took 4.090853277 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113662972 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124110721 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075278276 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102673527 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111966818 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069731875 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14195564 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09177937 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126578495 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067406307 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083813373 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067815025 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100185701 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068650322 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08691607 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067916792 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06894502 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068415763 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067869793 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068223473 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086591771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067428437 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067768259 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068466794 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068234227 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080766071 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06826553 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067792512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068020495 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069864857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.0708258 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068169429 seconds)
  done (took 4.350677805 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072356609 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074011277 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08295788 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082818854 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068571677 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071218969 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072130105 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069038644 seconds)
  done (took 2.319920445 seconds)
done (took 28.833752385 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078463867 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069318496 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072271084 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080286492 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072938032 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078894446 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066700209 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073601757 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071649173 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072275506 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074104554 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067025489 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070589629 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067023873 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073025735 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067143234 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079061335 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071428466 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078814837 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079488094 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069842282 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072340542 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07394343 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078377656 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078315016 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078049795 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076666079 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072485387 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068350926 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069685245 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076246634 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083720357 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067821398 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079152167 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067414375 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067313404 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070782879 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067456267 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07851727 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075865751 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068772014 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075555928 seconds)
  done (took 4.786460905 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087060139 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089961205 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084273233 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061356006 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066140706 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064450069 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087768861 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058949207 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059018762 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086651428 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055522405 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059112053 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061742495 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053638271 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059157152 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056224593 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061097722 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055294733 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058749022 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059289111 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057716216 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053659844 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059956754 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06477495 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05604083 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061304692 seconds)
  done (took 3.414811957 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073446417 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083256393 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086739537 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125196912 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103437741 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076328229 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076751705 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091393764 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084444739 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066144277 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070675553 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092968498 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087128786 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073465516 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066844947 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083743702 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081376093 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06832728 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072969845 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090012334 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083335889 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083401795 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091809542 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080332491 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066685966 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069297051 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071307021 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080540605 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071468965 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076201164 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07131696 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071085189 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068906961 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07868078 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071048018 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068492455 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089996937 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076392839 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077101431 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067805109 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070339128 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067946655 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088687412 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121865636 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066891101 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073581701 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074772575 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075907029 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06735111 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085151451 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077973763 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066716037 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069865088 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065971709 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06709867 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07990322 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068585177 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069681128 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076036859 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070120832 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084595562 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070692372 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082154056 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066487316 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074268545 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065976308 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067749639 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066025055 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091506386 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068613942 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107086312 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068364355 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.0678333 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075718183 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074488854 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073058415 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067193924 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08167769 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077093576 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070574432 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075110029 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070145608 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069621802 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086594792 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069086313 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068598154 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067793641 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073562204 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069273932 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068565732 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.07946503 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066998445 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070204047 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083474279 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066435833 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068241989 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072943973 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071539531 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06726094 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07781631 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071468213 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068416086 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075987931 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067341817 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069919585 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07724224 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073166132 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065847042 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071615003 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072848206 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067756078 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068865572 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070080877 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069215707 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075666792 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07353301 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070809274 seconds)
  done (took 10.568098907 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158404423 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154039438 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070098272 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143462268 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.087363407 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07833584 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.1462653 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093700053 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067470795 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067690763 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068079551 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114616951 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104378212 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121193173 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07854572 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067137784 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082554272 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115770823 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147780092 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141714216 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082720477 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075990983 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069427099 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.0689341 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073987214 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081595721 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090149128 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075874422 seconds)
  done (took 4.493970344 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079698664 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100023237 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073501406 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089102849 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089763682 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067370478 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069386355 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069187691 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079397089 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078184004 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067149084 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073120208 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073919989 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073773239 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068607011 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074029522 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074344141 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068763256 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070586358 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072257181 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076842798 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079874773 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070928341 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066415549 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073363241 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066855104 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063972898 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084201345 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067464288 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089237321 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065080292 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074670801 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080498077 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068162731 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066930725 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066992024 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067144406 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066924602 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068927686 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065463011 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06579299 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057082187 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066431175 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07874557 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073227886 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055906797 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071761845 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072139168 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071900302 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064686626 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069739654 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069635531 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070857133 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074190068 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072224597 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072347532 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068165562 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065119177 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074510893 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066796031 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064048578 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065312276 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071193242 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065352045 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07467087 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07138811 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065488175 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066530616 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068539451 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07262928 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066819839 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070069277 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064566358 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068603038 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071095686 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068364182 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067972043 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065428431 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066884073 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067059013 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055257006 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066751934 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053034456 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069965822 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065047995 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065843633 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066603289 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07175768 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078969707 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068241031 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072634415 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067627434 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065813298 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070082005 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060404968 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069483147 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082209923 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081928312 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066670513 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065217641 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080907029 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071422455 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066153695 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055726697 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073989811 seconds)
  done (took 9.154590121 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093108857 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087582852 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069997323 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083189556 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090074561 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085496503 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073999199 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076546064 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069238855 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081459316 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073088063 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07573266 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067383477 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076136068 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092099351 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076158347 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06925996 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076300669 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071100641 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.09984791 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081933731 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081135019 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074404706 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067929354 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074968493 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079281689 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088171993 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079420215 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077668762 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075209968 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078909421 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08849861 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073477106 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071105994 seconds)
  done (took 4.457680537 seconds)
done (took 38.597255401 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.823890167 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.978801489 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.807494817 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.178610484 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.125527683 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.816973657 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.959407118 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.806242658 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.984867298 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.844149179 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.062908547 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.873590919 seconds)
done (took 66.006353793 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.84123254 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.948195088 seconds)
    (2/2) benchmarking "String"...
    done (took 2.08108927 seconds)
  done (took 5.780294215 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.137634012 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.339687279 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.051434249 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.805665689 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.812157906 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.114257463 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.604598601 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.333478295 seconds)
  done (took 30.811584051 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.994033021 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.006232383 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.459093732 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.492428361 seconds)
  done (took 15.747256219 seconds)
done (took 64.14101448 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.828786036 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.823968975 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.820073912 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.789731659 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.866112287 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.814948248 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.00834414 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.830234601 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.807109065 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.796491915 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.80945629 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.256616078 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.814199968 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.204355914 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.80877651 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.813619228 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.809588405 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.312280437 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.963054768 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.815606484 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.821036773 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.842144257 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.809324394 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.814719113 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.827307168 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.807291267 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.24933326 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.81359267 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.435627103 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.809132249 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.838099611 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.299305018 seconds)
  done (took 205.11057117 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.804935818 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.684402816 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.769710959 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.85424302 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.154240662 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.010280608 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.949904523 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.226936203 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.806466031 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.824674882 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.011083228 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.800677176 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.033759126 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.820524833 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.80499994 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.805422146 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.985602763 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.028569096 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.804859436 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.064224125 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.819290226 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.893057908 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.83437134 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.966892321 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.836693821 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.812725089 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.973322165 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.805498304 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.003198248 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.926663724 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.814661749 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.809534129 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.027195014 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.675185086 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.802863843 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.822040205 seconds)
  done (took 170.820847504 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.19389146 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.800815272 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.801293312 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.800296794 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.810049321 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.8019817 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.924155369 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.92988676 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.268716542 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.338239261 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.854905315 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.639980226 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.794523953 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.861600982 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.808908344 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.796315025 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.808595108 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.821054184 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.796698826 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.795299939 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.928673846 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.805423289 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.004492723 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.797705214 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.793560476 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.796295603 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.159207693 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.789287687 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.794608586 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.049345242 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.788961301 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.790093661 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.686748538 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.166235645 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.881669268 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.792518485 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.795463122 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.789626076 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.008224415 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.789386725 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.790009846 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.788461746 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.792145712 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.972769979 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.790776794 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.9159251 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.790613056 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.301496917 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.789606846 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.78810087 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.75437539 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.479798006 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.791094306 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.789474774 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.791438059 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.78845377 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.789467727 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.794534245 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.413504596 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.862513535 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.78883948 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.791224916 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.792622602 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.78675513 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.814506149 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.786589414 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.991300359 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.842157578 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.005255211 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.780908946 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.781479168 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.912260437 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.84686277 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.874769201 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.780293046 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.78101205 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.780847179 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.780460286 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.861628255 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.781524574 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.9103097 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.789487369 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.781575533 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.830665215 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.849371704 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.782466464 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.675586648 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.782744797 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.780161158 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.128749558 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.849183429 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.780599988 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.78038166 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.780963398 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.920833564 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.780918126 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.906168497 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.564070606 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.781236412 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.437044674 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.782549186 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.930766775 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.778851548 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.969557296 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.781357842 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.859306586 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.782661825 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.778624232 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.778208928 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.808782981 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.778110557 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.835882146 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.77797916 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.778133504 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.146645232 seconds)
  done (took 404.611176936 seconds)
done (took 784.537206769 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.46910594 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.430329543 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.544770118 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.459776151 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.431486574 seconds)
  done (took 14.054738886 seconds)
done (took 15.773261344 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.862913589 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.867136284 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.801505128 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.867564717 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.797953171 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.8646561 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.847534695 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.802220965 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.83289067 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.802536278 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.834629211 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.801827601 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.78929264 seconds)
  done (took 25.49297544 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.016585764 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.013041461 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.846921132 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.007191376 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.822783014 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.01609941 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.941426053 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.92834806 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.934399839 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.791356018 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.788938545 seconds)
  done (took 22.827628413 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.015300208 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.012317903 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.848754153 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.030287705 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.826479873 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.018789024 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.942585591 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.935065213 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.933864617 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.795019689 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.788993454 seconds)
  done (took 22.86705778 seconds)
done (took 72.906330041 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.783437014 seconds)
  done (took 3.50235798 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.805750955 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.943389232 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.78911884 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.787417375 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.784345454 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.785417665 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.787719894 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.783797707 seconds)
  done (took 16.187221038 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.782757369 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.780200224 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.783264762 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.781625001 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.784307844 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.780661722 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.781211425 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.781338151 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.782244488 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.780583557 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.783546671 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.783458786 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.78334659 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.781973968 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.784116859 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.783692496 seconds)
  done (took 30.238504816 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.782706002 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.7803444 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.780957285 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.782152773 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.780881971 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.78151942 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.782916371 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.780781309 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.781872731 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.78093356 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.781815597 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.781203684 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.781829505 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.780893543 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.782589455 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.7810767 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.780212846 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.781018093 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.785508533 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.780247107 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.782356253 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.780644147 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.780960498 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.780735471 seconds)
  done (took 44.479467865 seconds)
done (took 96.126198647 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.474146293 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.232459959 seconds)
  done (took 8.426035006 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.7841193 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.781697339 seconds)
  done (took 5.31954581 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.781601903 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.781183997 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.781622808 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.782338956 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.781863707 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.781744149 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.781823387 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.782326543 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.782402658 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.782107612 seconds)
  done (took 19.537547049 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.781785149 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.781497718 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.779257899 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.782575225 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.781744144 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.779035103 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.781049276 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.781355158 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.781319122 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.779426176 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.782240918 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.779444148 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.78181307 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.780324829 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.78325973 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.780267316 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.779787357 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.779330696 seconds)
  done (took 33.77404042 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.783380741 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.783530491 seconds)
  done (took 5.28538588 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.779878027 seconds)
    (2/7) benchmarking "second"...
    done (took 1.779989206 seconds)
    (3/7) benchmarking "month"...
    done (took 1.780460997 seconds)
    (4/7) benchmarking "year"...
    done (took 1.779807702 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.78068602 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.780330087 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.77976634 seconds)
  done (took 14.179886086 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.783724865 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.949413449 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.020512226 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.460981792 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.784819214 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.786263138 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.731767282 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.78691996 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.788409416 seconds)
  done (took 19.812564316 seconds)
done (took 108.05383984 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.602859791 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.780455564 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.133661476 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.823850638 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.796391991 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.076573701 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.819972093 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.006345592 seconds)
done (took 42.759155239 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.817496905 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.262328742 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.259020802 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.40024458 seconds)
  done (took 11.642808515 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.764399426 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.321640892 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.813344638 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.379949388 seconds)
  done (took 20.008237982 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.149116275 seconds)
    (2/2) benchmarking "read"...
    done (took 2.133343559 seconds)
  done (took 6.007228021 seconds)
done (took 46.195756408 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784522802 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.783067059 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.784608962 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.785033249 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.781963016 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.785450485 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.781326396 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.782390351 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.784257649 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.784687082 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.785192074 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.784748996 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785805407 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.782771726 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782426711 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785074882 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.782448919 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782057625 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.786272678 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.783285084 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.785415072 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.782312484 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.782916761 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.784202337 seconds)
  done (took 44.534260495 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.785882295 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.783555654 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.786083989 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.786114961 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.783915761 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.785544055 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.785801095 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.784661049 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.786654208 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.786554915 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.7842602 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.784954695 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.786235235 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.784675162 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785796495 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.784411018 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.788102163 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784897218 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787189396 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.783972582 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.786441533 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785445825 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.784193136 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787189766 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.784003386 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.784343821 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.788589585 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.785170744 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.787633368 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.784596218 seconds)
  done (took 55.289457689 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.791071085 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.79392526 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.787526188 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.787223373 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.786678848 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.786896244 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.786636228 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.789322914 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.78706802 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.78773167 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.788470545 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.787933637 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.787566891 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.787581167 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.788858552 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.787580634 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.788048504 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.787675009 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.787845491 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.788637737 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.787937437 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.787837415 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.787860111 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.789917174 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.789071045 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.789621793 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.790412669 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.791213633 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.790693531 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.790506796 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.790865049 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.789810405 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.791349513 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.791064539 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.791509644 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.793328808 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.794478569 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.79602039 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.791978682 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.791271403 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.792249073 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.789924526 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.790283536 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.79264497 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.792622917 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.792002453 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.791692558 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.792445739 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.791576577 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.791464969 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.792436324 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.791359657 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.791950628 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.792133612 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.791500478 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.79204201 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.792791199 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.792320157 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.79173471 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.792142452 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.792788761 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.79247952 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.792858868 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.791354332 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.793715842 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.792379602 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.791715457 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.792922377 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.792667241 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.792706243 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.793277606 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.792652614 seconds)
  done (took 130.656670895 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.792114963 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.790871777 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.790501425 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.789344389 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790134452 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.793617123 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.789597179 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792971386 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791610609 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.793383882 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79250471 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.791395259 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791151502 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.794010175 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793587481 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.790221693 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.793392008 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.791343324 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.793829252 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.794700908 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.793696869 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.791358818 seconds)
  done (took 41.154410322 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.793476855 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.793801739 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.790498938 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.793640266 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.790852958 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.793763937 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.793762532 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.794883366 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793913927 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792320958 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792606205 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794407441 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.791527578 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.792647107 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791865508 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.792585566 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79531879 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.79203696 seconds)
  done (took 34.004871693 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.791211439 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.792466958 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.794165494 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.7921709 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.792897891 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.79480146 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.792866829 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.795325567 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.794637213 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.792871823 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.795835145 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795887255 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.795622746 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791660838 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79589922 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.794310944 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.795705417 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793610524 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795413033 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792827777 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.794613189 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.794856024 seconds)
  done (took 41.200722321 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796725425 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.79616411 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.793645371 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.793479598 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.793601624 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.79614088 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.796912338 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.794188682 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.796074854 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.796233719 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.793840541 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.795592624 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.793539236 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.794799 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.794088831 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794264204 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.796442959 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.795753328 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.796379409 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.794816116 seconds)
  done (took 37.634553634 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798345603 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798268982 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.797932089 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798939234 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798310404 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.79801506 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797872307 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.797935089 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.798786321 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.798846349 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.797893563 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.797880266 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798566087 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.79883123 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.798119315 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798940872 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.798953818 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.799562241 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.798097435 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.799091173 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.79885148 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798374245 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.799250527 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.79829081 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.79822808 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.80063549 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.799029663 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.799221196 seconds)
  done (took 52.095807242 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797589416 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.800617217 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.798303491 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.796302152 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.796449152 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.795924382 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.796932207 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.796208224 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.798027745 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.794642438 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.798616196 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.799162698 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.799337308 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.799418291 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.798407334 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.800410444 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79947891 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.796432857 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.796307299 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796211628 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.799335637 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798979993 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.799292957 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.795632819 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796767025 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.797741558 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79690652 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.796205344 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799437541 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.79615848 seconds)
  done (took 55.666495818 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.817310091 seconds)
    (2/2) benchmarking "in"...
    done (took 1.817542251 seconds)
  done (took 5.369638118 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.796661932 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800048561 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.798812932 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.796413631 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.796853794 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.799280978 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.799850191 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796425997 seconds)
  done (took 16.119867213 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.800976948 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.799337077 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.79919381 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.799409535 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.800600846 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.802682228 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.809529108 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.799187859 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.804014503 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.802275047 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.807270859 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.808864509 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.806481559 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.801948369 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.80200345 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.803617631 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.799478295 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.800845553 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.800768084 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.800372367 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.802257983 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.804897084 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.804970571 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.797381216 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.803645473 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.813992526 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.809536043 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.800836115 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.803330668 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.807876083 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.803281543 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.798131434 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.801563953 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.801762994 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.800587002 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.80233636 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.813020396 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.805064829 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.811327643 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.802937941 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80257305 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.799357564 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.806324602 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.806342027 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.805554076 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.801739188 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.802547446 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.798681447 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.803688451 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.806265667 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.80569105 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803363882 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.798975847 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.813922248 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.804954284 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.811089647 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.804402688 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.806119232 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.811068996 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.81429638 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.817990063 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.810878381 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.805566809 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.803047227 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813737137 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.826102994 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.812830734 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.800351372 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.799344237 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.80275418 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.813245629 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.818300701 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.812984474 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.804326026 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804376114 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.802535941 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.805677038 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.8029624 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.813500083 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.808788038 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.804915286 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804408572 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814887855 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.822619131 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.805353023 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.804284532 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.805070792 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.804368296 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.806332355 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.817084415 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.806711196 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.804421488 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.806485495 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.807281298 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.809575557 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.805922459 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.805400878 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.808722089 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.801637303 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.80449394 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.805264071 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808085338 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.814343866 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.805138722 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.805519621 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.814565208 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.804471963 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.806092066 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.816874477 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.804116948 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.805171426 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.807913718 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.815249361 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.803044694 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.808828018 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.814118824 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.805584318 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.808692287 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.806964432 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.805421951 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815224912 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.830129476 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.806204504 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.805274565 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.811856213 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.815782854 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.806969195 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.811618559 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.806154726 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.80299139 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.803124075 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.810206753 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.805862147 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.810198454 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.806910194 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.811102827 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.803114775 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.806827739 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.806902318 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.809940868 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.810790848 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.809212956 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.810382155 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.812823601 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.80737494 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.810848176 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.816414831 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.808387811 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.810107879 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.811198277 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.804745493 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.807841934 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.811462349 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.809071301 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.810552949 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.808490678 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.80952817 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.808382661 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.808001183 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.807258018 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.807000038 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.810276616 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.812247232 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.808880151 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.814830411 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.808814794 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.805588191 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.80765547 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.80847837 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.811055705 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.808156202 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.809625373 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.812201625 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.815877162 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.80826351 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.809548124 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.81512515 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.809319338 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.809067976 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.809065599 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.812832336 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.81657668 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.80929773 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.817854363 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.809259507 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.809228192 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.809113605 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.811587502 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.810839828 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.809533776 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.813634741 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.814691796 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.825298203 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.818204149 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.811655649 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.813577671 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.812149761 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.813280404 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.817127721 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.810676258 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.810376823 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.810141129 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.812378155 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.811289738 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.81497259 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.810973568 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.812517702 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.810665793 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.810438626 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.810848547 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.811194771 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.814063534 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.815589665 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.806397134 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.810436809 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.810803666 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.811745768 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.807659269 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.811159228 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.812804173 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.811371835 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.811254217 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.823078362 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.808264182 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.813998637 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.813801135 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.813744511 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.812246559 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.811366004 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.815008767 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.81404132 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.821054446 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.81487732 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.814502563 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.820518476 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.81295017 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.813462537 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.816714941 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.811794729 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.808795807 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.816094893 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.818029991 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.811694406 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.812539137 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.8130253 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.814782116 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.812479809 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.821357606 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.809603911 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.813382662 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.814099596 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.817409589 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.81043696 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.81617054 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.815509663 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.816035696 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.816508346 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.813596795 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.812350372 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.816972555 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.814533769 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.813946904 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.813688005 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.817192887 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.819286695 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.820648321 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.815704212 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.819055021 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.816465107 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.816003645 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.816500354 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.813970641 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.815119169 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.830018577 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.820326345 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.823306262 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.818666432 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.813582788 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.823483867 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.816591252 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.819461396 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.816437286 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.817076879 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.81705901 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.81508217 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.811718493 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.818582845 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.81432833 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.817555662 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.81666561 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.817041755 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.814492389 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.816191204 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.815331332 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.816801306 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.814779376 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.81799413 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.81560843 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.821656754 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.818937707 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.817505651 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.817402452 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.824408536 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.818756313 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.819214675 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.817527896 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.817645864 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.817041177 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.819630434 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.816390966 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.820051513 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.822548431 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.820251787 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.825792647 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.818057495 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.827350037 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.817857448 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.820668555 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.823904229 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.81365528 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.817339345 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.818415321 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.818231225 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.826710973 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.81748909 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.817999993 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.820214342 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.816531122 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.81703271 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.816814642 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.816665859 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.816658433 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.817579678 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.828525776 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.819732672 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.821842614 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.820535466 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.814743478 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.817514017 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.817339349 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.817549083 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.825526109 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.818205038 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.819593338 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.819658408 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.819405833 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.817338828 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.818167449 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.817468175 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.814547631 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.817634928 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.82767461 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.819507941 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.822036432 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.817081354 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.830544165 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.818094175 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.828065147 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.81890055 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.820047911 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.818772614 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.81857415 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.823323736 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.820994428 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.821341095 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.819186257 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.820777323 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.821805409 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.819508581 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.824108472 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.821178758 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.820289606 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.821091253 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.8290012 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.838203049 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.821612768 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.82173596 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.816324155 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.821727547 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.822705005 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.818953588 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.820357254 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.822976222 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829729209 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.825490958 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.821894498 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.820542625 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.821930871 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.820223457 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.818841519 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.819255109 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.820473167 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.819523068 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.823872546 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.820202063 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.828407875 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.819660702 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.822632146 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.824596637 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.822877217 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.832954866 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.821490649 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.822877036 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.821524419 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.820105961 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.823431856 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.823569434 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.821258375 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.823833967 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.820649808 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.823383574 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.827181906 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.826858146 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.826169918 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.822147469 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.822191483 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.82410354 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.825071491 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.8219426 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.821801247 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.821678383 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.82389947 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.821199783 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.825491476 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.821878146 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.821917309 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.823631568 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.821709879 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.826460304 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.828429742 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.824874594 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.81982392 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.821391188 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.822570673 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.821731064 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.824581209 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.835183541 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.826340517 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.832341423 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.830768564 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.826496195 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.824358088 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.82647223 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.83108257 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.823440839 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.826055295 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.824438104 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.827439327 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.823995821 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.828197802 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.823498319 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.83320549 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.826146167 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.82473736 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.834467567 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.826416065 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.82333503 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.825453954 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.828306537 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.824941316 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.820795241 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.823908749 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.832725535 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.833707729 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.828824783 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.82380408 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.827634981 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.831782568 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.826157732 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.828321555 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.824051322 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.82652297 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.821449998 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.837215358 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.82509698 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.824377611 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.821520618 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.826472724 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.838656682 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.829013826 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.832922083 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.822059688 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.829788433 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.827275634 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.829889032 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.826124955 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.825061875 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.822378376 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.822758009 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.831245649 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.825980009 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.827041127 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.83106264 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.827139249 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.827882598 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.82966511 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.826375846 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.83019632 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.835975474 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.830581785 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.82860637 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.826478713 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.828232861 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.831171013 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.825955644 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.826239972 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.836558157 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.830632408 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.825657953 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.826750678 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.826082128 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.834862809 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.843874677 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.826427367 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.829125687 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.829013528 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.834764447 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.827473635 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.824047311 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.825827885 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.832219496 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.830082003 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.83521707 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.827748209 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.836644578 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.828333094 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.830295366 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.834466246 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.831544785 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.8359951 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.833213935 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.827363257 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.829121232 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.833180201 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.844286837 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.82778515 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.838012127 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.855616937 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.82930133 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.831214026 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.828584308 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.828272757 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.828196799 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.832747888 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.828870766 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.827596234 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.827263598 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.828654799 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.829684646 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.834854156 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.831775413 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.827670632 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.828016689 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.830556026 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.833829182 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.825051422 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.829013332 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.828232398 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.829345286 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.829200783 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.83009089 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.831234562 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.844138125 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.840594797 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.828619612 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.829541111 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.826531917 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.834889202 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.83283554 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.839037434 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.834680617 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.831847742 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.829856962 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.83298512 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.830278739 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.827167027 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.83183333 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.83869798 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.831438524 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.826990885 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.845382032 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.837594865 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.839997683 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.833482405 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.831068154 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.829460233 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.834547507 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.831044821 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.833856145 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.836001351 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.832260212 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.833903835 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.831064526 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.833397073 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.834466364 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.83597177 seconds)
  done (took 1085.371606237 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.828210876 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.831770698 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.827896869 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.827748243 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.828032184 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.828044632 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828741221 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.832154891 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.827978085 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.828706119 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.829007445 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.828239639 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.830744558 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.828740624 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828550025 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.82867776 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.828031107 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.828009982 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.83624167 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.829023659 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.828906517 seconds)
  done (took 40.180337895 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.830252741 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.831480743 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.828718758 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.831975656 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.829184183 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.831565978 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.828647016 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8347295 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.831187548 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828607828 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.831760445 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83163957 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.830984255 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.829251249 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829408365 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.831533213 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.831862039 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.829130594 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.834411318 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.830098696 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.832113354 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.830088724 seconds)
  done (took 42.045479581 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.835670198 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.83383888 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.833981534 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.830192888 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.832678918 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.829440426 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.839977979 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.83266957 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.833176722 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.837013127 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.833526016 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.837848592 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.839232556 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.837180575 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.838641434 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.83306332 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.977982486 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.835775282 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.833399796 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.834064665 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.830514462 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.841979181 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.833888453 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.831323042 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.834962405 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.833732351 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.833690878 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.834100957 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.834701236 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.835619409 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.838136425 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.834110674 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.834991933 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.840980694 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.835119918 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.83589886 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.836514268 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.835663919 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.834001127 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.834187543 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.844310374 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.849757132 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.835284122 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.845773136 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.83718127 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.834374808 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.838840282 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.841037648 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.833049047 seconds)
  done (took 91.872768891 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.834615015 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.834901075 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.831950345 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.835090644 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.834396192 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.837065 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.835033177 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.8344812 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.832680562 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.833405371 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.839821695 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.833216401 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.833113809 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.836224281 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.836315568 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.833465855 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.837503522 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.833024981 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.833463493 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.832006543 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.83337586 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.840071118 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.836422849 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.833388552 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.835644469 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.833427854 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.834057454 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.837297971 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.834735273 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.833676829 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.836202147 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.835554222 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.837405072 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.833932545 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.834139381 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.837408833 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.835574909 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.834705405 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.836027126 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.833911592 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.837418183 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.836932571 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.836887108 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.843948696 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.835222613 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.834047898 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.834512487 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.834512523 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.83953923 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.837007551 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.837284935 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.836182199 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.837134064 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.835166277 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.838733541 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.837252133 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.835847736 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.836108376 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.838247781 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.837241071 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.83591213 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.83838319 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.836349818 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.838403357 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.837914116 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.841259503 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.836427692 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.838981847 seconds)
  done (took 126.616932066 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.839755093 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.843859036 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839661141 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.838782903 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.840073425 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.840068922 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.840332518 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.841443414 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.840081474 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.839754341 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.840474818 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.838400144 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.841545659 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.839228658 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.839903189 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.839953604 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.839475387 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.84529452 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.839710452 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840040853 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.840448748 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.840183183 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.841131864 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.841977914 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.840897418 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.840118813 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.840433797 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.840210398 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845505097 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.840759755 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.840478972 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.840096478 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.841372426 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.840270047 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.843712683 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.840280229 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.841112336 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841654294 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.841130102 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.844537979 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.842132198 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.841039617 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.840624506 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.841310747 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841232807 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.843180385 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.841617137 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.841577921 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.839864438 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.840843432 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.843442264 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.84131267 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.841920693 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.842148861 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.841142457 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.842193726 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844600816 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.842553561 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841806212 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.842505042 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.841695268 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.845342964 seconds)
  done (took 115.935145562 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.839915612 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.840923055 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.839160889 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.840291741 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.841732681 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.838718807 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.841963918 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.842046799 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.841917307 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.84300993 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841638046 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.838386728 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839076864 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84265248 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.840830797 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839143467 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.839118607 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.839261988 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842856392 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.839512404 seconds)
  done (took 38.589134263 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.839538429 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.842862747 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.840495901 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.840780584 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.843758367 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.839764369 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.842428113 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84220028 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839772496 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842717636 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.84620528 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.843035366 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840636133 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.84010163 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.842910277 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.842409168 seconds)
  done (took 31.247975207 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.841554404 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.844092907 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.844701128 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.844251704 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.840780134 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.840760744 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.843560681 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.841059463 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.841299894 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.844982367 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.84384757 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.844800635 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.843893698 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.84612825 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.841212287 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.843538538 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.840464234 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.841551224 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.845107021 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.845431663 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.843217328 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.842188725 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.843949885 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.844794797 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.841727339 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.842607643 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.841700656 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.841775578 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.841509247 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.844434056 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.842299359 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.842311577 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.842814896 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.843034298 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.84574633 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.842627788 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.847125235 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.845139077 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.844655935 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.84648138 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.845201556 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.846613914 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.844662398 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.845426435 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.842983499 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.845087804 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.842937418 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.845504078 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.843428949 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.844063422 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.846471403 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.847899913 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.84854339 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.846415985 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.845708678 seconds)
  done (took 103.194907228 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.846353867 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.846526028 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.844622068 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.846100911 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.84623939 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.844387215 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.847416679 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.84488804 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.843864024 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.846434496 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.84463961 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.847052325 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84458352 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.84772765 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.845676143 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.846839319 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.844516422 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.843987393 seconds)
  done (took 35.003740872 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.845161934 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.84431972 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.847394965 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.843724868 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.844832531 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.847404646 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.845389745 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.847740774 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847396158 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.845294008 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844408043 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.847352379 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847289191 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.847993486 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.84527937 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845329557 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.847529429 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848100453 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.845631386 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.846479906 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.848068031 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.847920793 seconds)
  done (took 42.403145487 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.849153147 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.848923108 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.865950881 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.888392831 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.875813645 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.848988686 seconds)
  done (took 12.960412965 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846485203 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848467757 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.845687287 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849391519 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848699517 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846720945 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84633729 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846285274 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849091665 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84685013 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846696142 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849055946 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85028291 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846573807 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84946374 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849306062 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847189883 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846709224 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84750735 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850262653 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847038859 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849813863 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847542557 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847240182 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847910007 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847101457 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849634226 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847873284 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848126005 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849136294 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850461112 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847764155 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849595654 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848073372 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851695948 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850364116 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848232612 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851072686 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851422259 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848328159 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.850687829 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850039787 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85075379 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847376362 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850622411 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848292428 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848121057 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848639143 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848587086 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852125685 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850940832 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849422259 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851188734 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851720096 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852161673 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852079754 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851830207 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84957388 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851921248 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849547442 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849072737 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852457796 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849306069 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849888679 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852066709 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849435276 seconds)
  done (took 123.829984396 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850232667 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.850610246 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849678325 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850679118 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84928744 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850955496 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849641525 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850152368 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850103601 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849829611 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85569949 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85104839 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849709973 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84984596 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84964139 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849483131 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852042707 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850396827 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850131058 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853692617 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849956885 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85252668 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85029822 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850909985 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850928852 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853650662 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85123011 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851393912 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85061888 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850807904 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850705475 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850730161 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855238489 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.851694784 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850895114 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851042142 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851119629 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853786152 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851927683 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853735621 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852346746 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855628779 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853488837 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85322571 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852568386 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851937929 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851304895 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85288885 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854037538 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851616971 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851937956 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852299634 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852313393 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852610894 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851806629 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852257279 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851994708 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853140363 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852174183 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858456233 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853285553 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852284601 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854966605 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852377764 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856131094 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852125803 seconds)
  done (took 124.015479969 seconds)
done (took 2528.714352803 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.884797857 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.049249192 seconds)
  done (took 15.724189095 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.02801266 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.980346197 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.864864585 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.898356161 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.86608004 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.886849977 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.881206153 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.865918328 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.866365396 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.865719584 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.866073335 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.053801345 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.886329094 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.868473213 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.867500361 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.961903567 seconds)
  done (took 52.311182848 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.86973426 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.86962086 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.880394963 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.873934108 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.870495314 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.888862714 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.904485726 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.87361471 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.930415462 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.893727507 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.995127007 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.880655267 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.87002868 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.926432655 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.882653756 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.884856397 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.975112486 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.947546301 seconds)
  done (took 36.017909122 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.950437084 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.872472841 seconds)
  done (took 10.632664582 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.88963528 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.866355959 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.89717263 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.890799817 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.872026443 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.881709246 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.879634081 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.906178071 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.903525286 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.906105743 seconds)
  done (took 70.697279107 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.875628706 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.870850159 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.871616172 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.868696079 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.863679269 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.867862844 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.869830357 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.862865086 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.566187057 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.907773008 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.876911553 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.87524238 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.870931091 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.871999779 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.866881094 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.893186904 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.984420622 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.867408546 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.866705059 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.875972038 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.871497605 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.961149598 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.88515997 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.86984212 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.90146367 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.562941635 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.878496492 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.878469823 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.008275044 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.867512362 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.870275702 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.87173885 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.873313867 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.26148375 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.200809911 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.871833683 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.881808231 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.879072946 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.867465294 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.041933798 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.872598808 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.876561251 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.865395033 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.179856538 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.954352498 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.915033336 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.208364043 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.875619486 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.872518766 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.902295519 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.875257154 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.873084409 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.885152539 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.394604705 seconds)
  done (took 132.937208957 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.867401231 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.453836126 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.0309039 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.86892697 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.150199833 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.110987387 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.86857408 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.918107909 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.870840439 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.118555053 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.046424136 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.989465378 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.870047157 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.869177302 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.868692538 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.866652893 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.022017209 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.940557896 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.869280723 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.866864459 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904429792 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.13568401 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.997558222 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.870935351 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.892302754 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.098198606 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.996875326 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.986817903 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.408514175 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.86761807 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.936595604 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.871568418 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.870621261 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.868122973 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.035408616 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.978153571 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.96697158 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.870600899 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.867942447 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.868266432 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.531485186 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093741637 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.98187568 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.008224374 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.119734571 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.099467596 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.514834191 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.867205088 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.506586132 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.066762172 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.07903822 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.123860202 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.999981072 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.872034955 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.111291365 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.867671818 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.869220178 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.133069158 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099160226 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.986391378 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872985982 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.871239113 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868790316 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.186019736 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.873194291 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.981294827 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.873004697 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.870629471 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.983620746 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.988296314 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.09967738 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.114581952 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.902161169 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.762704075 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.378506185 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.154709099 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.943604745 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.135588413 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.873392142 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.870420236 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966402115 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.625857758 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.045149003 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.19024706 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.137781957 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914532212 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.476795074 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.870800983 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.119837483 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.123654335 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.10569796 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.117556259 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.039269076 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.185925966 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.870632155 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.87075144 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.083284766 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.004445381 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.874612198 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.235950215 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.121548702 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.603626264 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.902775155 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.177942302 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.011609463 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.874957205 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.497988812 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.873784194 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.075665814 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.916639452 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.873670619 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873340955 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.120089249 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.743556119 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872297307 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.658935041 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.939505902 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.875705855 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.138780374 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.877409948 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.11645349 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.874394175 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.184444273 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.367642649 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.917343135 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.066460298 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.118572984 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.669370415 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.141441061 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.188188668 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.998728372 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.133720122 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.694922038 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.872844997 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.157323122 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.876392168 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.873061394 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.043969024 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.874954556 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.030140383 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.876817722 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.135664725 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90194616 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.046652575 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.877751538 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.148710135 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.92119258 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.928497906 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.877498696 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.992776251 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87606149 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.916955594 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.060066774 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.87680283 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.873574668 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.443243332 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.873800031 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.023018794 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.174379467 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.901284168 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.946884772 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.402080156 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.874812877 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.970528617 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.904376601 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.486483791 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.876423309 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.048259987 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.877782138 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.873534944 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.874531126 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.186777347 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.09916648 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.87743972 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.875909328 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.667330567 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.563368818 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.875886679 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.053547265 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.110782948 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.531419733 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096820451 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.877709462 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.010515409 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.879085871 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.954697439 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.227540218 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.876491336 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.87606659 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.878229949 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.877529193 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.876409413 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.107895352 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.906735653 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.560971656 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.014568129 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.12333468 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.189343387 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.140426592 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.926666772 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.879429632 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.145700729 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.880422612 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.945565229 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.880183784 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.90235432 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.126856789 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.881498361 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.107572245 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.16672967 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.926216297 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.929739767 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.880095524 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.877630521 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.876771812 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.023313962 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.979932316 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.87993722 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.877771786 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.996118344 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.006622273 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.068818239 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.472713226 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.05060408 seconds)
  done (took 905.071325929 seconds)
done (took 1225.181287984 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.8797445 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.881551416 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.865313979 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.876473425 seconds)
  done (took 29.320922962 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.882489543 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.880353204 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.881024412 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.881381705 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.881476462 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.884013409 seconds)
  done (took 13.105114982 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.933312027 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.879798323 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.877582062 seconds)
  done (took 21.503968229 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.94996658 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.292187926 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.98713373 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.32823129 seconds)
  done (took 10.372013858 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.882041152 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.88083732 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.882391016 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.883016759 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.883391194 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.884776798 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.8821041 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.883400997 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.884432023 seconds)
  done (took 18.76134008 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.077894929 seconds)
done (took 98.957172809 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.18474283 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.060584454 seconds)
    (3/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.902659572 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.244990699 seconds)
    (5/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.877581347 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 4.332272821 seconds)
    (7/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.986225236 seconds)
    (8/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.965528722 seconds)
    (9/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.018249773 seconds)
    (10/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.284468928 seconds)
    (11/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.460060413 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.017643458 seconds)
    (13/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.045733557 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.864733846 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.936220439 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.901924637 seconds)
    (17/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.996469414 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.786117846 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.106072577 seconds)
    (20/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.472838171 seconds)
    (21/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.233914808 seconds)
    (22/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.035451859 seconds)
    (23/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.928758764 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.98762887 seconds)
    (25/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.088742233 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.180656832 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.993168583 seconds)
    (28/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.178488148 seconds)
    (29/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.777943083 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.981781899 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.123079714 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.880202532 seconds)
    (33/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.882241329 seconds)
    (34/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.34414969 seconds)
    (35/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.006144658 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.980134844 seconds)
    (37/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.072987018 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.933520025 seconds)
    (39/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.46813984 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.242061563 seconds)
    (41/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.960618448 seconds)
    (42/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.689019296 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.243506457 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.882824361 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.181613181 seconds)
    (46/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.513517028 seconds)
    (47/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.280889633 seconds)
    (48/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.172755659 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.27088458 seconds)
    (50/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.88122387 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.231556517 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.99496228 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.06869688 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.540587839 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.143246025 seconds)
    (56/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.23546155 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.099238257 seconds)
    (58/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.05429473 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.9935085 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.878495683 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 8.340567208 seconds)
    (62/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.45569204 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.955732046 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.884328188 seconds)
    (65/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.989925329 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.025262129 seconds)
    (67/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.992370765 seconds)
    (68/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.963036103 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.791953265 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.941694017 seconds)
    (71/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.016218825 seconds)
    (72/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.118914812 seconds)
    (73/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.888642143 seconds)
    (74/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.09040106 seconds)
    (75/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.009132146 seconds)
    (76/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.908087061 seconds)
    (77/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.227286346 seconds)
    (78/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.886858477 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.834724802 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.967975482 seconds)
    (81/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.485647917 seconds)
    (82/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.25195343 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.886359236 seconds)
    (84/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 3.259680276 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.402331704 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.11853816 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.206425878 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.598729065 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.96155135 seconds)
    (90/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.473441985 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.538386661 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.258470322 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.872100727 seconds)
    (94/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.980850784 seconds)
    (95/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.885298159 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.077378369 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.053613041 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.873666114 seconds)
    (99/309) benchmarking ("sort", Float32, false)...
    done (took 7.008300473 seconds)
    (100/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.900007792 seconds)
    (101/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.093750099 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.595120385 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.065717139 seconds)
    (104/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.075869557 seconds)
    (105/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.972381727 seconds)
    (106/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.05409758 seconds)
    (107/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.895810416 seconds)
    (108/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.061149218 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.547144437 seconds)
    (110/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.885870263 seconds)
    (111/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 4.440637285 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.548374738 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.962049938 seconds)
    (114/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.810686587 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.190921785 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.085975563 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.170268381 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.989899194 seconds)
    (119/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.89032731 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.886005175 seconds)
    (121/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.709586201 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.833289308 seconds)
    (123/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.068204167 seconds)
    (124/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.873701401 seconds)
    (125/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.042172677 seconds)
    (126/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.25127384 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 2.343323153 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.910634436 seconds)
    (129/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.885537328 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.166532406 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.874969429 seconds)
    (132/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.260197351 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.103946599 seconds)
    (134/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.018694346 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.1688624 seconds)
    (136/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.227063099 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.990722464 seconds)
    (138/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.213947456 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.017180189 seconds)
    (140/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.91225081 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.224527941 seconds)
    (142/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.020407078 seconds)
    (143/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.875125004 seconds)
    (144/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.695620689 seconds)
    (145/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.902945501 seconds)
    (146/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.95068919 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.108969478 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.912471182 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.912352811 seconds)
    (150/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.970698612 seconds)
    (151/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.961078164 seconds)
    (152/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.875693082 seconds)
    (153/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.746903674 seconds)
    (154/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.920657528 seconds)
    (155/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.945321717 seconds)
    (156/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.315929445 seconds)
    (157/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.781956222 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.189970549 seconds)
    (159/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.907429687 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.909309093 seconds)
    (161/309) benchmarking ("sort", Float64, false)...
    done (took 5.692816104 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.70586225 seconds)
    (163/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.8789792 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.330806146 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.875260951 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 3.430225643 seconds)
    (167/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.176143461 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.147679744 seconds)
    (169/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.151274017 seconds)
    (170/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.39534669 seconds)
    (171/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.906157432 seconds)
    (172/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.229900406 seconds)
    (173/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.875598497 seconds)
    (174/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.272335087 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.128357545 seconds)
    (176/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.573739383 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.925113313 seconds)
    (178/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.913341857 seconds)
    (179/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.043748401 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.691814877 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.940733367 seconds)
    (182/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.087470568 seconds)
    (183/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.05551626 seconds)
    (184/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.876760546 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 8.007579827 seconds)
    (186/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.919173323 seconds)
    (187/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.015695654 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.873759107 seconds)
    (189/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.1765723 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.891452661 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.431900634 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.759538935 seconds)
    (193/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.988244862 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.22042582 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.95178031 seconds)
    (196/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.151926886 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.916993974 seconds)
    (198/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.952659914 seconds)
    (199/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.875634991 seconds)
    (200/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.910482296 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.904874597 seconds)
    (202/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.017383165 seconds)
    (203/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.892278238 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.898600694 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.621564896 seconds)
    (206/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.962653394 seconds)
    (207/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.00564646 seconds)
    (208/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.12103345 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.894015347 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.883606737 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.891403359 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.094535704 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.605574122 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.092695914 seconds)
    (215/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.247770872 seconds)
    (216/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.066652091 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.893993805 seconds)
    (218/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.313405236 seconds)
    (219/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.920958196 seconds)
    (220/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.170098016 seconds)
    (221/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.026885888 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.83817341 seconds)
    (223/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.40219036 seconds)
    (224/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.031197721 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.95489523 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.994553382 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.328036135 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.021188592 seconds)
    (229/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.191793597 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.894011349 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.896049544 seconds)
    (232/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.102179377 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.941144358 seconds)
    (234/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.996033934 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.512527372 seconds)
    (236/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.983443282 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.917664537 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.335517412 seconds)
    (239/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.779132048 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.879255508 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.883469829 seconds)
    (242/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.00253485 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.917949619 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.244628058 seconds)
    (245/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.914308473 seconds)
    (246/309) benchmarking ("sort", BigInt, false)...
    done (took 6.893626965 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.895706332 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.900022308 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.194504394 seconds)
    (250/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.232436116 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.11353403 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.327400572 seconds)
    (253/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.904598284 seconds)
    (254/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.918387442 seconds)
    (255/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.298642797 seconds)
    (256/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.474104503 seconds)
    (257/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.113581845 seconds)
    (258/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.103144713 seconds)
    (259/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.999510898 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.99551089 seconds)
    (261/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.977741036 seconds)
    (262/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.828378155 seconds)
    (263/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.053026603 seconds)
    (264/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.960614788 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.920044688 seconds)
    (266/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.063007251 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.496192959 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.281688473 seconds)
    (269/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.920509385 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.933725289 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.947346635 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.967198209 seconds)
    (273/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.09389035 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.921810242 seconds)
    (275/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.405896965 seconds)
    (276/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.880869121 seconds)
    (277/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 3.279743604 seconds)
    (278/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.593322849 seconds)
    (279/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.420610826 seconds)
    (280/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.902864441 seconds)
    (281/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 4.289316663 seconds)
    (282/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.919351328 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.977288085 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.142980321 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.982550342 seconds)
    (286/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.093514394 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.154148526 seconds)
    (288/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.984214905 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.200806383 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.013771256 seconds)
    (291/309) benchmarking ("sort", Int8, false)...
    done (took 4.855188733 seconds)
    (292/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.994750247 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.076821223 seconds)
    (294/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.908294732 seconds)
    (295/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.409146558 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.94744139 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.880873633 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 3.860337145 seconds)
    (299/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.960525375 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.899024677 seconds)
    (301/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.446629442 seconds)
    (302/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.416310837 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.286624607 seconds)
    (304/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.267635208 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.926684053 seconds)
    (306/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.088327111 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.90334062 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.813722224 seconds)
    (309/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.017936872 seconds)
  done (took 1031.29628001 seconds)
done (took 1033.125849061 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.930900475 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.925494851 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.908198907 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.930113337 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.021472727 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.938466886 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.920069234 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.911345103 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.956979841 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.959109268 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.909028017 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.936784638 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.912227645 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.910280173 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.909617762 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.923092565 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.218546155 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.939064017 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.927562572 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.919878809 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.927036753 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.909342588 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.958781671 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.937566142 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.91327271 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.912910021 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.9139294 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.930167709 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.021552807 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.914871093 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.913780542 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.92044903 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.217379835 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.936480425 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.905266973 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.93134431 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.922183362 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.918774995 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.914316589 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.943237926 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.361651189 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.917491539 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.912757091 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.911255315 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.911523534 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.915067348 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.91353158 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.916321827 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.924784903 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.925847197 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.356604469 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.934068504 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.915383372 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.912525104 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.922561257 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.912851654 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.915449572 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.92872957 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.932833156 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.928984743 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.210953283 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.944779487 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.914011183 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.930081637 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.920017798 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.393757385 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.914215792 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.917064145 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.361310779 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.924074786 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.3959064 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.928242439 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.914131773 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.927794775 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.944511343 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.219746551 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.935169902 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.912086091 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.921387612 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.912185342 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.922247693 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.925847371 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.91768726 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.913842481 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.927866301 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.943074052 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.924141048 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.91480083 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.922004309 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.933470281 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.921466944 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.925758568 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.9175253 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.909795838 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.922972965 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.916839018 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.917433982 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.918378433 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.919162534 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.924316463 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.362116923 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.938626593 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.911628164 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.911212279 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.91421614 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.930045864 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.362006853 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.921816021 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.937541016 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.963180959 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.916603567 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.213580589 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.947312691 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.932469707 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.924691873 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.918823453 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.910768534 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.212505606 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.386561126 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.937615798 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.916997654 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.915734658 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.931949877 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.917457832 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.912512318 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.222253253 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.944173924 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.930221102 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.037487618 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.926112999 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.94771502 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.915674106 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.919229747 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.949297407 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.932106937 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.948031876 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.919263843 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.933659821 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.933729043 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.912467731 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.926643471 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.926763709 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.917799136 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.922355546 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.910401004 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.945399401 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.929717227 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.929082009 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.937639431 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.038400944 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.914141158 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.214987011 seconds)
done (took 300.696749567 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.990060262 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.905516295 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.020160261 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.913066098 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.004312638 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.01415129 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.910226976 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.910719703 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.909729972 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.311711297 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.910342054 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.911413183 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.909661456 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.910893177 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.0018797 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.912750533 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.910178685 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.256530903 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.914323052 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.98495124 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.915485614 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.909892659 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.913041544 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.299184675 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.906448539 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.915977043 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.994971015 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.912662953 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.280607574 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.911912603 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.911898608 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.264090924 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.019908918 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.932051337 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.923454946 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.922295837 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.010269984 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.918483022 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.008491904 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.000865976 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.021338555 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.954851473 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.910498069 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.909472838 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.917838452 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.916452028 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.912900036 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.94240937 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.914909586 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.91186665 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.273061386 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.924313827 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.912563201 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.913837012 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.912174055 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.946681819 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.913594908 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.917500213 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.009369088 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.916115215 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.992563305 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.321291144 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.296345073 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.917006411 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.917605662 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.913028505 seconds)
  done (took 187.539954897 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.983628391 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.991641682 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.984810756 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.92049058 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.968213509 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.98948825 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.920801457 seconds)
  done (took 15.607430053 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.922886293 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.91746629 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.96691341 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.9671799 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.917764144 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.068968572 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.91795406 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.929236431 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.913577204 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.971372448 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.9188382 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.91759736 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.923757541 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.916697136 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.967565025 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.929744827 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.035301438 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.920507854 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.917543956 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.075875446 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.915043265 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.924156611 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.973092034 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.930043901 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.918827453 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.924976815 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.504947486 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.9180705 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.914332265 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.917745568 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.916080188 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.960260726 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.917973737 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.916481044 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.914676431 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.035747363 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.918572974 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.915680299 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.918172425 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.914672616 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.917820989 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.918237845 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.918571195 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.915884732 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.917700705 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.94352158 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.918164915 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.918229963 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.918689061 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.918554093 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.970638676 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.91872507 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.915795895 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.916274686 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.97770206 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.924919097 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.919529476 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.916149872 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.919866822 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.915757822 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.076915817 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.967878852 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.918951986 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.968789405 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.919810501 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.918830537 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.918937618 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.918858929 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.976396133 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.919336366 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.968970722 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.916939901 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.077817636 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.944855316 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.921815574 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.924418551 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.924073083 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.920683441 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.921788531 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.928962248 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.917562506 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.924153864 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.927878793 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.91691055 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.917415306 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.028863331 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.030742464 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.917827458 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.934642355 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.9292849 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.917192624 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.975023779 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.919846116 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.918175171 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.974503627 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.475916014 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.978732 seconds)
  done (took 211.097300925 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.927071052 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.930774915 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.923872317 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.939526256 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.923721529 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.922558558 seconds)
  done (took 13.420178064 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.925556265 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.923010318 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.922374339 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.920775189 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.922308464 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.922577691 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.923435215 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.925163035 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.926728362 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.921728048 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.92338533 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.923006602 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.923101992 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.923025559 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.9231821 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.921801925 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.922655011 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.919170562 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.922292255 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.923845446 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.079491079 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.921604878 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.923998022 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.925803831 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.926513102 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.922735469 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.931854446 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.922431029 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.923216643 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.932534542 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.926594564 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.92384378 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.925710152 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.931104931 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.92735274 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.925511101 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.92687931 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.924293209 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.920661571 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.924253877 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.925179412 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.924325089 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.923450726 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.925793722 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.926985109 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.931029748 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.928539621 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.932506421 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.924863603 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.924982048 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.925894662 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.92346924 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.924582871 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.925893215 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.929745422 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.931637977 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.929198257 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.924370482 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.925502683 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.926817936 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.925454338 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.925653747 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.92834258 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.928317014 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.921550095 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.925955665 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.927693598 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.928978227 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.925359137 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.924235776 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.926770791 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.92215784 seconds)
  done (took 141.626590428 seconds)
done (took 571.150508033 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.164997793 seconds)
  done (took 9.019582885 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.998812379 seconds)
  done (took 8.948423635 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.552853391 seconds)
  done (took 10.40863533 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.94066901 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.93673267 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.926962962 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.925225405 seconds)
  done (took 29.595393509 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.255684734 seconds)
  done (took 9.10634311 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.932606367 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.917529147 seconds)
  done (took 15.775207695 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.041855828 seconds)
  done (took 8.897796739 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.974828375 seconds)
  done (took 8.839216049 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.93235546 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.920563255 seconds)
  done (took 15.721897025 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.902025166 seconds)
  done (took 8.755806617 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.593827604 seconds)
  done (took 11.464214647 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.929600156 seconds)
  done (took 8.800848845 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.996182216 seconds)
  done (took 8.854028914 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.112126153 seconds)
  done (took 9.968596101 seconds)
done (took 166.010914039 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.924828413 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.923626543 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.919290786 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.92039997 seconds)
  done (took 29.544185645 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.960386797 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.960986878 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.961097635 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.971517138 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.963020134 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.96097734 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.952256063 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.951754277 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.971207549 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.963111499 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.962087297 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.962749036 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.961164329 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.953021516 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.96217544 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.962446355 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.971508699 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.961654333 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.953027582 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.963415309 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.928925618 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.9710342 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.963552182 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.928527018 seconds)
  done (took 48.878289167 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.124295277 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.001333087 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.083985806 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.981974965 seconds)
  done (took 10.050764103 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.979547621 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.980566859 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.993316588 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.031808769 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.063198554 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.991934191 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.954177387 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.949941942 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.93574365 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.980825809 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.05836311 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.996928768 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.063026545 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.928533849 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.11514481 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.927797055 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.928448223 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.980354634 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.032576104 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.04687511 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.928896555 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.981468688 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.984884167 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.00157306 seconds)
  done (took 49.694429018 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.926158759 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.935627762 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.933395759 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.928066734 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.929521029 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.927782489 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.934990114 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.928696785 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.951187041 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.929107308 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.928847097 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.928556872 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.927322114 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.928328137 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.928012677 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.939690537 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.942199103 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.929473507 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.932388561 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.933691978 seconds)
  done (took 40.502775142 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.924107346 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.851200191 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.276753238 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.181472873 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.926488301 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.929902074 seconds)
  done (took 32.951035287 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.946901548 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.001523466 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.943764178 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.987665517 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.076789722 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.939057182 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.932766227 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.999308323 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.04916837 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.005500335 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.955180656 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.961650733 seconds)
  done (took 25.660171715 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.926315433 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.928191115 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.928848687 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.944964923 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.942171134 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.939742791 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.938941882 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.925719785 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.945984907 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.95376475 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.943452421 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.94366637 seconds)
  done (took 45.127608018 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014975673 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.970651134 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.96456751 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.610963959 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305947173 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.136607944 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.532253287 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.257368408 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.928967543 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197981373 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.999225359 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032655776 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.18301728 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.451393272 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.960763678 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.386876115 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.223033773 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132551237 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954026645 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.61084383 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990677219 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.143167231 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.731304123 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.983704284 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.136238749 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.053230416 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.211229046 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.9260376 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06118694 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963842038 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93691157 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.926665429 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201578615 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.302089234 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034842917 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935869007 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.548143531 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.6433933 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.914299105 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.701311858 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.663540369 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.052450969 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936292341 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927631627 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.861221313 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.182527986 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30206918 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.932049989 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.638279488 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.926542971 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937732407 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021797476 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.931459225 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.743424708 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848252555 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.929781819 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.926318817 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936120284 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.503190447 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.058216571 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.144690827 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.904870487 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.020153562 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.687677261 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317791204 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.074525429 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.931338994 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93277441 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862674211 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.615399674 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98337283 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257687342 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.948222219 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.578789387 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246622967 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.064318175 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.875037335 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198444915 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.495971543 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.903861865 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156043924 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929078525 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864686537 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.878610856 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.863556617 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184241222 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967725214 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.676309026 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968644548 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.256111218 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.940327923 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947339279 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953808923 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.153516764 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.815443589 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930692855 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.725262855 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.074380415 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950789087 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.256472501 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864445761 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.935254913 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186642482 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.140803838 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.038877971 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.423791848 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089666858 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.526254065 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.984513156 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.116068904 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.979947863 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.195350682 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987310535 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.061491341 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985431807 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.931743568 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219217313 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.55060579 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.069062262 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.010674604 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062085686 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.241342124 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959346794 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01374473 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.939891822 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.931163313 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.687376671 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.485486337 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.930842696 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.934105783 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.038218718 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982507222 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.932699407 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882212199 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.562092443 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992681294 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.9479137 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.156599028 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.537749333 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249854074 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866859533 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261061872 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.989747574 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.156525491 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.577368709 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.012777142 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193452897 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.041947715 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.075047025 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985246952 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951229296 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030143637 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959530504 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.115070277 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.228855398 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.937395949 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.937786578 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.722515171 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.975099291 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933353091 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.939640646 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.684437444 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203418218 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.958715299 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.940547734 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.822949164 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.948092401 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998551025 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939411375 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.944107003 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.475556109 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.648116426 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.942468855 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.524487023 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162744751 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946319975 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.681305885 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050069955 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.017677098 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.200589455 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99341977 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.869661827 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.645876313 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.627339799 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934026931 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.871220213 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.93502311 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944112469 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946222224 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.132684458 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.20432179 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.978639292 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.625583907 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.980654593 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947449944 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.940544766 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93492359 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.44899386 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.071535549 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.152755875 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.982985296 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079170051 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.949886719 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.871802423 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.941393686 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.941676313 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.936601504 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.936224543 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969541274 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.631817694 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311562288 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.198118963 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.54760506 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950910601 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.650562329 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.996351858 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.93745852 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.773194683 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.137440544 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.983481297 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949432777 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.947090326 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.632079935 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.633671869 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.508099449 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246849482 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.233114068 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365091547 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.188561374 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.97068096 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.27371649 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872213913 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.49524049 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.99807225 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.282788408 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.883307933 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029448669 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.581662797 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.285642781 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951861138 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167768602 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317277422 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.691592744 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084945129 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150040578 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973209076 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.123557138 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.903853994 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.224828485 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078962326 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.640389892 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144871196 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271971411 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.623513872 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.067408518 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.940949973 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.607603663 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02201352 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.653253136 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.111900748 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.157311795 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.936302975 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411249631 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.946950805 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.165095814 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291571871 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.145445248 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.064505309 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876612379 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.950684822 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.950571272 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.941516851 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.94112763 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.807718928 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.198249065 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950719769 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874816583 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.089544642 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228604449 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.840761295 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.947446491 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940498398 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231292945 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.516055375 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112100428 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.078204254 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.464971986 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950927551 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.875394019 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875408815 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.634651125 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.944686268 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917427862 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142554127 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.048485552 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.891956236 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.055639015 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.023957986 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.19821994 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.955647907 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.202984966 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.217770152 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.64411206 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968580695 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.041999269 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.616387628 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.054306548 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.9419721 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.178709369 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697968351 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.171295219 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.962710614 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.939107618 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.943322869 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.159801533 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.943703846 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.885513355 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176621745 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.670756692 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.002600118 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258617404 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015561344 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.859079657 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.991225104 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.036367494 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955946497 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022715895 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95497143 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.955732057 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.954435849 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992873227 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.863202621 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.07011342 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.960055783 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040289582 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.075846512 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.469104764 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.950330723 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210350573 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306741421 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.260892773 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003415512 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.946136036 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.948097236 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881830974 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095079789 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.171086291 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219730984 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.073387676 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.063333569 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970901681 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.651369872 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.192677856 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1892619 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220560245 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.839656377 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.487907138 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.988733163 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.947103508 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957872269 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.157657249 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152262756 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244493924 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.095646358 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.064999779 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.307021066 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222018955 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.947620674 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.946539873 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.535611811 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.952122276 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.717342114 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.991542406 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.849067145 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224950075 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957576986 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325874396 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.968881647 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.107218902 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.720492417 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.643817535 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.239989748 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.928373059 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.008578549 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213924577 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.31918807 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25968277 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014085889 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958123905 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.058241552 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095125241 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.825812252 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.952074648 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.949703077 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.998438998 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.658379435 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.959160916 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219189426 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258786895 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.946470062 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.850030345 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97215791 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.958866679 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.172198272 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202415652 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.203509597 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958507333 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.950314655 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.763132843 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214535866 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009299942 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.883842233 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.95228195 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047596721 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197198612 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969169021 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.401872169 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.658160711 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221784644 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.948982758 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971121156 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.146634428 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305986998 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269031623 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.487566366 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154210433 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.535332758 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.558658195 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252680289 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.953842425 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.138453449 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255293466 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.953267181 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.065071014 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991237403 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.209241469 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26269192 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.959999952 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743053353 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.919438027 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.292181882 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.512327317 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.89112518 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.959364333 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.01024233 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.950787613 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.078410861 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961393012 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.827351417 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142378236 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.721919213 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.229934022 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.9560994 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.940277954 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.684836168 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.27962832 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987988084 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092522237 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952698118 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.624975165 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.301300987 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.208856091 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.071781001 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.961278073 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.955136147 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952111072 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.938299612 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.14953062 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.147498739 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220484624 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.096178022 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.991673782 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.955521308 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.168926973 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16380548 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.848789284 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09119344 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.070699338 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996449357 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.865146156 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.453803154 seconds)
  done (took 1709.085378892 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.971507496 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.985046023 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.023289615 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.006644552 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.001628547 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.051501697 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.018736627 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.059268296 seconds)
  done (took 58.006732426 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.952426243 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.174979858 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.961597548 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.952976247 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.962815862 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.953927566 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.124242749 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.96473867 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.962872081 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.963801543 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.966065967 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.95408033 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.300325688 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.979430067 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.953329755 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.965313121 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.962941031 seconds)
  done (took 75.967275032 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.953529073 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.170199586 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.99580015 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.973397935 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.95513594 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.967709135 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.750174593 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.967946134 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.95579806 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.074302082 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.589431448 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.968458543 seconds)
  done (took 88.211903211 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.962728612 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.96165115 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.96222208 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.961342243 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.961213196 seconds)
  done (took 11.701943143 seconds)
done (took 2227.265684557 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.207839155 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.167382691 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.185830642 seconds)
  done (took 6.242822561 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.103349117 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.150355988 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.270178446 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.275786825 seconds)
  done (took 10.691226113 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.243334239 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.337579256 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.160378089 seconds)
  done (took 8.629662685 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.356329905 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.96233262 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.066846369 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.950038987 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.95554831 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.955589744 seconds)
  done (took 22.75187582 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.957203499 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.95927462 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.956599924 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.959593741 seconds)
  done (took 9.721968112 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.937285072 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.692877337 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.939619343 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.953995103 seconds)
  done (took 21.413346203 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.714787558 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.715067988 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.700154267 seconds)
  done (took 10.019215105 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.584587603 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.883135872 seconds)
  done (took 9.357596338 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.209814461 seconds)
  done (took 4.099364958 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.1137389 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.220383627 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.417958777 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.449065449 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.514035683 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.843184523 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.272863759 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.206588878 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.345960131 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.401357121 seconds)
  done (took 25.675846096 seconds)
done (took 144.08664726 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.330804405 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.319634033 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.159607979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.289173607 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.180288512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.179222588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.175438233 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.272009361 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.797055954 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.796257798 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.333266087 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.180946142 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.128929024 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.319715211 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.129302423 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.190268017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.175907959 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.341760164 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.988763068 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.187542857 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.178584437 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.929125256 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.17849613 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.944535098 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.182130339 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.10934957 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.506716466 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.193251013 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.143306247 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.51843252 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.111497585 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.338749335 seconds)
  done (took 173.702577225 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.71690279 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.958234363 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.958545888 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.969817722 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.249240937 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.959648836 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.959583189 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.958150559 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.225891972 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.202077803 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.973554329 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.296825177 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.975828111 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.959121478 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.971161508 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.957700484 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.365304452 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.813472222 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.980800412 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.985287159 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.988367907 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.209279927 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.982806603 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.243636634 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.373528262 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.981833879 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.959962131 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.981170882 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.963989801 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.970963267 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.975517792 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.95887662 seconds)
  done (took 210.921671356 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.959371441 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.960477475 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.958832917 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.960450705 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.96608672 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.966475902 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.961544964 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.960579987 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.514031181 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.529054728 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.994749851 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.96893347 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.966987109 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.960016452 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.969589916 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.960494324 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.961554573 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.965480014 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.96484378 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.968400402 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.972544357 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.656995934 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.99079623 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.649709106 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.999755006 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.970956173 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.962001083 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.97282702 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.974416975 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.974889058 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.974038756 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.96176779 seconds)
  done (took 223.391826659 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.161990152 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.966066908 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.967965489 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.914227079 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.967054269 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.9662011 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.959098645 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.164268682 seconds)
  done (took 19.976466521 seconds)
done (took 629.894814899 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.399520444 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.247653427 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.143613185 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.991307529 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.218781272 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.023090667 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.985423806 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.047875195 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.166892579 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.060737 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.634031314 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.007278901 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.723722703 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.010289978 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.11427341 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.041476932 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.555040912 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.641886506 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.167447482 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.039728556 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.157449056 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.925925863 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.060922117 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.248281814 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.752159518 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.97384384 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.21292848 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.560117643 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.997706382 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.153059915 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.679951681 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.40428108 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.998581382 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.985622173 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.038295581 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.021632953 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.38681797 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.997318821 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.112566374 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.733451943 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.04731532 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.051601206 seconds)
  done (took 108.619062472 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.958091698 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.956479433 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.956791007 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.957940311 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.955512606 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.956898827 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.95637455 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.956853272 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.957165441 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.956438222 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.957024168 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.958745634 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.956394333 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.958233347 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.958329417 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.956466466 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.958315376 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.95989173 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.956971547 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.957410357 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.95816505 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.957083174 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.958046908 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.957071369 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.957906658 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.957738074 seconds)
  done (took 52.804957888 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.970382993 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.113648248 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.19519939 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.990298622 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.972346716 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.975015371 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.989941135 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.974878451 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.973447819 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.974115258 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.066944329 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.975871635 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.989715063 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.195180081 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.985942134 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.970601406 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.971191779 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.972817243 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.120110012 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.988626158 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.992510485 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.976902624 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.991442339 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.985859298 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.974925047 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.974104341 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.976373516 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.440654658 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.981521828 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.066781319 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.015803025 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.995039128 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.404406816 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.20337952 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.02433462 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.977858726 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.972181827 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.072498223 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.978804065 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.974204726 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.990964029 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.978370835 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.19569333 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.468747724 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.986958253 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.972551574 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.447411183 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.078460184 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.014337541 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.984846988 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.201149977 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.98924656 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.9740464 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.974708355 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.010750371 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.98470013 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.974809636 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.334462454 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.98552373 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.99235002 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.979466051 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.974758239 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.128911587 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.982724477 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.126179764 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.984147822 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.982621245 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.975174175 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.196979363 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.990907186 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.473141454 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.988082882 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.974416998 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.068467655 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.127653465 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.474200449 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.987398112 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.131373899 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.423807374 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.000019377 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.983089259 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.431164778 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.003265173 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.982912608 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.975944824 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.975935656 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.974898806 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.018099183 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.991094644 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.407628299 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.476318821 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.348339832 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.005534085 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.990909065 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.976721525 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.33577392 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.984804954 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.975009576 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.191403784 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.489504822 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.989150624 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.983644343 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.458131962 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.991000729 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.99660527 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.986675733 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.202315921 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.991344717 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.018792211 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.976265902 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.983210541 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.980242951 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.996600208 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.984094299 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.976240521 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.448319854 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.088237414 seconds)
  done (took 244.330865495 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.973294493 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.972784553 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.971590327 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.973837493 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.980197047 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.977296201 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.970545118 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.971120127 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.977047046 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.971271326 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.971663863 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.971759231 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.972424552 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.975871032 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.459998948 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.980565005 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.584664057 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.973810615 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.974535916 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.975214577 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.649539644 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.981873087 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.973003881 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.975289266 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.973582453 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.973919719 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.983881784 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.999406172 seconds)
  done (took 170.999800309 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.979694858 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.160637242 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.996779179 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.016694063 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.98697899 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.976860668 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.006819916 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.00265961 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.985677087 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.976551161 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.977383681 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.042482849 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.99221216 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.117182054 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.012707188 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.011818528 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.086061647 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.986672603 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.978385755 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.977371928 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.009851973 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.974861302 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.041703927 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.108149522 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.001155173 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.098320216 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.987353183 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.981394038 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.980671727 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.100102434 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.998164912 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.040276536 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.008909308 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.999878397 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.104512157 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.101180709 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.087739304 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.011456541 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.985765766 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.978190976 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.978829215 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.969480829 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.098232722 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.998133817 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.983166953 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.090758084 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.000200473 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.983444836 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.991832286 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.978279266 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.995560759 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.99971073 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.049578884 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.119006536 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.014101057 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.015013551 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.008531243 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.280190403 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.991323664 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.083582022 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.975726576 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.099920743 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.003486611 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.970835582 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.981776909 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.986572128 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.010568065 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.013289191 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.089289245 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.992671326 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.084334414 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.017578214 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.988664121 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.981898281 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.984173661 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.102275747 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.101190479 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.017303583 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.02192061 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.015769896 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.97803177 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.983913309 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.971784014 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.001628208 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.986268385 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.099193672 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.103807227 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.991937278 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.983483824 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.985032379 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.985269046 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.009919957 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.110574921 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.018451444 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.080559256 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.052162931 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.058277332 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.995958836 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.996602292 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.986305439 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.048807151 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.00108773 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.994943516 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.331210686 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.057896541 seconds)
  done (took 214.666831878 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.077447407 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.476301434 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.038552352 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.04135762 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.25882744 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.407938464 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.754779623 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.032566657 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.03373186 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.060039422 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.194756397 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.090419094 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.046212246 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.021426503 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.425962296 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.024048982 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.031465178 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.054737083 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.036360994 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.609141918 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.355847507 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.152168732 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.031280559 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.139014667 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 2.013411036 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.340568176 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.524920694 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.427954211 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.068138917 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.383937213 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.385366389 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.715719672 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.241402507 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.2774853 seconds)
  done (took 78.694073549 seconds)
done (took 872.011822922 seconds)
SAVING RESULT...
DONE!
